/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 113.0, "minX": 0.0, "maxY": 60539.0, "series": [{"data": [[0.0, 231.0], [0.1, 231.0], [0.2, 231.0], [0.3, 235.0], [0.4, 235.0], [0.5, 241.0], [0.6, 241.0], [0.7, 285.0], [0.8, 285.0], [0.9, 338.0], [1.0, 338.0], [1.1, 341.0], [1.2, 341.0], [1.3, 341.0], [1.4, 341.0], [1.5, 342.0], [1.6, 342.0], [1.7, 342.0], [1.8, 342.0], [1.9, 342.0], [2.0, 342.0], [2.1, 342.0], [2.2, 342.0], [2.3, 342.0], [2.4, 342.0], [2.5, 343.0], [2.6, 343.0], [2.7, 343.0], [2.8, 343.0], [2.9, 343.0], [3.0, 343.0], [3.1, 343.0], [3.2, 343.0], [3.3, 344.0], [3.4, 344.0], [3.5, 344.0], [3.6, 344.0], [3.7, 344.0], [3.8, 344.0], [3.9, 346.0], [4.0, 346.0], [4.1, 346.0], [4.2, 346.0], [4.3, 346.0], [4.4, 346.0], [4.5, 347.0], [4.6, 347.0], [4.7, 347.0], [4.8, 347.0], [4.9, 347.0], [5.0, 347.0], [5.1, 347.0], [5.2, 347.0], [5.3, 347.0], [5.4, 347.0], [5.5, 347.0], [5.6, 347.0], [5.7, 347.0], [5.8, 347.0], [5.9, 347.0], [6.0, 347.0], [6.1, 348.0], [6.2, 348.0], [6.3, 349.0], [6.4, 349.0], [6.5, 349.0], [6.6, 349.0], [6.7, 349.0], [6.8, 349.0], [6.9, 349.0], [7.0, 349.0], [7.1, 350.0], [7.2, 350.0], [7.3, 351.0], [7.4, 351.0], [7.5, 351.0], [7.6, 351.0], [7.7, 352.0], [7.8, 352.0], [7.9, 353.0], [8.0, 353.0], [8.1, 353.0], [8.2, 353.0], [8.3, 354.0], [8.4, 354.0], [8.5, 354.0], [8.6, 354.0], [8.7, 354.0], [8.8, 354.0], [8.9, 355.0], [9.0, 355.0], [9.1, 355.0], [9.2, 355.0], [9.3, 356.0], [9.4, 356.0], [9.5, 357.0], [9.6, 357.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 357.0], [10.3, 357.0], [10.4, 357.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 358.0], [10.9, 359.0], [11.0, 359.0], [11.1, 359.0], [11.2, 359.0], [11.3, 360.0], [11.4, 360.0], [11.5, 361.0], [11.6, 361.0], [11.7, 361.0], [11.8, 361.0], [11.9, 361.0], [12.0, 361.0], [12.1, 362.0], [12.2, 362.0], [12.3, 362.0], [12.4, 362.0], [12.5, 362.0], [12.6, 362.0], [12.7, 362.0], [12.8, 362.0], [12.9, 362.0], [13.0, 362.0], [13.1, 363.0], [13.2, 363.0], [13.3, 363.0], [13.4, 363.0], [13.5, 364.0], [13.6, 364.0], [13.7, 364.0], [13.8, 364.0], [13.9, 365.0], [14.0, 365.0], [14.1, 365.0], [14.2, 365.0], [14.3, 366.0], [14.4, 366.0], [14.5, 366.0], [14.6, 366.0], [14.7, 366.0], [14.8, 366.0], [14.9, 366.0], [15.0, 366.0], [15.1, 366.0], [15.2, 366.0], [15.3, 367.0], [15.4, 367.0], [15.5, 367.0], [15.6, 367.0], [15.7, 367.0], [15.8, 367.0], [15.9, 368.0], [16.0, 368.0], [16.1, 368.0], [16.2, 368.0], [16.3, 368.0], [16.4, 368.0], [16.5, 368.0], [16.6, 368.0], [16.7, 369.0], [16.8, 369.0], [16.9, 369.0], [17.0, 369.0], [17.1, 369.0], [17.2, 369.0], [17.3, 370.0], [17.4, 370.0], [17.5, 371.0], [17.6, 371.0], [17.7, 371.0], [17.8, 371.0], [17.9, 371.0], [18.0, 371.0], [18.1, 372.0], [18.2, 372.0], [18.3, 373.0], [18.4, 373.0], [18.5, 375.0], [18.6, 375.0], [18.7, 379.0], [18.8, 379.0], [18.9, 383.0], [19.0, 383.0], [19.1, 393.0], [19.2, 393.0], [19.3, 400.0], [19.4, 400.0], [19.5, 402.0], [19.6, 402.0], [19.7, 403.0], [19.8, 403.0], [19.9, 410.0], [20.0, 410.0], [20.1, 426.0], [20.2, 426.0], [20.3, 426.0], [20.4, 426.0], [20.5, 429.0], [20.6, 429.0], [20.7, 440.0], [20.8, 440.0], [20.9, 486.0], [21.0, 486.0], [21.1, 567.0], [21.2, 567.0], [21.3, 4595.0], [21.4, 4595.0], [21.5, 4736.0], [21.6, 4736.0], [21.7, 4849.0], [21.8, 4849.0], [21.9, 4964.0], [22.0, 4964.0], [22.1, 5022.0], [22.2, 5022.0], [22.3, 5232.0], [22.4, 5232.0], [22.5, 5250.0], [22.6, 5250.0], [22.7, 5295.0], [22.8, 5295.0], [22.9, 5313.0], [23.0, 5313.0], [23.1, 5317.0], [23.2, 5317.0], [23.3, 5331.0], [23.4, 5331.0], [23.5, 5336.0], [23.6, 5336.0], [23.7, 5357.0], [23.8, 5357.0], [23.9, 5390.0], [24.0, 5390.0], [24.1, 5394.0], [24.2, 5394.0], [24.3, 5447.0], [24.4, 5447.0], [24.5, 5533.0], [24.6, 5533.0], [24.7, 5577.0], [24.8, 5577.0], [24.9, 5618.0], [25.0, 5618.0], [25.1, 5618.0], [25.2, 5621.0], [25.3, 5621.0], [25.4, 5641.0], [25.5, 5641.0], [25.6, 5801.0], [25.7, 5801.0], [25.8, 5845.0], [25.9, 5845.0], [26.0, 5871.0], [26.1, 5871.0], [26.2, 5902.0], [26.3, 5902.0], [26.4, 5914.0], [26.5, 5914.0], [26.6, 5966.0], [26.7, 5966.0], [26.8, 5973.0], [26.9, 5973.0], [27.0, 6016.0], [27.1, 6016.0], [27.2, 6113.0], [27.3, 6113.0], [27.4, 6247.0], [27.5, 6247.0], [27.6, 6345.0], [27.7, 6345.0], [27.8, 6379.0], [27.9, 6379.0], [28.0, 6409.0], [28.1, 6409.0], [28.2, 6458.0], [28.3, 6458.0], [28.4, 6526.0], [28.5, 6526.0], [28.6, 6531.0], [28.7, 6531.0], [28.8, 6537.0], [28.9, 6537.0], [29.0, 6549.0], [29.1, 6549.0], [29.2, 6578.0], [29.3, 6578.0], [29.4, 6588.0], [29.5, 6588.0], [29.6, 6595.0], [29.7, 6595.0], [29.8, 6720.0], [29.9, 6720.0], [30.0, 6759.0], [30.1, 6759.0], [30.2, 7066.0], [30.3, 7066.0], [30.4, 7079.0], [30.5, 7079.0], [30.6, 7201.0], [30.7, 7201.0], [30.8, 7220.0], [30.9, 7220.0], [31.0, 7287.0], [31.1, 7287.0], [31.2, 7297.0], [31.3, 7297.0], [31.4, 7326.0], [31.5, 7326.0], [31.6, 7396.0], [31.7, 7396.0], [31.8, 7417.0], [31.9, 7417.0], [32.0, 7489.0], [32.1, 7489.0], [32.2, 7533.0], [32.3, 7533.0], [32.4, 7654.0], [32.5, 7654.0], [32.6, 7695.0], [32.7, 7695.0], [32.8, 7722.0], [32.9, 7722.0], [33.0, 7744.0], [33.1, 7744.0], [33.2, 7762.0], [33.3, 7762.0], [33.4, 7785.0], [33.5, 7785.0], [33.6, 7904.0], [33.7, 7904.0], [33.8, 7983.0], [33.9, 7983.0], [34.0, 8160.0], [34.1, 8160.0], [34.2, 8283.0], [34.3, 8283.0], [34.4, 8398.0], [34.5, 8398.0], [34.6, 8417.0], [34.7, 8417.0], [34.8, 8485.0], [34.9, 8485.0], [35.0, 8539.0], [35.1, 8539.0], [35.2, 8628.0], [35.3, 8628.0], [35.4, 8711.0], [35.5, 8711.0], [35.6, 8802.0], [35.7, 8802.0], [35.8, 8871.0], [35.9, 8871.0], [36.0, 8915.0], [36.1, 8915.0], [36.2, 9066.0], [36.3, 9066.0], [36.4, 9123.0], [36.5, 9123.0], [36.6, 9169.0], [36.7, 9169.0], [36.8, 9222.0], [36.9, 9222.0], [37.0, 9229.0], [37.1, 9229.0], [37.2, 9376.0], [37.3, 9376.0], [37.4, 9507.0], [37.5, 9507.0], [37.6, 9585.0], [37.7, 9585.0], [37.8, 9692.0], [37.9, 9692.0], [38.0, 9700.0], [38.1, 9700.0], [38.2, 9715.0], [38.3, 9715.0], [38.4, 9862.0], [38.5, 9862.0], [38.6, 9878.0], [38.7, 9878.0], [38.8, 9921.0], [38.9, 9921.0], [39.0, 9934.0], [39.1, 9934.0], [39.2, 9954.0], [39.3, 9954.0], [39.4, 10089.0], [39.5, 10089.0], [39.6, 10193.0], [39.7, 10193.0], [39.8, 10250.0], [39.9, 10250.0], [40.0, 10293.0], [40.1, 10293.0], [40.2, 10337.0], [40.3, 10337.0], [40.4, 10341.0], [40.5, 10341.0], [40.6, 10476.0], [40.7, 10476.0], [40.8, 10485.0], [40.9, 10485.0], [41.0, 10615.0], [41.1, 10615.0], [41.2, 10742.0], [41.3, 10742.0], [41.4, 10831.0], [41.5, 10831.0], [41.6, 10836.0], [41.7, 10836.0], [41.8, 10888.0], [41.9, 10888.0], [42.0, 10972.0], [42.1, 10972.0], [42.2, 11323.0], [42.3, 11323.0], [42.4, 11338.0], [42.5, 11338.0], [42.6, 11417.0], [42.7, 11417.0], [42.8, 11462.0], [42.9, 11462.0], [43.0, 11465.0], [43.1, 11465.0], [43.2, 11511.0], [43.3, 11511.0], [43.4, 11521.0], [43.5, 11521.0], [43.6, 11523.0], [43.7, 11523.0], [43.8, 11525.0], [43.9, 11525.0], [44.0, 11607.0], [44.1, 11607.0], [44.2, 11619.0], [44.3, 11619.0], [44.4, 11623.0], [44.5, 11623.0], [44.6, 11651.0], [44.7, 11651.0], [44.8, 11751.0], [44.9, 11751.0], [45.0, 11848.0], [45.1, 11848.0], [45.2, 11937.0], [45.3, 11937.0], [45.4, 12004.0], [45.5, 12004.0], [45.6, 12065.0], [45.7, 12065.0], [45.8, 12213.0], [45.9, 12213.0], [46.0, 12278.0], [46.1, 12278.0], [46.2, 12374.0], [46.3, 12374.0], [46.4, 12490.0], [46.5, 12490.0], [46.6, 12935.0], [46.7, 12935.0], [46.8, 13009.0], [46.9, 13009.0], [47.0, 13020.0], [47.1, 13020.0], [47.2, 13186.0], [47.3, 13186.0], [47.4, 13232.0], [47.5, 13232.0], [47.6, 13238.0], [47.7, 13238.0], [47.8, 13332.0], [47.9, 13332.0], [48.0, 13351.0], [48.1, 13351.0], [48.2, 13368.0], [48.3, 13368.0], [48.4, 13538.0], [48.5, 13538.0], [48.6, 13567.0], [48.7, 13567.0], [48.8, 13593.0], [48.9, 13593.0], [49.0, 13667.0], [49.1, 13667.0], [49.2, 13692.0], [49.3, 13692.0], [49.4, 13727.0], [49.5, 13727.0], [49.6, 14014.0], [49.7, 14014.0], [49.8, 14140.0], [49.9, 14140.0], [50.0, 14312.0], [50.1, 14312.0], [50.2, 14312.0], [50.3, 14456.0], [50.4, 14456.0], [50.5, 14502.0], [50.6, 14502.0], [50.7, 14506.0], [50.8, 14506.0], [50.9, 14613.0], [51.0, 14613.0], [51.1, 14664.0], [51.2, 14664.0], [51.3, 14669.0], [51.4, 14669.0], [51.5, 14759.0], [51.6, 14759.0], [51.7, 14806.0], [51.8, 14806.0], [51.9, 14827.0], [52.0, 14827.0], [52.1, 14999.0], [52.2, 14999.0], [52.3, 15000.0], [52.4, 15000.0], [52.5, 15103.0], [52.6, 15103.0], [52.7, 15226.0], [52.8, 15226.0], [52.9, 15230.0], [53.0, 15230.0], [53.1, 15339.0], [53.2, 15339.0], [53.3, 15496.0], [53.4, 15496.0], [53.5, 15535.0], [53.6, 15535.0], [53.7, 15807.0], [53.8, 15807.0], [53.9, 15840.0], [54.0, 15840.0], [54.1, 16020.0], [54.2, 16020.0], [54.3, 16187.0], [54.4, 16187.0], [54.5, 16608.0], [54.6, 16608.0], [54.7, 16905.0], [54.8, 16905.0], [54.9, 17019.0], [55.0, 17019.0], [55.1, 17124.0], [55.2, 17124.0], [55.3, 17383.0], [55.4, 17383.0], [55.5, 17606.0], [55.6, 17606.0], [55.7, 17952.0], [55.8, 17952.0], [55.9, 18086.0], [56.0, 18086.0], [56.1, 18169.0], [56.2, 18169.0], [56.3, 18247.0], [56.4, 18247.0], [56.5, 18286.0], [56.6, 18286.0], [56.7, 18395.0], [56.8, 18395.0], [56.9, 18400.0], [57.0, 18400.0], [57.1, 18678.0], [57.2, 18678.0], [57.3, 18779.0], [57.4, 18779.0], [57.5, 18817.0], [57.6, 18817.0], [57.7, 18830.0], [57.8, 18830.0], [57.9, 18974.0], [58.0, 18974.0], [58.1, 18988.0], [58.2, 18988.0], [58.3, 19086.0], [58.4, 19086.0], [58.5, 19455.0], [58.6, 19455.0], [58.7, 19471.0], [58.8, 19471.0], [58.9, 19562.0], [59.0, 19562.0], [59.1, 19759.0], [59.2, 19759.0], [59.3, 19980.0], [59.4, 19980.0], [59.5, 19990.0], [59.6, 19990.0], [59.7, 20160.0], [59.8, 20160.0], [59.9, 20266.0], [60.0, 20266.0], [60.1, 20313.0], [60.2, 20313.0], [60.3, 20391.0], [60.4, 20391.0], [60.5, 20579.0], [60.6, 20579.0], [60.7, 20780.0], [60.8, 20780.0], [60.9, 20801.0], [61.0, 20801.0], [61.1, 21141.0], [61.2, 21141.0], [61.3, 21203.0], [61.4, 21203.0], [61.5, 21254.0], [61.6, 21254.0], [61.7, 21342.0], [61.8, 21342.0], [61.9, 21394.0], [62.0, 21394.0], [62.1, 21528.0], [62.2, 21528.0], [62.3, 21607.0], [62.4, 21607.0], [62.5, 21652.0], [62.6, 21652.0], [62.7, 21686.0], [62.8, 21686.0], [62.9, 22036.0], [63.0, 22036.0], [63.1, 22061.0], [63.2, 22061.0], [63.3, 22114.0], [63.4, 22114.0], [63.5, 22142.0], [63.6, 22142.0], [63.7, 22222.0], [63.8, 22222.0], [63.9, 22534.0], [64.0, 22534.0], [64.1, 22602.0], [64.2, 22602.0], [64.3, 22707.0], [64.4, 22707.0], [64.5, 22908.0], [64.6, 22908.0], [64.7, 23572.0], [64.8, 23572.0], [64.9, 23634.0], [65.0, 23634.0], [65.1, 23662.0], [65.2, 23662.0], [65.3, 23840.0], [65.4, 23840.0], [65.5, 23864.0], [65.6, 23864.0], [65.7, 24009.0], [65.8, 24009.0], [65.9, 24035.0], [66.0, 24035.0], [66.1, 24243.0], [66.2, 24243.0], [66.3, 24446.0], [66.4, 24446.0], [66.5, 24492.0], [66.6, 24492.0], [66.7, 24524.0], [66.8, 24524.0], [66.9, 24603.0], [67.0, 24603.0], [67.1, 24816.0], [67.2, 24816.0], [67.3, 25797.0], [67.4, 25797.0], [67.5, 25833.0], [67.6, 25833.0], [67.7, 25870.0], [67.8, 25870.0], [67.9, 25878.0], [68.0, 25878.0], [68.1, 25987.0], [68.2, 25987.0], [68.3, 26387.0], [68.4, 26387.0], [68.5, 26442.0], [68.6, 26442.0], [68.7, 26538.0], [68.8, 26538.0], [68.9, 26665.0], [69.0, 26665.0], [69.1, 26724.0], [69.2, 26724.0], [69.3, 26958.0], [69.4, 26958.0], [69.5, 27130.0], [69.6, 27130.0], [69.7, 28308.0], [69.8, 28308.0], [69.9, 28335.0], [70.0, 28335.0], [70.1, 28683.0], [70.2, 28683.0], [70.3, 28885.0], [70.4, 28885.0], [70.5, 29090.0], [70.6, 29090.0], [70.7, 29577.0], [70.8, 29577.0], [70.9, 29589.0], [71.0, 29589.0], [71.1, 30555.0], [71.2, 30555.0], [71.3, 30724.0], [71.4, 30724.0], [71.5, 30755.0], [71.6, 30755.0], [71.7, 30986.0], [71.8, 30986.0], [71.9, 31670.0], [72.0, 31670.0], [72.1, 32138.0], [72.2, 32138.0], [72.3, 32348.0], [72.4, 32348.0], [72.5, 32571.0], [72.6, 32571.0], [72.7, 32697.0], [72.8, 32697.0], [72.9, 32757.0], [73.0, 32757.0], [73.1, 33666.0], [73.2, 33666.0], [73.3, 33880.0], [73.4, 33880.0], [73.5, 34153.0], [73.6, 34153.0], [73.7, 34245.0], [73.8, 34245.0], [73.9, 34491.0], [74.0, 34491.0], [74.1, 34817.0], [74.2, 34817.0], [74.3, 35811.0], [74.4, 35811.0], [74.5, 36302.0], [74.6, 36302.0], [74.7, 36709.0], [74.8, 36709.0], [74.9, 36742.0], [75.0, 36742.0], [75.1, 36742.0], [75.2, 36831.0], [75.3, 36831.0], [75.4, 36849.0], [75.5, 36849.0], [75.6, 37055.0], [75.7, 37055.0], [75.8, 37626.0], [75.9, 37626.0], [76.0, 37719.0], [76.1, 37719.0], [76.2, 37835.0], [76.3, 37835.0], [76.4, 37870.0], [76.5, 37870.0], [76.6, 37969.0], [76.7, 37969.0], [76.8, 37985.0], [76.9, 37985.0], [77.0, 38225.0], [77.1, 38225.0], [77.2, 38380.0], [77.3, 38380.0], [77.4, 38385.0], [77.5, 38385.0], [77.6, 38528.0], [77.7, 38528.0], [77.8, 38700.0], [77.9, 38700.0], [78.0, 38780.0], [78.1, 38780.0], [78.2, 38823.0], [78.3, 38823.0], [78.4, 39070.0], [78.5, 39070.0], [78.6, 39113.0], [78.7, 39113.0], [78.8, 39428.0], [78.9, 39428.0], [79.0, 39452.0], [79.1, 39452.0], [79.2, 39536.0], [79.3, 39536.0], [79.4, 39604.0], [79.5, 39604.0], [79.6, 39699.0], [79.7, 39699.0], [79.8, 39809.0], [79.9, 39809.0], [80.0, 39860.0], [80.1, 39860.0], [80.2, 39959.0], [80.3, 39959.0], [80.4, 40437.0], [80.5, 40437.0], [80.6, 40525.0], [80.7, 40525.0], [80.8, 40613.0], [80.9, 40613.0], [81.0, 40625.0], [81.1, 40625.0], [81.2, 40709.0], [81.3, 40709.0], [81.4, 41011.0], [81.5, 41011.0], [81.6, 41068.0], [81.7, 41068.0], [81.8, 41079.0], [81.9, 41079.0], [82.0, 41242.0], [82.1, 41242.0], [82.2, 41305.0], [82.3, 41305.0], [82.4, 41375.0], [82.5, 41375.0], [82.6, 41845.0], [82.7, 41845.0], [82.8, 42094.0], [82.9, 42094.0], [83.0, 42310.0], [83.1, 42310.0], [83.2, 42439.0], [83.3, 42439.0], [83.4, 42576.0], [83.5, 42576.0], [83.6, 42654.0], [83.7, 42654.0], [83.8, 43266.0], [83.9, 43266.0], [84.0, 43293.0], [84.1, 43293.0], [84.2, 43368.0], [84.3, 43368.0], [84.4, 43726.0], [84.5, 43726.0], [84.6, 43794.0], [84.7, 43794.0], [84.8, 43901.0], [84.9, 43901.0], [85.0, 43993.0], [85.1, 43993.0], [85.2, 44080.0], [85.3, 44080.0], [85.4, 44231.0], [85.5, 44231.0], [85.6, 45315.0], [85.7, 45315.0], [85.8, 45513.0], [85.9, 45513.0], [86.0, 46013.0], [86.1, 46013.0], [86.2, 46151.0], [86.3, 46151.0], [86.4, 46327.0], [86.5, 46327.0], [86.6, 46705.0], [86.7, 46705.0], [86.8, 47077.0], [86.9, 47077.0], [87.0, 47091.0], [87.1, 47091.0], [87.2, 47159.0], [87.3, 47159.0], [87.4, 47171.0], [87.5, 47171.0], [87.6, 47240.0], [87.7, 47240.0], [87.8, 47383.0], [87.9, 47383.0], [88.0, 48684.0], [88.1, 48684.0], [88.2, 48806.0], [88.3, 48806.0], [88.4, 49046.0], [88.5, 49046.0], [88.6, 49078.0], [88.7, 49078.0], [88.8, 49094.0], [88.9, 49094.0], [89.0, 49221.0], [89.1, 49221.0], [89.2, 49311.0], [89.3, 49311.0], [89.4, 49426.0], [89.5, 49426.0], [89.6, 49450.0], [89.7, 49450.0], [89.8, 50051.0], [89.9, 50051.0], [90.0, 50392.0], [90.1, 50392.0], [90.2, 50517.0], [90.3, 50517.0], [90.4, 50952.0], [90.5, 50952.0], [90.6, 51017.0], [90.7, 51017.0], [90.8, 51094.0], [90.9, 51094.0], [91.0, 51285.0], [91.1, 51285.0], [91.2, 51401.0], [91.3, 51401.0], [91.4, 51477.0], [91.5, 51477.0], [91.6, 51595.0], [91.7, 51595.0], [91.8, 51641.0], [91.9, 51641.0], [92.0, 51935.0], [92.1, 51935.0], [92.2, 52428.0], [92.3, 52428.0], [92.4, 53513.0], [92.5, 53513.0], [92.6, 53543.0], [92.7, 53543.0], [92.8, 54287.0], [92.9, 54287.0], [93.0, 54769.0], [93.1, 54769.0], [93.2, 54976.0], [93.3, 54976.0], [93.4, 55260.0], [93.5, 55260.0], [93.6, 55455.0], [93.7, 55455.0], [93.8, 55532.0], [93.9, 55532.0], [94.0, 55679.0], [94.1, 55679.0], [94.2, 56663.0], [94.3, 56663.0], [94.4, 56878.0], [94.5, 56878.0], [94.6, 56900.0], [94.7, 56900.0], [94.8, 57079.0], [94.9, 57079.0], [95.0, 57171.0], [95.1, 57171.0], [95.2, 57903.0], [95.3, 57903.0], [95.4, 58496.0], [95.5, 58496.0], [95.6, 58570.0], [95.7, 58570.0], [95.8, 59248.0], [95.9, 59248.0], [96.0, 59375.0], [96.1, 59375.0], [96.2, 59385.0], [96.3, 59385.0], [96.4, 59801.0], [96.5, 59801.0], [96.6, 60066.0], [96.7, 60066.0], [96.8, 60346.0], [96.9, 60346.0], [97.0, 60351.0], [97.1, 60351.0], [97.2, 60360.0], [97.3, 60360.0], [97.4, 60360.0], [97.5, 60360.0], [97.6, 60363.0], [97.7, 60363.0], [97.8, 60364.0], [97.9, 60364.0], [98.0, 60371.0], [98.1, 60371.0], [98.2, 60373.0], [98.3, 60373.0], [98.4, 60374.0], [98.5, 60374.0], [98.6, 60385.0], [98.7, 60385.0], [98.8, 60427.0], [98.9, 60427.0], [99.0, 60451.0], [99.1, 60451.0], [99.2, 60475.0], [99.3, 60475.0], [99.4, 60500.0], [99.5, 60500.0], [99.6, 60522.0], [99.7, 60522.0], [99.8, 60539.0], [99.9, 60539.0], [100.0, 60539.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 113.0], [0.1, 113.0], [0.2, 113.0], [0.3, 114.0], [0.4, 114.0], [0.5, 114.0], [0.6, 114.0], [0.7, 115.0], [0.8, 115.0], [0.9, 115.0], [1.0, 115.0], [1.1, 115.0], [1.2, 115.0], [1.3, 115.0], [1.4, 115.0], [1.5, 115.0], [1.6, 115.0], [1.7, 115.0], [1.8, 115.0], [1.9, 116.0], [2.0, 116.0], [2.1, 116.0], [2.2, 116.0], [2.3, 116.0], [2.4, 116.0], [2.5, 116.0], [2.6, 116.0], [2.7, 116.0], [2.8, 116.0], [2.9, 117.0], [3.0, 117.0], [3.1, 117.0], [3.2, 117.0], [3.3, 117.0], [3.4, 117.0], [3.5, 117.0], [3.6, 117.0], [3.7, 117.0], [3.8, 117.0], [3.9, 117.0], [4.0, 117.0], [4.1, 117.0], [4.2, 117.0], [4.3, 117.0], [4.4, 117.0], [4.5, 118.0], [4.6, 118.0], [4.7, 118.0], [4.8, 118.0], [4.9, 118.0], [5.0, 118.0], [5.1, 118.0], [5.2, 118.0], [5.3, 118.0], [5.4, 118.0], [5.5, 118.0], [5.6, 118.0], [5.7, 118.0], [5.8, 118.0], [5.9, 118.0], [6.0, 118.0], [6.1, 118.0], [6.2, 118.0], [6.3, 119.0], [6.4, 119.0], [6.5, 119.0], [6.6, 119.0], [6.7, 119.0], [6.8, 119.0], [6.9, 119.0], [7.0, 119.0], [7.1, 119.0], [7.2, 119.0], [7.3, 119.0], [7.4, 119.0], [7.5, 119.0], [7.6, 119.0], [7.7, 119.0], [7.8, 119.0], [7.9, 119.0], [8.0, 119.0], [8.1, 119.0], [8.2, 119.0], [8.3, 119.0], [8.4, 119.0], [8.5, 119.0], [8.6, 119.0], [8.7, 119.0], [8.8, 120.0], [8.9, 120.0], [9.0, 120.0], [9.1, 120.0], [9.2, 120.0], [9.3, 120.0], [9.4, 120.0], [9.5, 120.0], [9.6, 120.0], [9.7, 120.0], [9.8, 120.0], [9.9, 120.0], [10.0, 120.0], [10.1, 120.0], [10.2, 120.0], [10.3, 120.0], [10.4, 120.0], [10.5, 120.0], [10.6, 120.0], [10.7, 120.0], [10.8, 120.0], [10.9, 120.0], [11.0, 120.0], [11.1, 120.0], [11.2, 121.0], [11.3, 121.0], [11.4, 121.0], [11.5, 121.0], [11.6, 121.0], [11.7, 121.0], [11.8, 121.0], [11.9, 121.0], [12.0, 121.0], [12.1, 121.0], [12.2, 121.0], [12.3, 121.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 121.0], [13.2, 121.0], [13.3, 121.0], [13.4, 121.0], [13.5, 121.0], [13.6, 122.0], [13.7, 122.0], [13.8, 122.0], [13.9, 122.0], [14.0, 122.0], [14.1, 122.0], [14.2, 122.0], [14.3, 122.0], [14.4, 122.0], [14.5, 122.0], [14.6, 122.0], [14.7, 122.0], [14.8, 122.0], [14.9, 122.0], [15.0, 123.0], [15.1, 123.0], [15.2, 123.0], [15.3, 123.0], [15.4, 123.0], [15.5, 123.0], [15.6, 123.0], [15.7, 123.0], [15.8, 124.0], [15.9, 124.0], [16.0, 124.0], [16.1, 124.0], [16.2, 124.0], [16.3, 124.0], [16.4, 124.0], [16.5, 124.0], [16.6, 125.0], [16.7, 125.0], [16.8, 125.0], [16.9, 125.0], [17.0, 125.0], [17.1, 125.0], [17.2, 125.0], [17.3, 125.0], [17.4, 125.0], [17.5, 126.0], [17.6, 126.0], [17.7, 126.0], [17.8, 126.0], [17.9, 126.0], [18.0, 126.0], [18.1, 126.0], [18.2, 126.0], [18.3, 126.0], [18.4, 126.0], [18.5, 127.0], [18.6, 127.0], [18.7, 128.0], [18.8, 128.0], [18.9, 128.0], [19.0, 128.0], [19.1, 128.0], [19.2, 128.0], [19.3, 128.0], [19.4, 128.0], [19.5, 128.0], [19.6, 128.0], [19.7, 128.0], [19.8, 128.0], [19.9, 129.0], [20.0, 129.0], [20.1, 137.0], [20.2, 137.0], [20.3, 140.0], [20.4, 140.0], [20.5, 192.0], [20.6, 192.0], [20.7, 4366.0], [20.8, 4366.0], [20.9, 4511.0], [21.0, 4511.0], [21.1, 4571.0], [21.2, 4571.0], [21.3, 4705.0], [21.4, 4705.0], [21.5, 4724.0], [21.6, 4724.0], [21.7, 5006.0], [21.8, 5006.0], [21.9, 5019.0], [22.0, 5019.0], [22.1, 5051.0], [22.2, 5051.0], [22.3, 5067.0], [22.4, 5067.0], [22.5, 5074.0], [22.6, 5074.0], [22.7, 5087.0], [22.8, 5087.0], [22.9, 5100.0], [23.0, 5100.0], [23.1, 5107.0], [23.2, 5107.0], [23.3, 5133.0], [23.4, 5133.0], [23.5, 5137.0], [23.6, 5137.0], [23.7, 5151.0], [23.8, 5151.0], [23.9, 5154.0], [24.0, 5154.0], [24.1, 5219.0], [24.2, 5219.0], [24.3, 5277.0], [24.4, 5277.0], [24.5, 5310.0], [24.6, 5310.0], [24.7, 5388.0], [24.8, 5388.0], [24.9, 5534.0], [25.0, 5534.0], [25.1, 5534.0], [25.2, 5601.0], [25.3, 5601.0], [25.4, 5642.0], [25.5, 5642.0], [25.6, 5667.0], [25.7, 5667.0], [25.8, 5674.0], [25.9, 5674.0], [26.0, 5707.0], [26.1, 5707.0], [26.2, 5723.0], [26.3, 5723.0], [26.4, 5775.0], [26.5, 5775.0], [26.6, 5879.0], [26.7, 5879.0], [26.8, 6016.0], [26.9, 6016.0], [27.0, 6027.0], [27.1, 6027.0], [27.2, 6105.0], [27.3, 6105.0], [27.4, 6145.0], [27.5, 6145.0], [27.6, 6169.0], [27.7, 6169.0], [27.8, 6275.0], [27.9, 6275.0], [28.0, 6296.0], [28.1, 6296.0], [28.2, 6299.0], [28.3, 6299.0], [28.4, 6322.0], [28.5, 6322.0], [28.6, 6349.0], [28.7, 6349.0], [28.8, 6351.0], [28.9, 6351.0], [29.0, 6366.0], [29.1, 6366.0], [29.2, 6408.0], [29.3, 6408.0], [29.4, 6469.0], [29.5, 6469.0], [29.6, 6722.0], [29.7, 6722.0], [29.8, 6811.0], [29.9, 6811.0], [30.0, 6851.0], [30.1, 6851.0], [30.2, 6993.0], [30.3, 6993.0], [30.4, 7038.0], [30.5, 7038.0], [30.6, 7039.0], [30.7, 7039.0], [30.8, 7069.0], [30.9, 7069.0], [31.0, 7083.0], [31.1, 7083.0], [31.2, 7088.0], [31.3, 7088.0], [31.4, 7097.0], [31.5, 7097.0], [31.6, 7259.0], [31.7, 7259.0], [31.8, 7282.0], [31.9, 7282.0], [32.0, 7402.0], [32.1, 7402.0], [32.2, 7446.0], [32.3, 7446.0], [32.4, 7472.0], [32.5, 7472.0], [32.6, 7499.0], [32.7, 7499.0], [32.8, 7504.0], [32.9, 7504.0], [33.0, 7532.0], [33.1, 7532.0], [33.2, 7656.0], [33.3, 7656.0], [33.4, 7656.0], [33.5, 7742.0], [33.6, 7742.0], [33.7, 7932.0], [33.8, 7932.0], [33.9, 8031.0], [34.0, 8031.0], [34.1, 8047.0], [34.2, 8047.0], [34.3, 8186.0], [34.4, 8186.0], [34.5, 8300.0], [34.6, 8300.0], [34.7, 8381.0], [34.8, 8381.0], [34.9, 8484.0], [35.0, 8484.0], [35.1, 8533.0], [35.2, 8533.0], [35.3, 8556.0], [35.4, 8556.0], [35.5, 8618.0], [35.6, 8618.0], [35.7, 8828.0], [35.8, 8828.0], [35.9, 8861.0], [36.0, 8861.0], [36.1, 8923.0], [36.2, 8923.0], [36.3, 8983.0], [36.4, 8983.0], [36.5, 8995.0], [36.6, 8995.0], [36.7, 9086.0], [36.8, 9086.0], [36.9, 9251.0], [37.0, 9251.0], [37.1, 9355.0], [37.2, 9355.0], [37.3, 9444.0], [37.4, 9444.0], [37.5, 9447.0], [37.6, 9447.0], [37.7, 9482.0], [37.8, 9482.0], [37.9, 9605.0], [38.0, 9605.0], [38.1, 9621.0], [38.2, 9621.0], [38.3, 9621.0], [38.4, 9621.0], [38.5, 9638.0], [38.6, 9638.0], [38.7, 9696.0], [38.8, 9696.0], [38.9, 9844.0], [39.0, 9844.0], [39.1, 9940.0], [39.2, 9940.0], [39.3, 9959.0], [39.4, 9959.0], [39.5, 9988.0], [39.6, 9988.0], [39.7, 10053.0], [39.8, 10053.0], [39.9, 10109.0], [40.0, 10109.0], [40.1, 10176.0], [40.2, 10176.0], [40.3, 10232.0], [40.4, 10232.0], [40.5, 10387.0], [40.6, 10387.0], [40.7, 10515.0], [40.8, 10515.0], [40.9, 10534.0], [41.0, 10534.0], [41.1, 10580.0], [41.2, 10580.0], [41.3, 10634.0], [41.4, 10634.0], [41.5, 10714.0], [41.6, 10714.0], [41.7, 10714.0], [41.8, 10947.0], [41.9, 10947.0], [42.0, 11087.0], [42.1, 11087.0], [42.2, 11111.0], [42.3, 11111.0], [42.4, 11186.0], [42.5, 11186.0], [42.6, 11221.0], [42.7, 11221.0], [42.8, 11235.0], [42.9, 11235.0], [43.0, 11261.0], [43.1, 11261.0], [43.2, 11267.0], [43.3, 11267.0], [43.4, 11280.0], [43.5, 11280.0], [43.6, 11289.0], [43.7, 11289.0], [43.8, 11365.0], [43.9, 11365.0], [44.0, 11366.0], [44.1, 11366.0], [44.2, 11386.0], [44.3, 11386.0], [44.4, 11513.0], [44.5, 11513.0], [44.6, 11612.0], [44.7, 11612.0], [44.8, 11695.0], [44.9, 11695.0], [45.0, 11778.0], [45.1, 11778.0], [45.2, 11837.0], [45.3, 11837.0], [45.4, 11981.0], [45.5, 11981.0], [45.6, 12050.0], [45.7, 12050.0], [45.8, 12136.0], [45.9, 12136.0], [46.0, 12250.0], [46.1, 12250.0], [46.2, 12706.0], [46.3, 12706.0], [46.4, 12730.0], [46.5, 12730.0], [46.6, 12757.0], [46.7, 12757.0], [46.8, 12928.0], [46.9, 12928.0], [47.0, 12989.0], [47.1, 12989.0], [47.2, 13009.0], [47.3, 13009.0], [47.4, 13081.0], [47.5, 13081.0], [47.6, 13082.0], [47.7, 13082.0], [47.8, 13122.0], [47.9, 13122.0], [48.0, 13284.0], [48.1, 13284.0], [48.2, 13326.0], [48.3, 13326.0], [48.4, 13346.0], [48.5, 13346.0], [48.6, 13427.0], [48.7, 13427.0], [48.8, 13428.0], [48.9, 13428.0], [49.0, 13498.0], [49.1, 13498.0], [49.2, 13785.0], [49.3, 13785.0], [49.4, 13902.0], [49.5, 13902.0], [49.6, 14086.0], [49.7, 14086.0], [49.8, 14216.0], [49.9, 14216.0], [50.0, 14216.0], [50.1, 14264.0], [50.2, 14264.0], [50.3, 14267.0], [50.4, 14267.0], [50.5, 14386.0], [50.6, 14386.0], [50.7, 14386.0], [50.8, 14386.0], [50.9, 14411.0], [51.0, 14411.0], [51.1, 14533.0], [51.2, 14533.0], [51.3, 14568.0], [51.4, 14568.0], [51.5, 14596.0], [51.6, 14596.0], [51.7, 14742.0], [51.8, 14742.0], [51.9, 14767.0], [52.0, 14767.0], [52.1, 14863.0], [52.2, 14863.0], [52.3, 14995.0], [52.4, 14995.0], [52.5, 14997.0], [52.6, 14997.0], [52.7, 15060.0], [52.8, 15060.0], [52.9, 15237.0], [53.0, 15237.0], [53.1, 15297.0], [53.2, 15297.0], [53.3, 15578.0], [53.4, 15578.0], [53.5, 15612.0], [53.6, 15612.0], [53.7, 15783.0], [53.8, 15783.0], [53.9, 15951.0], [54.0, 15951.0], [54.1, 16367.0], [54.2, 16367.0], [54.3, 16570.0], [54.4, 16570.0], [54.5, 16721.0], [54.6, 16721.0], [54.7, 16890.0], [54.8, 16890.0], [54.9, 17090.0], [55.0, 17090.0], [55.1, 17322.0], [55.2, 17322.0], [55.3, 17665.0], [55.4, 17665.0], [55.5, 17837.0], [55.6, 17837.0], [55.7, 17857.0], [55.8, 17857.0], [55.9, 17941.0], [56.0, 17941.0], [56.1, 17986.0], [56.2, 17986.0], [56.3, 18029.0], [56.4, 18029.0], [56.5, 18164.0], [56.6, 18164.0], [56.7, 18439.0], [56.8, 18439.0], [56.9, 18450.0], [57.0, 18450.0], [57.1, 18503.0], [57.2, 18503.0], [57.3, 18580.0], [57.4, 18580.0], [57.5, 18708.0], [57.6, 18708.0], [57.7, 18742.0], [57.8, 18742.0], [57.9, 18773.0], [58.0, 18773.0], [58.1, 19208.0], [58.2, 19208.0], [58.3, 19229.0], [58.4, 19229.0], [58.5, 19229.0], [58.6, 19250.0], [58.7, 19250.0], [58.8, 19530.0], [58.9, 19530.0], [59.0, 19611.0], [59.1, 19611.0], [59.2, 19745.0], [59.3, 19745.0], [59.4, 19918.0], [59.5, 19918.0], [59.6, 20006.0], [59.7, 20006.0], [59.8, 20077.0], [59.9, 20077.0], [60.0, 20149.0], [60.1, 20149.0], [60.2, 20353.0], [60.3, 20353.0], [60.4, 20485.0], [60.5, 20485.0], [60.6, 20547.0], [60.7, 20547.0], [60.8, 20901.0], [60.9, 20901.0], [61.0, 20927.0], [61.1, 20927.0], [61.2, 21025.0], [61.3, 21025.0], [61.4, 21091.0], [61.5, 21091.0], [61.6, 21138.0], [61.7, 21138.0], [61.8, 21281.0], [61.9, 21281.0], [62.0, 21337.0], [62.1, 21337.0], [62.2, 21368.0], [62.3, 21368.0], [62.4, 21409.0], [62.5, 21409.0], [62.6, 21724.0], [62.7, 21724.0], [62.8, 21813.0], [62.9, 21813.0], [63.0, 21855.0], [63.1, 21855.0], [63.2, 21876.0], [63.3, 21876.0], [63.4, 21971.0], [63.5, 21971.0], [63.6, 22308.0], [63.7, 22308.0], [63.8, 22376.0], [63.9, 22376.0], [64.0, 22453.0], [64.1, 22453.0], [64.2, 22613.0], [64.3, 22613.0], [64.4, 23310.0], [64.5, 23310.0], [64.6, 23337.0], [64.7, 23337.0], [64.8, 23402.0], [64.9, 23402.0], [65.0, 23412.0], [65.1, 23412.0], [65.2, 23555.0], [65.3, 23555.0], [65.4, 23771.0], [65.5, 23771.0], [65.6, 23805.0], [65.7, 23805.0], [65.8, 23882.0], [65.9, 23882.0], [66.0, 24179.0], [66.1, 24179.0], [66.2, 24265.0], [66.3, 24265.0], [66.4, 24285.0], [66.5, 24285.0], [66.6, 24350.0], [66.7, 24350.0], [66.8, 24350.0], [66.9, 24578.0], [67.0, 24578.0], [67.1, 25525.0], [67.2, 25525.0], [67.3, 25565.0], [67.4, 25565.0], [67.5, 25573.0], [67.6, 25573.0], [67.7, 25651.0], [67.8, 25651.0], [67.9, 25744.0], [68.0, 25744.0], [68.1, 26154.0], [68.2, 26154.0], [68.3, 26200.0], [68.4, 26200.0], [68.5, 26302.0], [68.6, 26302.0], [68.7, 26423.0], [68.8, 26423.0], [68.9, 26463.0], [69.0, 26463.0], [69.1, 26716.0], [69.2, 26716.0], [69.3, 26890.0], [69.4, 26890.0], [69.5, 28070.0], [69.6, 28070.0], [69.7, 28107.0], [69.8, 28107.0], [69.9, 28445.0], [70.0, 28445.0], [70.1, 28578.0], [70.2, 28578.0], [70.3, 28797.0], [70.4, 28797.0], [70.5, 29273.0], [70.6, 29273.0], [70.7, 29339.0], [70.8, 29339.0], [70.9, 30311.0], [71.0, 30311.0], [71.1, 30493.0], [71.2, 30493.0], [71.3, 30516.0], [71.4, 30516.0], [71.5, 30754.0], [71.6, 30754.0], [71.7, 31415.0], [71.8, 31415.0], [71.9, 31900.0], [72.0, 31900.0], [72.1, 32114.0], [72.2, 32114.0], [72.3, 32342.0], [72.4, 32342.0], [72.5, 32436.0], [72.6, 32436.0], [72.7, 32527.0], [72.8, 32527.0], [72.9, 32550.0], [73.0, 32550.0], [73.1, 33409.0], [73.2, 33409.0], [73.3, 33885.0], [73.4, 33885.0], [73.5, 33945.0], [73.6, 33945.0], [73.7, 34251.0], [73.8, 34251.0], [73.9, 34514.0], [74.0, 34514.0], [74.1, 35559.0], [74.2, 35559.0], [74.3, 36025.0], [74.4, 36025.0], [74.5, 36463.0], [74.6, 36463.0], [74.7, 36504.0], [74.8, 36504.0], [74.9, 36575.0], [75.0, 36575.0], [75.1, 36575.0], [75.2, 36602.0], [75.3, 36602.0], [75.4, 36809.0], [75.5, 36809.0], [75.6, 37384.0], [75.7, 37384.0], [75.8, 37406.0], [75.9, 37406.0], [76.0, 37594.0], [76.1, 37594.0], [76.2, 37629.0], [76.3, 37629.0], [76.4, 37728.0], [76.5, 37728.0], [76.6, 37745.0], [76.7, 37745.0], [76.8, 37987.0], [76.9, 37987.0], [77.0, 38145.0], [77.1, 38145.0], [77.2, 38146.0], [77.3, 38146.0], [77.4, 38291.0], [77.5, 38291.0], [77.6, 38467.0], [77.7, 38467.0], [77.8, 38535.0], [77.9, 38535.0], [78.0, 38536.0], [78.1, 38536.0], [78.2, 38831.0], [78.3, 38831.0], [78.4, 38876.0], [78.5, 38876.0], [78.6, 39019.0], [78.7, 39019.0], [78.8, 39214.0], [78.9, 39214.0], [79.0, 39309.0], [79.1, 39309.0], [79.2, 39321.0], [79.3, 39321.0], [79.4, 39450.0], [79.5, 39450.0], [79.6, 39568.0], [79.7, 39568.0], [79.8, 39619.0], [79.9, 39619.0], [80.0, 39720.0], [80.1, 39720.0], [80.2, 40199.0], [80.3, 40199.0], [80.4, 40248.0], [80.5, 40248.0], [80.6, 40262.0], [80.7, 40262.0], [80.8, 40372.0], [80.9, 40372.0], [81.0, 40467.0], [81.1, 40467.0], [81.2, 40778.0], [81.3, 40778.0], [81.4, 40834.0], [81.5, 40834.0], [81.6, 40848.0], [81.7, 40848.0], [81.8, 40986.0], [81.9, 40986.0], [82.0, 41042.0], [82.1, 41042.0], [82.2, 41116.0], [82.3, 41116.0], [82.4, 41608.0], [82.5, 41608.0], [82.6, 41865.0], [82.7, 41865.0], [82.8, 42073.0], [82.9, 42073.0], [83.0, 42197.0], [83.1, 42197.0], [83.2, 42341.0], [83.3, 42341.0], [83.4, 42341.0], [83.5, 42418.0], [83.6, 42418.0], [83.7, 43028.0], [83.8, 43028.0], [83.9, 43067.0], [84.0, 43067.0], [84.1, 43135.0], [84.2, 43135.0], [84.3, 43458.0], [84.4, 43458.0], [84.5, 43564.0], [84.6, 43564.0], [84.7, 43671.0], [84.8, 43671.0], [84.9, 43757.0], [85.0, 43757.0], [85.1, 43838.0], [85.2, 43838.0], [85.3, 43958.0], [85.4, 43958.0], [85.5, 45087.0], [85.6, 45087.0], [85.7, 45261.0], [85.8, 45261.0], [85.9, 45744.0], [86.0, 45744.0], [86.1, 45907.0], [86.2, 45907.0], [86.3, 46073.0], [86.4, 46073.0], [86.5, 46477.0], [86.6, 46477.0], [86.7, 46835.0], [86.8, 46835.0], [86.9, 46864.0], [87.0, 46864.0], [87.1, 46922.0], [87.2, 46922.0], [87.3, 46944.0], [87.4, 46944.0], [87.5, 46997.0], [87.6, 46997.0], [87.7, 47104.0], [87.8, 47104.0], [87.9, 48275.0], [88.0, 48275.0], [88.1, 48548.0], [88.2, 48548.0], [88.3, 48729.0], [88.4, 48729.0], [88.5, 48834.0], [88.6, 48834.0], [88.7, 48867.0], [88.8, 48867.0], [88.9, 48984.0], [89.0, 48984.0], [89.1, 49070.0], [89.2, 49070.0], [89.3, 49084.0], [89.4, 49084.0], [89.5, 49223.0], [89.6, 49223.0], [89.7, 49706.0], [89.8, 49706.0], [89.9, 49779.0], [90.0, 49779.0], [90.1, 50260.0], [90.2, 50260.0], [90.3, 50711.0], [90.4, 50711.0], [90.5, 50793.0], [90.6, 50793.0], [90.7, 50857.0], [90.8, 50857.0], [90.9, 51015.0], [91.0, 51015.0], [91.1, 51099.0], [91.2, 51099.0], [91.3, 51239.0], [91.4, 51239.0], [91.5, 51325.0], [91.6, 51325.0], [91.7, 51325.0], [91.8, 51369.0], [91.9, 51369.0], [92.0, 51387.0], [92.1, 51387.0], [92.2, 52190.0], [92.3, 52190.0], [92.4, 53254.0], [92.5, 53254.0], [92.6, 53307.0], [92.7, 53307.0], [92.8, 54060.0], [92.9, 54060.0], [93.0, 54378.0], [93.1, 54378.0], [93.2, 54745.0], [93.3, 54745.0], [93.4, 55030.0], [93.5, 55030.0], [93.6, 55185.0], [93.7, 55185.0], [93.8, 55277.0], [93.9, 55277.0], [94.0, 55444.0], [94.1, 55444.0], [94.2, 56423.0], [94.3, 56423.0], [94.4, 56642.0], [94.5, 56642.0], [94.6, 56643.0], [94.7, 56643.0], [94.8, 56830.0], [94.9, 56830.0], [95.0, 56879.0], [95.1, 56879.0], [95.2, 57654.0], [95.3, 57654.0], [95.4, 58253.0], [95.5, 58253.0], [95.6, 58342.0], [95.7, 58342.0], [95.8, 59021.0], [95.9, 59021.0], [96.0, 59100.0], [96.1, 59100.0], [96.2, 59144.0], [96.3, 59144.0], [96.4, 59559.0], [96.5, 59559.0], [96.6, 59827.0], [96.7, 59827.0], [96.8, 60118.0], [96.9, 60118.0], [97.0, 60122.0], [97.1, 60122.0], [97.2, 60123.0], [97.3, 60123.0], [97.4, 60124.0], [97.5, 60124.0], [97.6, 60124.0], [97.7, 60124.0], [97.8, 60124.0], [97.9, 60124.0], [98.0, 60125.0], [98.1, 60125.0], [98.2, 60125.0], [98.3, 60125.0], [98.4, 60126.0], [98.5, 60126.0], [98.6, 60143.0], [98.7, 60143.0], [98.8, 60146.0], [98.9, 60146.0], [99.0, 60197.0], [99.1, 60197.0], [99.2, 60217.0], [99.3, 60217.0], [99.4, 60239.0], [99.5, 60239.0], [99.6, 60240.0], [99.7, 60240.0], [99.8, 60273.0], [99.9, 60273.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 224.0], [0.1, 224.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 224.0], [0.9, 224.0], [1.0, 224.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 226.0], [2.0, 226.0], [2.1, 226.0], [2.2, 226.0], [2.3, 226.0], [2.4, 226.0], [2.5, 226.0], [2.6, 226.0], [2.7, 226.0], [2.8, 226.0], [2.9, 226.0], [3.0, 226.0], [3.1, 226.0], [3.2, 226.0], [3.3, 226.0], [3.4, 226.0], [3.5, 226.0], [3.6, 226.0], [3.7, 226.0], [3.8, 226.0], [3.9, 226.0], [4.0, 226.0], [4.1, 226.0], [4.2, 226.0], [4.3, 226.0], [4.4, 226.0], [4.5, 227.0], [4.6, 227.0], [4.7, 227.0], [4.8, 227.0], [4.9, 227.0], [5.0, 227.0], [5.1, 227.0], [5.2, 227.0], [5.3, 227.0], [5.4, 227.0], [5.5, 227.0], [5.6, 227.0], [5.7, 227.0], [5.8, 227.0], [5.9, 227.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 227.0], [6.5, 227.0], [6.6, 227.0], [6.7, 227.0], [6.8, 227.0], [6.9, 227.0], [7.0, 227.0], [7.1, 227.0], [7.2, 227.0], [7.3, 227.0], [7.4, 227.0], [7.5, 227.0], [7.6, 227.0], [7.7, 227.0], [7.8, 227.0], [7.9, 227.0], [8.0, 227.0], [8.1, 227.0], [8.2, 227.0], [8.3, 227.0], [8.4, 227.0], [8.5, 227.0], [8.6, 227.0], [8.7, 227.0], [8.8, 227.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 227.0], [9.6, 227.0], [9.7, 227.0], [9.8, 227.0], [9.9, 227.0], [10.0, 227.0], [10.1, 227.0], [10.2, 227.0], [10.3, 228.0], [10.4, 228.0], [10.5, 228.0], [10.6, 228.0], [10.7, 228.0], [10.8, 228.0], [10.9, 228.0], [11.0, 228.0], [11.1, 228.0], [11.2, 228.0], [11.3, 228.0], [11.4, 228.0], [11.5, 228.0], [11.6, 228.0], [11.7, 228.0], [11.8, 228.0], [11.9, 228.0], [12.0, 228.0], [12.1, 228.0], [12.2, 228.0], [12.3, 228.0], [12.4, 228.0], [12.5, 228.0], [12.6, 228.0], [12.7, 228.0], [12.8, 228.0], [12.9, 228.0], [13.0, 228.0], [13.1, 228.0], [13.2, 228.0], [13.3, 228.0], [13.4, 228.0], [13.5, 228.0], [13.6, 228.0], [13.7, 228.0], [13.8, 228.0], [13.9, 228.0], [14.0, 228.0], [14.1, 228.0], [14.2, 228.0], [14.3, 228.0], [14.4, 228.0], [14.5, 229.0], [14.6, 229.0], [14.7, 229.0], [14.8, 229.0], [14.9, 229.0], [15.0, 229.0], [15.1, 229.0], [15.2, 229.0], [15.3, 229.0], [15.4, 229.0], [15.5, 229.0], [15.6, 229.0], [15.7, 229.0], [15.8, 229.0], [15.9, 229.0], [16.0, 229.0], [16.1, 229.0], [16.2, 229.0], [16.3, 229.0], [16.4, 229.0], [16.5, 229.0], [16.6, 229.0], [16.7, 229.0], [16.8, 229.0], [16.9, 229.0], [17.0, 229.0], [17.1, 229.0], [17.2, 229.0], [17.3, 229.0], [17.4, 229.0], [17.5, 229.0], [17.6, 229.0], [17.7, 229.0], [17.8, 229.0], [17.9, 229.0], [18.0, 229.0], [18.1, 229.0], [18.2, 229.0], [18.3, 229.0], [18.4, 229.0], [18.5, 230.0], [18.6, 230.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 230.0], [19.2, 230.0], [19.3, 230.0], [19.4, 230.0], [19.5, 230.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 230.0], [20.1, 230.0], [20.2, 230.0], [20.3, 230.0], [20.4, 230.0], [20.5, 230.0], [20.6, 230.0], [20.7, 230.0], [20.8, 230.0], [20.9, 230.0], [21.0, 230.0], [21.1, 231.0], [21.2, 231.0], [21.3, 231.0], [21.4, 231.0], [21.5, 231.0], [21.6, 231.0], [21.7, 231.0], [21.8, 231.0], [21.9, 231.0], [22.0, 231.0], [22.1, 231.0], [22.2, 231.0], [22.3, 231.0], [22.4, 231.0], [22.5, 231.0], [22.6, 231.0], [22.7, 231.0], [22.8, 231.0], [22.9, 231.0], [23.0, 231.0], [23.1, 231.0], [23.2, 231.0], [23.3, 231.0], [23.4, 231.0], [23.5, 231.0], [23.6, 231.0], [23.7, 232.0], [23.8, 232.0], [23.9, 232.0], [24.0, 232.0], [24.1, 232.0], [24.2, 232.0], [24.3, 232.0], [24.4, 232.0], [24.5, 232.0], [24.6, 232.0], [24.7, 232.0], [24.8, 232.0], [24.9, 232.0], [25.0, 232.0], [25.1, 232.0], [25.2, 232.0], [25.3, 232.0], [25.4, 233.0], [25.5, 233.0], [25.6, 233.0], [25.7, 233.0], [25.8, 233.0], [25.9, 233.0], [26.0, 233.0], [26.1, 233.0], [26.2, 233.0], [26.3, 233.0], [26.4, 233.0], [26.5, 233.0], [26.6, 233.0], [26.7, 233.0], [26.8, 233.0], [26.9, 233.0], [27.0, 234.0], [27.1, 234.0], [27.2, 234.0], [27.3, 234.0], [27.4, 234.0], [27.5, 234.0], [27.6, 234.0], [27.7, 234.0], [27.8, 234.0], [27.9, 234.0], [28.0, 234.0], [28.1, 234.0], [28.2, 235.0], [28.3, 235.0], [28.4, 235.0], [28.5, 235.0], [28.6, 235.0], [28.7, 235.0], [28.8, 235.0], [28.9, 235.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 235.0], [29.5, 235.0], [29.6, 235.0], [29.7, 235.0], [29.8, 235.0], [29.9, 235.0], [30.0, 236.0], [30.1, 236.0], [30.2, 236.0], [30.3, 236.0], [30.4, 236.0], [30.5, 236.0], [30.6, 236.0], [30.7, 236.0], [30.8, 236.0], [30.9, 236.0], [31.0, 236.0], [31.1, 236.0], [31.2, 236.0], [31.3, 236.0], [31.4, 236.0], [31.5, 236.0], [31.6, 236.0], [31.7, 236.0], [31.8, 236.0], [31.9, 236.0], [32.0, 236.0], [32.1, 236.0], [32.2, 236.0], [32.3, 236.0], [32.4, 236.0], [32.5, 236.0], [32.6, 237.0], [32.7, 237.0], [32.8, 237.0], [32.9, 237.0], [33.0, 237.0], [33.1, 237.0], [33.2, 237.0], [33.3, 237.0], [33.4, 237.0], [33.5, 237.0], [33.6, 237.0], [33.7, 237.0], [33.8, 237.0], [33.9, 237.0], [34.0, 237.0], [34.1, 237.0], [34.2, 237.0], [34.3, 237.0], [34.4, 237.0], [34.5, 237.0], [34.6, 237.0], [34.7, 237.0], [34.8, 237.0], [34.9, 237.0], [35.0, 237.0], [35.1, 237.0], [35.2, 237.0], [35.3, 237.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 237.0], [35.8, 237.0], [35.9, 237.0], [36.0, 237.0], [36.1, 237.0], [36.2, 238.0], [36.3, 238.0], [36.4, 238.0], [36.5, 238.0], [36.6, 238.0], [36.7, 238.0], [36.8, 238.0], [36.9, 238.0], [37.0, 238.0], [37.1, 238.0], [37.2, 238.0], [37.3, 238.0], [37.4, 238.0], [37.5, 238.0], [37.6, 238.0], [37.7, 238.0], [37.8, 238.0], [37.9, 238.0], [38.0, 238.0], [38.1, 238.0], [38.2, 238.0], [38.3, 238.0], [38.4, 238.0], [38.5, 238.0], [38.6, 238.0], [38.7, 238.0], [38.8, 238.0], [38.9, 238.0], [39.0, 238.0], [39.1, 238.0], [39.2, 238.0], [39.3, 238.0], [39.4, 238.0], [39.5, 238.0], [39.6, 238.0], [39.7, 238.0], [39.8, 238.0], [39.9, 238.0], [40.0, 238.0], [40.1, 238.0], [40.2, 238.0], [40.3, 238.0], [40.4, 238.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 238.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 238.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 239.0], [41.7, 239.0], [41.8, 239.0], [41.9, 239.0], [42.0, 239.0], [42.1, 239.0], [42.2, 239.0], [42.3, 239.0], [42.4, 239.0], [42.5, 239.0], [42.6, 239.0], [42.7, 239.0], [42.8, 239.0], [42.9, 239.0], [43.0, 239.0], [43.1, 239.0], [43.2, 239.0], [43.3, 239.0], [43.4, 239.0], [43.5, 239.0], [43.6, 239.0], [43.7, 239.0], [43.8, 239.0], [43.9, 239.0], [44.0, 239.0], [44.1, 239.0], [44.2, 239.0], [44.3, 239.0], [44.4, 239.0], [44.5, 239.0], [44.6, 239.0], [44.7, 239.0], [44.8, 239.0], [44.9, 239.0], [45.0, 239.0], [45.1, 239.0], [45.2, 240.0], [45.3, 240.0], [45.4, 240.0], [45.5, 240.0], [45.6, 240.0], [45.7, 240.0], [45.8, 240.0], [45.9, 240.0], [46.0, 240.0], [46.1, 240.0], [46.2, 240.0], [46.3, 240.0], [46.4, 240.0], [46.5, 240.0], [46.6, 240.0], [46.7, 240.0], [46.8, 240.0], [46.9, 240.0], [47.0, 240.0], [47.1, 240.0], [47.2, 240.0], [47.3, 240.0], [47.4, 240.0], [47.5, 240.0], [47.6, 240.0], [47.7, 240.0], [47.8, 240.0], [47.9, 240.0], [48.0, 240.0], [48.1, 240.0], [48.2, 240.0], [48.3, 240.0], [48.4, 240.0], [48.5, 240.0], [48.6, 240.0], [48.7, 240.0], [48.8, 240.0], [48.9, 240.0], [49.0, 240.0], [49.1, 240.0], [49.2, 240.0], [49.3, 240.0], [49.4, 240.0], [49.5, 240.0], [49.6, 240.0], [49.7, 240.0], [49.8, 240.0], [49.9, 240.0], [50.0, 240.0], [50.1, 240.0], [50.2, 240.0], [50.3, 241.0], [50.4, 241.0], [50.5, 241.0], [50.6, 241.0], [50.7, 241.0], [50.8, 241.0], [50.9, 241.0], [51.0, 241.0], [51.1, 241.0], [51.2, 241.0], [51.3, 241.0], [51.4, 241.0], [51.5, 241.0], [51.6, 241.0], [51.7, 241.0], [51.8, 241.0], [51.9, 241.0], [52.0, 241.0], [52.1, 241.0], [52.2, 241.0], [52.3, 241.0], [52.4, 241.0], [52.5, 241.0], [52.6, 241.0], [52.7, 241.0], [52.8, 241.0], [52.9, 241.0], [53.0, 241.0], [53.1, 241.0], [53.2, 241.0], [53.3, 241.0], [53.4, 241.0], [53.5, 241.0], [53.6, 241.0], [53.7, 242.0], [53.8, 242.0], [53.9, 242.0], [54.0, 242.0], [54.1, 242.0], [54.2, 242.0], [54.3, 242.0], [54.4, 242.0], [54.5, 242.0], [54.6, 242.0], [54.7, 242.0], [54.8, 242.0], [54.9, 242.0], [55.0, 242.0], [55.1, 242.0], [55.2, 242.0], [55.3, 242.0], [55.4, 242.0], [55.5, 242.0], [55.6, 242.0], [55.7, 242.0], [55.8, 242.0], [55.9, 242.0], [56.0, 242.0], [56.1, 242.0], [56.2, 242.0], [56.3, 242.0], [56.4, 242.0], [56.5, 242.0], [56.6, 242.0], [56.7, 242.0], [56.8, 242.0], [56.9, 242.0], [57.0, 242.0], [57.1, 243.0], [57.2, 243.0], [57.3, 243.0], [57.4, 243.0], [57.5, 243.0], [57.6, 243.0], [57.7, 243.0], [57.8, 243.0], [57.9, 243.0], [58.0, 243.0], [58.1, 243.0], [58.2, 243.0], [58.3, 243.0], [58.4, 243.0], [58.5, 243.0], [58.6, 243.0], [58.7, 244.0], [58.8, 244.0], [58.9, 244.0], [59.0, 244.0], [59.1, 244.0], [59.2, 244.0], [59.3, 244.0], [59.4, 244.0], [59.5, 244.0], [59.6, 244.0], [59.7, 244.0], [59.8, 244.0], [59.9, 245.0], [60.0, 245.0], [60.1, 245.0], [60.2, 245.0], [60.3, 245.0], [60.4, 245.0], [60.5, 246.0], [60.6, 246.0], [60.7, 246.0], [60.8, 246.0], [60.9, 246.0], [61.0, 246.0], [61.1, 246.0], [61.2, 246.0], [61.3, 246.0], [61.4, 246.0], [61.5, 246.0], [61.6, 246.0], [61.7, 246.0], [61.8, 246.0], [61.9, 246.0], [62.0, 246.0], [62.1, 247.0], [62.2, 247.0], [62.3, 247.0], [62.4, 247.0], [62.5, 247.0], [62.6, 247.0], [62.7, 247.0], [62.8, 247.0], [62.9, 247.0], [63.0, 247.0], [63.1, 247.0], [63.2, 247.0], [63.3, 247.0], [63.4, 247.0], [63.5, 248.0], [63.6, 248.0], [63.7, 248.0], [63.8, 248.0], [63.9, 248.0], [64.0, 248.0], [64.1, 248.0], [64.2, 248.0], [64.3, 248.0], [64.4, 248.0], [64.5, 248.0], [64.6, 248.0], [64.7, 248.0], [64.8, 248.0], [64.9, 248.0], [65.0, 248.0], [65.1, 249.0], [65.2, 249.0], [65.3, 249.0], [65.4, 249.0], [65.5, 249.0], [65.6, 249.0], [65.7, 249.0], [65.8, 249.0], [65.9, 249.0], [66.0, 249.0], [66.1, 250.0], [66.2, 250.0], [66.3, 250.0], [66.4, 250.0], [66.5, 250.0], [66.6, 250.0], [66.7, 250.0], [66.8, 250.0], [66.9, 250.0], [67.0, 250.0], [67.1, 250.0], [67.2, 250.0], [67.3, 250.0], [67.4, 250.0], [67.5, 250.0], [67.6, 250.0], [67.7, 251.0], [67.8, 251.0], [67.9, 251.0], [68.0, 251.0], [68.1, 251.0], [68.2, 251.0], [68.3, 251.0], [68.4, 251.0], [68.5, 251.0], [68.6, 251.0], [68.7, 251.0], [68.8, 251.0], [68.9, 251.0], [69.0, 251.0], [69.1, 252.0], [69.2, 252.0], [69.3, 252.0], [69.4, 252.0], [69.5, 252.0], [69.6, 252.0], [69.7, 252.0], [69.8, 252.0], [69.9, 252.0], [70.0, 252.0], [70.1, 252.0], [70.2, 252.0], [70.3, 253.0], [70.4, 253.0], [70.5, 253.0], [70.6, 253.0], [70.7, 253.0], [70.8, 253.0], [70.9, 253.0], [71.0, 253.0], [71.1, 253.0], [71.2, 253.0], [71.3, 253.0], [71.4, 253.0], [71.5, 253.0], [71.6, 253.0], [71.7, 253.0], [71.8, 253.0], [71.9, 253.0], [72.0, 253.0], [72.1, 254.0], [72.2, 254.0], [72.3, 254.0], [72.4, 254.0], [72.5, 254.0], [72.6, 254.0], [72.7, 254.0], [72.8, 254.0], [72.9, 254.0], [73.0, 254.0], [73.1, 254.0], [73.2, 254.0], [73.3, 254.0], [73.4, 254.0], [73.5, 255.0], [73.6, 255.0], [73.7, 255.0], [73.8, 255.0], [73.9, 256.0], [74.0, 256.0], [74.1, 256.0], [74.2, 256.0], [74.3, 256.0], [74.4, 256.0], [74.5, 256.0], [74.6, 256.0], [74.7, 256.0], [74.8, 256.0], [74.9, 256.0], [75.0, 256.0], [75.1, 256.0], [75.2, 256.0], [75.3, 256.0], [75.4, 257.0], [75.5, 257.0], [75.6, 257.0], [75.7, 257.0], [75.8, 257.0], [75.9, 257.0], [76.0, 257.0], [76.1, 257.0], [76.2, 257.0], [76.3, 257.0], [76.4, 258.0], [76.5, 258.0], [76.6, 258.0], [76.7, 258.0], [76.8, 258.0], [76.9, 258.0], [77.0, 258.0], [77.1, 258.0], [77.2, 258.0], [77.3, 258.0], [77.4, 258.0], [77.5, 258.0], [77.6, 259.0], [77.7, 259.0], [77.8, 259.0], [77.9, 259.0], [78.0, 259.0], [78.1, 259.0], [78.2, 259.0], [78.3, 259.0], [78.4, 260.0], [78.5, 260.0], [78.6, 261.0], [78.7, 261.0], [78.8, 261.0], [78.9, 261.0], [79.0, 262.0], [79.1, 262.0], [79.2, 262.0], [79.3, 262.0], [79.4, 263.0], [79.5, 263.0], [79.6, 263.0], [79.7, 263.0], [79.8, 263.0], [79.9, 263.0], [80.0, 264.0], [80.1, 264.0], [80.2, 265.0], [80.3, 265.0], [80.4, 266.0], [80.5, 266.0], [80.6, 266.0], [80.7, 266.0], [80.8, 267.0], [80.9, 267.0], [81.0, 267.0], [81.1, 267.0], [81.2, 267.0], [81.3, 267.0], [81.4, 268.0], [81.5, 268.0], [81.6, 268.0], [81.7, 268.0], [81.8, 269.0], [81.9, 269.0], [82.0, 270.0], [82.1, 270.0], [82.2, 270.0], [82.3, 270.0], [82.4, 272.0], [82.5, 272.0], [82.6, 272.0], [82.7, 272.0], [82.8, 273.0], [82.9, 273.0], [83.0, 274.0], [83.1, 274.0], [83.2, 275.0], [83.3, 275.0], [83.4, 276.0], [83.5, 276.0], [83.6, 277.0], [83.7, 277.0], [83.8, 277.0], [83.9, 277.0], [84.0, 278.0], [84.1, 278.0], [84.2, 279.0], [84.3, 279.0], [84.4, 279.0], [84.5, 279.0], [84.6, 279.0], [84.7, 279.0], [84.8, 279.0], [84.9, 279.0], [85.0, 282.0], [85.1, 282.0], [85.2, 283.0], [85.3, 283.0], [85.4, 283.0], [85.5, 283.0], [85.6, 283.0], [85.7, 283.0], [85.8, 283.0], [85.9, 283.0], [86.0, 284.0], [86.1, 284.0], [86.2, 285.0], [86.3, 285.0], [86.4, 285.0], [86.5, 285.0], [86.6, 287.0], [86.7, 287.0], [86.8, 287.0], [86.9, 287.0], [87.0, 287.0], [87.1, 287.0], [87.2, 288.0], [87.3, 288.0], [87.4, 290.0], [87.5, 290.0], [87.6, 290.0], [87.7, 290.0], [87.8, 292.0], [87.9, 292.0], [88.0, 293.0], [88.1, 293.0], [88.2, 293.0], [88.3, 293.0], [88.4, 295.0], [88.5, 295.0], [88.6, 295.0], [88.7, 295.0], [88.8, 297.0], [88.9, 297.0], [89.0, 297.0], [89.1, 297.0], [89.2, 298.0], [89.3, 298.0], [89.4, 299.0], [89.5, 299.0], [89.6, 300.0], [89.7, 300.0], [89.8, 300.0], [89.9, 300.0], [90.0, 300.0], [90.1, 300.0], [90.2, 302.0], [90.3, 302.0], [90.4, 302.0], [90.5, 302.0], [90.6, 302.0], [90.7, 302.0], [90.8, 303.0], [90.9, 303.0], [91.0, 303.0], [91.1, 303.0], [91.2, 305.0], [91.3, 305.0], [91.4, 306.0], [91.5, 306.0], [91.6, 307.0], [91.7, 307.0], [91.8, 308.0], [91.9, 308.0], [92.0, 312.0], [92.1, 312.0], [92.2, 312.0], [92.3, 312.0], [92.4, 312.0], [92.5, 312.0], [92.6, 313.0], [92.7, 313.0], [92.8, 313.0], [92.9, 313.0], [93.0, 314.0], [93.1, 314.0], [93.2, 315.0], [93.3, 315.0], [93.4, 316.0], [93.5, 316.0], [93.6, 317.0], [93.7, 317.0], [93.8, 317.0], [93.9, 317.0], [94.0, 322.0], [94.1, 322.0], [94.2, 329.0], [94.3, 329.0], [94.4, 329.0], [94.5, 329.0], [94.6, 334.0], [94.7, 334.0], [94.8, 335.0], [94.9, 335.0], [95.0, 344.0], [95.1, 344.0], [95.2, 351.0], [95.3, 351.0], [95.4, 356.0], [95.5, 356.0], [95.6, 361.0], [95.7, 361.0], [95.8, 365.0], [95.9, 365.0], [96.0, 369.0], [96.1, 369.0], [96.2, 379.0], [96.3, 379.0], [96.4, 382.0], [96.5, 382.0], [96.6, 382.0], [96.7, 382.0], [96.8, 390.0], [96.9, 390.0], [97.0, 391.0], [97.1, 391.0], [97.2, 409.0], [97.3, 409.0], [97.4, 409.0], [97.5, 409.0], [97.6, 409.0], [97.7, 409.0], [97.8, 431.0], [97.9, 431.0], [98.0, 438.0], [98.1, 438.0], [98.2, 445.0], [98.3, 445.0], [98.4, 504.0], [98.5, 504.0], [98.6, 554.0], [98.7, 554.0], [98.8, 554.0], [98.9, 554.0], [99.0, 610.0], [99.1, 610.0], [99.2, 676.0], [99.3, 676.0], [99.4, 686.0], [99.5, 686.0], [99.6, 1329.0], [99.7, 1329.0], [99.8, 1330.0], [99.9, 1330.0], [100.0, 1330.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 446.0, "series": [{"data": [[34100.0, 1.0], [37700.0, 1.0], [38500.0, 1.0], [40500.0, 1.0], [41300.0, 2.0], [42500.0, 1.0], [43300.0, 1.0], [43700.0, 2.0], [45300.0, 1.0], [46100.0, 1.0], [47300.0, 1.0], [49300.0, 1.0], [50500.0, 1.0], [50900.0, 1.0], [200.0, 4.0], [54900.0, 1.0], [56900.0, 1.0], [59300.0, 2.0], [58500.0, 1.0], [60500.0, 3.0], [300.0, 92.0], [400.0, 9.0], [500.0, 1.0], [4500.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5300.0, 7.0], [5200.0, 3.0], [5600.0, 3.0], [5400.0, 1.0], [5500.0, 2.0], [5800.0, 3.0], [6000.0, 1.0], [5900.0, 4.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6500.0, 7.0], [6400.0, 2.0], [6700.0, 2.0], [7000.0, 2.0], [7300.0, 2.0], [7400.0, 2.0], [7200.0, 4.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 4.0], [7900.0, 2.0], [8100.0, 1.0], [8600.0, 1.0], [8400.0, 2.0], [8700.0, 1.0], [8500.0, 1.0], [8300.0, 1.0], [8200.0, 1.0], [9100.0, 2.0], [9200.0, 2.0], [9000.0, 1.0], [8900.0, 1.0], [8800.0, 2.0], [9500.0, 2.0], [9700.0, 2.0], [9600.0, 1.0], [9300.0, 1.0], [9800.0, 2.0], [10100.0, 1.0], [10000.0, 1.0], [9900.0, 3.0], [10200.0, 2.0], [10400.0, 2.0], [10300.0, 2.0], [10600.0, 1.0], [10700.0, 1.0], [10900.0, 1.0], [10800.0, 3.0], [11500.0, 4.0], [11400.0, 3.0], [11600.0, 4.0], [11300.0, 2.0], [11700.0, 1.0], [11900.0, 1.0], [12000.0, 2.0], [12200.0, 2.0], [11800.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [13200.0, 2.0], [13000.0, 2.0], [13300.0, 3.0], [13100.0, 1.0], [12900.0, 1.0], [13500.0, 3.0], [13600.0, 2.0], [13700.0, 1.0], [14300.0, 1.0], [14000.0, 1.0], [14100.0, 1.0], [14500.0, 2.0], [14700.0, 1.0], [14600.0, 3.0], [14800.0, 2.0], [14400.0, 1.0], [15200.0, 2.0], [14900.0, 1.0], [15100.0, 1.0], [15000.0, 1.0], [15300.0, 1.0], [15500.0, 1.0], [15400.0, 1.0], [15800.0, 2.0], [16000.0, 1.0], [16100.0, 1.0], [16600.0, 1.0], [17000.0, 1.0], [18200.0, 2.0], [18000.0, 1.0], [18400.0, 1.0], [17600.0, 1.0], [19400.0, 2.0], [18800.0, 2.0], [18600.0, 1.0], [19000.0, 1.0], [20200.0, 1.0], [20800.0, 1.0], [21200.0, 2.0], [21600.0, 3.0], [22000.0, 2.0], [22200.0, 1.0], [22600.0, 1.0], [23600.0, 2.0], [24400.0, 2.0], [24000.0, 2.0], [23800.0, 2.0], [24200.0, 1.0], [24600.0, 1.0], [24800.0, 1.0], [26400.0, 1.0], [25800.0, 3.0], [26600.0, 1.0], [28600.0, 1.0], [28800.0, 1.0], [29000.0, 1.0], [31600.0, 1.0], [32600.0, 1.0], [33600.0, 1.0], [34800.0, 1.0], [34400.0, 1.0], [36800.0, 2.0], [38800.0, 1.0], [37600.0, 1.0], [39600.0, 2.0], [40400.0, 1.0], [41200.0, 1.0], [42400.0, 1.0], [42000.0, 1.0], [43200.0, 2.0], [44000.0, 1.0], [46000.0, 1.0], [47200.0, 1.0], [48800.0, 1.0], [49200.0, 1.0], [50000.0, 1.0], [52400.0, 1.0], [51600.0, 1.0], [51200.0, 1.0], [55200.0, 1.0], [56800.0, 1.0], [55600.0, 1.0], [58400.0, 1.0], [59200.0, 1.0], [60400.0, 3.0], [60000.0, 1.0], [36700.0, 2.0], [36300.0, 1.0], [38700.0, 2.0], [38300.0, 2.0], [37900.0, 2.0], [39100.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [40700.0, 1.0], [42300.0, 1.0], [43900.0, 2.0], [46300.0, 1.0], [45500.0, 1.0], [47100.0, 2.0], [46700.0, 1.0], [50300.0, 1.0], [51500.0, 1.0], [51900.0, 1.0], [53500.0, 2.0], [54700.0, 1.0], [55500.0, 1.0], [57100.0, 1.0], [57900.0, 1.0], [60300.0, 10.0], [17100.0, 1.0], [16900.0, 1.0], [17300.0, 1.0], [18100.0, 1.0], [18300.0, 1.0], [17900.0, 1.0], [18900.0, 2.0], [18700.0, 1.0], [20100.0, 1.0], [19900.0, 2.0], [19500.0, 1.0], [20300.0, 2.0], [19700.0, 1.0], [21500.0, 1.0], [20500.0, 1.0], [21300.0, 2.0], [20700.0, 1.0], [21100.0, 1.0], [22100.0, 2.0], [22500.0, 1.0], [23500.0, 1.0], [22900.0, 1.0], [22700.0, 1.0], [24500.0, 1.0], [25700.0, 1.0], [26500.0, 1.0], [26300.0, 1.0], [25900.0, 1.0], [26900.0, 1.0], [27100.0, 1.0], [26700.0, 1.0], [28300.0, 2.0], [29500.0, 2.0], [30700.0, 2.0], [30500.0, 1.0], [30900.0, 1.0], [32300.0, 1.0], [32500.0, 1.0], [32100.0, 1.0], [32700.0, 1.0], [33800.0, 1.0], [34200.0, 1.0], [35800.0, 1.0], [37800.0, 2.0], [37000.0, 1.0], [38200.0, 1.0], [39800.0, 2.0], [40600.0, 2.0], [39400.0, 2.0], [39000.0, 1.0], [41000.0, 3.0], [42600.0, 1.0], [41800.0, 1.0], [44200.0, 1.0], [47000.0, 2.0], [49000.0, 3.0], [48600.0, 1.0], [49400.0, 2.0], [51000.0, 2.0], [51400.0, 2.0], [54200.0, 1.0], [55400.0, 1.0], [56600.0, 1.0], [57000.0, 1.0], [59800.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 102.0], [34500.0, 1.0], [36500.0, 2.0], [38500.0, 2.0], [38100.0, 2.0], [37300.0, 1.0], [37700.0, 2.0], [39300.0, 2.0], [40900.0, 1.0], [40100.0, 1.0], [39700.0, 1.0], [42100.0, 1.0], [43700.0, 1.0], [46900.0, 3.0], [45700.0, 1.0], [48500.0, 1.0], [48900.0, 1.0], [49700.0, 2.0], [52100.0, 1.0], [51300.0, 3.0], [53300.0, 1.0], [60100.0, 12.0], [4300.0, 1.0], [4500.0, 2.0], [4700.0, 2.0], [5100.0, 6.0], [5000.0, 6.0], [5300.0, 2.0], [5200.0, 2.0], [5600.0, 4.0], [5500.0, 1.0], [5700.0, 3.0], [5800.0, 1.0], [6000.0, 2.0], [6100.0, 3.0], [6300.0, 4.0], [6200.0, 3.0], [6400.0, 2.0], [6700.0, 1.0], [6800.0, 2.0], [6900.0, 1.0], [7000.0, 6.0], [7400.0, 4.0], [7200.0, 2.0], [7500.0, 2.0], [7600.0, 1.0], [7900.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8000.0, 2.0], [8300.0, 2.0], [8400.0, 1.0], [8500.0, 2.0], [8600.0, 1.0], [8900.0, 3.0], [8800.0, 2.0], [9000.0, 1.0], [9200.0, 1.0], [9600.0, 5.0], [9300.0, 1.0], [9400.0, 3.0], [9900.0, 3.0], [9800.0, 1.0], [10100.0, 2.0], [10000.0, 1.0], [10200.0, 1.0], [10700.0, 1.0], [10500.0, 3.0], [10600.0, 1.0], [10300.0, 1.0], [11200.0, 6.0], [11100.0, 2.0], [10900.0, 1.0], [11000.0, 1.0], [11600.0, 2.0], [11700.0, 1.0], [11300.0, 3.0], [11500.0, 1.0], [12200.0, 1.0], [11800.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12000.0, 1.0], [12700.0, 3.0], [13300.0, 2.0], [13000.0, 3.0], [12900.0, 2.0], [13100.0, 1.0], [13200.0, 1.0], [13400.0, 3.0], [13700.0, 1.0], [14000.0, 1.0], [14200.0, 3.0], [13900.0, 1.0], [14300.0, 2.0], [14700.0, 2.0], [14800.0, 1.0], [14500.0, 3.0], [14400.0, 1.0], [14900.0, 2.0], [15200.0, 2.0], [15000.0, 1.0], [15700.0, 1.0], [15600.0, 1.0], [15500.0, 1.0], [16300.0, 1.0], [15900.0, 1.0], [16800.0, 1.0], [17000.0, 1.0], [17800.0, 2.0], [18000.0, 1.0], [18400.0, 2.0], [17600.0, 1.0], [19200.0, 3.0], [20000.0, 2.0], [19600.0, 1.0], [20400.0, 1.0], [21200.0, 1.0], [21400.0, 1.0], [21000.0, 2.0], [21800.0, 3.0], [22400.0, 1.0], [23400.0, 2.0], [22600.0, 1.0], [23800.0, 2.0], [24200.0, 2.0], [26200.0, 1.0], [26400.0, 2.0], [25600.0, 1.0], [26800.0, 1.0], [28000.0, 1.0], [28400.0, 1.0], [29200.0, 1.0], [30400.0, 1.0], [31400.0, 1.0], [32400.0, 1.0], [36400.0, 1.0], [36000.0, 1.0], [36800.0, 1.0], [38400.0, 1.0], [38800.0, 2.0], [37600.0, 1.0], [40800.0, 2.0], [39200.0, 1.0], [39600.0, 1.0], [40400.0, 1.0], [42400.0, 1.0], [41600.0, 1.0], [42000.0, 1.0], [43600.0, 1.0], [46000.0, 1.0], [45200.0, 1.0], [46800.0, 2.0], [46400.0, 1.0], [48800.0, 2.0], [49200.0, 1.0], [50800.0, 1.0], [53200.0, 1.0], [51200.0, 1.0], [54000.0, 1.0], [55200.0, 1.0], [56400.0, 1.0], [56800.0, 2.0], [57600.0, 1.0], [33900.0, 1.0], [35500.0, 1.0], [37500.0, 1.0], [37900.0, 1.0], [40700.0, 1.0], [39500.0, 1.0], [40300.0, 1.0], [42300.0, 1.0], [41100.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [43500.0, 1.0], [45900.0, 1.0], [47100.0, 1.0], [48700.0, 1.0], [50700.0, 2.0], [55100.0, 1.0], [54300.0, 1.0], [54700.0, 1.0], [59100.0, 2.0], [58300.0, 1.0], [59500.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [17300.0, 1.0], [17900.0, 2.0], [18100.0, 1.0], [18700.0, 3.0], [18500.0, 2.0], [19900.0, 1.0], [19700.0, 1.0], [20300.0, 1.0], [20100.0, 1.0], [19500.0, 1.0], [21300.0, 2.0], [20500.0, 1.0], [20900.0, 2.0], [21100.0, 1.0], [21700.0, 1.0], [22300.0, 2.0], [21900.0, 1.0], [23300.0, 2.0], [23500.0, 1.0], [24300.0, 1.0], [24100.0, 1.0], [24500.0, 1.0], [23700.0, 1.0], [25500.0, 3.0], [26300.0, 1.0], [26100.0, 1.0], [25700.0, 1.0], [26700.0, 1.0], [28500.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [28700.0, 1.0], [30700.0, 1.0], [30500.0, 1.0], [30300.0, 1.0], [32500.0, 2.0], [32100.0, 1.0], [32300.0, 1.0], [31900.0, 1.0], [33400.0, 1.0], [33800.0, 1.0], [34200.0, 1.0], [36600.0, 1.0], [37400.0, 1.0], [38200.0, 1.0], [40200.0, 2.0], [39400.0, 1.0], [39000.0, 1.0], [41000.0, 1.0], [43000.0, 2.0], [41800.0, 1.0], [43400.0, 1.0], [45000.0, 1.0], [43800.0, 1.0], [49000.0, 2.0], [48200.0, 1.0], [50200.0, 1.0], [51000.0, 2.0], [55000.0, 1.0], [56600.0, 2.0], [55400.0, 1.0], [58200.0, 1.0], [59000.0, 1.0], [60200.0, 4.0], [59800.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 38.0], [600.0, 3.0], [1300.0, 2.0], [200.0, 446.0], [400.0, 6.0], [500.0, 3.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 390.0, "series": [{"data": [[0.0, 390.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 376.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 219.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.8461538461538463, "minX": 1.68517992E12, "maxY": 24.984732824427482, "series": [{"data": [[1.68518064E12, 21.92307692307692], [1.68518034E12, 14.926829268292682], [1.68518004E12, 5.0], [1.6851807E12, 24.984732824427482], [1.6851804E12, 15.0], [1.6851801E12, 6.6052631578947345], [1.68518076E12, 17.29213483146067], [1.68518046E12, 16.69387755102041], [1.68518016E12, 10.0], [1.68518052E12, 19.9622641509434], [1.68518022E12, 10.0], [1.68517992E12, 2.8461538461538463], [1.68518058E12, 20.0], [1.68518028E12, 12.31372549019608], [1.68517998E12, 4.9393939393939394]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68518076E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 232.33333333333334, "minX": 1.0, "maxY": 57079.0, "series": [{"data": [[2.0, 18451.0], [3.0, 28212.5], [4.0, 15960.0], [5.0, 21245.44444444444], [6.0, 31306.5], [7.0, 28384.714285714286], [8.0, 57079.0], [9.0, 40695.0], [10.0, 23722.862745098042], [11.0, 25346.8], [12.0, 17569.083333333336], [13.0, 14717.666666666668], [14.0, 17630.125], [15.0, 17744.900990099017], [1.0, 14336.5], [16.0, 13545.5], [17.0, 7584.705882352941], [18.0, 8500.5], [19.0, 13619.285714285714], [20.0, 19930.423423423425], [21.0, 23967.727272727272], [22.0, 19677.083333333332], [23.0, 29016.0], [24.0, 21840.500000000004], [25.0, 29991.539999999994]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.33534136546187, 20387.520080321287]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 18218.0], [3.0, 27978.5], [4.0, 15720.8], [5.0, 20982.74074074074], [6.0, 31050.5], [7.0, 28139.428571428572], [8.0, 56830.0], [9.0, 40438.0], [10.0, 23464.450980392146], [11.0, 25099.4], [12.0, 17328.0], [13.0, 14484.250000000004], [14.0, 17390.0], [15.0, 17505.386138613863], [1.0, 14045.0], [16.0, 13302.25], [17.0, 7331.000000000001], [18.0, 8263.099999999999], [19.0, 14328.153846153848], [20.0, 19812.254545454554], [21.0, 26068.699999999997], [22.0, 19420.666666666664], [23.0, 28768.222222222223], [24.0, 23546.18181818182], [25.0, 29746.07999999999]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.297570850202455, 20289.831983805663]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 233.33333333333334], [3.0, 243.5], [4.0, 247.0], [5.0, 261.77777777777777], [6.0, 257.0], [7.0, 245.85714285714283], [8.0, 257.0], [9.0, 247.0], [10.0, 258.54901960784315], [11.0, 246.6], [12.0, 236.08333333333331], [13.0, 232.72727272727275], [14.0, 235.22222222222223], [15.0, 241.3069306930694], [1.0, 286.5], [16.0, 343.0], [17.0, 243.1764705882353], [18.0, 248.11111111111111], [19.0, 232.33333333333334], [20.0, 301.5405405405405], [21.0, 247.25], [22.0, 243.06666666666666], [23.0, 252.7], [24.0, 250.6153846153846], [25.0, 241.87499999999997]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.33935742971888, 260.6586345381524]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 658.8166666666667, "minX": 1.68517992E12, "maxY": 9887.583333333334, "series": [{"data": [[1.68518064E12, 3495.233333333333], [1.68518034E12, 2104.9], [1.68518004E12, 807.2166666666667], [1.6851807E12, 2987.5], [1.6851804E12, 2726.0333333333333], [1.6851801E12, 1099.1166666666666], [1.68518076E12, 1726.65], [1.68518046E12, 3394.883333333333], [1.68518016E12, 1210.4166666666667], [1.68518052E12, 3545.633333333333], [1.68518022E12, 1487.0333333333333], [1.68517992E12, 658.8166666666667], [1.68518058E12, 3522.4], [1.68518028E12, 1227.1], [1.68517998E12, 843.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68518064E12, 7418.6], [1.68518034E12, 5659.766666666666], [1.68518004E12, 1293.7666666666667], [1.6851807E12, 5364.683333333333], [1.6851804E12, 6203.4], [1.6851801E12, 2228.95], [1.68518076E12, 4599.75], [1.68518046E12, 9887.583333333334], [1.68518016E12, 2021.0], [1.68518052E12, 8023.666666666667], [1.68518022E12, 5066.566666666667], [1.68517992E12, 1000.3666666666667], [1.68518058E12, 7483.25], [1.68518028E12, 4880.533333333334], [1.68517998E12, 1834.7333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68518076E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 236.83333333333331, "minX": 1.68517992E12, "maxY": 38912.470588235294, "series": [{"data": [[1.68518064E12, 23994.276595744686], [1.68518034E12, 17259.7], [1.68518004E12, 19759.4375], [1.6851807E12, 29314.613636363632], [1.6851804E12, 20799.47826086956], [1.6851801E12, 22270.250000000004], [1.68518076E12, 32409.68421052632], [1.68518046E12, 10200.734375000002], [1.68518016E12, 38912.470588235294], [1.68518052E12, 21266.57692307693], [1.68518022E12, 16011.516129032261], [1.68517992E12, 8874.875], [1.68518058E12, 17454.511627906973], [1.68518028E12, 12231.264705882357], [1.68517998E12, 20838.2]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68518064E12, 23131.000000000004], [1.68518034E12, 17253.51219512195], [1.68518004E12, 19137.454545454548], [1.6851807E12, 30054.000000000007], [1.6851804E12, 18491.309523809527], [1.6851801E12, 21341.153846153848], [1.68518076E12, 34993.527777777774], [1.68518046E12, 10780.421874999996], [1.68518016E12, 38549.0], [1.68518052E12, 22062.45283018868], [1.68518022E12, 17049.161290322583], [1.68517992E12, 8788.142857142857], [1.68518058E12, 16438.291666666664], [1.68518028E12, 11456.25], [1.68517998E12, 19396.90909090909]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68518064E12, 248.88000000000005], [1.68518034E12, 240.88095238095235], [1.68518004E12, 256.27272727272725], [1.6851807E12, 242.5681818181818], [1.6851804E12, 240.35714285714283], [1.6851801E12, 245.47058823529412], [1.68518076E12, 240.0666666666667], [1.68518046E12, 259.77941176470597], [1.68518016E12, 273.52941176470586], [1.68518052E12, 296.68518518518516], [1.68518022E12, 252.03225806451613], [1.68517992E12, 248.0909090909091], [1.68518058E12, 315.7083333333333], [1.68518028E12, 236.83333333333331], [1.68517998E12, 277.3333333333333]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68518076E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 236.66666666666666, "minX": 1.68517992E12, "maxY": 38911.352941176454, "series": [{"data": [[1.68518064E12, 23993.659574468085], [1.68518034E12, 17259.45], [1.68518004E12, 19758.5], [1.6851807E12, 29314.15909090909], [1.6851804E12, 20798.913043478267], [1.6851801E12, 22268.25], [1.68518076E12, 32408.92105263158], [1.68518046E12, 10200.515624999998], [1.68518016E12, 38911.352941176454], [1.68518052E12, 21265.980769230766], [1.68518022E12, 16011.29032258064], [1.68517992E12, 8874.25], [1.68518058E12, 17453.97674418605], [1.68518028E12, 12231.058823529413], [1.68517998E12, 20837.100000000002]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68518064E12, 23130.869565217392], [1.68518034E12, 17253.414634146342], [1.68518004E12, 19137.363636363636], [1.6851807E12, 30053.860465116275], [1.6851804E12, 18491.16666666667], [1.6851801E12, 21340.0], [1.68518076E12, 34993.36111111111], [1.68518046E12, 10780.328124999998], [1.68518016E12, 38548.62499999999], [1.68518052E12, 22062.113207547172], [1.68518022E12, 17049.064516129034], [1.68517992E12, 8788.142857142857], [1.68518058E12, 16438.0625], [1.68518028E12, 11456.156250000004], [1.68517998E12, 19396.090909090908]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68518064E12, 248.50000000000006], [1.68518034E12, 240.7142857142857], [1.68518004E12, 255.63636363636363], [1.6851807E12, 242.0681818181818], [1.6851804E12, 239.95238095238093], [1.6851801E12, 245.2941176470588], [1.68518076E12, 239.66666666666666], [1.68518046E12, 259.6323529411764], [1.68518016E12, 272.7647058823529], [1.68518052E12, 296.40740740740733], [1.68518022E12, 251.93548387096766], [1.68517992E12, 247.63636363636363], [1.68518058E12, 315.2708333333335], [1.68518028E12, 236.66666666666666], [1.68517998E12, 276.66666666666663]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68518076E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68517992E12, "maxY": 151.5625, "series": [{"data": [[1.68518064E12, 133.9787234042553], [1.68518034E12, 116.45], [1.68518004E12, 138.75], [1.6851807E12, 114.8409090909091], [1.6851804E12, 117.41304347826087], [1.6851801E12, 120.25], [1.68518076E12, 116.71052631578947], [1.68518046E12, 116.39062499999999], [1.68518016E12, 116.99999999999999], [1.68518052E12, 121.78846153846156], [1.68518022E12, 118.90322580645162], [1.68517992E12, 126.25], [1.68518058E12, 144.4418604651163], [1.68518028E12, 117.61764705882354], [1.68517998E12, 118.2]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68518064E12, 0.0], [1.68518034E12, 0.0], [1.68518004E12, 0.0], [1.6851807E12, 0.0], [1.6851804E12, 0.0], [1.6851801E12, 0.0], [1.68518076E12, 0.0], [1.68518046E12, 0.0], [1.68518016E12, 0.0], [1.68518052E12, 0.0], [1.68518022E12, 0.0], [1.68517992E12, 0.0], [1.68518058E12, 0.0], [1.68518028E12, 0.0], [1.68517998E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68518064E12, 116.50000000000001], [1.68518034E12, 117.45238095238096], [1.68518004E12, 115.81818181818181], [1.6851807E12, 115.11363636363637], [1.6851804E12, 116.09523809523809], [1.6851801E12, 118.64705882352942], [1.68518076E12, 118.33333333333334], [1.68518046E12, 116.33823529411764], [1.68518016E12, 120.58823529411767], [1.68518052E12, 127.57407407407408], [1.68518022E12, 117.22580645161288], [1.68517992E12, 123.7272727272727], [1.68518058E12, 151.5625], [1.68518028E12, 117.30555555555556], [1.68517998E12, 148.08333333333334]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68518076E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 226.0, "minX": 1.68517992E12, "maxY": 59827.0, "series": [{"data": [[1.68518064E12, 56423.0], [1.68518034E12, 56642.0], [1.68518004E12, 21724.0], [1.6851807E12, 59827.0], [1.6851804E12, 49084.0], [1.6851801E12, 28070.0], [1.68518076E12, 59021.0], [1.68518046E12, 42197.0], [1.68518016E12, 43135.0], [1.68518052E12, 59144.0], [1.68518022E12, 46073.0], [1.68517992E12, 13346.0], [1.68518058E12, 39019.0], [1.68518028E12, 39309.0], [1.68517998E12, 24350.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68518064E12, 49324.4], [1.68518034E12, 46843.7], [1.68518004E12, 21387.4], [1.6851807E12, 26423.0], [1.6851804E12, 43492.899999999994], [1.6851801E12, 26136.5], [1.68518076E12, 53340.99999999999], [1.68518046E12, 33230.40000000001], [1.68518016E12, 40322.4], [1.68518052E12, 51330.0], [1.68518022E12, 43900.6], [1.68517992E12, 13042.7], [1.68518058E12, 24002.899999999998], [1.68518028E12, 38392.8], [1.68517998E12, 24029.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68518064E12, 56423.0], [1.68518034E12, 56642.0], [1.68518004E12, 21724.0], [1.6851807E12, 59827.0], [1.6851804E12, 49084.0], [1.6851801E12, 28070.0], [1.68518076E12, 59021.0], [1.68518046E12, 42197.0], [1.68518016E12, 43135.0], [1.68518052E12, 59144.0], [1.68518022E12, 46073.0], [1.68517992E12, 13346.0], [1.68518058E12, 39019.0], [1.68518028E12, 39309.0], [1.68517998E12, 24350.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68518064E12, 51337.4], [1.68518034E12, 51587.94999999999], [1.68518004E12, 21676.75], [1.6851807E12, 58342.0], [1.6851804E12, 46677.25], [1.6851801E12, 27325.3], [1.68518076E12, 58073.299999999996], [1.68518046E12, 38018.6], [1.68518016E12, 41485.09999999999], [1.68518052E12, 55084.25], [1.68518022E12, 45585.799999999996], [1.68517992E12, 13346.0], [1.68518058E12, 28610.85], [1.68518028E12, 39309.0], [1.68517998E12, 24315.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68518064E12, 227.0], [1.68518034E12, 229.0], [1.68518004E12, 227.0], [1.6851807E12, 227.0], [1.6851804E12, 228.0], [1.6851801E12, 232.0], [1.68518076E12, 229.0], [1.68518046E12, 226.0], [1.68518016E12, 230.0], [1.68518052E12, 226.0], [1.68518022E12, 237.0], [1.68517992E12, 229.0], [1.68518058E12, 227.0], [1.68518028E12, 240.0], [1.68517998E12, 230.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68518064E12, 292.0], [1.68518034E12, 274.0], [1.68518004E12, 6521.0], [1.6851807E12, 270.0], [1.6851804E12, 270.0], [1.6851801E12, 257.0], [1.68518076E12, 19530.0], [1.68518046E12, 329.0], [1.68518016E12, 365.0], [1.68518052E12, 2507.5], [1.68518022E12, 305.0], [1.68517992E12, 248.5], [1.68518058E12, 2695.5], [1.68518028E12, 32189.0], [1.68517998E12, 315.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68518076E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 119.0, "minX": 1.0, "maxY": 15578.0, "series": [{"data": [[1.0, 287.0], [2.0, 4705.0], [4.0, 351.0], [8.0, 643.0], [9.0, 6993.0], [10.0, 4348.0], [5.0, 294.0], [3.0, 313.0], [6.0, 362.5], [12.0, 5415.0], [13.0, 15578.0], [7.0, 2785.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 235.0], [8.0, 124.5], [2.0, 224.0], [4.0, 122.0], [5.0, 119.0], [3.0, 132.5], [6.0, 226.5], [13.0, 238.0], [7.0, 227.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 119.0, "minX": 1.0, "maxY": 15578.0, "series": [{"data": [[1.0, 286.5], [2.0, 4705.0], [4.0, 350.0], [8.0, 643.0], [9.0, 6993.0], [10.0, 4348.0], [5.0, 293.5], [3.0, 307.0], [6.0, 362.5], [12.0, 5415.0], [13.0, 15578.0], [7.0, 2785.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 235.0], [8.0, 124.5], [2.0, 224.0], [4.0, 122.0], [5.0, 119.0], [3.0, 132.5], [6.0, 226.5], [13.0, 238.0], [7.0, 226.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.68517992E12, "maxY": 2.283333333333333, "series": [{"data": [[1.68518064E12, 1.6833333333333333], [1.68518034E12, 1.4166666666666667], [1.68518004E12, 0.36666666666666664], [1.6851807E12, 1.4833333333333334], [1.6851804E12, 1.3666666666666667], [1.6851801E12, 0.5666666666666667], [1.68518076E12, 0.48333333333333334], [1.68518046E12, 2.283333333333333], [1.68518016E12, 0.48333333333333334], [1.68518052E12, 1.7333333333333334], [1.68518022E12, 1.05], [1.68517992E12, 0.35], [1.68518058E12, 1.6166666666666667], [1.68518028E12, 1.2333333333333334], [1.68517998E12, 0.4166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68518076E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68517992E12, "maxY": 1.6, "series": [{"data": [[1.68518064E12, 1.5833333333333333], [1.68518034E12, 0.7666666666666667], [1.68518004E12, 0.36666666666666664], [1.6851807E12, 1.3166666666666667], [1.6851804E12, 1.1666666666666667], [1.6851801E12, 0.5], [1.68518076E12, 0.75], [1.68518046E12, 1.25], [1.68518016E12, 0.55], [1.68518052E12, 1.5333333333333334], [1.68518022E12, 0.5166666666666667], [1.68517992E12, 0.3], [1.68518058E12, 1.6], [1.68518028E12, 0.3], [1.68517998E12, 0.38333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68518034E12, 0.6166666666666667], [1.68518052E12, 0.23333333333333334], [1.68518022E12, 0.5166666666666667], [1.6851804E12, 0.23333333333333334], [1.68518028E12, 0.8333333333333334], [1.68518046E12, 0.95]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68518064E12, 0.016666666666666666], [1.68518052E12, 0.016666666666666666], [1.6851807E12, 0.13333333333333333], [1.68518076E12, 0.1]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68518076E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68517992E12, "maxY": 0.8333333333333334, "series": [{"data": [[1.68518064E12, 0.8333333333333334], [1.68518034E12, 0.4166666666666667], [1.68518004E12, 0.18333333333333332], [1.6851807E12, 0.7333333333333333], [1.6851804E12, 0.6], [1.6851801E12, 0.2833333333333333], [1.68518076E12, 0.25], [1.68518046E12, 0.6666666666666666], [1.68518016E12, 0.2833333333333333], [1.68518052E12, 0.7666666666666667], [1.68518022E12, 0.2833333333333333], [1.68517992E12, 0.18333333333333332], [1.68518058E12, 0.8], [1.68518028E12, 0.13333333333333333], [1.68517998E12, 0.2]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68518034E12, 0.2833333333333333], [1.68518052E12, 0.13333333333333333], [1.68518022E12, 0.23333333333333334], [1.6851804E12, 0.1], [1.68518028E12, 0.4666666666666667], [1.68518046E12, 0.4666666666666667]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68518064E12, 0.016666666666666666], [1.68518034E12, 0.3333333333333333], [1.68518052E12, 0.11666666666666667], [1.68518022E12, 0.2833333333333333], [1.6851807E12, 0.13333333333333333], [1.6851804E12, 0.13333333333333333], [1.68518028E12, 0.36666666666666664], [1.68518076E12, 0.1], [1.68518046E12, 0.48333333333333334]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68518064E12, 0.7666666666666667], [1.68518034E12, 0.15], [1.68518004E12, 0.26666666666666666], [1.6851807E12, 0.6], [1.6851804E12, 0.5333333333333333], [1.6851801E12, 0.13333333333333333], [1.68518076E12, 0.5333333333333333], [1.68518046E12, 0.38333333333333336], [1.68518016E12, 0.2833333333333333], [1.68518052E12, 0.5833333333333334], [1.68518022E12, 0.21666666666666667], [1.68517992E12, 0.13333333333333333], [1.68518058E12, 0.7166666666666667], [1.68518028E12, 0.06666666666666667], [1.68517998E12, 0.16666666666666666]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68518064E12, 0.016666666666666666], [1.68518034E12, 0.5166666666666667], [1.68518052E12, 0.2833333333333333], [1.68518022E12, 0.3], [1.6851807E12, 0.13333333333333333], [1.6851804E12, 0.23333333333333334], [1.68518028E12, 0.5], [1.68518076E12, 0.1], [1.68518046E12, 0.6833333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68518064E12, 0.75], [1.68518034E12, 0.35], [1.68518004E12, 0.18333333333333332], [1.6851807E12, 0.5833333333333334], [1.6851804E12, 0.5666666666666667], [1.6851801E12, 0.21666666666666667], [1.68518076E12, 0.5], [1.68518046E12, 0.5833333333333334], [1.68518016E12, 0.26666666666666666], [1.68518052E12, 0.7666666666666667], [1.68518022E12, 0.23333333333333334], [1.68517992E12, 0.11666666666666667], [1.68518058E12, 0.8], [1.68518028E12, 0.16666666666666666], [1.68517998E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68518076E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68517992E12, "maxY": 2.35, "series": [{"data": [[1.68518064E12, 2.35], [1.68518034E12, 0.9166666666666666], [1.68518004E12, 0.6333333333333333], [1.6851807E12, 1.9166666666666667], [1.6851804E12, 1.7], [1.6851801E12, 0.6333333333333333], [1.68518076E12, 1.2833333333333334], [1.68518046E12, 1.6333333333333333], [1.68518016E12, 0.8333333333333334], [1.68518052E12, 2.1166666666666667], [1.68518022E12, 0.7333333333333333], [1.68517992E12, 0.43333333333333335], [1.68518058E12, 2.316666666666667], [1.68518028E12, 0.36666666666666664], [1.68517998E12, 0.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68518064E12, 0.03333333333333333], [1.68518034E12, 1.1333333333333333], [1.68518052E12, 0.5333333333333333], [1.68518022E12, 0.8166666666666667], [1.6851807E12, 0.26666666666666666], [1.6851804E12, 0.4666666666666667], [1.68518028E12, 1.3333333333333333], [1.68518076E12, 0.2], [1.68518046E12, 1.6333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68518076E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

