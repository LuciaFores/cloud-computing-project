/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "maxY": 60533.0, "series": [{"data": [[0.0, 241.0], [0.1, 241.0], [0.2, 241.0], [0.3, 266.0], [0.4, 266.0], [0.5, 339.0], [0.6, 339.0], [0.7, 340.0], [0.8, 340.0], [0.9, 340.0], [1.0, 340.0], [1.1, 341.0], [1.2, 341.0], [1.3, 341.0], [1.4, 341.0], [1.5, 341.0], [1.6, 341.0], [1.7, 341.0], [1.8, 341.0], [1.9, 342.0], [2.0, 342.0], [2.1, 342.0], [2.2, 342.0], [2.3, 343.0], [2.4, 343.0], [2.5, 343.0], [2.6, 343.0], [2.7, 344.0], [2.8, 344.0], [2.9, 344.0], [3.0, 344.0], [3.1, 344.0], [3.2, 344.0], [3.3, 344.0], [3.4, 344.0], [3.5, 345.0], [3.6, 345.0], [3.7, 345.0], [3.8, 345.0], [3.9, 345.0], [4.0, 345.0], [4.1, 345.0], [4.2, 345.0], [4.3, 345.0], [4.4, 346.0], [4.5, 346.0], [4.6, 346.0], [4.7, 346.0], [4.8, 347.0], [4.9, 347.0], [5.0, 347.0], [5.1, 347.0], [5.2, 347.0], [5.3, 347.0], [5.4, 347.0], [5.5, 347.0], [5.6, 348.0], [5.7, 348.0], [5.8, 348.0], [5.9, 348.0], [6.0, 349.0], [6.1, 349.0], [6.2, 350.0], [6.3, 350.0], [6.4, 350.0], [6.5, 350.0], [6.6, 350.0], [6.7, 350.0], [6.8, 350.0], [6.9, 350.0], [7.0, 351.0], [7.1, 351.0], [7.2, 351.0], [7.3, 352.0], [7.4, 352.0], [7.5, 352.0], [7.6, 352.0], [7.7, 352.0], [7.8, 352.0], [7.9, 353.0], [8.0, 353.0], [8.1, 353.0], [8.2, 353.0], [8.3, 353.0], [8.4, 353.0], [8.5, 355.0], [8.6, 355.0], [8.7, 355.0], [8.8, 355.0], [8.9, 356.0], [9.0, 356.0], [9.1, 356.0], [9.2, 356.0], [9.3, 357.0], [9.4, 357.0], [9.5, 357.0], [9.6, 357.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 357.0], [10.3, 358.0], [10.4, 358.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 358.0], [10.9, 358.0], [11.0, 358.0], [11.1, 358.0], [11.2, 358.0], [11.3, 358.0], [11.4, 360.0], [11.5, 360.0], [11.6, 360.0], [11.7, 360.0], [11.8, 360.0], [11.9, 360.0], [12.0, 360.0], [12.1, 360.0], [12.2, 361.0], [12.3, 361.0], [12.4, 361.0], [12.5, 361.0], [12.6, 361.0], [12.7, 361.0], [12.8, 362.0], [12.9, 362.0], [13.0, 362.0], [13.1, 362.0], [13.2, 362.0], [13.3, 362.0], [13.4, 363.0], [13.5, 363.0], [13.6, 365.0], [13.7, 365.0], [13.8, 365.0], [13.9, 365.0], [14.0, 365.0], [14.1, 365.0], [14.2, 365.0], [14.3, 365.0], [14.4, 365.0], [14.5, 366.0], [14.6, 366.0], [14.7, 368.0], [14.8, 368.0], [14.9, 372.0], [15.0, 372.0], [15.1, 373.0], [15.2, 373.0], [15.3, 374.0], [15.4, 374.0], [15.5, 377.0], [15.6, 377.0], [15.7, 378.0], [15.8, 378.0], [15.9, 379.0], [16.0, 379.0], [16.1, 380.0], [16.2, 380.0], [16.3, 382.0], [16.4, 382.0], [16.5, 384.0], [16.6, 384.0], [16.7, 387.0], [16.8, 387.0], [16.9, 388.0], [17.0, 388.0], [17.1, 388.0], [17.2, 388.0], [17.3, 391.0], [17.4, 391.0], [17.5, 393.0], [17.6, 393.0], [17.7, 393.0], [17.8, 393.0], [17.9, 393.0], [18.0, 393.0], [18.1, 393.0], [18.2, 393.0], [18.3, 393.0], [18.4, 394.0], [18.5, 394.0], [18.6, 397.0], [18.7, 397.0], [18.8, 402.0], [18.9, 402.0], [19.0, 403.0], [19.1, 403.0], [19.2, 404.0], [19.3, 404.0], [19.4, 404.0], [19.5, 404.0], [19.6, 409.0], [19.7, 409.0], [19.8, 413.0], [19.9, 413.0], [20.0, 428.0], [20.1, 428.0], [20.2, 440.0], [20.3, 440.0], [20.4, 447.0], [20.5, 447.0], [20.6, 469.0], [20.7, 469.0], [20.8, 473.0], [20.9, 473.0], [21.0, 485.0], [21.1, 485.0], [21.2, 511.0], [21.3, 511.0], [21.4, 543.0], [21.5, 543.0], [21.6, 543.0], [21.7, 544.0], [21.8, 544.0], [21.9, 582.0], [22.0, 582.0], [22.1, 895.0], [22.2, 895.0], [22.3, 1007.0], [22.4, 1007.0], [22.5, 1221.0], [22.6, 1221.0], [22.7, 1415.0], [22.8, 1415.0], [22.9, 1438.0], [23.0, 1438.0], [23.1, 2787.0], [23.2, 2787.0], [23.3, 3776.0], [23.4, 3776.0], [23.5, 4559.0], [23.6, 4559.0], [23.7, 4673.0], [23.8, 4673.0], [23.9, 4768.0], [24.0, 4768.0], [24.1, 4800.0], [24.2, 4800.0], [24.3, 4863.0], [24.4, 4863.0], [24.5, 4894.0], [24.6, 4894.0], [24.7, 4894.0], [24.8, 4894.0], [24.9, 5253.0], [25.0, 5253.0], [25.1, 5253.0], [25.2, 5270.0], [25.3, 5270.0], [25.4, 5294.0], [25.5, 5294.0], [25.6, 5300.0], [25.7, 5300.0], [25.8, 5326.0], [25.9, 5326.0], [26.0, 5327.0], [26.1, 5327.0], [26.2, 5354.0], [26.3, 5354.0], [26.4, 5361.0], [26.5, 5361.0], [26.6, 5373.0], [26.7, 5373.0], [26.8, 5388.0], [26.9, 5388.0], [27.0, 5398.0], [27.1, 5398.0], [27.2, 5401.0], [27.3, 5401.0], [27.4, 5423.0], [27.5, 5423.0], [27.6, 5436.0], [27.7, 5436.0], [27.8, 5442.0], [27.9, 5442.0], [28.0, 5452.0], [28.1, 5452.0], [28.2, 5475.0], [28.3, 5475.0], [28.4, 5510.0], [28.5, 5510.0], [28.6, 5510.0], [28.7, 5553.0], [28.8, 5553.0], [28.9, 5597.0], [29.0, 5597.0], [29.1, 5649.0], [29.2, 5649.0], [29.3, 5730.0], [29.4, 5730.0], [29.5, 5738.0], [29.6, 5738.0], [29.7, 5767.0], [29.8, 5767.0], [29.9, 5786.0], [30.0, 5786.0], [30.1, 5805.0], [30.2, 5805.0], [30.3, 5826.0], [30.4, 5826.0], [30.5, 5833.0], [30.6, 5833.0], [30.7, 5838.0], [30.8, 5838.0], [30.9, 5849.0], [31.0, 5849.0], [31.1, 5850.0], [31.2, 5850.0], [31.3, 5896.0], [31.4, 5896.0], [31.5, 6007.0], [31.6, 6007.0], [31.7, 6017.0], [31.8, 6017.0], [31.9, 6019.0], [32.0, 6019.0], [32.1, 6109.0], [32.2, 6109.0], [32.3, 6109.0], [32.4, 6311.0], [32.5, 6311.0], [32.6, 6353.0], [32.7, 6353.0], [32.8, 6468.0], [32.9, 6468.0], [33.0, 6511.0], [33.1, 6511.0], [33.2, 6619.0], [33.3, 6619.0], [33.4, 6714.0], [33.5, 6714.0], [33.6, 6908.0], [33.7, 6908.0], [33.8, 6936.0], [33.9, 6936.0], [34.0, 7315.0], [34.1, 7315.0], [34.2, 7500.0], [34.3, 7500.0], [34.4, 7542.0], [34.5, 7542.0], [34.6, 7543.0], [34.7, 7543.0], [34.8, 7655.0], [34.9, 7655.0], [35.0, 7713.0], [35.1, 7713.0], [35.2, 7842.0], [35.3, 7842.0], [35.4, 7933.0], [35.5, 7933.0], [35.6, 7940.0], [35.7, 7940.0], [35.8, 7940.0], [35.9, 8328.0], [36.0, 8328.0], [36.1, 8409.0], [36.2, 8409.0], [36.3, 8425.0], [36.4, 8425.0], [36.5, 8534.0], [36.6, 8534.0], [36.7, 8570.0], [36.8, 8570.0], [36.9, 8744.0], [37.0, 8744.0], [37.1, 8745.0], [37.2, 8745.0], [37.3, 8941.0], [37.4, 8941.0], [37.5, 9016.0], [37.6, 9016.0], [37.7, 9035.0], [37.8, 9035.0], [37.9, 9107.0], [38.0, 9107.0], [38.1, 9208.0], [38.2, 9208.0], [38.3, 9265.0], [38.4, 9265.0], [38.5, 9286.0], [38.6, 9286.0], [38.7, 9303.0], [38.8, 9303.0], [38.9, 9349.0], [39.0, 9349.0], [39.1, 9378.0], [39.2, 9378.0], [39.3, 9378.0], [39.4, 9404.0], [39.5, 9404.0], [39.6, 9406.0], [39.7, 9406.0], [39.8, 9775.0], [39.9, 9775.0], [40.0, 9797.0], [40.1, 9797.0], [40.2, 9982.0], [40.3, 9982.0], [40.4, 10058.0], [40.5, 10058.0], [40.6, 10098.0], [40.7, 10098.0], [40.8, 10213.0], [40.9, 10213.0], [41.0, 10244.0], [41.1, 10244.0], [41.2, 10357.0], [41.3, 10357.0], [41.4, 10375.0], [41.5, 10375.0], [41.6, 10404.0], [41.7, 10404.0], [41.8, 10574.0], [41.9, 10574.0], [42.0, 10579.0], [42.1, 10579.0], [42.2, 10776.0], [42.3, 10776.0], [42.4, 10814.0], [42.5, 10814.0], [42.6, 10872.0], [42.7, 10872.0], [42.8, 11022.0], [42.9, 11022.0], [43.0, 11022.0], [43.1, 11223.0], [43.2, 11223.0], [43.3, 11291.0], [43.4, 11291.0], [43.5, 11312.0], [43.6, 11312.0], [43.7, 11344.0], [43.8, 11344.0], [43.9, 11452.0], [44.0, 11452.0], [44.1, 11476.0], [44.2, 11476.0], [44.3, 11510.0], [44.4, 11510.0], [44.5, 11516.0], [44.6, 11516.0], [44.7, 11532.0], [44.8, 11532.0], [44.9, 11599.0], [45.0, 11599.0], [45.1, 11909.0], [45.2, 11909.0], [45.3, 11938.0], [45.4, 11938.0], [45.5, 11975.0], [45.6, 11975.0], [45.7, 12127.0], [45.8, 12127.0], [45.9, 12157.0], [46.0, 12157.0], [46.1, 12183.0], [46.2, 12183.0], [46.3, 12375.0], [46.4, 12375.0], [46.5, 12375.0], [46.6, 12479.0], [46.7, 12479.0], [46.8, 12482.0], [46.9, 12482.0], [47.0, 12560.0], [47.1, 12560.0], [47.2, 12706.0], [47.3, 12706.0], [47.4, 12709.0], [47.5, 12709.0], [47.6, 12864.0], [47.7, 12864.0], [47.8, 12976.0], [47.9, 12976.0], [48.0, 13037.0], [48.1, 13037.0], [48.2, 13233.0], [48.3, 13233.0], [48.4, 13283.0], [48.5, 13283.0], [48.6, 13353.0], [48.7, 13353.0], [48.8, 13434.0], [48.9, 13434.0], [49.0, 13569.0], [49.1, 13569.0], [49.2, 13589.0], [49.3, 13589.0], [49.4, 13701.0], [49.5, 13701.0], [49.6, 13749.0], [49.7, 13749.0], [49.8, 13861.0], [49.9, 13861.0], [50.0, 13924.0], [50.1, 13924.0], [50.2, 13924.0], [50.3, 13951.0], [50.4, 13951.0], [50.5, 14149.0], [50.6, 14149.0], [50.7, 14236.0], [50.8, 14236.0], [50.9, 14243.0], [51.0, 14243.0], [51.1, 14457.0], [51.2, 14457.0], [51.3, 14601.0], [51.4, 14601.0], [51.5, 14775.0], [51.6, 14775.0], [51.7, 14892.0], [51.8, 14892.0], [51.9, 14925.0], [52.0, 14925.0], [52.1, 15261.0], [52.2, 15261.0], [52.3, 15418.0], [52.4, 15418.0], [52.5, 15470.0], [52.6, 15470.0], [52.7, 15483.0], [52.8, 15483.0], [52.9, 15551.0], [53.0, 15551.0], [53.1, 15628.0], [53.2, 15628.0], [53.3, 15720.0], [53.4, 15720.0], [53.5, 15758.0], [53.6, 15758.0], [53.7, 15758.0], [53.8, 15833.0], [53.9, 15833.0], [54.0, 16163.0], [54.1, 16163.0], [54.2, 16218.0], [54.3, 16218.0], [54.4, 16445.0], [54.5, 16445.0], [54.6, 16514.0], [54.7, 16514.0], [54.8, 16828.0], [54.9, 16828.0], [55.0, 16883.0], [55.1, 16883.0], [55.2, 17108.0], [55.3, 17108.0], [55.4, 17164.0], [55.5, 17164.0], [55.6, 17216.0], [55.7, 17216.0], [55.8, 17241.0], [55.9, 17241.0], [56.0, 17534.0], [56.1, 17534.0], [56.2, 17558.0], [56.3, 17558.0], [56.4, 17639.0], [56.5, 17639.0], [56.6, 17695.0], [56.7, 17695.0], [56.8, 17827.0], [56.9, 17827.0], [57.0, 18082.0], [57.1, 18082.0], [57.2, 18082.0], [57.3, 18405.0], [57.4, 18405.0], [57.5, 18515.0], [57.6, 18515.0], [57.7, 18779.0], [57.8, 18779.0], [57.9, 18803.0], [58.0, 18803.0], [58.1, 19393.0], [58.2, 19393.0], [58.3, 19403.0], [58.4, 19403.0], [58.5, 19552.0], [58.6, 19552.0], [58.7, 19690.0], [58.8, 19690.0], [58.9, 19760.0], [59.0, 19760.0], [59.1, 19937.0], [59.2, 19937.0], [59.3, 20330.0], [59.4, 20330.0], [59.5, 20671.0], [59.6, 20671.0], [59.7, 20699.0], [59.8, 20699.0], [59.9, 20789.0], [60.0, 20789.0], [60.1, 20833.0], [60.2, 20833.0], [60.3, 20891.0], [60.4, 20891.0], [60.5, 21217.0], [60.6, 21217.0], [60.7, 21336.0], [60.8, 21336.0], [60.9, 21336.0], [61.0, 21344.0], [61.1, 21344.0], [61.2, 21362.0], [61.3, 21362.0], [61.4, 21438.0], [61.5, 21438.0], [61.6, 21440.0], [61.7, 21440.0], [61.8, 21862.0], [61.9, 21862.0], [62.0, 21959.0], [62.1, 21959.0], [62.2, 22011.0], [62.3, 22011.0], [62.4, 22107.0], [62.5, 22107.0], [62.6, 22361.0], [62.7, 22361.0], [62.8, 22514.0], [62.9, 22514.0], [63.0, 22584.0], [63.1, 22584.0], [63.2, 22592.0], [63.3, 22592.0], [63.4, 22699.0], [63.5, 22699.0], [63.6, 22876.0], [63.7, 22876.0], [63.8, 22960.0], [63.9, 22960.0], [64.0, 23355.0], [64.1, 23355.0], [64.2, 23369.0], [64.3, 23369.0], [64.4, 23369.0], [64.5, 23399.0], [64.6, 23399.0], [64.7, 23446.0], [64.8, 23446.0], [64.9, 23782.0], [65.0, 23782.0], [65.1, 23834.0], [65.2, 23834.0], [65.3, 24065.0], [65.4, 24065.0], [65.5, 24097.0], [65.6, 24097.0], [65.7, 24287.0], [65.8, 24287.0], [65.9, 24482.0], [66.0, 24482.0], [66.1, 24541.0], [66.2, 24541.0], [66.3, 25014.0], [66.4, 25014.0], [66.5, 25223.0], [66.6, 25223.0], [66.7, 25993.0], [66.8, 25993.0], [66.9, 26337.0], [67.0, 26337.0], [67.1, 26366.0], [67.2, 26366.0], [67.3, 26579.0], [67.4, 26579.0], [67.5, 27168.0], [67.6, 27168.0], [67.7, 27650.0], [67.8, 27650.0], [67.9, 27650.0], [68.0, 27903.0], [68.1, 27903.0], [68.2, 28079.0], [68.3, 28079.0], [68.4, 28137.0], [68.5, 28137.0], [68.6, 28377.0], [68.7, 28377.0], [68.8, 28681.0], [68.9, 28681.0], [69.0, 29382.0], [69.1, 29382.0], [69.2, 29609.0], [69.3, 29609.0], [69.4, 29744.0], [69.5, 29744.0], [69.6, 30068.0], [69.7, 30068.0], [69.8, 30621.0], [69.9, 30621.0], [70.0, 30717.0], [70.1, 30717.0], [70.2, 31261.0], [70.3, 31261.0], [70.4, 31543.0], [70.5, 31543.0], [70.6, 31792.0], [70.7, 31792.0], [70.8, 32575.0], [70.9, 32575.0], [71.0, 32662.0], [71.1, 32662.0], [71.2, 33021.0], [71.3, 33021.0], [71.4, 33477.0], [71.5, 33477.0], [71.6, 33477.0], [71.7, 33592.0], [71.8, 33592.0], [71.9, 33848.0], [72.0, 33848.0], [72.1, 33911.0], [72.2, 33911.0], [72.3, 33994.0], [72.4, 33994.0], [72.5, 34082.0], [72.6, 34082.0], [72.7, 34093.0], [72.8, 34093.0], [72.9, 34745.0], [73.0, 34745.0], [73.1, 34836.0], [73.2, 34836.0], [73.3, 35074.0], [73.4, 35074.0], [73.5, 35489.0], [73.6, 35489.0], [73.7, 35845.0], [73.8, 35845.0], [73.9, 35972.0], [74.0, 35972.0], [74.1, 36036.0], [74.2, 36036.0], [74.3, 36485.0], [74.4, 36485.0], [74.5, 37086.0], [74.6, 37086.0], [74.7, 37364.0], [74.8, 37364.0], [74.9, 37615.0], [75.0, 37615.0], [75.1, 37615.0], [75.2, 37864.0], [75.3, 37864.0], [75.4, 38002.0], [75.5, 38002.0], [75.6, 38758.0], [75.7, 38758.0], [75.8, 38803.0], [75.9, 38803.0], [76.0, 38814.0], [76.1, 38814.0], [76.2, 38898.0], [76.3, 38898.0], [76.4, 38992.0], [76.5, 38992.0], [76.6, 39234.0], [76.7, 39234.0], [76.8, 39837.0], [76.9, 39837.0], [77.0, 40017.0], [77.1, 40017.0], [77.2, 40058.0], [77.3, 40058.0], [77.4, 40382.0], [77.5, 40382.0], [77.6, 40604.0], [77.7, 40604.0], [77.8, 40797.0], [77.9, 40797.0], [78.0, 41786.0], [78.1, 41786.0], [78.2, 42444.0], [78.3, 42444.0], [78.4, 43166.0], [78.5, 43166.0], [78.6, 43166.0], [78.7, 43261.0], [78.8, 43261.0], [78.9, 43266.0], [79.0, 43266.0], [79.1, 43515.0], [79.2, 43515.0], [79.3, 43515.0], [79.4, 43515.0], [79.5, 43658.0], [79.6, 43658.0], [79.7, 43782.0], [79.8, 43782.0], [79.9, 44245.0], [80.0, 44245.0], [80.1, 44349.0], [80.2, 44349.0], [80.3, 44384.0], [80.4, 44384.0], [80.5, 44424.0], [80.6, 44424.0], [80.7, 44465.0], [80.8, 44465.0], [80.9, 44559.0], [81.0, 44559.0], [81.1, 44678.0], [81.2, 44678.0], [81.3, 44900.0], [81.4, 44900.0], [81.5, 45016.0], [81.6, 45016.0], [81.7, 45034.0], [81.8, 45034.0], [81.9, 45406.0], [82.0, 45406.0], [82.1, 45478.0], [82.2, 45478.0], [82.3, 45478.0], [82.4, 45557.0], [82.5, 45557.0], [82.6, 45570.0], [82.7, 45570.0], [82.8, 45703.0], [82.9, 45703.0], [83.0, 45893.0], [83.1, 45893.0], [83.2, 45923.0], [83.3, 45923.0], [83.4, 45947.0], [83.5, 45947.0], [83.6, 46553.0], [83.7, 46553.0], [83.8, 46630.0], [83.9, 46630.0], [84.0, 47511.0], [84.1, 47511.0], [84.2, 47587.0], [84.3, 47587.0], [84.4, 47900.0], [84.5, 47900.0], [84.6, 48000.0], [84.7, 48000.0], [84.8, 48043.0], [84.9, 48043.0], [85.0, 48046.0], [85.1, 48046.0], [85.2, 48188.0], [85.3, 48188.0], [85.4, 48278.0], [85.5, 48278.0], [85.6, 48302.0], [85.7, 48302.0], [85.8, 48302.0], [85.9, 48323.0], [86.0, 48323.0], [86.1, 48342.0], [86.2, 48342.0], [86.3, 48451.0], [86.4, 48451.0], [86.5, 48477.0], [86.6, 48477.0], [86.7, 48556.0], [86.8, 48556.0], [86.9, 48559.0], [87.0, 48559.0], [87.1, 48617.0], [87.2, 48617.0], [87.3, 48671.0], [87.4, 48671.0], [87.5, 49484.0], [87.6, 49484.0], [87.7, 50283.0], [87.8, 50283.0], [87.9, 50626.0], [88.0, 50626.0], [88.1, 50723.0], [88.2, 50723.0], [88.3, 51251.0], [88.4, 51251.0], [88.5, 51335.0], [88.6, 51335.0], [88.7, 51840.0], [88.8, 51840.0], [88.9, 52027.0], [89.0, 52027.0], [89.1, 52082.0], [89.2, 52082.0], [89.3, 52082.0], [89.4, 52108.0], [89.5, 52108.0], [89.6, 52334.0], [89.7, 52334.0], [89.8, 52399.0], [89.9, 52399.0], [90.0, 52512.0], [90.1, 52512.0], [90.2, 52581.0], [90.3, 52581.0], [90.4, 52724.0], [90.5, 52724.0], [90.6, 52853.0], [90.7, 52853.0], [90.8, 53138.0], [90.9, 53138.0], [91.0, 53372.0], [91.1, 53372.0], [91.2, 53829.0], [91.3, 53829.0], [91.4, 54808.0], [91.5, 54808.0], [91.6, 55256.0], [91.7, 55256.0], [91.8, 55379.0], [91.9, 55379.0], [92.0, 55485.0], [92.1, 55485.0], [92.2, 55570.0], [92.3, 55570.0], [92.4, 55731.0], [92.5, 55731.0], [92.6, 55859.0], [92.7, 55859.0], [92.8, 56088.0], [92.9, 56088.0], [93.0, 56088.0], [93.1, 56169.0], [93.2, 56169.0], [93.3, 57864.0], [93.4, 57864.0], [93.5, 58014.0], [93.6, 58014.0], [93.7, 58096.0], [93.8, 58096.0], [93.9, 58181.0], [94.0, 58181.0], [94.1, 58200.0], [94.2, 58200.0], [94.3, 58486.0], [94.4, 58486.0], [94.5, 58583.0], [94.6, 58583.0], [94.7, 58665.0], [94.8, 58665.0], [94.9, 58719.0], [95.0, 58719.0], [95.1, 58910.0], [95.2, 58910.0], [95.3, 59199.0], [95.4, 59199.0], [95.5, 59252.0], [95.6, 59252.0], [95.7, 59364.0], [95.8, 59364.0], [95.9, 59575.0], [96.0, 59575.0], [96.1, 59648.0], [96.2, 59648.0], [96.3, 60167.0], [96.4, 60167.0], [96.5, 60167.0], [96.6, 60355.0], [96.7, 60355.0], [96.8, 60358.0], [96.9, 60358.0], [97.0, 60360.0], [97.1, 60360.0], [97.2, 60360.0], [97.3, 60360.0], [97.4, 60361.0], [97.5, 60361.0], [97.6, 60363.0], [97.7, 60363.0], [97.8, 60369.0], [97.9, 60369.0], [98.0, 60375.0], [98.1, 60375.0], [98.2, 60391.0], [98.3, 60391.0], [98.4, 60407.0], [98.5, 60407.0], [98.6, 60438.0], [98.7, 60438.0], [98.8, 60446.0], [98.9, 60446.0], [99.0, 60463.0], [99.1, 60463.0], [99.2, 60473.0], [99.3, 60473.0], [99.4, 60493.0], [99.5, 60493.0], [99.6, 60528.0], [99.7, 60528.0], [99.8, 60533.0], [99.9, 60533.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 114.0], [0.1, 114.0], [0.2, 114.0], [0.3, 115.0], [0.4, 115.0], [0.5, 115.0], [0.6, 115.0], [0.7, 115.0], [0.8, 115.0], [0.9, 115.0], [1.0, 115.0], [1.1, 115.0], [1.2, 115.0], [1.3, 115.0], [1.4, 115.0], [1.5, 115.0], [1.6, 115.0], [1.7, 116.0], [1.8, 116.0], [1.9, 116.0], [2.0, 116.0], [2.1, 116.0], [2.2, 116.0], [2.3, 116.0], [2.4, 116.0], [2.5, 116.0], [2.6, 116.0], [2.7, 116.0], [2.8, 116.0], [2.9, 116.0], [3.0, 116.0], [3.1, 116.0], [3.2, 116.0], [3.3, 116.0], [3.4, 116.0], [3.5, 116.0], [3.6, 116.0], [3.7, 116.0], [3.8, 116.0], [3.9, 116.0], [4.0, 117.0], [4.1, 117.0], [4.2, 117.0], [4.3, 117.0], [4.4, 117.0], [4.5, 117.0], [4.6, 117.0], [4.7, 117.0], [4.8, 117.0], [4.9, 117.0], [5.0, 117.0], [5.1, 117.0], [5.2, 117.0], [5.3, 117.0], [5.4, 117.0], [5.5, 117.0], [5.6, 118.0], [5.7, 118.0], [5.8, 118.0], [5.9, 118.0], [6.0, 118.0], [6.1, 118.0], [6.2, 118.0], [6.3, 118.0], [6.4, 118.0], [6.5, 118.0], [6.6, 118.0], [6.7, 119.0], [6.8, 119.0], [6.9, 119.0], [7.0, 119.0], [7.1, 119.0], [7.2, 119.0], [7.3, 119.0], [7.4, 119.0], [7.5, 119.0], [7.6, 119.0], [7.7, 119.0], [7.8, 119.0], [7.9, 119.0], [8.0, 119.0], [8.1, 120.0], [8.2, 120.0], [8.3, 120.0], [8.4, 120.0], [8.5, 120.0], [8.6, 120.0], [8.7, 120.0], [8.8, 120.0], [8.9, 120.0], [9.0, 120.0], [9.1, 120.0], [9.2, 120.0], [9.3, 120.0], [9.4, 120.0], [9.5, 120.0], [9.6, 120.0], [9.7, 120.0], [9.8, 120.0], [9.9, 120.0], [10.0, 120.0], [10.1, 120.0], [10.2, 120.0], [10.3, 120.0], [10.4, 120.0], [10.5, 120.0], [10.6, 120.0], [10.7, 120.0], [10.8, 121.0], [10.9, 121.0], [11.0, 121.0], [11.1, 121.0], [11.2, 121.0], [11.3, 121.0], [11.4, 121.0], [11.5, 121.0], [11.6, 121.0], [11.7, 121.0], [11.8, 121.0], [11.9, 121.0], [12.0, 121.0], [12.1, 121.0], [12.2, 121.0], [12.3, 121.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 121.0], [13.2, 121.0], [13.3, 121.0], [13.4, 121.0], [13.5, 121.0], [13.6, 121.0], [13.7, 122.0], [13.8, 122.0], [13.9, 122.0], [14.0, 122.0], [14.1, 122.0], [14.2, 122.0], [14.3, 122.0], [14.4, 122.0], [14.5, 122.0], [14.6, 122.0], [14.7, 122.0], [14.8, 122.0], [14.9, 122.0], [15.0, 122.0], [15.1, 122.0], [15.2, 122.0], [15.3, 122.0], [15.4, 122.0], [15.5, 123.0], [15.6, 123.0], [15.7, 123.0], [15.8, 123.0], [15.9, 123.0], [16.0, 123.0], [16.1, 123.0], [16.2, 123.0], [16.3, 123.0], [16.4, 123.0], [16.5, 123.0], [16.6, 124.0], [16.7, 124.0], [16.8, 124.0], [16.9, 124.0], [17.0, 124.0], [17.1, 124.0], [17.2, 124.0], [17.3, 124.0], [17.4, 124.0], [17.5, 124.0], [17.6, 125.0], [17.7, 125.0], [17.8, 125.0], [17.9, 125.0], [18.0, 125.0], [18.1, 125.0], [18.2, 125.0], [18.3, 125.0], [18.4, 126.0], [18.5, 126.0], [18.6, 126.0], [18.7, 126.0], [18.8, 126.0], [18.9, 128.0], [19.0, 128.0], [19.1, 129.0], [19.2, 129.0], [19.3, 130.0], [19.4, 130.0], [19.5, 133.0], [19.6, 133.0], [19.7, 134.0], [19.8, 134.0], [19.9, 134.0], [20.0, 134.0], [20.1, 137.0], [20.2, 137.0], [20.3, 139.0], [20.4, 139.0], [20.5, 140.0], [20.6, 140.0], [20.7, 142.0], [20.8, 142.0], [20.9, 142.0], [21.0, 142.0], [21.1, 143.0], [21.2, 143.0], [21.3, 146.0], [21.4, 146.0], [21.5, 153.0], [21.6, 153.0], [21.7, 156.0], [21.8, 156.0], [21.9, 156.0], [22.0, 157.0], [22.1, 157.0], [22.2, 157.0], [22.3, 157.0], [22.4, 582.0], [22.5, 582.0], [22.6, 925.0], [22.7, 925.0], [22.8, 2522.0], [22.9, 2522.0], [23.0, 3538.0], [23.1, 3538.0], [23.2, 4333.0], [23.3, 4333.0], [23.4, 4435.0], [23.5, 4435.0], [23.6, 4515.0], [23.7, 4515.0], [23.8, 4523.0], [23.9, 4523.0], [24.0, 4544.0], [24.1, 4544.0], [24.2, 4633.0], [24.3, 4633.0], [24.4, 4655.0], [24.5, 4655.0], [24.6, 5024.0], [24.7, 5024.0], [24.8, 5044.0], [24.9, 5044.0], [25.0, 5046.0], [25.1, 5046.0], [25.2, 5046.0], [25.3, 5073.0], [25.4, 5073.0], [25.5, 5091.0], [25.6, 5091.0], [25.7, 5098.0], [25.8, 5098.0], [25.9, 5107.0], [26.0, 5107.0], [26.1, 5132.0], [26.2, 5132.0], [26.3, 5134.0], [26.4, 5134.0], [26.5, 5157.0], [26.6, 5157.0], [26.7, 5162.0], [26.8, 5162.0], [26.9, 5170.0], [27.0, 5170.0], [27.1, 5177.0], [27.2, 5177.0], [27.3, 5179.0], [27.4, 5179.0], [27.5, 5188.0], [27.6, 5188.0], [27.7, 5190.0], [27.8, 5190.0], [27.9, 5193.0], [28.0, 5193.0], [28.1, 5244.0], [28.2, 5244.0], [28.3, 5244.0], [28.4, 5275.0], [28.5, 5275.0], [28.6, 5288.0], [28.7, 5288.0], [28.8, 5423.0], [28.9, 5423.0], [29.0, 5483.0], [29.1, 5483.0], [29.2, 5488.0], [29.3, 5488.0], [29.4, 5540.0], [29.5, 5540.0], [29.6, 5545.0], [29.7, 5545.0], [29.8, 5555.0], [29.9, 5555.0], [30.0, 5556.0], [30.1, 5556.0], [30.2, 5568.0], [30.3, 5568.0], [30.4, 5586.0], [30.5, 5586.0], [30.6, 5607.0], [30.7, 5607.0], [30.8, 5621.0], [30.9, 5621.0], [31.0, 5669.0], [31.1, 5669.0], [31.2, 5721.0], [31.3, 5721.0], [31.4, 5721.0], [31.5, 5773.0], [31.6, 5773.0], [31.7, 5782.0], [31.8, 5782.0], [31.9, 5883.0], [32.0, 5883.0], [32.1, 6041.0], [32.2, 6041.0], [32.3, 6114.0], [32.4, 6114.0], [32.5, 6225.0], [32.6, 6225.0], [32.7, 6276.0], [32.8, 6276.0], [32.9, 6371.0], [33.0, 6371.0], [33.1, 6461.0], [33.2, 6461.0], [33.3, 6560.0], [33.4, 6560.0], [33.5, 6669.0], [33.6, 6669.0], [33.7, 6708.0], [33.8, 6708.0], [33.9, 7043.0], [34.0, 7043.0], [34.1, 7072.0], [34.2, 7072.0], [34.3, 7086.0], [34.4, 7086.0], [34.5, 7086.0], [34.6, 7247.0], [34.7, 7247.0], [34.8, 7299.0], [34.9, 7299.0], [35.0, 7313.0], [35.1, 7313.0], [35.2, 7427.0], [35.3, 7427.0], [35.4, 7472.0], [35.5, 7472.0], [35.6, 7696.0], [35.7, 7696.0], [35.8, 7716.0], [35.9, 7716.0], [36.0, 8165.0], [36.1, 8165.0], [36.2, 8304.0], [36.3, 8304.0], [36.4, 8327.0], [36.5, 8327.0], [36.6, 8480.0], [36.7, 8480.0], [36.8, 8505.0], [36.9, 8505.0], [37.0, 8682.0], [37.1, 8682.0], [37.2, 8789.0], [37.3, 8789.0], [37.4, 8808.0], [37.5, 8808.0], [37.6, 8808.0], [37.7, 8847.0], [37.8, 8847.0], [37.9, 8966.0], [38.0, 8966.0], [38.1, 9024.0], [38.2, 9024.0], [38.3, 9058.0], [38.4, 9058.0], [38.5, 9061.0], [38.6, 9061.0], [38.7, 9094.0], [38.8, 9094.0], [38.9, 9121.0], [39.0, 9121.0], [39.1, 9138.0], [39.2, 9138.0], [39.3, 9168.0], [39.4, 9168.0], [39.5, 9526.0], [39.6, 9526.0], [39.7, 9534.0], [39.8, 9534.0], [39.9, 9746.0], [40.0, 9746.0], [40.1, 9819.0], [40.2, 9819.0], [40.3, 9823.0], [40.4, 9823.0], [40.5, 9968.0], [40.6, 9968.0], [40.7, 9968.0], [40.8, 9983.0], [40.9, 9983.0], [41.0, 10117.0], [41.1, 10117.0], [41.2, 10137.0], [41.3, 10137.0], [41.4, 10139.0], [41.5, 10139.0], [41.6, 10338.0], [41.7, 10338.0], [41.8, 10352.0], [41.9, 10352.0], [42.0, 10523.0], [42.1, 10523.0], [42.2, 10571.0], [42.3, 10571.0], [42.4, 10646.0], [42.5, 10646.0], [42.6, 10761.0], [42.7, 10761.0], [42.8, 10985.0], [42.9, 10985.0], [43.0, 11034.0], [43.1, 11034.0], [43.2, 11050.0], [43.3, 11050.0], [43.4, 11083.0], [43.5, 11083.0], [43.6, 11195.0], [43.7, 11195.0], [43.8, 11195.0], [43.9, 11201.0], [44.0, 11201.0], [44.1, 11223.0], [44.2, 11223.0], [44.3, 11259.0], [44.4, 11259.0], [44.5, 11293.0], [44.6, 11293.0], [44.7, 11313.0], [44.8, 11313.0], [44.9, 11681.0], [45.0, 11681.0], [45.1, 11698.0], [45.2, 11698.0], [45.3, 11716.0], [45.4, 11716.0], [45.5, 11899.0], [45.6, 11899.0], [45.7, 11907.0], [45.8, 11907.0], [45.9, 11929.0], [46.0, 11929.0], [46.1, 12147.0], [46.2, 12147.0], [46.3, 12236.0], [46.4, 12236.0], [46.5, 12255.0], [46.6, 12255.0], [46.7, 12321.0], [46.8, 12321.0], [46.9, 12321.0], [47.0, 12466.0], [47.1, 12466.0], [47.2, 12475.0], [47.3, 12475.0], [47.4, 12623.0], [47.5, 12623.0], [47.6, 12740.0], [47.7, 12740.0], [47.8, 12809.0], [47.9, 12809.0], [48.0, 13006.0], [48.1, 13006.0], [48.2, 13030.0], [48.3, 13030.0], [48.4, 13076.0], [48.5, 13076.0], [48.6, 13186.0], [48.7, 13186.0], [48.8, 13270.0], [48.9, 13270.0], [49.0, 13295.0], [49.1, 13295.0], [49.2, 13464.0], [49.3, 13464.0], [49.4, 13521.0], [49.5, 13521.0], [49.6, 13611.0], [49.7, 13611.0], [49.8, 13693.0], [49.9, 13693.0], [50.0, 13693.0], [50.1, 13723.0], [50.2, 13723.0], [50.3, 13909.0], [50.4, 13909.0], [50.5, 13993.0], [50.6, 13993.0], [50.7, 13997.0], [50.8, 13997.0], [50.9, 14201.0], [51.0, 14201.0], [51.1, 14374.0], [51.2, 14374.0], [51.3, 14437.0], [51.4, 14437.0], [51.5, 14665.0], [51.6, 14665.0], [51.7, 14688.0], [51.8, 14688.0], [51.9, 15029.0], [52.0, 15029.0], [52.1, 15186.0], [52.2, 15186.0], [52.3, 15241.0], [52.4, 15241.0], [52.5, 15243.0], [52.6, 15243.0], [52.7, 15323.0], [52.8, 15323.0], [52.9, 15386.0], [53.0, 15386.0], [53.1, 15455.0], [53.2, 15455.0], [53.3, 15455.0], [53.4, 15481.0], [53.5, 15481.0], [53.6, 15563.0], [53.7, 15563.0], [53.8, 15936.0], [53.9, 15936.0], [54.0, 15976.0], [54.1, 15976.0], [54.2, 16140.0], [54.3, 16140.0], [54.4, 16256.0], [54.5, 16256.0], [54.6, 16579.0], [54.7, 16579.0], [54.8, 16643.0], [54.9, 16643.0], [55.0, 16880.0], [55.1, 16880.0], [55.2, 16933.0], [55.3, 16933.0], [55.4, 16986.0], [55.5, 16986.0], [55.6, 16990.0], [55.7, 16990.0], [55.8, 17307.0], [55.9, 17307.0], [56.0, 17319.0], [56.1, 17319.0], [56.2, 17382.0], [56.3, 17382.0], [56.4, 17382.0], [56.5, 17403.0], [56.6, 17403.0], [56.7, 17568.0], [56.8, 17568.0], [56.9, 17771.0], [57.0, 17771.0], [57.1, 18153.0], [57.2, 18153.0], [57.3, 18286.0], [57.4, 18286.0], [57.5, 18550.0], [57.6, 18550.0], [57.7, 18556.0], [57.8, 18556.0], [57.9, 19105.0], [58.0, 19105.0], [58.1, 19175.0], [58.2, 19175.0], [58.3, 19309.0], [58.4, 19309.0], [58.5, 19449.0], [58.6, 19449.0], [58.7, 19535.0], [58.8, 19535.0], [58.9, 19707.0], [59.0, 19707.0], [59.1, 20102.0], [59.2, 20102.0], [59.3, 20351.0], [59.4, 20351.0], [59.5, 20351.0], [59.6, 20438.0], [59.7, 20438.0], [59.8, 20545.0], [59.9, 20545.0], [60.0, 20602.0], [60.1, 20602.0], [60.2, 20660.0], [60.3, 20660.0], [60.4, 20974.0], [60.5, 20974.0], [60.6, 21058.0], [60.7, 21058.0], [60.8, 21089.0], [60.9, 21089.0], [61.0, 21091.0], [61.1, 21091.0], [61.2, 21199.0], [61.3, 21199.0], [61.4, 21210.0], [61.5, 21210.0], [61.6, 21622.0], [61.7, 21622.0], [61.8, 21719.0], [61.9, 21719.0], [62.0, 21719.0], [62.1, 21719.0], [62.2, 21858.0], [62.3, 21858.0], [62.4, 22126.0], [62.5, 22126.0], [62.6, 22126.0], [62.7, 22288.0], [62.8, 22288.0], [62.9, 22302.0], [63.0, 22302.0], [63.1, 22351.0], [63.2, 22351.0], [63.3, 22456.0], [63.4, 22456.0], [63.5, 22643.0], [63.6, 22643.0], [63.7, 22716.0], [63.8, 22716.0], [63.9, 23069.0], [64.0, 23069.0], [64.1, 23123.0], [64.2, 23123.0], [64.3, 23133.0], [64.4, 23133.0], [64.5, 23207.0], [64.6, 23207.0], [64.7, 23459.0], [64.8, 23459.0], [64.9, 23540.0], [65.0, 23540.0], [65.1, 23836.0], [65.2, 23836.0], [65.3, 23871.0], [65.4, 23871.0], [65.5, 23908.0], [65.6, 23908.0], [65.7, 23908.0], [65.8, 24187.0], [65.9, 24187.0], [66.0, 24301.0], [66.1, 24301.0], [66.2, 24762.0], [66.3, 24762.0], [66.4, 24992.0], [66.5, 24992.0], [66.6, 25759.0], [66.7, 25759.0], [66.8, 26106.0], [66.9, 26106.0], [67.0, 26135.0], [67.1, 26135.0], [67.2, 26342.0], [67.3, 26342.0], [67.4, 26940.0], [67.5, 26940.0], [67.6, 27414.0], [67.7, 27414.0], [67.8, 27551.0], [67.9, 27551.0], [68.0, 27844.0], [68.1, 27844.0], [68.2, 27909.0], [68.3, 27909.0], [68.4, 28079.0], [68.5, 28079.0], [68.6, 28455.0], [68.7, 28455.0], [68.8, 28455.0], [68.9, 29153.0], [69.0, 29153.0], [69.1, 29374.0], [69.2, 29374.0], [69.3, 29507.0], [69.4, 29507.0], [69.5, 29807.0], [69.6, 29807.0], [69.7, 30391.0], [69.8, 30391.0], [69.9, 30488.0], [70.0, 30488.0], [70.1, 31017.0], [70.2, 31017.0], [70.3, 31304.0], [70.4, 31304.0], [70.5, 31505.0], [70.6, 31505.0], [70.7, 32282.0], [70.8, 32282.0], [70.9, 32410.0], [71.0, 32410.0], [71.1, 32725.0], [71.2, 32725.0], [71.3, 33215.0], [71.4, 33215.0], [71.5, 33338.0], [71.6, 33338.0], [71.7, 33610.0], [71.8, 33610.0], [71.9, 33610.0], [72.0, 33627.0], [72.1, 33627.0], [72.2, 33733.0], [72.3, 33733.0], [72.4, 33844.0], [72.5, 33844.0], [72.6, 33853.0], [72.7, 33853.0], [72.8, 34515.0], [72.9, 34515.0], [73.0, 34548.0], [73.1, 34548.0], [73.2, 34844.0], [73.3, 34844.0], [73.4, 35235.0], [73.5, 35235.0], [73.6, 35575.0], [73.7, 35575.0], [73.8, 35722.0], [73.9, 35722.0], [74.0, 35796.0], [74.1, 35796.0], [74.2, 35850.0], [74.3, 35850.0], [74.4, 36230.0], [74.5, 36230.0], [74.6, 36856.0], [74.7, 36856.0], [74.8, 37376.0], [74.9, 37376.0], [75.0, 37376.0], [75.1, 37618.0], [75.2, 37618.0], [75.3, 37736.0], [75.4, 37736.0], [75.5, 38528.0], [75.6, 38528.0], [75.7, 38533.0], [75.8, 38533.0], [75.9, 38552.0], [76.0, 38552.0], [76.1, 38633.0], [76.2, 38633.0], [76.3, 38728.0], [76.4, 38728.0], [76.5, 38995.0], [76.6, 38995.0], [76.7, 39611.0], [76.8, 39611.0], [76.9, 39786.0], [77.0, 39786.0], [77.1, 39831.0], [77.2, 39831.0], [77.3, 39976.0], [77.4, 39976.0], [77.5, 40144.0], [77.6, 40144.0], [77.7, 40367.0], [77.8, 40367.0], [77.9, 41548.0], [78.0, 41548.0], [78.1, 42215.0], [78.2, 42215.0], [78.3, 42215.0], [78.4, 42933.0], [78.5, 42933.0], [78.6, 43019.0], [78.7, 43019.0], [78.8, 43024.0], [78.9, 43024.0], [79.0, 43263.0], [79.1, 43263.0], [79.2, 43283.0], [79.3, 43283.0], [79.4, 43424.0], [79.5, 43424.0], [79.6, 43556.0], [79.7, 43556.0], [79.8, 44007.0], [79.9, 44007.0], [80.0, 44110.0], [80.1, 44110.0], [80.2, 44140.0], [80.3, 44140.0], [80.4, 44150.0], [80.5, 44150.0], [80.6, 44195.0], [80.7, 44195.0], [80.8, 44320.0], [80.9, 44320.0], [81.0, 44449.0], [81.1, 44449.0], [81.2, 44674.0], [81.3, 44674.0], [81.4, 44674.0], [81.5, 44777.0], [81.6, 44777.0], [81.7, 44796.0], [81.8, 44796.0], [81.9, 45168.0], [82.0, 45168.0], [82.1, 45241.0], [82.2, 45241.0], [82.3, 45319.0], [82.4, 45319.0], [82.5, 45337.0], [82.6, 45337.0], [82.7, 45463.0], [82.8, 45463.0], [82.9, 45667.0], [83.0, 45667.0], [83.1, 45681.0], [83.2, 45681.0], [83.3, 45692.0], [83.4, 45692.0], [83.5, 46327.0], [83.6, 46327.0], [83.7, 46392.0], [83.8, 46392.0], [83.9, 47281.0], [84.0, 47281.0], [84.1, 47332.0], [84.2, 47332.0], [84.3, 47674.0], [84.4, 47674.0], [84.5, 47674.0], [84.6, 47754.0], [84.7, 47754.0], [84.8, 47806.0], [84.9, 47806.0], [85.0, 47809.0], [85.1, 47809.0], [85.2, 47909.0], [85.3, 47909.0], [85.4, 48052.0], [85.5, 48052.0], [85.6, 48063.0], [85.7, 48063.0], [85.8, 48077.0], [85.9, 48077.0], [86.0, 48116.0], [86.1, 48116.0], [86.2, 48224.0], [86.3, 48224.0], [86.4, 48246.0], [86.5, 48246.0], [86.6, 48314.0], [86.7, 48314.0], [86.8, 48320.0], [86.9, 48320.0], [87.0, 48322.0], [87.1, 48322.0], [87.2, 48378.0], [87.3, 48378.0], [87.4, 49234.0], [87.5, 49234.0], [87.6, 49234.0], [87.7, 50021.0], [87.8, 50021.0], [87.9, 50351.0], [88.0, 50351.0], [88.1, 50488.0], [88.2, 50488.0], [88.3, 50847.0], [88.4, 50847.0], [88.5, 50990.0], [88.6, 50990.0], [88.7, 51023.0], [88.8, 51023.0], [88.9, 51593.0], [89.0, 51593.0], [89.1, 51794.0], [89.2, 51794.0], [89.3, 51840.0], [89.4, 51840.0], [89.5, 52107.0], [89.6, 52107.0], [89.7, 52160.0], [89.8, 52160.0], [89.9, 52285.0], [90.0, 52285.0], [90.1, 52326.0], [90.2, 52326.0], [90.3, 52497.0], [90.4, 52497.0], [90.5, 52625.0], [90.6, 52625.0], [90.7, 52625.0], [90.8, 52890.0], [90.9, 52890.0], [91.0, 53134.0], [91.1, 53134.0], [91.2, 53591.0], [91.3, 53591.0], [91.4, 54583.0], [91.5, 54583.0], [91.6, 55029.0], [91.7, 55029.0], [91.8, 55135.0], [91.9, 55135.0], [92.0, 55208.0], [92.1, 55208.0], [92.2, 55338.0], [92.3, 55338.0], [92.4, 55504.0], [92.5, 55504.0], [92.6, 55631.0], [92.7, 55631.0], [92.8, 55861.0], [92.9, 55861.0], [93.0, 55931.0], [93.1, 55931.0], [93.2, 57628.0], [93.3, 57628.0], [93.4, 57711.0], [93.5, 57711.0], [93.6, 57767.0], [93.7, 57767.0], [93.8, 57767.0], [93.9, 57944.0], [94.0, 57944.0], [94.1, 57962.0], [94.2, 57962.0], [94.3, 58261.0], [94.4, 58261.0], [94.5, 58345.0], [94.6, 58345.0], [94.7, 58442.0], [94.8, 58442.0], [94.9, 58466.0], [95.0, 58466.0], [95.1, 58669.0], [95.2, 58669.0], [95.3, 58909.0], [95.4, 58909.0], [95.5, 59015.0], [95.6, 59015.0], [95.7, 59107.0], [95.8, 59107.0], [95.9, 59317.0], [96.0, 59317.0], [96.1, 59419.0], [96.2, 59419.0], [96.3, 59910.0], [96.4, 59910.0], [96.5, 60115.0], [96.6, 60115.0], [96.7, 60119.0], [96.8, 60119.0], [96.9, 60119.0], [97.0, 60121.0], [97.1, 60121.0], [97.2, 60122.0], [97.3, 60122.0], [97.4, 60122.0], [97.5, 60122.0], [97.6, 60124.0], [97.7, 60124.0], [97.8, 60124.0], [97.9, 60124.0], [98.0, 60125.0], [98.1, 60125.0], [98.2, 60128.0], [98.3, 60128.0], [98.4, 60133.0], [98.5, 60133.0], [98.6, 60182.0], [98.7, 60182.0], [98.8, 60190.0], [98.9, 60190.0], [99.0, 60208.0], [99.1, 60208.0], [99.2, 60238.0], [99.3, 60238.0], [99.4, 60257.0], [99.5, 60257.0], [99.6, 60258.0], [99.7, 60258.0], [99.8, 60298.0], [99.9, 60298.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 223.0], [0.1, 223.0], [0.2, 223.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 224.0], [0.9, 225.0], [1.0, 225.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 225.0], [2.0, 225.0], [2.1, 225.0], [2.2, 225.0], [2.3, 225.0], [2.4, 225.0], [2.5, 225.0], [2.6, 225.0], [2.7, 225.0], [2.8, 225.0], [2.9, 225.0], [3.0, 225.0], [3.1, 225.0], [3.2, 225.0], [3.3, 226.0], [3.4, 226.0], [3.5, 226.0], [3.6, 226.0], [3.7, 226.0], [3.8, 226.0], [3.9, 226.0], [4.0, 226.0], [4.1, 226.0], [4.2, 226.0], [4.3, 226.0], [4.4, 226.0], [4.5, 226.0], [4.6, 226.0], [4.7, 226.0], [4.8, 226.0], [4.9, 226.0], [5.0, 226.0], [5.1, 226.0], [5.2, 226.0], [5.3, 226.0], [5.4, 226.0], [5.5, 226.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 226.0], [6.0, 226.0], [6.1, 226.0], [6.2, 226.0], [6.3, 226.0], [6.4, 226.0], [6.5, 226.0], [6.6, 226.0], [6.7, 226.0], [6.8, 226.0], [6.9, 226.0], [7.0, 226.0], [7.1, 226.0], [7.2, 226.0], [7.3, 226.0], [7.4, 226.0], [7.5, 226.0], [7.6, 226.0], [7.7, 226.0], [7.8, 227.0], [7.9, 227.0], [8.0, 227.0], [8.1, 227.0], [8.2, 227.0], [8.3, 227.0], [8.4, 227.0], [8.5, 227.0], [8.6, 227.0], [8.7, 227.0], [8.8, 227.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 227.0], [9.6, 227.0], [9.7, 227.0], [9.8, 227.0], [9.9, 227.0], [10.0, 227.0], [10.1, 227.0], [10.2, 227.0], [10.3, 227.0], [10.4, 227.0], [10.5, 227.0], [10.6, 227.0], [10.7, 227.0], [10.8, 227.0], [10.9, 227.0], [11.0, 227.0], [11.1, 227.0], [11.2, 227.0], [11.3, 227.0], [11.4, 227.0], [11.5, 227.0], [11.6, 227.0], [11.7, 227.0], [11.8, 227.0], [11.9, 227.0], [12.0, 227.0], [12.1, 227.0], [12.2, 227.0], [12.3, 227.0], [12.4, 227.0], [12.5, 227.0], [12.6, 227.0], [12.7, 227.0], [12.8, 227.0], [12.9, 227.0], [13.0, 227.0], [13.1, 227.0], [13.2, 228.0], [13.3, 228.0], [13.4, 228.0], [13.5, 228.0], [13.6, 228.0], [13.7, 228.0], [13.8, 228.0], [13.9, 228.0], [14.0, 228.0], [14.1, 228.0], [14.2, 228.0], [14.3, 228.0], [14.4, 228.0], [14.5, 228.0], [14.6, 228.0], [14.7, 228.0], [14.8, 228.0], [14.9, 228.0], [15.0, 228.0], [15.1, 228.0], [15.2, 228.0], [15.3, 228.0], [15.4, 228.0], [15.5, 228.0], [15.6, 228.0], [15.7, 228.0], [15.8, 228.0], [15.9, 228.0], [16.0, 228.0], [16.1, 228.0], [16.2, 228.0], [16.3, 228.0], [16.4, 228.0], [16.5, 228.0], [16.6, 228.0], [16.7, 228.0], [16.8, 228.0], [16.9, 228.0], [17.0, 228.0], [17.1, 228.0], [17.2, 228.0], [17.3, 228.0], [17.4, 228.0], [17.5, 228.0], [17.6, 228.0], [17.7, 228.0], [17.8, 228.0], [17.9, 228.0], [18.0, 228.0], [18.1, 228.0], [18.2, 228.0], [18.3, 228.0], [18.4, 228.0], [18.5, 228.0], [18.6, 228.0], [18.7, 228.0], [18.8, 228.0], [18.9, 228.0], [19.0, 228.0], [19.1, 228.0], [19.2, 228.0], [19.3, 228.0], [19.4, 228.0], [19.5, 229.0], [19.6, 229.0], [19.7, 229.0], [19.8, 229.0], [19.9, 229.0], [20.0, 229.0], [20.1, 229.0], [20.2, 229.0], [20.3, 229.0], [20.4, 229.0], [20.5, 229.0], [20.6, 229.0], [20.7, 229.0], [20.8, 229.0], [20.9, 229.0], [21.0, 229.0], [21.1, 229.0], [21.2, 229.0], [21.3, 229.0], [21.4, 229.0], [21.5, 229.0], [21.6, 229.0], [21.7, 229.0], [21.8, 229.0], [21.9, 229.0], [22.0, 229.0], [22.1, 229.0], [22.2, 229.0], [22.3, 229.0], [22.4, 229.0], [22.5, 229.0], [22.6, 229.0], [22.7, 229.0], [22.8, 230.0], [22.9, 230.0], [23.0, 230.0], [23.1, 230.0], [23.2, 230.0], [23.3, 230.0], [23.4, 230.0], [23.5, 230.0], [23.6, 230.0], [23.7, 230.0], [23.8, 230.0], [23.9, 230.0], [24.0, 230.0], [24.1, 230.0], [24.2, 230.0], [24.3, 230.0], [24.4, 230.0], [24.5, 230.0], [24.6, 230.0], [24.7, 230.0], [24.8, 230.0], [24.9, 230.0], [25.0, 230.0], [25.1, 230.0], [25.2, 230.0], [25.3, 230.0], [25.4, 230.0], [25.5, 231.0], [25.6, 231.0], [25.7, 231.0], [25.8, 231.0], [25.9, 231.0], [26.0, 231.0], [26.1, 231.0], [26.2, 231.0], [26.3, 231.0], [26.4, 231.0], [26.5, 231.0], [26.6, 231.0], [26.7, 231.0], [26.8, 231.0], [26.9, 231.0], [27.0, 231.0], [27.1, 231.0], [27.2, 231.0], [27.3, 231.0], [27.4, 231.0], [27.5, 231.0], [27.6, 231.0], [27.7, 231.0], [27.8, 231.0], [27.9, 231.0], [28.0, 231.0], [28.1, 231.0], [28.2, 231.0], [28.3, 232.0], [28.4, 232.0], [28.5, 232.0], [28.6, 232.0], [28.7, 232.0], [28.8, 232.0], [28.9, 232.0], [29.0, 232.0], [29.1, 232.0], [29.2, 232.0], [29.3, 232.0], [29.4, 232.0], [29.5, 232.0], [29.6, 233.0], [29.7, 233.0], [29.8, 233.0], [29.9, 233.0], [30.0, 233.0], [30.1, 233.0], [30.2, 233.0], [30.3, 233.0], [30.4, 233.0], [30.5, 233.0], [30.6, 233.0], [30.7, 233.0], [30.8, 234.0], [30.9, 234.0], [31.0, 234.0], [31.1, 234.0], [31.2, 234.0], [31.3, 234.0], [31.4, 234.0], [31.5, 234.0], [31.6, 234.0], [31.7, 234.0], [31.8, 234.0], [31.9, 234.0], [32.0, 234.0], [32.1, 234.0], [32.2, 235.0], [32.3, 235.0], [32.4, 235.0], [32.5, 235.0], [32.6, 235.0], [32.7, 235.0], [32.8, 235.0], [32.9, 235.0], [33.0, 235.0], [33.1, 235.0], [33.2, 235.0], [33.3, 235.0], [33.4, 235.0], [33.5, 235.0], [33.6, 235.0], [33.7, 235.0], [33.8, 235.0], [33.9, 235.0], [34.0, 235.0], [34.1, 235.0], [34.2, 235.0], [34.3, 235.0], [34.4, 235.0], [34.5, 236.0], [34.6, 236.0], [34.7, 236.0], [34.8, 236.0], [34.9, 236.0], [35.0, 236.0], [35.1, 236.0], [35.2, 236.0], [35.3, 236.0], [35.4, 236.0], [35.5, 236.0], [35.6, 236.0], [35.7, 236.0], [35.8, 236.0], [35.9, 236.0], [36.0, 236.0], [36.1, 236.0], [36.2, 236.0], [36.3, 236.0], [36.4, 236.0], [36.5, 236.0], [36.6, 236.0], [36.7, 236.0], [36.8, 236.0], [36.9, 236.0], [37.0, 236.0], [37.1, 236.0], [37.2, 236.0], [37.3, 236.0], [37.4, 236.0], [37.5, 236.0], [37.6, 236.0], [37.7, 236.0], [37.8, 236.0], [37.9, 236.0], [38.0, 237.0], [38.1, 237.0], [38.2, 237.0], [38.3, 237.0], [38.4, 237.0], [38.5, 237.0], [38.6, 237.0], [38.7, 237.0], [38.8, 237.0], [38.9, 237.0], [39.0, 237.0], [39.1, 237.0], [39.2, 237.0], [39.3, 237.0], [39.4, 237.0], [39.5, 237.0], [39.6, 237.0], [39.7, 237.0], [39.8, 237.0], [39.9, 237.0], [40.0, 237.0], [40.1, 237.0], [40.2, 237.0], [40.3, 237.0], [40.4, 237.0], [40.5, 237.0], [40.6, 237.0], [40.7, 237.0], [40.8, 237.0], [40.9, 237.0], [41.0, 237.0], [41.1, 237.0], [41.2, 238.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 238.0], [41.7, 238.0], [41.8, 238.0], [41.9, 238.0], [42.0, 238.0], [42.1, 238.0], [42.2, 238.0], [42.3, 238.0], [42.4, 238.0], [42.5, 238.0], [42.6, 238.0], [42.7, 238.0], [42.8, 238.0], [42.9, 238.0], [43.0, 238.0], [43.1, 238.0], [43.2, 238.0], [43.3, 238.0], [43.4, 238.0], [43.5, 238.0], [43.6, 238.0], [43.7, 238.0], [43.8, 238.0], [43.9, 238.0], [44.0, 238.0], [44.1, 238.0], [44.2, 238.0], [44.3, 238.0], [44.4, 238.0], [44.5, 238.0], [44.6, 238.0], [44.7, 238.0], [44.8, 238.0], [44.9, 238.0], [45.0, 238.0], [45.1, 238.0], [45.2, 238.0], [45.3, 238.0], [45.4, 238.0], [45.5, 238.0], [45.6, 238.0], [45.7, 238.0], [45.8, 238.0], [45.9, 238.0], [46.0, 238.0], [46.1, 238.0], [46.2, 238.0], [46.3, 238.0], [46.4, 239.0], [46.5, 239.0], [46.6, 239.0], [46.7, 239.0], [46.8, 239.0], [46.9, 239.0], [47.0, 239.0], [47.1, 239.0], [47.2, 239.0], [47.3, 239.0], [47.4, 239.0], [47.5, 239.0], [47.6, 239.0], [47.7, 239.0], [47.8, 239.0], [47.9, 239.0], [48.0, 239.0], [48.1, 239.0], [48.2, 239.0], [48.3, 239.0], [48.4, 239.0], [48.5, 239.0], [48.6, 239.0], [48.7, 239.0], [48.8, 239.0], [48.9, 239.0], [49.0, 239.0], [49.1, 239.0], [49.2, 239.0], [49.3, 239.0], [49.4, 239.0], [49.5, 239.0], [49.6, 239.0], [49.7, 239.0], [49.8, 239.0], [49.9, 239.0], [50.0, 239.0], [50.1, 239.0], [50.2, 239.0], [50.3, 239.0], [50.4, 239.0], [50.5, 239.0], [50.6, 239.0], [50.7, 239.0], [50.8, 239.0], [50.9, 239.0], [51.0, 239.0], [51.1, 239.0], [51.2, 239.0], [51.3, 239.0], [51.4, 239.0], [51.5, 239.0], [51.6, 239.0], [51.7, 239.0], [51.8, 239.0], [51.9, 239.0], [52.0, 239.0], [52.1, 239.0], [52.2, 239.0], [52.3, 240.0], [52.4, 240.0], [52.5, 240.0], [52.6, 240.0], [52.7, 240.0], [52.8, 240.0], [52.9, 240.0], [53.0, 240.0], [53.1, 240.0], [53.2, 240.0], [53.3, 240.0], [53.4, 240.0], [53.5, 240.0], [53.6, 240.0], [53.7, 240.0], [53.8, 240.0], [53.9, 240.0], [54.0, 240.0], [54.1, 240.0], [54.2, 240.0], [54.3, 240.0], [54.4, 240.0], [54.5, 240.0], [54.6, 240.0], [54.7, 240.0], [54.8, 240.0], [54.9, 240.0], [55.0, 240.0], [55.1, 240.0], [55.2, 240.0], [55.3, 240.0], [55.4, 240.0], [55.5, 240.0], [55.6, 241.0], [55.7, 241.0], [55.8, 241.0], [55.9, 241.0], [56.0, 241.0], [56.1, 241.0], [56.2, 241.0], [56.3, 241.0], [56.4, 241.0], [56.5, 241.0], [56.6, 241.0], [56.7, 241.0], [56.8, 241.0], [56.9, 241.0], [57.0, 241.0], [57.1, 241.0], [57.2, 241.0], [57.3, 241.0], [57.4, 241.0], [57.5, 241.0], [57.6, 241.0], [57.7, 241.0], [57.8, 241.0], [57.9, 241.0], [58.0, 242.0], [58.1, 242.0], [58.2, 242.0], [58.3, 242.0], [58.4, 242.0], [58.5, 242.0], [58.6, 242.0], [58.7, 242.0], [58.8, 242.0], [58.9, 242.0], [59.0, 242.0], [59.1, 242.0], [59.2, 242.0], [59.3, 242.0], [59.4, 242.0], [59.5, 242.0], [59.6, 242.0], [59.7, 242.0], [59.8, 242.0], [59.9, 242.0], [60.0, 242.0], [60.1, 243.0], [60.2, 243.0], [60.3, 243.0], [60.4, 243.0], [60.5, 243.0], [60.6, 243.0], [60.7, 243.0], [60.8, 243.0], [60.9, 243.0], [61.0, 243.0], [61.1, 243.0], [61.2, 243.0], [61.3, 243.0], [61.4, 243.0], [61.5, 243.0], [61.6, 243.0], [61.7, 244.0], [61.8, 244.0], [61.9, 244.0], [62.0, 244.0], [62.1, 244.0], [62.2, 244.0], [62.3, 244.0], [62.4, 244.0], [62.5, 244.0], [62.6, 244.0], [62.7, 244.0], [62.8, 245.0], [62.9, 245.0], [63.0, 245.0], [63.1, 245.0], [63.2, 245.0], [63.3, 245.0], [63.4, 246.0], [63.5, 246.0], [63.6, 246.0], [63.7, 246.0], [63.8, 246.0], [63.9, 246.0], [64.0, 246.0], [64.1, 246.0], [64.2, 246.0], [64.3, 246.0], [64.4, 246.0], [64.5, 246.0], [64.6, 247.0], [64.7, 247.0], [64.8, 247.0], [64.9, 247.0], [65.0, 247.0], [65.1, 247.0], [65.2, 247.0], [65.3, 247.0], [65.4, 247.0], [65.5, 247.0], [65.6, 247.0], [65.7, 247.0], [65.8, 248.0], [65.9, 248.0], [66.0, 248.0], [66.1, 248.0], [66.2, 248.0], [66.3, 248.0], [66.4, 248.0], [66.5, 248.0], [66.6, 248.0], [66.7, 248.0], [66.8, 248.0], [66.9, 248.0], [67.0, 248.0], [67.1, 248.0], [67.2, 248.0], [67.3, 249.0], [67.4, 249.0], [67.5, 249.0], [67.6, 249.0], [67.7, 249.0], [67.8, 249.0], [67.9, 249.0], [68.0, 249.0], [68.1, 249.0], [68.2, 249.0], [68.3, 250.0], [68.4, 250.0], [68.5, 250.0], [68.6, 250.0], [68.7, 250.0], [68.8, 250.0], [68.9, 250.0], [69.0, 250.0], [69.1, 250.0], [69.2, 250.0], [69.3, 251.0], [69.4, 251.0], [69.5, 251.0], [69.6, 251.0], [69.7, 252.0], [69.8, 252.0], [69.9, 252.0], [70.0, 252.0], [70.1, 252.0], [70.2, 252.0], [70.3, 252.0], [70.4, 252.0], [70.5, 252.0], [70.6, 252.0], [70.7, 253.0], [70.8, 253.0], [70.9, 253.0], [71.0, 253.0], [71.1, 253.0], [71.2, 253.0], [71.3, 253.0], [71.4, 253.0], [71.5, 253.0], [71.6, 253.0], [71.7, 253.0], [71.8, 253.0], [71.9, 253.0], [72.0, 253.0], [72.1, 253.0], [72.2, 254.0], [72.3, 254.0], [72.4, 254.0], [72.5, 254.0], [72.6, 254.0], [72.7, 254.0], [72.8, 254.0], [72.9, 254.0], [73.0, 255.0], [73.1, 255.0], [73.2, 255.0], [73.3, 255.0], [73.4, 255.0], [73.5, 255.0], [73.6, 255.0], [73.7, 255.0], [73.8, 255.0], [73.9, 255.0], [74.0, 255.0], [74.1, 255.0], [74.2, 255.0], [74.3, 255.0], [74.4, 256.0], [74.5, 256.0], [74.6, 257.0], [74.7, 257.0], [74.8, 257.0], [74.9, 257.0], [75.0, 257.0], [75.1, 257.0], [75.2, 257.0], [75.3, 257.0], [75.4, 257.0], [75.5, 257.0], [75.6, 257.0], [75.7, 258.0], [75.8, 258.0], [75.9, 258.0], [76.0, 258.0], [76.1, 258.0], [76.2, 258.0], [76.3, 259.0], [76.4, 259.0], [76.5, 259.0], [76.6, 259.0], [76.7, 259.0], [76.8, 259.0], [76.9, 259.0], [77.0, 259.0], [77.1, 259.0], [77.2, 259.0], [77.3, 260.0], [77.4, 260.0], [77.5, 260.0], [77.6, 260.0], [77.7, 260.0], [77.8, 260.0], [77.9, 261.0], [78.0, 261.0], [78.1, 261.0], [78.2, 261.0], [78.3, 261.0], [78.4, 261.0], [78.5, 261.0], [78.6, 261.0], [78.7, 261.0], [78.8, 261.0], [78.9, 262.0], [79.0, 262.0], [79.1, 262.0], [79.2, 262.0], [79.3, 262.0], [79.4, 262.0], [79.5, 262.0], [79.6, 262.0], [79.7, 262.0], [79.8, 262.0], [79.9, 262.0], [80.0, 264.0], [80.1, 264.0], [80.2, 264.0], [80.3, 264.0], [80.4, 264.0], [80.5, 264.0], [80.6, 265.0], [80.7, 265.0], [80.8, 265.0], [80.9, 265.0], [81.0, 265.0], [81.1, 265.0], [81.2, 266.0], [81.3, 266.0], [81.4, 266.0], [81.5, 266.0], [81.6, 266.0], [81.7, 266.0], [81.8, 268.0], [81.9, 268.0], [82.0, 270.0], [82.1, 270.0], [82.2, 270.0], [82.3, 270.0], [82.4, 270.0], [82.5, 270.0], [82.6, 270.0], [82.7, 270.0], [82.8, 270.0], [82.9, 270.0], [83.0, 270.0], [83.1, 270.0], [83.2, 270.0], [83.3, 270.0], [83.4, 270.0], [83.5, 270.0], [83.6, 270.0], [83.7, 271.0], [83.8, 271.0], [83.9, 271.0], [84.0, 271.0], [84.1, 271.0], [84.2, 271.0], [84.3, 273.0], [84.4, 273.0], [84.5, 273.0], [84.6, 273.0], [84.7, 274.0], [84.8, 274.0], [84.9, 274.0], [85.0, 274.0], [85.1, 275.0], [85.2, 275.0], [85.3, 275.0], [85.4, 275.0], [85.5, 276.0], [85.6, 276.0], [85.7, 276.0], [85.8, 276.0], [85.9, 276.0], [86.0, 276.0], [86.1, 277.0], [86.2, 277.0], [86.3, 277.0], [86.4, 277.0], [86.5, 277.0], [86.6, 277.0], [86.7, 278.0], [86.8, 278.0], [86.9, 279.0], [87.0, 279.0], [87.1, 280.0], [87.2, 280.0], [87.3, 281.0], [87.4, 281.0], [87.5, 282.0], [87.6, 282.0], [87.7, 282.0], [87.8, 282.0], [87.9, 282.0], [88.0, 282.0], [88.1, 282.0], [88.2, 284.0], [88.3, 284.0], [88.4, 285.0], [88.5, 285.0], [88.6, 286.0], [88.7, 286.0], [88.8, 286.0], [88.9, 286.0], [89.0, 287.0], [89.1, 287.0], [89.2, 288.0], [89.3, 288.0], [89.4, 288.0], [89.5, 288.0], [89.6, 288.0], [89.7, 288.0], [89.8, 290.0], [89.9, 290.0], [90.0, 291.0], [90.1, 291.0], [90.2, 292.0], [90.3, 292.0], [90.4, 293.0], [90.5, 293.0], [90.6, 295.0], [90.7, 295.0], [90.8, 296.0], [90.9, 296.0], [91.0, 296.0], [91.1, 296.0], [91.2, 296.0], [91.3, 296.0], [91.4, 297.0], [91.5, 297.0], [91.6, 298.0], [91.7, 298.0], [91.8, 298.0], [91.9, 303.0], [92.0, 303.0], [92.1, 304.0], [92.2, 304.0], [92.3, 305.0], [92.4, 305.0], [92.5, 305.0], [92.6, 305.0], [92.7, 306.0], [92.8, 306.0], [92.9, 309.0], [93.0, 309.0], [93.1, 309.0], [93.2, 309.0], [93.3, 310.0], [93.4, 310.0], [93.5, 310.0], [93.6, 310.0], [93.7, 310.0], [93.8, 310.0], [93.9, 311.0], [94.0, 311.0], [94.1, 313.0], [94.2, 313.0], [94.3, 313.0], [94.4, 313.0], [94.5, 319.0], [94.6, 319.0], [94.7, 319.0], [94.8, 319.0], [94.9, 320.0], [95.0, 320.0], [95.1, 326.0], [95.2, 326.0], [95.3, 327.0], [95.4, 327.0], [95.5, 328.0], [95.6, 328.0], [95.7, 333.0], [95.8, 333.0], [95.9, 333.0], [96.0, 338.0], [96.1, 338.0], [96.2, 345.0], [96.3, 345.0], [96.4, 352.0], [96.5, 352.0], [96.6, 357.0], [96.7, 357.0], [96.8, 375.0], [96.9, 375.0], [97.0, 377.0], [97.1, 377.0], [97.2, 379.0], [97.3, 379.0], [97.4, 385.0], [97.5, 385.0], [97.6, 423.0], [97.7, 423.0], [97.8, 425.0], [97.9, 425.0], [98.0, 453.0], [98.1, 453.0], [98.2, 821.0], [98.3, 821.0], [98.4, 888.0], [98.5, 888.0], [98.6, 1261.0], [98.7, 1261.0], [98.8, 1273.0], [98.9, 1273.0], [99.0, 1282.0], [99.1, 1282.0], [99.2, 1282.0], [99.3, 1282.0], [99.4, 1285.0], [99.5, 1285.0], [99.6, 1337.0], [99.7, 1337.0], [99.8, 1514.0], [99.9, 1514.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 448.0, "series": [{"data": [[37300.0, 1.0], [38900.0, 1.0], [41700.0, 1.0], [43700.0, 1.0], [44900.0, 1.0], [44500.0, 1.0], [45700.0, 1.0], [46500.0, 1.0], [48100.0, 1.0], [48500.0, 2.0], [51300.0, 1.0], [52100.0, 1.0], [52500.0, 2.0], [200.0, 2.0], [53300.0, 1.0], [56100.0, 1.0], [55300.0, 1.0], [55700.0, 1.0], [58500.0, 1.0], [58100.0, 1.0], [58900.0, 1.0], [59300.0, 1.0], [60500.0, 2.0], [60100.0, 1.0], [300.0, 89.0], [400.0, 12.0], [500.0, 4.0], [800.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1400.0, 2.0], [2700.0, 1.0], [3700.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [4800.0, 4.0], [4700.0, 1.0], [5200.0, 3.0], [5300.0, 8.0], [5500.0, 3.0], [5400.0, 6.0], [5600.0, 1.0], [5700.0, 4.0], [5800.0, 7.0], [6000.0, 3.0], [6100.0, 1.0], [6300.0, 2.0], [6500.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [6900.0, 2.0], [6700.0, 1.0], [7300.0, 1.0], [7600.0, 1.0], [7500.0, 3.0], [7900.0, 2.0], [7800.0, 1.0], [7700.0, 1.0], [8400.0, 2.0], [8700.0, 2.0], [8300.0, 1.0], [8500.0, 2.0], [9200.0, 3.0], [9100.0, 1.0], [9000.0, 2.0], [8900.0, 1.0], [9300.0, 3.0], [9700.0, 2.0], [9400.0, 2.0], [10200.0, 2.0], [10000.0, 2.0], [9900.0, 1.0], [10700.0, 1.0], [10300.0, 2.0], [10500.0, 2.0], [10400.0, 1.0], [10800.0, 2.0], [11200.0, 2.0], [11000.0, 1.0], [11500.0, 4.0], [11300.0, 2.0], [11400.0, 2.0], [12100.0, 3.0], [11900.0, 3.0], [12300.0, 1.0], [12400.0, 2.0], [12500.0, 1.0], [12700.0, 2.0], [12800.0, 1.0], [13200.0, 2.0], [13000.0, 1.0], [13300.0, 1.0], [12900.0, 1.0], [13800.0, 1.0], [13400.0, 1.0], [13700.0, 2.0], [13500.0, 2.0], [14200.0, 2.0], [13900.0, 2.0], [14100.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [14900.0, 1.0], [15200.0, 1.0], [15400.0, 3.0], [15800.0, 1.0], [15700.0, 2.0], [15600.0, 1.0], [15500.0, 1.0], [16200.0, 1.0], [16100.0, 1.0], [17200.0, 2.0], [16800.0, 2.0], [16400.0, 1.0], [18000.0, 1.0], [17600.0, 2.0], [18400.0, 1.0], [17800.0, 1.0], [18800.0, 1.0], [19400.0, 1.0], [19600.0, 1.0], [21400.0, 2.0], [20800.0, 2.0], [20600.0, 2.0], [21200.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [23400.0, 1.0], [22800.0, 1.0], [22600.0, 1.0], [24000.0, 2.0], [23800.0, 1.0], [24400.0, 1.0], [24200.0, 1.0], [25200.0, 1.0], [25000.0, 1.0], [27600.0, 1.0], [28600.0, 1.0], [28000.0, 1.0], [29600.0, 1.0], [30000.0, 1.0], [30600.0, 1.0], [31200.0, 1.0], [32600.0, 1.0], [34000.0, 2.0], [34800.0, 1.0], [36000.0, 1.0], [36400.0, 1.0], [38000.0, 1.0], [38800.0, 3.0], [37600.0, 1.0], [40000.0, 2.0], [39200.0, 1.0], [42400.0, 1.0], [44400.0, 2.0], [43200.0, 2.0], [43600.0, 1.0], [48400.0, 2.0], [48000.0, 3.0], [52000.0, 2.0], [51200.0, 1.0], [52800.0, 1.0], [55200.0, 1.0], [54800.0, 1.0], [56000.0, 1.0], [58000.0, 2.0], [59200.0, 1.0], [58400.0, 1.0], [60400.0, 6.0], [59600.0, 1.0], [33900.0, 2.0], [34700.0, 1.0], [33500.0, 1.0], [35900.0, 1.0], [38700.0, 1.0], [40300.0, 1.0], [40700.0, 1.0], [44300.0, 2.0], [43500.0, 2.0], [43100.0, 1.0], [45500.0, 2.0], [45900.0, 2.0], [47500.0, 2.0], [48300.0, 3.0], [47900.0, 1.0], [50700.0, 1.0], [53100.0, 1.0], [52300.0, 2.0], [52700.0, 1.0], [55500.0, 1.0], [59100.0, 1.0], [58700.0, 1.0], [60300.0, 9.0], [59500.0, 1.0], [17100.0, 2.0], [16500.0, 1.0], [17500.0, 2.0], [19300.0, 1.0], [18700.0, 1.0], [18500.0, 1.0], [19500.0, 1.0], [19900.0, 1.0], [20300.0, 1.0], [19700.0, 1.0], [21300.0, 3.0], [20700.0, 1.0], [22300.0, 1.0], [22100.0, 1.0], [22500.0, 3.0], [21900.0, 1.0], [22900.0, 1.0], [23300.0, 3.0], [23700.0, 1.0], [24500.0, 1.0], [26300.0, 2.0], [25900.0, 1.0], [26500.0, 1.0], [27100.0, 1.0], [27900.0, 1.0], [28300.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [30700.0, 1.0], [29700.0, 1.0], [31500.0, 1.0], [31700.0, 1.0], [32500.0, 1.0], [33800.0, 1.0], [33000.0, 1.0], [33400.0, 1.0], [35800.0, 1.0], [35400.0, 1.0], [35000.0, 1.0], [37800.0, 1.0], [37000.0, 1.0], [39800.0, 1.0], [40600.0, 1.0], [44200.0, 1.0], [45000.0, 2.0], [44600.0, 1.0], [45800.0, 1.0], [45400.0, 2.0], [46600.0, 1.0], [48200.0, 1.0], [48600.0, 2.0], [50600.0, 1.0], [49400.0, 1.0], [50200.0, 1.0], [51800.0, 1.0], [53800.0, 1.0], [55400.0, 1.0], [55800.0, 1.0], [58600.0, 1.0], [57800.0, 1.0], [58200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 108.0], [34500.0, 2.0], [33700.0, 1.0], [33300.0, 1.0], [35700.0, 2.0], [37700.0, 1.0], [38500.0, 3.0], [37300.0, 1.0], [38900.0, 1.0], [39700.0, 1.0], [40100.0, 1.0], [42900.0, 1.0], [44100.0, 4.0], [45300.0, 2.0], [48100.0, 1.0], [47700.0, 1.0], [47300.0, 1.0], [50900.0, 1.0], [51700.0, 1.0], [52100.0, 2.0], [54500.0, 1.0], [55300.0, 1.0], [57700.0, 2.0], [58900.0, 1.0], [59300.0, 1.0], [60100.0, 12.0], [500.0, 1.0], [900.0, 1.0], [2500.0, 1.0], [3500.0, 1.0], [4300.0, 1.0], [4500.0, 3.0], [4600.0, 2.0], [4400.0, 1.0], [5100.0, 11.0], [5000.0, 6.0], [5200.0, 3.0], [5500.0, 6.0], [5600.0, 3.0], [5400.0, 3.0], [5700.0, 3.0], [5800.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6400.0, 1.0], [6700.0, 1.0], [7000.0, 3.0], [7400.0, 2.0], [7300.0, 1.0], [7200.0, 2.0], [7600.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8400.0, 1.0], [8500.0, 1.0], [8300.0, 2.0], [8700.0, 1.0], [8600.0, 1.0], [9100.0, 3.0], [8900.0, 1.0], [8800.0, 2.0], [9000.0, 4.0], [9500.0, 2.0], [9700.0, 1.0], [10100.0, 3.0], [9900.0, 2.0], [9800.0, 2.0], [10500.0, 2.0], [10300.0, 2.0], [10600.0, 1.0], [10700.0, 1.0], [11200.0, 4.0], [10900.0, 1.0], [11000.0, 3.0], [11100.0, 1.0], [11300.0, 1.0], [11700.0, 1.0], [11600.0, 2.0], [12100.0, 1.0], [11800.0, 1.0], [12200.0, 2.0], [11900.0, 2.0], [12600.0, 1.0], [12300.0, 1.0], [12400.0, 2.0], [12700.0, 1.0], [13000.0, 3.0], [13100.0, 1.0], [12800.0, 1.0], [13200.0, 2.0], [13600.0, 2.0], [13400.0, 1.0], [13500.0, 1.0], [13700.0, 1.0], [13900.0, 3.0], [14200.0, 1.0], [14300.0, 1.0], [14400.0, 1.0], [14600.0, 2.0], [15100.0, 1.0], [15300.0, 2.0], [15000.0, 1.0], [15200.0, 2.0], [15500.0, 1.0], [15400.0, 2.0], [15900.0, 2.0], [16200.0, 1.0], [16100.0, 1.0], [16800.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [18200.0, 1.0], [19400.0, 1.0], [20400.0, 1.0], [21200.0, 1.0], [20600.0, 2.0], [21000.0, 3.0], [21600.0, 1.0], [22400.0, 1.0], [21800.0, 1.0], [22200.0, 1.0], [23200.0, 1.0], [22600.0, 1.0], [23400.0, 1.0], [23000.0, 1.0], [23800.0, 2.0], [27400.0, 1.0], [28000.0, 1.0], [28400.0, 1.0], [27800.0, 1.0], [30400.0, 1.0], [29800.0, 1.0], [31000.0, 1.0], [32200.0, 1.0], [32400.0, 1.0], [33600.0, 2.0], [33200.0, 1.0], [34800.0, 1.0], [35200.0, 1.0], [36800.0, 1.0], [37600.0, 1.0], [39600.0, 1.0], [44000.0, 1.0], [43200.0, 2.0], [44400.0, 1.0], [45600.0, 3.0], [45200.0, 1.0], [47200.0, 1.0], [48000.0, 3.0], [47600.0, 1.0], [50400.0, 1.0], [49200.0, 1.0], [50800.0, 1.0], [50000.0, 1.0], [52800.0, 1.0], [52400.0, 1.0], [55200.0, 1.0], [55600.0, 1.0], [58400.0, 2.0], [57600.0, 1.0], [35500.0, 1.0], [38700.0, 1.0], [40300.0, 1.0], [39900.0, 1.0], [41500.0, 1.0], [44700.0, 2.0], [43500.0, 1.0], [44300.0, 1.0], [46300.0, 2.0], [45100.0, 1.0], [48300.0, 4.0], [47900.0, 1.0], [50300.0, 1.0], [52300.0, 1.0], [53100.0, 1.0], [51500.0, 1.0], [53500.0, 1.0], [55100.0, 1.0], [55900.0, 1.0], [55500.0, 1.0], [57900.0, 2.0], [58300.0, 1.0], [59100.0, 1.0], [59900.0, 1.0], [16900.0, 3.0], [17300.0, 3.0], [16500.0, 1.0], [17700.0, 1.0], [18100.0, 1.0], [17500.0, 1.0], [19100.0, 2.0], [19300.0, 1.0], [18500.0, 2.0], [19700.0, 1.0], [20300.0, 1.0], [20100.0, 1.0], [19500.0, 1.0], [21100.0, 1.0], [20900.0, 1.0], [20500.0, 1.0], [21700.0, 2.0], [22100.0, 1.0], [22300.0, 2.0], [23500.0, 1.0], [22700.0, 1.0], [23100.0, 2.0], [24100.0, 1.0], [23900.0, 1.0], [24300.0, 1.0], [24900.0, 1.0], [24700.0, 1.0], [26100.0, 2.0], [25700.0, 1.0], [26300.0, 1.0], [27500.0, 1.0], [26900.0, 1.0], [27900.0, 1.0], [29100.0, 1.0], [29300.0, 1.0], [29500.0, 1.0], [30300.0, 1.0], [31300.0, 1.0], [31500.0, 1.0], [32700.0, 1.0], [33800.0, 2.0], [35800.0, 1.0], [36200.0, 1.0], [38600.0, 1.0], [39800.0, 1.0], [42200.0, 1.0], [43000.0, 2.0], [44600.0, 1.0], [43400.0, 1.0], [45400.0, 1.0], [48200.0, 2.0], [47800.0, 2.0], [51000.0, 1.0], [52600.0, 1.0], [52200.0, 1.0], [51800.0, 1.0], [55000.0, 1.0], [55800.0, 1.0], [59000.0, 1.0], [58200.0, 1.0], [58600.0, 1.0], [60200.0, 5.0], [59400.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 28.0], [1200.0, 5.0], [1300.0, 1.0], [1500.0, 1.0], [200.0, 448.0], [400.0, 3.0], [800.0, 2.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 378.0, "series": [{"data": [[0.0, 378.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 356.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 236.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.4444444444444438, "minX": 1.68512568E12, "maxY": 24.865079365079367, "series": [{"data": [[1.68512652E12, 14.825396825396822], [1.68512622E12, 17.784037558685444], [1.68512616E12, 15.007874015748031], [1.68512586E12, 7.648648648648649], [1.6851258E12, 5.025], [1.68512646E12, 24.865079365079367], [1.6851264E12, 23.28275862068964], [1.6851261E12, 15.0], [1.68512604E12, 12.787878787878785], [1.68512574E12, 5.0], [1.68512568E12, 3.4444444444444438], [1.68512634E12, 20.02158273381295], [1.68512628E12, 20.0], [1.68512598E12, 10.073529411764705], [1.68512592E12, 10.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512652E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 115.0, "minX": 1.0, "maxY": 45557.0, "series": [{"data": [[2.0, 12919.666666666668], [3.0, 17528.25], [4.0, 43658.0], [5.0, 20203.70967741936], [6.0, 27388.0], [7.0, 45557.0], [8.0, 34251.71428571428], [9.0, 29350.0], [10.0, 40234.26470588236], [11.0, 2009.4285714285713], [12.0, 340.0], [13.0, 10440.42857142857], [14.0, 12688.0], [15.0, 19637.132653061235], [1.0, 12276.5], [16.0, 16205.23076923077], [17.0, 13207.45], [18.0, 11565.0], [19.0, 7066.076923076924], [20.0, 18776.361344537825], [21.0, 27972.5], [22.0, 10170.874999999998], [23.0, 26087.142857142855], [24.0, 17163.0625], [25.0, 31549.86]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.697530864197525, 20901.74897119344]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 12685.0], [3.0, 17292.75], [4.0, 43424.0], [5.0, 19958.51612903226], [6.0, 27110.0], [7.0, 45319.0], [8.0, 34007.71428571428], [9.0, 29103.0], [10.0, 39987.67647058822], [11.0, 1757.2857142857142], [12.0, 115.0], [13.0, 10199.857142857143], [14.0, 12443.5], [15.0, 19291.173469387755], [1.0, 11996.5], [16.0, 15958.76923076923], [17.0, 12965.050000000001], [18.0, 11330.090909090908], [19.0, 6822.000000000001], [20.0, 18525.546218487394], [21.0, 30810.11111111111], [22.0, 9908.5], [23.0, 25841.92857142857], [24.0, 18036.466666666664], [25.0, 31306.98]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.673553719008257, 20719.983471074353]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 236.0], [3.0, 277.0], [4.0, 233.0], [5.0, 248.78571428571428], [6.0, 235.0], [7.0, 249.0], [8.0, 236.71428571428572], [9.0, 268.3333333333333], [10.0, 253.69696969696966], [11.0, 234.26666666666665], [12.0, 231.75], [13.0, 241.0], [14.0, 230.0], [15.0, 347.6145833333333], [1.0, 274.5], [16.0, 244.75], [17.0, 242.5217391304348], [18.0, 237.72727272727272], [19.0, 245.28571428571428], [20.0, 248.80672268907563], [21.0, 258.4], [22.0, 250.125], [23.0, 253.6875], [24.0, 244.76923076923075], [25.0, 246.6153846153846]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.739754098360656, 266.9323770491809]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 807.2166666666667, "minX": 1.68512568E12, "maxY": 11371.866666666667, "series": [{"data": [[1.68512652E12, 1270.9333333333334], [1.68512622E12, 3845.6833333333334], [1.68512616E12, 2898.5833333333335], [1.68512586E12, 1062.0166666666667], [1.6851258E12, 880.6], [1.68512646E12, 2763.5], [1.6851264E12, 3580.1833333333334], [1.6851261E12, 1653.6333333333334], [1.68512604E12, 1160.25], [1.68512574E12, 807.2166666666667], [1.68512568E12, 915.25], [1.68512634E12, 3273.5], [1.68512628E12, 3439.45], [1.68512598E12, 1304.2166666666667], [1.68512592E12, 807.2166666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68512652E12, 4270.966666666666], [1.68512622E12, 11371.866666666667], [1.68512616E12, 5730.45], [1.68512586E12, 1960.4166666666667], [1.6851258E12, 1666.9166666666667], [1.68512646E12, 6044.766666666666], [1.6851264E12, 7389.7], [1.6851261E12, 6153.316666666667], [1.68512604E12, 4808.466666666666], [1.68512574E12, 1832.3166666666666], [1.68512568E12, 1831.5666666666666], [1.68512634E12, 6291.633333333333], [1.68512628E12, 9022.916666666666], [1.68512598E12, 2770.4333333333334], [1.68512592E12, 1478.6666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512652E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 236.4864864864865, "minX": 1.68512568E12, "maxY": 41609.04761904762, "series": [{"data": [[1.68512652E12, 31821.32], [1.68512622E12, 11114.57352941176], [1.68512616E12, 17880.179487179485], [1.68512586E12, 28396.375], [1.6851258E12, 19759.5625], [1.68512646E12, 29512.444444444445], [1.6851264E12, 23185.347826086956], [1.6851261E12, 18458.25], [1.68512604E12, 13743.199999999997], [1.68512574E12, 21254.6], [1.68512568E12, 11147.454545454546], [1.68512634E12, 26627.212765957443], [1.68512628E12, 14345.864406779663], [1.68512598E12, 32642.11111111112], [1.68512592E12, 39349.09090909091]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512652E12, 33008.86206896552], [1.68512622E12, 11407.211267605631], [1.68512616E12, 23158.704545454544], [1.68512586E12, 25308.333333333336], [1.6851258E12, 19477.833333333332], [1.68512646E12, 29101.125], [1.6851264E12, 24075.062500000004], [1.6851261E12, 14217.5641025641], [1.68512604E12, 7527.5], [1.68512574E12, 19909.454545454548], [1.68512568E12, 11090.400000000001], [1.68512634E12, 24760.63043478261], [1.68512628E12, 14086.465517241382], [1.68512598E12, 41609.04761904762], [1.68512592E12, 39106.454545454544]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512652E12, 255.77777777777777], [1.68512622E12, 242.41891891891888], [1.68512616E12, 294.5909090909092], [1.68512586E12, 242.05882352941177], [1.6851258E12, 252.5], [1.68512646E12, 247.3658536585366], [1.6851264E12, 248.74509803921563], [1.6851261E12, 437.75], [1.68512604E12, 236.4864864864865], [1.68512574E12, 250.5454545454545], [1.68512568E12, 246.0], [1.68512634E12, 238.5217391304348], [1.68512628E12, 258.3833333333332], [1.68512598E12, 259.5], [1.68512592E12, 246.90909090909093]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512652E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 236.32432432432432, "minX": 1.68512568E12, "maxY": 41608.52380952381, "series": [{"data": [[1.68512652E12, 31820.96], [1.68512622E12, 11114.220588235294], [1.68512616E12, 17871.71794871795], [1.68512586E12, 28394.75], [1.6851258E12, 19758.375], [1.68512646E12, 29511.77777777778], [1.6851264E12, 23184.89130434783], [1.6851261E12, 18452.340909090908], [1.68512604E12, 13742.966666666667], [1.68512574E12, 21254.100000000002], [1.68512568E12, 11146.27272727273], [1.68512634E12, 26626.893617021273], [1.68512628E12, 14344.949152542375], [1.68512598E12, 32641.185185185186], [1.68512592E12, 39348.72727272727]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512652E12, 33008.655172413804], [1.68512622E12, 11406.985915492956], [1.68512616E12, 23155.863636363636], [1.68512586E12, 25307.16666666667], [1.6851258E12, 19477.083333333332], [1.68512646E12, 29100.7], [1.6851264E12, 24074.91666666667], [1.6851261E12, 14215.358974358973], [1.68512604E12, 7527.343750000001], [1.68512574E12, 19909.363636363636], [1.68512568E12, 11090.400000000001], [1.68512634E12, 24760.478260869564], [1.68512628E12, 14086.189655172415], [1.68512598E12, 41608.52380952381], [1.68512592E12, 39106.36363636365]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512652E12, 255.66666666666666], [1.68512622E12, 242.31081081081084], [1.68512616E12, 289.8863636363637], [1.68512586E12, 241.82352941176472], [1.6851258E12, 252.0], [1.68512646E12, 247.12195121951223], [1.6851264E12, 248.41176470588232], [1.6851261E12, 433.475], [1.68512604E12, 236.32432432432432], [1.68512574E12, 250.1818181818182], [1.68512568E12, 245.0], [1.68512634E12, 238.30434782608694], [1.68512628E12, 257.75000000000006], [1.68512598E12, 259.15000000000003], [1.68512592E12, 246.45454545454544]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512652E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68512568E12, "maxY": 261.975, "series": [{"data": [[1.68512652E12, 116.04], [1.68512622E12, 116.61764705882351], [1.68512616E12, 204.74358974358972], [1.68512586E12, 115.75], [1.6851258E12, 119.4375], [1.68512646E12, 116.73333333333332], [1.6851264E12, 118.58695652173913], [1.6851261E12, 200.40909090909096], [1.68512604E12, 120.26666666666668], [1.68512574E12, 128.1], [1.68512568E12, 121.27272727272728], [1.68512634E12, 115.27659574468085], [1.68512628E12, 116.96610169491527], [1.68512598E12, 132.22222222222226], [1.68512592E12, 116.18181818181817]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512652E12, 0.0], [1.68512622E12, 0.0], [1.68512616E12, 0.0], [1.68512586E12, 0.0], [1.6851258E12, 0.0], [1.68512646E12, 0.0], [1.6851264E12, 0.0], [1.6851261E12, 0.0], [1.68512604E12, 0.0], [1.68512574E12, 0.0], [1.68512568E12, 0.0], [1.68512634E12, 0.0], [1.68512628E12, 0.0], [1.68512598E12, 0.0], [1.68512592E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512652E12, 116.88888888888889], [1.68512622E12, 116.56756756756755], [1.68512616E12, 146.38636363636363], [1.68512586E12, 116.17647058823529], [1.6851258E12, 121.08333333333333], [1.68512646E12, 117.09756097560975], [1.6851264E12, 118.33333333333334], [1.6851261E12, 261.975], [1.68512604E12, 115.70270270270267], [1.68512574E12, 126.81818181818181], [1.68512568E12, 119.66666666666667], [1.68512634E12, 115.06521739130434], [1.68512628E12, 116.83333333333336], [1.68512598E12, 141.80000000000004], [1.68512592E12, 121.45454545454545]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512652E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 225.0, "minX": 1.68512568E12, "maxY": 59910.0, "series": [{"data": [[1.68512652E12, 59419.0], [1.68512622E12, 47909.0], [1.68512616E12, 58909.0], [1.68512586E12, 33853.0], [1.6851258E12, 23540.0], [1.68512646E12, 59107.0], [1.6851264E12, 58345.0], [1.6851261E12, 57711.0], [1.68512604E12, 52890.0], [1.68512574E12, 23871.0], [1.68512568E12, 17771.0], [1.68512634E12, 59910.0], [1.68512628E12, 50021.0], [1.68512598E12, 48314.0], [1.68512592E12, 45681.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68512652E12, 52032.0], [1.68512622E12, 34659.0], [1.68512616E12, 47108.80000000002], [1.68512586E12, 32725.0], [1.6851258E12, 21145.0], [1.68512646E12, 28038.60000000001], [1.6851264E12, 52487.600000000006], [1.6851261E12, 53442.600000000006], [1.68512604E12, 52232.4], [1.68512574E12, 23037.8], [1.68512568E12, 15863.600000000004], [1.68512634E12, 48590.300000000025], [1.68512628E12, 38650.0], [1.68512598E12, 48071.4], [1.68512592E12, 45568.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68512652E12, 59419.0], [1.68512622E12, 47909.0], [1.68512616E12, 58909.0], [1.68512586E12, 33853.0], [1.6851258E12, 23540.0], [1.68512646E12, 59107.0], [1.6851264E12, 58345.0], [1.6851261E12, 57711.0], [1.68512604E12, 52890.0], [1.68512574E12, 23871.0], [1.68512568E12, 17771.0], [1.68512634E12, 59910.0], [1.68512628E12, 50021.0], [1.68512598E12, 48314.0], [1.68512592E12, 45681.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68512652E12, 56678.499999999985], [1.68512622E12, 38081.59999999999], [1.68512616E12, 55234.0], [1.68512586E12, 33731.5], [1.6851258E12, 22954.75], [1.68512646E12, 54226.19999999998], [1.6851264E12, 56037.69999999999], [1.6851261E12, 56235.9], [1.68512604E12, 52890.0], [1.68512574E12, 23771.399999999998], [1.68512568E12, 17503.7], [1.68512634E12, 58151.45], [1.68512628E12, 44450.399999999994], [1.68512598E12, 48266.4], [1.68512592E12, 45678.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68512652E12, 235.0], [1.68512622E12, 227.0], [1.68512616E12, 228.0], [1.68512586E12, 226.0], [1.6851258E12, 231.0], [1.68512646E12, 225.0], [1.6851264E12, 225.0], [1.6851261E12, 261.0], [1.68512604E12, 227.0], [1.68512574E12, 228.0], [1.68512568E12, 226.0], [1.68512634E12, 225.0], [1.68512628E12, 226.0], [1.68512598E12, 225.0], [1.68512592E12, 226.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68512652E12, 19449.0], [1.68512622E12, 277.0], [1.68512616E12, 1514.0], [1.68512586E12, 265.0], [1.6851258E12, 7001.0], [1.68512646E12, 282.0], [1.6851264E12, 305.0], [1.6851261E12, 637.0], [1.68512604E12, 275.0], [1.68512574E12, 4629.0], [1.68512568E12, 243.0], [1.68512634E12, 271.5], [1.68512628E12, 273.0], [1.68512598E12, 39786.0], [1.68512592E12, 6252.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512652E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 139.5, "minX": 1.0, "maxY": 60133.0, "series": [{"data": [[2.0, 286.0], [8.0, 13715.0], [9.0, 5157.0], [10.0, 41619.5], [11.0, 9983.0], [3.0, 345.0], [12.0, 2727.5], [1.0, 282.0], [4.0, 5148.0], [18.0, 38132.0], [5.0, 272.0], [20.0, 17983.0], [6.0, 379.0], [7.0, 303.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 225.0], [4.0, 176.5], [1.0, 225.0], [8.0, 171.5], [18.0, 234.5], [9.0, 236.0], [5.0, 139.5], [11.0, 236.5], [3.0, 190.0], [6.0, 228.0], [7.0, 60133.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 138.5, "minX": 1.0, "maxY": 60133.0, "series": [{"data": [[2.0, 286.0], [8.0, 13714.5], [9.0, 5157.0], [10.0, 41619.5], [11.0, 9983.0], [3.0, 345.0], [12.0, 2727.5], [1.0, 282.0], [4.0, 5148.0], [18.0, 38131.5], [5.0, 271.5], [20.0, 17982.5], [6.0, 378.0], [7.0, 303.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 224.5], [4.0, 176.0], [1.0, 225.0], [8.0, 171.5], [18.0, 234.0], [9.0, 236.0], [5.0, 138.5], [11.0, 236.0], [3.0, 190.0], [6.0, 228.0], [7.0, 60133.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.68512568E12, "maxY": 2.466666666666667, "series": [{"data": [[1.68512652E12, 0.23333333333333334], [1.68512622E12, 2.466666666666667], [1.68512616E12, 1.45], [1.68512586E12, 0.5833333333333334], [1.6851258E12, 0.38333333333333336], [1.68512646E12, 1.4166666666666667], [1.6851264E12, 1.7166666666666666], [1.6851261E12, 1.3666666666666667], [1.68512604E12, 1.3333333333333333], [1.68512574E12, 0.4], [1.68512568E12, 0.4666666666666667], [1.68512634E12, 1.5], [1.68512628E12, 1.9833333333333334], [1.68512598E12, 0.5333333333333333], [1.68512592E12, 0.36666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512652E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68512568E12, "maxY": 1.6166666666666667, "series": [{"data": [[1.68512652E12, 0.55], [1.68512622E12, 1.45], [1.68512616E12, 1.25], [1.68512586E12, 0.48333333333333334], [1.6851258E12, 0.4], [1.68512646E12, 1.2166666666666666], [1.6851264E12, 1.6166666666666667], [1.6851261E12, 0.5], [1.68512604E12, 0.25], [1.68512574E12, 0.36666666666666664], [1.68512568E12, 0.4166666666666667], [1.68512634E12, 1.4666666666666666], [1.68512628E12, 1.3833333333333333], [1.68512598E12, 0.55], [1.68512592E12, 0.36666666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68512652E12, 0.016666666666666666], [1.68512646E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68512604E12, 0.9], [1.68512622E12, 0.9666666666666667], [1.68512616E12, 0.21666666666666667], [1.68512628E12, 0.5833333333333334], [1.68512598E12, 0.13333333333333333], [1.6851261E12, 0.8166666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68512652E12, 0.06666666666666667], [1.68512634E12, 0.06666666666666667], [1.68512646E12, 0.11666666666666667], [1.6851264E12, 0.03333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512652E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68512568E12, "maxY": 0.85, "series": [{"data": [[1.68512652E12, 0.15], [1.68512622E12, 0.7833333333333333], [1.68512616E12, 0.6333333333333333], [1.68512586E12, 0.2833333333333333], [1.6851258E12, 0.2], [1.68512646E12, 0.6833333333333333], [1.6851264E12, 0.85], [1.6851261E12, 0.2833333333333333], [1.68512604E12, 0.15], [1.68512574E12, 0.18333333333333332], [1.68512568E12, 0.25], [1.68512634E12, 0.7666666666666667], [1.68512628E12, 0.7333333333333333], [1.68512598E12, 0.21666666666666667], [1.68512592E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68512604E12, 0.4666666666666667], [1.68512622E12, 0.45], [1.68512616E12, 0.1], [1.68512628E12, 0.26666666666666666], [1.68512598E12, 0.11666666666666667], [1.6851261E12, 0.38333333333333336]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68512604E12, 0.43333333333333335], [1.68512652E12, 0.08333333333333333], [1.68512622E12, 0.5166666666666667], [1.68512616E12, 0.11666666666666667], [1.68512634E12, 0.06666666666666667], [1.68512628E12, 0.31666666666666665], [1.68512598E12, 0.016666666666666666], [1.68512646E12, 0.13333333333333333], [1.6851264E12, 0.03333333333333333], [1.6851261E12, 0.43333333333333335]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68512652E12, 0.38333333333333336], [1.68512622E12, 0.4], [1.68512616E12, 0.45], [1.68512586E12, 0.13333333333333333], [1.6851258E12, 0.26666666666666666], [1.68512646E12, 0.5666666666666667], [1.6851264E12, 0.7333333333333333], [1.6851261E12, 0.1], [1.68512604E12, 0.06666666666666667], [1.68512574E12, 0.16666666666666666], [1.68512568E12, 0.18333333333333332], [1.68512634E12, 0.6833333333333333], [1.68512628E12, 0.5], [1.68512598E12, 0.3333333333333333], [1.68512592E12, 0.18333333333333332]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68512604E12, 0.43333333333333335], [1.68512652E12, 0.03333333333333333], [1.68512622E12, 0.7333333333333333], [1.68512616E12, 0.2], [1.68512634E12, 0.1], [1.68512628E12, 0.48333333333333334], [1.68512598E12, 0.11666666666666667], [1.68512646E12, 0.18333333333333332], [1.6851264E12, 0.03333333333333333], [1.6851261E12, 0.6333333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68512652E12, 0.4], [1.68512622E12, 0.6666666666666666], [1.68512616E12, 0.6166666666666667], [1.68512586E12, 0.2], [1.6851258E12, 0.2], [1.68512646E12, 0.5333333333333333], [1.6851264E12, 0.7666666666666667], [1.6851261E12, 0.21666666666666667], [1.68512604E12, 0.1], [1.68512574E12, 0.18333333333333332], [1.68512568E12, 0.16666666666666666], [1.68512634E12, 0.7], [1.68512628E12, 0.65], [1.68512598E12, 0.3333333333333333], [1.68512592E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512652E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.68512568E12, "maxY": 2.35, "series": [{"data": [[1.68512652E12, 0.9333333333333333], [1.68512622E12, 1.85], [1.68512616E12, 1.7], [1.68512586E12, 0.6166666666666667], [1.6851258E12, 0.6666666666666666], [1.68512646E12, 1.7833333333333334], [1.6851264E12, 2.35], [1.6851261E12, 0.6], [1.68512604E12, 0.31666666666666665], [1.68512574E12, 0.5333333333333333], [1.68512568E12, 0.6], [1.68512634E12, 2.15], [1.68512628E12, 1.8833333333333333], [1.68512598E12, 0.8833333333333333], [1.68512592E12, 0.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68512604E12, 1.3333333333333333], [1.68512652E12, 0.11666666666666667], [1.68512622E12, 1.7], [1.68512616E12, 0.4166666666666667], [1.68512634E12, 0.16666666666666666], [1.68512628E12, 1.0666666666666667], [1.68512598E12, 0.25], [1.68512646E12, 0.31666666666666665], [1.6851264E12, 0.06666666666666667], [1.6851261E12, 1.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512652E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

