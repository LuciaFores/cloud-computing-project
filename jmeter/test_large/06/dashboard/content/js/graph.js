/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 124.0, "minX": 0.0, "maxY": 60589.0, "series": [{"data": [[0.0, 254.0], [0.1, 254.0], [0.2, 261.0], [0.3, 263.0], [0.4, 374.0], [0.5, 374.0], [0.6, 374.0], [0.7, 374.0], [0.8, 374.0], [0.9, 375.0], [1.0, 375.0], [1.1, 375.0], [1.2, 376.0], [1.3, 377.0], [1.4, 378.0], [1.5, 378.0], [1.6, 378.0], [1.7, 378.0], [1.8, 378.0], [1.9, 379.0], [2.0, 379.0], [2.1, 379.0], [2.2, 379.0], [2.3, 379.0], [2.4, 380.0], [2.5, 380.0], [2.6, 380.0], [2.7, 381.0], [2.8, 381.0], [2.9, 381.0], [3.0, 381.0], [3.1, 381.0], [3.2, 381.0], [3.3, 381.0], [3.4, 382.0], [3.5, 382.0], [3.6, 383.0], [3.7, 383.0], [3.8, 384.0], [3.9, 384.0], [4.0, 384.0], [4.1, 385.0], [4.2, 385.0], [4.3, 385.0], [4.4, 386.0], [4.5, 386.0], [4.6, 386.0], [4.7, 387.0], [4.8, 387.0], [4.9, 387.0], [5.0, 387.0], [5.1, 388.0], [5.2, 388.0], [5.3, 389.0], [5.4, 389.0], [5.5, 389.0], [5.6, 389.0], [5.7, 390.0], [5.8, 391.0], [5.9, 391.0], [6.0, 391.0], [6.1, 391.0], [6.2, 391.0], [6.3, 391.0], [6.4, 392.0], [6.5, 392.0], [6.6, 392.0], [6.7, 392.0], [6.8, 392.0], [6.9, 392.0], [7.0, 392.0], [7.1, 393.0], [7.2, 393.0], [7.3, 393.0], [7.4, 393.0], [7.5, 393.0], [7.6, 394.0], [7.7, 394.0], [7.8, 394.0], [7.9, 394.0], [8.0, 394.0], [8.1, 394.0], [8.2, 394.0], [8.3, 394.0], [8.4, 394.0], [8.5, 394.0], [8.6, 395.0], [8.7, 395.0], [8.8, 395.0], [8.9, 395.0], [9.0, 396.0], [9.1, 396.0], [9.2, 396.0], [9.3, 397.0], [9.4, 397.0], [9.5, 397.0], [9.6, 397.0], [9.7, 397.0], [9.8, 397.0], [9.9, 397.0], [10.0, 397.0], [10.1, 398.0], [10.2, 400.0], [10.3, 401.0], [10.4, 401.0], [10.5, 401.0], [10.6, 402.0], [10.7, 402.0], [10.8, 403.0], [10.9, 403.0], [11.0, 403.0], [11.1, 403.0], [11.2, 403.0], [11.3, 404.0], [11.4, 404.0], [11.5, 405.0], [11.6, 405.0], [11.7, 405.0], [11.8, 405.0], [11.9, 405.0], [12.0, 406.0], [12.1, 406.0], [12.2, 406.0], [12.3, 406.0], [12.4, 406.0], [12.5, 408.0], [12.6, 408.0], [12.7, 410.0], [12.8, 410.0], [12.9, 410.0], [13.0, 411.0], [13.1, 412.0], [13.2, 412.0], [13.3, 412.0], [13.4, 412.0], [13.5, 414.0], [13.6, 416.0], [13.7, 418.0], [13.8, 418.0], [13.9, 422.0], [14.0, 425.0], [14.1, 425.0], [14.2, 426.0], [14.3, 426.0], [14.4, 426.0], [14.5, 428.0], [14.6, 429.0], [14.7, 430.0], [14.8, 430.0], [14.9, 431.0], [15.0, 439.0], [15.1, 439.0], [15.2, 442.0], [15.3, 442.0], [15.4, 447.0], [15.5, 459.0], [15.6, 462.0], [15.7, 463.0], [15.8, 463.0], [15.9, 466.0], [16.0, 473.0], [16.1, 474.0], [16.2, 479.0], [16.3, 479.0], [16.4, 526.0], [16.5, 838.0], [16.6, 1031.0], [16.7, 1128.0], [16.8, 1128.0], [16.9, 1139.0], [17.0, 1177.0], [17.1, 1188.0], [17.2, 1221.0], [17.3, 1221.0], [17.4, 1222.0], [17.5, 1296.0], [17.6, 1319.0], [17.7, 1384.0], [17.8, 1384.0], [17.9, 1432.0], [18.0, 1460.0], [18.1, 1463.0], [18.2, 1471.0], [18.3, 1471.0], [18.4, 1511.0], [18.5, 1542.0], [18.6, 1678.0], [18.7, 1789.0], [18.8, 1789.0], [18.9, 1958.0], [19.0, 2426.0], [19.1, 2474.0], [19.2, 3988.0], [19.3, 3988.0], [19.4, 4478.0], [19.5, 4631.0], [19.6, 4650.0], [19.7, 4669.0], [19.8, 4669.0], [19.9, 4775.0], [20.0, 4780.0], [20.1, 4972.0], [20.2, 4972.0], [20.3, 5004.0], [20.4, 5092.0], [20.5, 5148.0], [20.6, 5149.0], [20.7, 5149.0], [20.8, 5272.0], [20.9, 5294.0], [21.0, 5317.0], [21.1, 5330.0], [21.2, 5330.0], [21.3, 5334.0], [21.4, 5335.0], [21.5, 5343.0], [21.6, 5375.0], [21.7, 5375.0], [21.8, 5385.0], [21.9, 5391.0], [22.0, 5391.0], [22.1, 5393.0], [22.2, 5393.0], [22.3, 5418.0], [22.4, 5429.0], [22.5, 5433.0], [22.6, 5433.0], [22.7, 5433.0], [22.8, 5448.0], [22.9, 5451.0], [23.0, 5459.0], [23.1, 5470.0], [23.2, 5470.0], [23.3, 5471.0], [23.4, 5482.0], [23.5, 5500.0], [23.6, 5522.0], [23.7, 5522.0], [23.8, 5527.0], [23.9, 5530.0], [24.0, 5551.0], [24.1, 5561.0], [24.2, 5561.0], [24.3, 5562.0], [24.4, 5592.0], [24.5, 5594.0], [24.6, 5599.0], [24.7, 5599.0], [24.8, 5611.0], [24.9, 5645.0], [25.0, 5695.0], [25.1, 5744.0], [25.2, 5744.0], [25.3, 5803.0], [25.4, 5827.0], [25.5, 5833.0], [25.6, 5841.0], [25.7, 5841.0], [25.8, 5882.0], [25.9, 5883.0], [26.0, 5907.0], [26.1, 5917.0], [26.2, 5917.0], [26.3, 5954.0], [26.4, 5956.0], [26.5, 6005.0], [26.6, 6191.0], [26.7, 6191.0], [26.8, 6202.0], [26.9, 6413.0], [27.0, 6505.0], [27.1, 6505.0], [27.2, 6544.0], [27.3, 6544.0], [27.4, 6545.0], [27.5, 6691.0], [27.6, 6691.0], [27.7, 6692.0], [27.8, 6696.0], [27.9, 6746.0], [28.0, 6761.0], [28.1, 6761.0], [28.2, 6766.0], [28.3, 6776.0], [28.4, 6809.0], [28.5, 6899.0], [28.6, 6899.0], [28.7, 6936.0], [28.8, 6984.0], [28.9, 7049.0], [29.0, 7090.0], [29.1, 7090.0], [29.2, 7097.0], [29.3, 7128.0], [29.4, 7144.0], [29.5, 7201.0], [29.6, 7201.0], [29.7, 7226.0], [29.8, 7272.0], [29.9, 7469.0], [30.0, 7596.0], [30.1, 7596.0], [30.2, 7603.0], [30.3, 7607.0], [30.4, 7681.0], [30.5, 7719.0], [30.6, 7719.0], [30.7, 7824.0], [30.8, 7895.0], [30.9, 7911.0], [31.0, 7948.0], [31.1, 7948.0], [31.2, 7952.0], [31.3, 7953.0], [31.4, 7996.0], [31.5, 8110.0], [31.6, 8110.0], [31.7, 8112.0], [31.8, 8160.0], [31.9, 8187.0], [32.0, 8230.0], [32.1, 8230.0], [32.2, 8271.0], [32.3, 8275.0], [32.4, 8300.0], [32.5, 8324.0], [32.6, 8324.0], [32.7, 8503.0], [32.8, 8555.0], [32.9, 8596.0], [33.0, 8665.0], [33.1, 8665.0], [33.2, 8747.0], [33.3, 8828.0], [33.4, 8900.0], [33.5, 8900.0], [33.6, 8902.0], [33.7, 8911.0], [33.8, 8923.0], [33.9, 9050.0], [34.0, 9050.0], [34.1, 9072.0], [34.2, 9094.0], [34.3, 9101.0], [34.4, 9170.0], [34.5, 9170.0], [34.6, 9244.0], [34.7, 9272.0], [34.8, 9333.0], [34.9, 9345.0], [35.0, 9345.0], [35.1, 9432.0], [35.2, 9478.0], [35.3, 9493.0], [35.4, 9505.0], [35.5, 9505.0], [35.6, 9550.0], [35.7, 9558.0], [35.8, 9639.0], [35.9, 9648.0], [36.0, 9648.0], [36.1, 9670.0], [36.2, 9695.0], [36.3, 9711.0], [36.4, 9762.0], [36.5, 9762.0], [36.6, 9801.0], [36.7, 9817.0], [36.8, 9915.0], [36.9, 9938.0], [37.0, 9938.0], [37.1, 9944.0], [37.2, 9973.0], [37.3, 9987.0], [37.4, 9996.0], [37.5, 9996.0], [37.6, 10022.0], [37.7, 10083.0], [37.8, 10088.0], [37.9, 10102.0], [38.0, 10102.0], [38.1, 10124.0], [38.2, 10142.0], [38.3, 10143.0], [38.4, 10186.0], [38.5, 10186.0], [38.6, 10278.0], [38.7, 10334.0], [38.8, 10356.0], [38.9, 10401.0], [39.0, 10401.0], [39.1, 10448.0], [39.2, 10474.0], [39.3, 10572.0], [39.4, 10713.0], [39.5, 10713.0], [39.6, 10749.0], [39.7, 10802.0], [39.8, 10833.0], [39.9, 10875.0], [40.0, 10875.0], [40.1, 10888.0], [40.2, 10914.0], [40.3, 10939.0], [40.4, 10939.0], [40.5, 10972.0], [40.6, 11005.0], [40.7, 11014.0], [40.8, 11026.0], [40.9, 11026.0], [41.0, 11063.0], [41.1, 11144.0], [41.2, 11231.0], [41.3, 11249.0], [41.4, 11249.0], [41.5, 11260.0], [41.6, 11280.0], [41.7, 11391.0], [41.8, 11414.0], [41.9, 11414.0], [42.0, 11490.0], [42.1, 11543.0], [42.2, 11590.0], [42.3, 11612.0], [42.4, 11612.0], [42.5, 11712.0], [42.6, 11850.0], [42.7, 11851.0], [42.8, 11983.0], [42.9, 11983.0], [43.0, 11994.0], [43.1, 11995.0], [43.2, 12049.0], [43.3, 12057.0], [43.4, 12057.0], [43.5, 12088.0], [43.6, 12092.0], [43.7, 12101.0], [43.8, 12114.0], [43.9, 12114.0], [44.0, 12182.0], [44.1, 12231.0], [44.2, 12255.0], [44.3, 12259.0], [44.4, 12259.0], [44.5, 12270.0], [44.6, 12306.0], [44.7, 12316.0], [44.8, 12317.0], [44.9, 12317.0], [45.0, 12344.0], [45.1, 12400.0], [45.2, 12428.0], [45.3, 12428.0], [45.4, 12428.0], [45.5, 12452.0], [45.6, 12459.0], [45.7, 12463.0], [45.8, 12469.0], [45.9, 12469.0], [46.0, 12475.0], [46.1, 12544.0], [46.2, 12546.0], [46.3, 12644.0], [46.4, 12644.0], [46.5, 12703.0], [46.6, 12735.0], [46.7, 12828.0], [46.8, 12828.0], [46.9, 12883.0], [47.0, 12923.0], [47.1, 12962.0], [47.2, 13022.0], [47.3, 13022.0], [47.4, 13031.0], [47.5, 13132.0], [47.6, 13190.0], [47.7, 13247.0], [47.8, 13247.0], [47.9, 13294.0], [48.0, 13445.0], [48.1, 13459.0], [48.2, 13592.0], [48.3, 13592.0], [48.4, 13602.0], [48.5, 13737.0], [48.6, 13898.0], [48.7, 13973.0], [48.8, 13973.0], [48.9, 13985.0], [49.0, 14039.0], [49.1, 14068.0], [49.2, 14076.0], [49.3, 14076.0], [49.4, 14098.0], [49.5, 14130.0], [49.6, 14139.0], [49.7, 14146.0], [49.8, 14146.0], [49.9, 14161.0], [50.0, 14219.0], [50.1, 14465.0], [50.2, 14650.0], [50.3, 14650.0], [50.4, 14654.0], [50.5, 14656.0], [50.6, 14772.0], [50.7, 14812.0], [50.8, 14812.0], [50.9, 14815.0], [51.0, 14881.0], [51.1, 14896.0], [51.2, 14998.0], [51.3, 14998.0], [51.4, 15065.0], [51.5, 15087.0], [51.6, 15139.0], [51.7, 15154.0], [51.8, 15154.0], [51.9, 15175.0], [52.0, 15186.0], [52.1, 15259.0], [52.2, 15702.0], [52.3, 15702.0], [52.4, 15915.0], [52.5, 15977.0], [52.6, 16170.0], [52.7, 16172.0], [52.8, 16172.0], [52.9, 16226.0], [53.0, 16332.0], [53.1, 16530.0], [53.2, 16601.0], [53.3, 16601.0], [53.4, 17003.0], [53.5, 17109.0], [53.6, 17132.0], [53.7, 17132.0], [53.8, 17138.0], [53.9, 17315.0], [54.0, 17451.0], [54.1, 17731.0], [54.2, 17731.0], [54.3, 17784.0], [54.4, 17808.0], [54.5, 18084.0], [54.6, 18152.0], [54.7, 18152.0], [54.8, 18175.0], [54.9, 18227.0], [55.0, 18314.0], [55.1, 18426.0], [55.2, 18426.0], [55.3, 18454.0], [55.4, 18642.0], [55.5, 18747.0], [55.6, 18752.0], [55.7, 18752.0], [55.8, 18773.0], [55.9, 18870.0], [56.0, 19137.0], [56.1, 19142.0], [56.2, 19142.0], [56.3, 19144.0], [56.4, 19184.0], [56.5, 19221.0], [56.6, 19284.0], [56.7, 19284.0], [56.8, 19333.0], [56.9, 19375.0], [57.0, 19395.0], [57.1, 19436.0], [57.2, 19436.0], [57.3, 19462.0], [57.4, 19531.0], [57.5, 19602.0], [57.6, 19788.0], [57.7, 19788.0], [57.8, 19806.0], [57.9, 19835.0], [58.0, 20070.0], [58.1, 20104.0], [58.2, 20104.0], [58.3, 20227.0], [58.4, 20260.0], [58.5, 20271.0], [58.6, 20272.0], [58.7, 20272.0], [58.8, 20292.0], [58.9, 20440.0], [59.0, 20561.0], [59.1, 20638.0], [59.2, 20638.0], [59.3, 20691.0], [59.4, 20823.0], [59.5, 20841.0], [59.6, 20939.0], [59.7, 20939.0], [59.8, 20943.0], [59.9, 20950.0], [60.0, 20952.0], [60.1, 20952.0], [60.2, 20999.0], [60.3, 21098.0], [60.4, 21175.0], [60.5, 21235.0], [60.6, 21235.0], [60.7, 21278.0], [60.8, 21312.0], [60.9, 21325.0], [61.0, 21334.0], [61.1, 21334.0], [61.2, 21405.0], [61.3, 21419.0], [61.4, 21566.0], [61.5, 21751.0], [61.6, 21751.0], [61.7, 21807.0], [61.8, 21834.0], [61.9, 21894.0], [62.0, 21946.0], [62.1, 21946.0], [62.2, 22033.0], [62.3, 22033.0], [62.4, 22139.0], [62.5, 22151.0], [62.6, 22151.0], [62.7, 22280.0], [62.8, 22336.0], [62.9, 22336.0], [63.0, 22399.0], [63.1, 22399.0], [63.2, 22430.0], [63.3, 22503.0], [63.4, 22515.0], [63.5, 22708.0], [63.6, 22708.0], [63.7, 22865.0], [63.8, 22894.0], [63.9, 23026.0], [64.0, 23069.0], [64.1, 23069.0], [64.2, 23086.0], [64.3, 23093.0], [64.4, 23160.0], [64.5, 23164.0], [64.6, 23164.0], [64.7, 23202.0], [64.8, 23286.0], [64.9, 23315.0], [65.0, 23377.0], [65.1, 23377.0], [65.2, 23398.0], [65.3, 23450.0], [65.4, 23525.0], [65.5, 23539.0], [65.6, 23539.0], [65.7, 23547.0], [65.8, 23563.0], [65.9, 23565.0], [66.0, 23645.0], [66.1, 23645.0], [66.2, 23701.0], [66.3, 23719.0], [66.4, 23893.0], [66.5, 23971.0], [66.6, 23971.0], [66.7, 24009.0], [66.8, 24229.0], [66.9, 24273.0], [67.0, 24273.0], [67.1, 24286.0], [67.2, 24313.0], [67.3, 24384.0], [67.4, 24399.0], [67.5, 24399.0], [67.6, 24399.0], [67.7, 24423.0], [67.8, 24521.0], [67.9, 24522.0], [68.0, 24522.0], [68.1, 24613.0], [68.2, 24713.0], [68.3, 24752.0], [68.4, 24855.0], [68.5, 24855.0], [68.6, 24872.0], [68.7, 24880.0], [68.8, 24892.0], [68.9, 25041.0], [69.0, 25041.0], [69.1, 25387.0], [69.2, 25479.0], [69.3, 25607.0], [69.4, 25609.0], [69.5, 25609.0], [69.6, 25636.0], [69.7, 25663.0], [69.8, 25709.0], [69.9, 25784.0], [70.0, 25784.0], [70.1, 25815.0], [70.2, 26161.0], [70.3, 26234.0], [70.4, 26327.0], [70.5, 26327.0], [70.6, 26517.0], [70.7, 26521.0], [70.8, 26538.0], [70.9, 26643.0], [71.0, 26643.0], [71.1, 26664.0], [71.2, 26686.0], [71.3, 26743.0], [71.4, 26756.0], [71.5, 26756.0], [71.6, 26814.0], [71.7, 27117.0], [71.8, 27494.0], [71.9, 27689.0], [72.0, 27689.0], [72.1, 27704.0], [72.2, 27748.0], [72.3, 27909.0], [72.4, 27969.0], [72.5, 27969.0], [72.6, 28192.0], [72.7, 28233.0], [72.8, 28295.0], [72.9, 28530.0], [73.0, 28530.0], [73.1, 28768.0], [73.2, 28847.0], [73.3, 28962.0], [73.4, 28962.0], [73.5, 29182.0], [73.6, 29558.0], [73.7, 29710.0], [73.8, 29847.0], [73.9, 29847.0], [74.0, 29878.0], [74.1, 29983.0], [74.2, 29988.0], [74.3, 30170.0], [74.4, 30170.0], [74.5, 30182.0], [74.6, 30198.0], [74.7, 30262.0], [74.8, 30316.0], [74.9, 30316.0], [75.0, 30470.0], [75.1, 30504.0], [75.2, 30578.0], [75.3, 30589.0], [75.4, 30589.0], [75.5, 30961.0], [75.6, 31193.0], [75.7, 31293.0], [75.8, 31324.0], [75.9, 31324.0], [76.0, 31652.0], [76.1, 31846.0], [76.2, 31861.0], [76.3, 31909.0], [76.4, 31909.0], [76.5, 32171.0], [76.6, 32240.0], [76.7, 32339.0], [76.8, 32572.0], [76.9, 32572.0], [77.0, 32586.0], [77.1, 32749.0], [77.2, 32928.0], [77.3, 33013.0], [77.4, 33013.0], [77.5, 33581.0], [77.6, 33613.0], [77.7, 33709.0], [77.8, 33843.0], [77.9, 33843.0], [78.0, 34135.0], [78.1, 34223.0], [78.2, 34598.0], [78.3, 34698.0], [78.4, 34698.0], [78.5, 35096.0], [78.6, 35145.0], [78.7, 35221.0], [78.8, 35284.0], [78.9, 35284.0], [79.0, 35694.0], [79.1, 35715.0], [79.2, 35722.0], [79.3, 35845.0], [79.4, 35845.0], [79.5, 36035.0], [79.6, 36057.0], [79.7, 36179.0], [79.8, 36187.0], [79.9, 36187.0], [80.0, 36192.0], [80.1, 36451.0], [80.2, 36562.0], [80.3, 36562.0], [80.4, 36575.0], [80.5, 37139.0], [80.6, 37305.0], [80.7, 37397.0], [80.8, 37397.0], [80.9, 37509.0], [81.0, 38018.0], [81.1, 38336.0], [81.2, 38522.0], [81.3, 38522.0], [81.4, 38575.0], [81.5, 38593.0], [81.6, 38987.0], [81.7, 39143.0], [81.8, 39143.0], [81.9, 39495.0], [82.0, 39501.0], [82.1, 39504.0], [82.2, 39729.0], [82.3, 39729.0], [82.4, 39762.0], [82.5, 39766.0], [82.6, 40064.0], [82.7, 40333.0], [82.8, 40333.0], [82.9, 40339.0], [83.0, 40354.0], [83.1, 40455.0], [83.2, 40511.0], [83.3, 40511.0], [83.4, 40520.0], [83.5, 40596.0], [83.6, 40614.0], [83.7, 40792.0], [83.8, 40792.0], [83.9, 40815.0], [84.0, 40885.0], [84.1, 40897.0], [84.2, 41203.0], [84.3, 41203.0], [84.4, 41242.0], [84.5, 41247.0], [84.6, 41263.0], [84.7, 41624.0], [84.8, 41624.0], [84.9, 41689.0], [85.0, 41822.0], [85.1, 41997.0], [85.2, 42045.0], [85.3, 42045.0], [85.4, 42163.0], [85.5, 42197.0], [85.6, 42249.0], [85.7, 42284.0], [85.8, 42284.0], [85.9, 42287.0], [86.0, 42497.0], [86.1, 42759.0], [86.2, 42848.0], [86.3, 42848.0], [86.4, 43061.0], [86.5, 43096.0], [86.6, 43434.0], [86.7, 43434.0], [86.8, 43529.0], [86.9, 43547.0], [87.0, 43604.0], [87.1, 43764.0], [87.2, 43764.0], [87.3, 44098.0], [87.4, 44221.0], [87.5, 44299.0], [87.6, 44341.0], [87.7, 44341.0], [87.8, 44659.0], [87.9, 44748.0], [88.0, 45022.0], [88.1, 45196.0], [88.2, 45196.0], [88.3, 45259.0], [88.4, 45523.0], [88.5, 46136.0], [88.6, 46227.0], [88.7, 46227.0], [88.8, 46278.0], [88.9, 46701.0], [89.0, 46733.0], [89.1, 47198.0], [89.2, 47198.0], [89.3, 47483.0], [89.4, 47608.0], [89.5, 47681.0], [89.6, 47805.0], [89.7, 47805.0], [89.8, 48476.0], [89.9, 48494.0], [90.0, 48497.0], [90.1, 48502.0], [90.2, 48502.0], [90.3, 48594.0], [90.4, 48732.0], [90.5, 48887.0], [90.6, 49064.0], [90.7, 49064.0], [90.8, 49180.0], [90.9, 49645.0], [91.0, 49779.0], [91.1, 49848.0], [91.2, 49848.0], [91.3, 50025.0], [91.4, 50061.0], [91.5, 50205.0], [91.6, 50487.0], [91.7, 50487.0], [91.8, 50780.0], [91.9, 51014.0], [92.0, 51049.0], [92.1, 51197.0], [92.2, 51197.0], [92.3, 51393.0], [92.4, 51730.0], [92.5, 52124.0], [92.6, 52311.0], [92.7, 52311.0], [92.8, 52711.0], [92.9, 52870.0], [93.0, 53390.0], [93.1, 53657.0], [93.2, 53657.0], [93.3, 54504.0], [93.4, 54751.0], [93.5, 54795.0], [93.6, 54795.0], [93.7, 55477.0], [93.8, 56612.0], [93.9, 56748.0], [94.0, 57251.0], [94.1, 57251.0], [94.2, 57453.0], [94.3, 58639.0], [94.4, 59097.0], [94.5, 59320.0], [94.6, 59320.0], [94.7, 59730.0], [94.8, 60010.0], [94.9, 60214.0], [95.0, 60318.0], [95.1, 60318.0], [95.2, 60376.0], [95.3, 60378.0], [95.4, 60380.0], [95.5, 60384.0], [95.6, 60384.0], [95.7, 60388.0], [95.8, 60390.0], [95.9, 60390.0], [96.0, 60392.0], [96.1, 60392.0], [96.2, 60394.0], [96.3, 60394.0], [96.4, 60394.0], [96.5, 60395.0], [96.6, 60395.0], [96.7, 60398.0], [96.8, 60398.0], [96.9, 60399.0], [97.0, 60401.0], [97.1, 60401.0], [97.2, 60404.0], [97.3, 60408.0], [97.4, 60409.0], [97.5, 60411.0], [97.6, 60411.0], [97.7, 60411.0], [97.8, 60415.0], [97.9, 60417.0], [98.0, 60418.0], [98.1, 60418.0], [98.2, 60418.0], [98.3, 60421.0], [98.4, 60422.0], [98.5, 60427.0], [98.6, 60427.0], [98.7, 60439.0], [98.8, 60458.0], [98.9, 60458.0], [99.0, 60462.0], [99.1, 60462.0], [99.2, 60472.0], [99.3, 60475.0], [99.4, 60513.0], [99.5, 60556.0], [99.6, 60556.0], [99.7, 60560.0], [99.8, 60563.0], [99.9, 60589.0], [100.0, 60589.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 124.0], [0.1, 124.0], [0.2, 124.0], [0.3, 126.0], [0.4, 126.0], [0.5, 126.0], [0.6, 126.0], [0.7, 126.0], [0.8, 126.0], [0.9, 126.0], [1.0, 126.0], [1.1, 126.0], [1.2, 126.0], [1.3, 126.0], [1.4, 127.0], [1.5, 127.0], [1.6, 127.0], [1.7, 127.0], [1.8, 127.0], [1.9, 127.0], [2.0, 127.0], [2.1, 127.0], [2.2, 127.0], [2.3, 127.0], [2.4, 127.0], [2.5, 127.0], [2.6, 127.0], [2.7, 128.0], [2.8, 128.0], [2.9, 128.0], [3.0, 128.0], [3.1, 128.0], [3.2, 128.0], [3.3, 128.0], [3.4, 128.0], [3.5, 128.0], [3.6, 128.0], [3.7, 128.0], [3.8, 128.0], [3.9, 128.0], [4.0, 128.0], [4.1, 128.0], [4.2, 128.0], [4.3, 128.0], [4.4, 128.0], [4.5, 128.0], [4.6, 128.0], [4.7, 129.0], [4.8, 129.0], [4.9, 129.0], [5.0, 129.0], [5.1, 129.0], [5.2, 129.0], [5.3, 129.0], [5.4, 129.0], [5.5, 129.0], [5.6, 129.0], [5.7, 129.0], [5.8, 129.0], [5.9, 129.0], [6.0, 130.0], [6.1, 130.0], [6.2, 130.0], [6.3, 130.0], [6.4, 130.0], [6.5, 130.0], [6.6, 130.0], [6.7, 130.0], [6.8, 130.0], [6.9, 130.0], [7.0, 130.0], [7.1, 130.0], [7.2, 130.0], [7.3, 130.0], [7.4, 130.0], [7.5, 131.0], [7.6, 131.0], [7.7, 131.0], [7.8, 131.0], [7.9, 131.0], [8.0, 131.0], [8.1, 131.0], [8.2, 131.0], [8.3, 131.0], [8.4, 132.0], [8.5, 132.0], [8.6, 132.0], [8.7, 132.0], [8.8, 132.0], [8.9, 132.0], [9.0, 132.0], [9.1, 132.0], [9.2, 132.0], [9.3, 132.0], [9.4, 132.0], [9.5, 132.0], [9.6, 132.0], [9.7, 132.0], [9.8, 132.0], [9.9, 132.0], [10.0, 132.0], [10.1, 132.0], [10.2, 132.0], [10.3, 132.0], [10.4, 132.0], [10.5, 132.0], [10.6, 133.0], [10.7, 133.0], [10.8, 133.0], [10.9, 133.0], [11.0, 133.0], [11.1, 133.0], [11.2, 133.0], [11.3, 133.0], [11.4, 133.0], [11.5, 133.0], [11.6, 133.0], [11.7, 133.0], [11.8, 133.0], [11.9, 133.0], [12.0, 134.0], [12.1, 134.0], [12.2, 134.0], [12.3, 134.0], [12.4, 134.0], [12.5, 134.0], [12.6, 134.0], [12.7, 134.0], [12.8, 135.0], [12.9, 135.0], [13.0, 135.0], [13.1, 135.0], [13.2, 135.0], [13.3, 135.0], [13.4, 135.0], [13.5, 135.0], [13.6, 135.0], [13.7, 136.0], [13.8, 136.0], [13.9, 136.0], [14.0, 136.0], [14.1, 136.0], [14.2, 137.0], [14.3, 138.0], [14.4, 138.0], [14.5, 138.0], [14.6, 138.0], [14.7, 140.0], [14.8, 141.0], [14.9, 141.0], [15.0, 142.0], [15.1, 142.0], [15.2, 143.0], [15.3, 145.0], [15.4, 145.0], [15.5, 151.0], [15.6, 151.0], [15.7, 162.0], [15.8, 176.0], [15.9, 177.0], [16.0, 198.0], [16.1, 198.0], [16.2, 560.0], [16.3, 768.0], [16.4, 852.0], [16.5, 890.0], [16.6, 890.0], [16.7, 917.0], [16.8, 941.0], [16.9, 968.0], [17.0, 968.0], [17.1, 969.0], [17.2, 1008.0], [17.3, 1037.0], [17.4, 1103.0], [17.5, 1103.0], [17.6, 1131.0], [17.7, 1196.0], [17.8, 1197.0], [17.9, 1214.0], [18.0, 1214.0], [18.1, 1224.0], [18.2, 1250.0], [18.3, 1403.0], [18.4, 1521.0], [18.5, 1521.0], [18.6, 1694.0], [18.7, 2138.0], [18.8, 2205.0], [18.9, 3726.0], [19.0, 3726.0], [19.1, 4169.0], [19.2, 4385.0], [19.3, 4396.0], [19.4, 4416.0], [19.5, 4416.0], [19.6, 4446.0], [19.7, 4526.0], [19.8, 4705.0], [19.9, 4731.0], [20.0, 4731.0], [20.1, 4827.0], [20.2, 4888.0], [20.3, 4888.0], [20.4, 4888.0], [20.5, 5009.0], [20.6, 5028.0], [20.7, 5057.0], [20.8, 5066.0], [20.9, 5066.0], [21.0, 5069.0], [21.1, 5071.0], [21.2, 5081.0], [21.3, 5101.0], [21.4, 5101.0], [21.5, 5123.0], [21.6, 5132.0], [21.7, 5134.0], [21.8, 5142.0], [21.9, 5142.0], [22.0, 5154.0], [22.1, 5156.0], [22.2, 5166.0], [22.3, 5166.0], [22.4, 5166.0], [22.5, 5177.0], [22.6, 5187.0], [22.7, 5196.0], [22.8, 5208.0], [22.9, 5208.0], [23.0, 5217.0], [23.1, 5228.0], [23.2, 5243.0], [23.3, 5245.0], [23.4, 5245.0], [23.5, 5265.0], [23.6, 5278.0], [23.7, 5292.0], [23.8, 5292.0], [23.9, 5300.0], [24.0, 5310.0], [24.1, 5310.0], [24.2, 5325.0], [24.3, 5325.0], [24.4, 5340.0], [24.5, 5341.0], [24.6, 5341.0], [24.7, 5435.0], [24.8, 5435.0], [24.9, 5482.0], [25.0, 5513.0], [25.1, 5553.0], [25.2, 5554.0], [25.3, 5554.0], [25.4, 5586.0], [25.5, 5587.0], [25.6, 5608.0], [25.7, 5613.0], [25.8, 5613.0], [25.9, 5654.0], [26.0, 5655.0], [26.1, 5676.0], [26.2, 5744.0], [26.3, 5744.0], [26.4, 5929.0], [26.5, 5936.0], [26.6, 6140.0], [26.7, 6140.0], [26.8, 6167.0], [26.9, 6289.0], [27.0, 6289.0], [27.1, 6291.0], [27.2, 6291.0], [27.3, 6437.0], [27.4, 6438.0], [27.5, 6439.0], [27.6, 6485.0], [27.7, 6485.0], [27.8, 6487.0], [27.9, 6503.0], [28.0, 6520.0], [28.1, 6545.0], [28.2, 6545.0], [28.3, 6634.0], [28.4, 6678.0], [28.5, 6688.0], [28.6, 6718.0], [28.7, 6718.0], [28.8, 6792.0], [28.9, 6828.0], [29.0, 6836.0], [29.1, 6865.0], [29.2, 6865.0], [29.3, 6867.0], [29.4, 6954.0], [29.5, 6962.0], [29.6, 6990.0], [29.7, 6990.0], [29.8, 7206.0], [29.9, 7301.0], [30.0, 7329.0], [30.1, 7329.0], [30.2, 7350.0], [30.3, 7425.0], [30.4, 7466.0], [30.5, 7515.0], [30.6, 7515.0], [30.7, 7634.0], [30.8, 7662.0], [30.9, 7684.0], [31.0, 7686.0], [31.1, 7686.0], [31.2, 7700.0], [31.3, 7735.0], [31.4, 7860.0], [31.5, 7893.0], [31.6, 7893.0], [31.7, 7924.0], [31.8, 7981.0], [31.9, 7988.0], [32.0, 7999.0], [32.1, 7999.0], [32.2, 8040.0], [32.3, 8063.0], [32.4, 8250.0], [32.5, 8294.0], [32.6, 8294.0], [32.7, 8344.0], [32.8, 8414.0], [32.9, 8458.0], [33.0, 8555.0], [33.1, 8555.0], [33.2, 8636.0], [33.3, 8643.0], [33.4, 8647.0], [33.5, 8647.0], [33.6, 8648.0], [33.7, 8790.0], [33.8, 8820.0], [33.9, 8829.0], [34.0, 8829.0], [34.1, 8839.0], [34.2, 8854.0], [34.3, 8988.0], [34.4, 9011.0], [34.5, 9011.0], [34.6, 9080.0], [34.7, 9092.0], [34.8, 9175.0], [34.9, 9196.0], [35.0, 9196.0], [35.1, 9204.0], [35.2, 9245.0], [35.3, 9269.0], [35.4, 9284.0], [35.5, 9284.0], [35.6, 9340.0], [35.7, 9387.0], [35.8, 9398.0], [35.9, 9444.0], [36.0, 9444.0], [36.1, 9460.0], [36.2, 9494.0], [36.3, 9516.0], [36.4, 9548.0], [36.5, 9548.0], [36.6, 9664.0], [36.7, 9682.0], [36.8, 9684.0], [36.9, 9684.0], [37.0, 9709.0], [37.1, 9724.0], [37.2, 9740.0], [37.3, 9762.0], [37.4, 9762.0], [37.5, 9821.0], [37.6, 9827.0], [37.7, 9828.0], [37.8, 9830.0], [37.9, 9830.0], [38.0, 9869.0], [38.1, 9870.0], [38.2, 9903.0], [38.3, 9992.0], [38.4, 9992.0], [38.5, 10004.0], [38.6, 10103.0], [38.7, 10124.0], [38.8, 10176.0], [38.9, 10176.0], [39.0, 10222.0], [39.1, 10239.0], [39.2, 10437.0], [39.3, 10463.0], [39.4, 10463.0], [39.5, 10486.0], [39.6, 10583.0], [39.7, 10603.0], [39.8, 10609.0], [39.9, 10609.0], [40.0, 10618.0], [40.1, 10628.0], [40.2, 10662.0], [40.3, 10662.0], [40.4, 10736.0], [40.5, 10747.0], [40.6, 10753.0], [40.7, 10809.0], [40.8, 10809.0], [40.9, 10877.0], [41.0, 10960.0], [41.1, 10963.0], [41.2, 10982.0], [41.3, 10982.0], [41.4, 10999.0], [41.5, 11118.0], [41.6, 11161.0], [41.7, 11224.0], [41.8, 11224.0], [41.9, 11289.0], [42.0, 11304.0], [42.1, 11352.0], [42.2, 11433.0], [42.3, 11433.0], [42.4, 11590.0], [42.5, 11595.0], [42.6, 11695.0], [42.7, 11736.0], [42.8, 11736.0], [42.9, 11742.0], [43.0, 11786.0], [43.1, 11804.0], [43.2, 11817.0], [43.3, 11817.0], [43.4, 11828.0], [43.5, 11839.0], [43.6, 11856.0], [43.7, 11856.0], [43.8, 11897.0], [43.9, 11938.0], [44.0, 11971.0], [44.1, 11987.0], [44.2, 11987.0], [44.3, 11991.0], [44.4, 12009.0], [44.5, 12054.0], [44.6, 12060.0], [44.7, 12060.0], [44.8, 12076.0], [44.9, 12107.0], [45.0, 12149.0], [45.1, 12167.0], [45.2, 12167.0], [45.3, 12189.0], [45.4, 12199.0], [45.5, 12200.0], [45.6, 12212.0], [45.7, 12212.0], [45.8, 12214.0], [45.9, 12263.0], [46.0, 12279.0], [46.1, 12385.0], [46.2, 12385.0], [46.3, 12438.0], [46.4, 12485.0], [46.5, 12567.0], [46.6, 12621.0], [46.7, 12621.0], [46.8, 12637.0], [46.9, 12691.0], [47.0, 12753.0], [47.1, 12753.0], [47.2, 12767.0], [47.3, 12880.0], [47.4, 12933.0], [47.5, 12957.0], [47.6, 12957.0], [47.7, 13013.0], [47.8, 13116.0], [47.9, 13164.0], [48.0, 13338.0], [48.1, 13338.0], [48.2, 13339.0], [48.3, 13474.0], [48.4, 13617.0], [48.5, 13709.0], [48.6, 13709.0], [48.7, 13721.0], [48.8, 13769.0], [48.9, 13778.0], [49.0, 13782.0], [49.1, 13782.0], [49.2, 13835.0], [49.3, 13845.0], [49.4, 13845.0], [49.5, 13890.0], [49.6, 13890.0], [49.7, 13899.0], [49.8, 13957.0], [49.9, 14195.0], [50.0, 14380.0], [50.1, 14380.0], [50.2, 14394.0], [50.3, 14395.0], [50.4, 14465.0], [50.5, 14465.0], [50.6, 14522.0], [50.7, 14551.0], [50.8, 14609.0], [50.9, 14616.0], [51.0, 14616.0], [51.1, 14727.0], [51.2, 14754.0], [51.3, 14808.0], [51.4, 14836.0], [51.5, 14836.0], [51.6, 14838.0], [51.7, 14909.0], [51.8, 14937.0], [51.9, 14969.0], [52.0, 14969.0], [52.1, 15440.0], [52.2, 15645.0], [52.3, 15730.0], [52.4, 15857.0], [52.5, 15857.0], [52.6, 15888.0], [52.7, 15947.0], [52.8, 16028.0], [52.9, 16261.0], [53.0, 16261.0], [53.1, 16313.0], [53.2, 16729.0], [53.3, 16831.0], [53.4, 16831.0], [53.5, 16853.0], [53.6, 16870.0], [53.7, 17042.0], [53.8, 17124.0], [53.9, 17124.0], [54.0, 17417.0], [54.1, 17507.0], [54.2, 17537.0], [54.3, 17781.0], [54.4, 17781.0], [54.5, 17851.0], [54.6, 17920.0], [54.7, 17961.0], [54.8, 18047.0], [54.9, 18047.0], [55.0, 18145.0], [55.1, 18182.0], [55.2, 18387.0], [55.3, 18470.0], [55.4, 18470.0], [55.5, 18477.0], [55.6, 18478.0], [55.7, 18620.0], [55.8, 18871.0], [55.9, 18871.0], [56.0, 18876.0], [56.1, 18876.0], [56.2, 18904.0], [56.3, 18918.0], [56.4, 18918.0], [56.5, 19018.0], [56.6, 19029.0], [56.7, 19081.0], [56.8, 19081.0], [56.9, 19121.0], [57.0, 19170.0], [57.1, 19197.0], [57.2, 19214.0], [57.3, 19214.0], [57.4, 19314.0], [57.5, 19514.0], [57.6, 19521.0], [57.7, 19581.0], [57.8, 19581.0], [57.9, 19823.0], [58.0, 19854.0], [58.1, 19931.0], [58.2, 19972.0], [58.3, 19972.0], [58.4, 19987.0], [58.5, 20005.0], [58.6, 20017.0], [58.7, 20171.0], [58.8, 20171.0], [58.9, 20251.0], [59.0, 20353.0], [59.1, 20425.0], [59.2, 20506.0], [59.3, 20506.0], [59.4, 20549.0], [59.5, 20557.0], [59.6, 20678.0], [59.7, 20681.0], [59.8, 20681.0], [59.9, 20694.0], [60.0, 20748.0], [60.1, 20842.0], [60.2, 20842.0], [60.3, 20910.0], [60.4, 20978.0], [60.5, 20986.0], [60.6, 21006.0], [60.7, 21006.0], [60.8, 21039.0], [60.9, 21068.0], [61.0, 21134.0], [61.1, 21152.0], [61.2, 21152.0], [61.3, 21312.0], [61.4, 21501.0], [61.5, 21502.0], [61.6, 21508.0], [61.7, 21508.0], [61.8, 21571.0], [61.9, 21645.0], [62.0, 21747.0], [62.1, 21784.0], [62.2, 21784.0], [62.3, 21851.0], [62.4, 21854.0], [62.5, 22023.0], [62.6, 22068.0], [62.7, 22068.0], [62.8, 22073.0], [62.9, 22140.0], [63.0, 22176.0], [63.1, 22240.0], [63.2, 22240.0], [63.3, 22266.0], [63.4, 22429.0], [63.5, 22519.0], [63.6, 22519.0], [63.7, 22581.0], [63.8, 22706.0], [63.9, 22802.0], [64.0, 22811.0], [64.1, 22811.0], [64.2, 22831.0], [64.3, 22851.0], [64.4, 22896.0], [64.5, 22932.0], [64.6, 22932.0], [64.7, 23035.0], [64.8, 23041.0], [64.9, 23096.0], [65.0, 23130.0], [65.1, 23130.0], [65.2, 23179.0], [65.3, 23220.0], [65.4, 23261.0], [65.5, 23264.0], [65.6, 23264.0], [65.7, 23265.0], [65.8, 23297.0], [65.9, 23384.0], [66.0, 23404.0], [66.1, 23404.0], [66.2, 23433.0], [66.3, 23621.0], [66.4, 23722.0], [66.5, 23750.0], [66.6, 23750.0], [66.7, 23977.0], [66.8, 24022.0], [66.9, 24022.0], [67.0, 24022.0], [67.1, 24035.0], [67.2, 24126.0], [67.3, 24128.0], [67.4, 24147.0], [67.5, 24147.0], [67.6, 24164.0], [67.7, 24218.0], [67.8, 24265.0], [67.9, 24335.0], [68.0, 24335.0], [68.1, 24445.0], [68.2, 24474.0], [68.3, 24536.0], [68.4, 24577.0], [68.5, 24577.0], [68.6, 24619.0], [68.7, 24623.0], [68.8, 24690.0], [68.9, 25138.0], [69.0, 25138.0], [69.1, 25226.0], [69.2, 25345.0], [69.3, 25346.0], [69.4, 25386.0], [69.5, 25386.0], [69.6, 25402.0], [69.7, 25405.0], [69.8, 25432.0], [69.9, 25519.0], [70.0, 25519.0], [70.1, 25890.0], [70.2, 25971.0], [70.3, 26019.0], [70.4, 26019.0], [70.5, 26246.0], [70.6, 26250.0], [70.7, 26257.0], [70.8, 26375.0], [70.9, 26375.0], [71.0, 26411.0], [71.1, 26414.0], [71.2, 26491.0], [71.3, 26497.0], [71.4, 26497.0], [71.5, 26502.0], [71.6, 26802.0], [71.7, 27225.0], [71.8, 27408.0], [71.9, 27408.0], [72.0, 27412.0], [72.1, 27472.0], [72.2, 27595.0], [72.3, 27670.0], [72.4, 27670.0], [72.5, 27932.0], [72.6, 27971.0], [72.7, 28043.0], [72.8, 28260.0], [72.9, 28260.0], [73.0, 28465.0], [73.1, 28579.0], [73.2, 28684.0], [73.3, 28921.0], [73.4, 28921.0], [73.5, 29271.0], [73.6, 29411.0], [73.7, 29584.0], [73.8, 29584.0], [73.9, 29628.0], [74.0, 29717.0], [74.1, 29721.0], [74.2, 29906.0], [74.3, 29906.0], [74.4, 29925.0], [74.5, 29930.0], [74.6, 29993.0], [74.7, 30063.0], [74.8, 30063.0], [74.9, 30201.0], [75.0, 30248.0], [75.1, 30302.0], [75.2, 30311.0], [75.3, 30311.0], [75.4, 30702.0], [75.5, 30902.0], [75.6, 31026.0], [75.7, 31027.0], [75.8, 31027.0], [75.9, 31398.0], [76.0, 31523.0], [76.1, 31597.0], [76.2, 31598.0], [76.3, 31598.0], [76.4, 31910.0], [76.5, 31971.0], [76.6, 32073.0], [76.7, 32073.0], [76.8, 32291.0], [76.9, 32337.0], [77.0, 32484.0], [77.1, 32672.0], [77.2, 32672.0], [77.3, 32681.0], [77.4, 33316.0], [77.5, 33346.0], [77.6, 33433.0], [77.7, 33433.0], [77.8, 33583.0], [77.9, 33884.0], [78.0, 33955.0], [78.1, 34253.0], [78.2, 34253.0], [78.3, 34436.0], [78.4, 34794.0], [78.5, 34880.0], [78.6, 34958.0], [78.7, 34958.0], [78.8, 34997.0], [78.9, 35437.0], [79.0, 35445.0], [79.1, 35464.0], [79.2, 35464.0], [79.3, 35539.0], [79.4, 35761.0], [79.5, 35791.0], [79.6, 35825.0], [79.7, 35825.0], [79.8, 35908.0], [79.9, 35940.0], [80.0, 36189.0], [80.1, 36189.0], [80.2, 36298.0], [80.3, 36304.0], [80.4, 36862.0], [80.5, 36997.0], [80.6, 36997.0], [80.7, 37144.0], [80.8, 37254.0], [80.9, 37765.0], [81.0, 38072.0], [81.1, 38072.0], [81.2, 38247.0], [81.3, 38307.0], [81.4, 38315.0], [81.5, 38718.0], [81.6, 38718.0], [81.7, 38851.0], [81.8, 39204.0], [81.9, 39231.0], [82.0, 39238.0], [82.1, 39238.0], [82.2, 39438.0], [82.3, 39476.0], [82.4, 39498.0], [82.5, 39680.0], [82.6, 39680.0], [82.7, 40073.0], [82.8, 40078.0], [82.9, 40086.0], [83.0, 40187.0], [83.1, 40187.0], [83.2, 40234.0], [83.3, 40260.0], [83.4, 40332.0], [83.5, 40332.0], [83.6, 40356.0], [83.7, 40527.0], [83.8, 40546.0], [83.9, 40608.0], [84.0, 40608.0], [84.1, 40633.0], [84.2, 40920.0], [84.3, 40949.0], [84.4, 40991.0], [84.5, 40991.0], [84.6, 41005.0], [84.7, 41344.0], [84.8, 41427.0], [84.9, 41545.0], [85.0, 41545.0], [85.1, 41724.0], [85.2, 41766.0], [85.3, 41894.0], [85.4, 41937.0], [85.5, 41937.0], [85.6, 41966.0], [85.7, 42018.0], [85.8, 42029.0], [85.9, 42204.0], [86.0, 42204.0], [86.1, 42477.0], [86.2, 42599.0], [86.3, 42783.0], [86.4, 42843.0], [86.5, 42843.0], [86.6, 43169.0], [86.7, 43219.0], [86.8, 43274.0], [86.9, 43274.0], [87.0, 43293.0], [87.1, 43506.0], [87.2, 43798.0], [87.3, 43933.0], [87.4, 43933.0], [87.5, 44034.0], [87.6, 44068.0], [87.7, 44395.0], [87.8, 44491.0], [87.9, 44491.0], [88.0, 44704.0], [88.1, 44916.0], [88.2, 44997.0], [88.3, 45260.0], [88.4, 45260.0], [88.5, 45860.0], [88.6, 45953.0], [88.7, 46009.0], [88.8, 46393.0], [88.9, 46393.0], [89.0, 46477.0], [89.1, 46934.0], [89.2, 47223.0], [89.3, 47351.0], [89.4, 47351.0], [89.5, 47422.0], [89.6, 47521.0], [89.7, 48150.0], [89.8, 48184.0], [89.9, 48184.0], [90.0, 48214.0], [90.1, 48221.0], [90.2, 48277.0], [90.3, 48277.0], [90.4, 48449.0], [90.5, 48599.0], [90.6, 48808.0], [90.7, 48897.0], [90.8, 48897.0], [90.9, 49394.0], [91.0, 49522.0], [91.1, 49592.0], [91.2, 49756.0], [91.3, 49756.0], [91.4, 49812.0], [91.5, 49956.0], [91.6, 50207.0], [91.7, 50517.0], [91.8, 50517.0], [91.9, 50721.0], [92.0, 50755.0], [92.1, 50920.0], [92.2, 51131.0], [92.3, 51131.0], [92.4, 51466.0], [92.5, 51867.0], [92.6, 52032.0], [92.7, 52449.0], [92.8, 52449.0], [92.9, 52617.0], [93.0, 53144.0], [93.1, 53386.0], [93.2, 54241.0], [93.3, 54241.0], [93.4, 54480.0], [93.5, 54482.0], [93.6, 55200.0], [93.7, 55200.0], [93.8, 56305.0], [93.9, 56493.0], [94.0, 56995.0], [94.1, 57154.0], [94.2, 57154.0], [94.3, 58356.0], [94.4, 58849.0], [94.5, 59057.0], [94.6, 59477.0], [94.7, 59477.0], [94.8, 59712.0], [94.9, 59958.0], [95.0, 60055.0], [95.1, 60127.0], [95.2, 60127.0], [95.3, 60128.0], [95.4, 60129.0], [95.5, 60129.0], [95.6, 60130.0], [95.7, 60130.0], [95.8, 60131.0], [95.9, 60131.0], [96.0, 60131.0], [96.1, 60131.0], [96.2, 60131.0], [96.3, 60132.0], [96.4, 60132.0], [96.5, 60133.0], [96.6, 60134.0], [96.7, 60134.0], [96.8, 60134.0], [96.9, 60134.0], [97.0, 60134.0], [97.1, 60134.0], [97.2, 60134.0], [97.3, 60135.0], [97.4, 60135.0], [97.5, 60135.0], [97.6, 60135.0], [97.7, 60135.0], [97.8, 60135.0], [97.9, 60136.0], [98.0, 60136.0], [98.1, 60136.0], [98.2, 60136.0], [98.3, 60137.0], [98.4, 60137.0], [98.5, 60137.0], [98.6, 60137.0], [98.7, 60137.0], [98.8, 60137.0], [98.9, 60137.0], [99.0, 60139.0], [99.1, 60139.0], [99.2, 60140.0], [99.3, 60140.0], [99.4, 60146.0], [99.5, 60158.0], [99.6, 60158.0], [99.7, 60262.0], [99.8, 60270.0], [99.9, 60289.0], [100.0, 60289.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 246.0], [0.1, 246.0], [0.2, 246.0], [0.3, 246.0], [0.4, 247.0], [0.5, 247.0], [0.6, 247.0], [0.7, 247.0], [0.8, 247.0], [0.9, 248.0], [1.0, 248.0], [1.1, 248.0], [1.2, 248.0], [1.3, 248.0], [1.4, 248.0], [1.5, 248.0], [1.6, 248.0], [1.7, 248.0], [1.8, 249.0], [1.9, 249.0], [2.0, 249.0], [2.1, 249.0], [2.2, 249.0], [2.3, 249.0], [2.4, 249.0], [2.5, 249.0], [2.6, 249.0], [2.7, 249.0], [2.8, 249.0], [2.9, 249.0], [3.0, 249.0], [3.1, 249.0], [3.2, 249.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 250.0], [4.3, 250.0], [4.4, 250.0], [4.5, 250.0], [4.6, 250.0], [4.7, 250.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 251.0], [6.0, 251.0], [6.1, 251.0], [6.2, 251.0], [6.3, 251.0], [6.4, 251.0], [6.5, 251.0], [6.6, 251.0], [6.7, 251.0], [6.8, 251.0], [6.9, 251.0], [7.0, 251.0], [7.1, 251.0], [7.2, 251.0], [7.3, 251.0], [7.4, 251.0], [7.5, 251.0], [7.6, 251.0], [7.7, 251.0], [7.8, 251.0], [7.9, 251.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 252.0], [8.7, 252.0], [8.8, 252.0], [8.9, 252.0], [9.0, 252.0], [9.1, 252.0], [9.2, 252.0], [9.3, 252.0], [9.4, 252.0], [9.5, 252.0], [9.6, 252.0], [9.7, 252.0], [9.8, 252.0], [9.9, 252.0], [10.0, 252.0], [10.1, 252.0], [10.2, 252.0], [10.3, 252.0], [10.4, 252.0], [10.5, 252.0], [10.6, 252.0], [10.7, 252.0], [10.8, 252.0], [10.9, 252.0], [11.0, 252.0], [11.1, 253.0], [11.2, 253.0], [11.3, 253.0], [11.4, 253.0], [11.5, 253.0], [11.6, 253.0], [11.7, 253.0], [11.8, 253.0], [11.9, 253.0], [12.0, 253.0], [12.1, 253.0], [12.2, 253.0], [12.3, 253.0], [12.4, 253.0], [12.5, 253.0], [12.6, 253.0], [12.7, 253.0], [12.8, 253.0], [12.9, 253.0], [13.0, 253.0], [13.1, 253.0], [13.2, 253.0], [13.3, 253.0], [13.4, 253.0], [13.5, 253.0], [13.6, 253.0], [13.7, 253.0], [13.8, 253.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 254.0], [15.5, 254.0], [15.6, 254.0], [15.7, 254.0], [15.8, 254.0], [15.9, 254.0], [16.0, 254.0], [16.1, 254.0], [16.2, 254.0], [16.3, 254.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 254.0], [16.9, 254.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 254.0], [17.4, 254.0], [17.5, 254.0], [17.6, 255.0], [17.7, 255.0], [17.8, 255.0], [17.9, 255.0], [18.0, 255.0], [18.1, 255.0], [18.2, 255.0], [18.3, 255.0], [18.4, 255.0], [18.5, 255.0], [18.6, 255.0], [18.7, 255.0], [18.8, 255.0], [18.9, 255.0], [19.0, 255.0], [19.1, 255.0], [19.2, 255.0], [19.3, 255.0], [19.4, 255.0], [19.5, 255.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 256.0], [20.1, 256.0], [20.2, 256.0], [20.3, 256.0], [20.4, 256.0], [20.5, 256.0], [20.6, 256.0], [20.7, 256.0], [20.8, 256.0], [20.9, 256.0], [21.0, 256.0], [21.1, 256.0], [21.2, 256.0], [21.3, 256.0], [21.4, 256.0], [21.5, 256.0], [21.6, 256.0], [21.7, 256.0], [21.8, 256.0], [21.9, 256.0], [22.0, 256.0], [22.1, 256.0], [22.2, 256.0], [22.3, 256.0], [22.4, 256.0], [22.5, 256.0], [22.6, 256.0], [22.7, 256.0], [22.8, 256.0], [22.9, 256.0], [23.0, 257.0], [23.1, 257.0], [23.2, 257.0], [23.3, 257.0], [23.4, 257.0], [23.5, 257.0], [23.6, 257.0], [23.7, 257.0], [23.8, 257.0], [23.9, 257.0], [24.0, 257.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 257.0], [24.9, 257.0], [25.0, 258.0], [25.1, 258.0], [25.2, 258.0], [25.3, 258.0], [25.4, 258.0], [25.5, 258.0], [25.6, 258.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 258.0], [26.4, 258.0], [26.5, 258.0], [26.6, 258.0], [26.7, 258.0], [26.8, 258.0], [26.9, 259.0], [27.0, 259.0], [27.1, 259.0], [27.2, 259.0], [27.3, 259.0], [27.4, 259.0], [27.5, 259.0], [27.6, 259.0], [27.7, 259.0], [27.8, 259.0], [27.9, 259.0], [28.0, 259.0], [28.1, 259.0], [28.2, 259.0], [28.3, 259.0], [28.4, 259.0], [28.5, 259.0], [28.6, 259.0], [28.7, 259.0], [28.8, 259.0], [28.9, 260.0], [29.0, 260.0], [29.1, 260.0], [29.2, 260.0], [29.3, 260.0], [29.4, 260.0], [29.5, 260.0], [29.6, 260.0], [29.7, 260.0], [29.8, 260.0], [29.9, 260.0], [30.0, 260.0], [30.1, 260.0], [30.2, 260.0], [30.3, 260.0], [30.4, 260.0], [30.5, 260.0], [30.6, 260.0], [30.7, 260.0], [30.8, 260.0], [30.9, 260.0], [31.0, 260.0], [31.1, 260.0], [31.2, 260.0], [31.3, 260.0], [31.4, 260.0], [31.5, 260.0], [31.6, 260.0], [31.7, 260.0], [31.8, 260.0], [31.9, 260.0], [32.0, 260.0], [32.1, 260.0], [32.2, 260.0], [32.3, 260.0], [32.4, 260.0], [32.5, 260.0], [32.6, 260.0], [32.7, 260.0], [32.8, 260.0], [32.9, 260.0], [33.0, 260.0], [33.1, 261.0], [33.2, 261.0], [33.3, 261.0], [33.4, 261.0], [33.5, 261.0], [33.6, 261.0], [33.7, 261.0], [33.8, 261.0], [33.9, 261.0], [34.0, 261.0], [34.1, 261.0], [34.2, 261.0], [34.3, 261.0], [34.4, 261.0], [34.5, 261.0], [34.6, 261.0], [34.7, 261.0], [34.8, 261.0], [34.9, 261.0], [35.0, 261.0], [35.1, 261.0], [35.2, 261.0], [35.3, 261.0], [35.4, 261.0], [35.5, 261.0], [35.6, 261.0], [35.7, 261.0], [35.8, 261.0], [35.9, 261.0], [36.0, 261.0], [36.1, 261.0], [36.2, 261.0], [36.3, 261.0], [36.4, 261.0], [36.5, 261.0], [36.6, 261.0], [36.7, 261.0], [36.8, 261.0], [36.9, 261.0], [37.0, 261.0], [37.1, 261.0], [37.2, 262.0], [37.3, 262.0], [37.4, 262.0], [37.5, 262.0], [37.6, 262.0], [37.7, 262.0], [37.8, 262.0], [37.9, 262.0], [38.0, 262.0], [38.1, 262.0], [38.2, 262.0], [38.3, 262.0], [38.4, 262.0], [38.5, 262.0], [38.6, 262.0], [38.7, 262.0], [38.8, 262.0], [38.9, 262.0], [39.0, 262.0], [39.1, 262.0], [39.2, 262.0], [39.3, 262.0], [39.4, 262.0], [39.5, 262.0], [39.6, 262.0], [39.7, 262.0], [39.8, 262.0], [39.9, 262.0], [40.0, 262.0], [40.1, 262.0], [40.2, 262.0], [40.3, 262.0], [40.4, 262.0], [40.5, 262.0], [40.6, 262.0], [40.7, 262.0], [40.8, 262.0], [40.9, 262.0], [41.0, 263.0], [41.1, 263.0], [41.2, 263.0], [41.3, 263.0], [41.4, 263.0], [41.5, 263.0], [41.6, 263.0], [41.7, 263.0], [41.8, 263.0], [41.9, 263.0], [42.0, 263.0], [42.1, 263.0], [42.2, 263.0], [42.3, 263.0], [42.4, 263.0], [42.5, 263.0], [42.6, 263.0], [42.7, 263.0], [42.8, 263.0], [42.9, 263.0], [43.0, 263.0], [43.1, 263.0], [43.2, 263.0], [43.3, 263.0], [43.4, 263.0], [43.5, 263.0], [43.6, 263.0], [43.7, 263.0], [43.8, 263.0], [43.9, 263.0], [44.0, 263.0], [44.1, 263.0], [44.2, 263.0], [44.3, 263.0], [44.4, 263.0], [44.5, 263.0], [44.6, 263.0], [44.7, 263.0], [44.8, 263.0], [44.9, 263.0], [45.0, 264.0], [45.1, 264.0], [45.2, 264.0], [45.3, 264.0], [45.4, 264.0], [45.5, 264.0], [45.6, 264.0], [45.7, 264.0], [45.8, 264.0], [45.9, 264.0], [46.0, 264.0], [46.1, 264.0], [46.2, 264.0], [46.3, 264.0], [46.4, 264.0], [46.5, 264.0], [46.6, 264.0], [46.7, 264.0], [46.8, 264.0], [46.9, 264.0], [47.0, 264.0], [47.1, 264.0], [47.2, 264.0], [47.3, 264.0], [47.4, 264.0], [47.5, 264.0], [47.6, 264.0], [47.7, 264.0], [47.8, 264.0], [47.9, 264.0], [48.0, 264.0], [48.1, 264.0], [48.2, 265.0], [48.3, 265.0], [48.4, 265.0], [48.5, 265.0], [48.6, 265.0], [48.7, 265.0], [48.8, 265.0], [48.9, 265.0], [49.0, 265.0], [49.1, 265.0], [49.2, 265.0], [49.3, 265.0], [49.4, 265.0], [49.5, 265.0], [49.6, 265.0], [49.7, 265.0], [49.8, 265.0], [49.9, 265.0], [50.0, 265.0], [50.1, 265.0], [50.2, 265.0], [50.3, 265.0], [50.4, 266.0], [50.5, 266.0], [50.6, 266.0], [50.7, 266.0], [50.8, 266.0], [50.9, 266.0], [51.0, 266.0], [51.1, 266.0], [51.2, 266.0], [51.3, 266.0], [51.4, 266.0], [51.5, 266.0], [51.6, 266.0], [51.7, 266.0], [51.8, 266.0], [51.9, 266.0], [52.0, 266.0], [52.1, 266.0], [52.2, 266.0], [52.3, 266.0], [52.4, 266.0], [52.5, 266.0], [52.6, 266.0], [52.7, 266.0], [52.8, 266.0], [52.9, 266.0], [53.0, 267.0], [53.1, 267.0], [53.2, 267.0], [53.3, 267.0], [53.4, 267.0], [53.5, 267.0], [53.6, 267.0], [53.7, 267.0], [53.8, 267.0], [53.9, 267.0], [54.0, 267.0], [54.1, 267.0], [54.2, 267.0], [54.3, 267.0], [54.4, 267.0], [54.5, 267.0], [54.6, 267.0], [54.7, 267.0], [54.8, 268.0], [54.9, 268.0], [55.0, 268.0], [55.1, 268.0], [55.2, 268.0], [55.3, 268.0], [55.4, 268.0], [55.5, 268.0], [55.6, 268.0], [55.7, 268.0], [55.8, 268.0], [55.9, 268.0], [56.0, 268.0], [56.1, 268.0], [56.2, 268.0], [56.3, 268.0], [56.4, 268.0], [56.5, 268.0], [56.6, 268.0], [56.7, 268.0], [56.8, 268.0], [56.9, 268.0], [57.0, 268.0], [57.1, 268.0], [57.2, 268.0], [57.3, 268.0], [57.4, 268.0], [57.5, 268.0], [57.6, 269.0], [57.7, 269.0], [57.8, 269.0], [57.9, 269.0], [58.0, 269.0], [58.1, 269.0], [58.2, 269.0], [58.3, 269.0], [58.4, 269.0], [58.5, 269.0], [58.6, 269.0], [58.7, 269.0], [58.8, 269.0], [58.9, 269.0], [59.0, 269.0], [59.1, 269.0], [59.2, 269.0], [59.3, 269.0], [59.4, 269.0], [59.5, 269.0], [59.6, 269.0], [59.7, 269.0], [59.8, 269.0], [59.9, 269.0], [60.0, 269.0], [60.1, 270.0], [60.2, 270.0], [60.3, 270.0], [60.4, 270.0], [60.5, 270.0], [60.6, 270.0], [60.7, 270.0], [60.8, 270.0], [60.9, 271.0], [61.0, 271.0], [61.1, 271.0], [61.2, 271.0], [61.3, 271.0], [61.4, 271.0], [61.5, 271.0], [61.6, 271.0], [61.7, 271.0], [61.8, 271.0], [61.9, 271.0], [62.0, 271.0], [62.1, 271.0], [62.2, 271.0], [62.3, 272.0], [62.4, 272.0], [62.5, 272.0], [62.6, 272.0], [62.7, 272.0], [62.8, 272.0], [62.9, 272.0], [63.0, 272.0], [63.1, 272.0], [63.2, 273.0], [63.3, 273.0], [63.4, 273.0], [63.5, 273.0], [63.6, 273.0], [63.7, 273.0], [63.8, 273.0], [63.9, 273.0], [64.0, 273.0], [64.1, 273.0], [64.2, 273.0], [64.3, 273.0], [64.4, 273.0], [64.5, 273.0], [64.6, 273.0], [64.7, 273.0], [64.8, 273.0], [64.9, 273.0], [65.0, 273.0], [65.1, 273.0], [65.2, 274.0], [65.3, 274.0], [65.4, 274.0], [65.5, 274.0], [65.6, 274.0], [65.7, 274.0], [65.8, 274.0], [65.9, 274.0], [66.0, 274.0], [66.1, 274.0], [66.2, 274.0], [66.3, 274.0], [66.4, 274.0], [66.5, 274.0], [66.6, 274.0], [66.7, 274.0], [66.8, 274.0], [66.9, 275.0], [67.0, 275.0], [67.1, 275.0], [67.2, 275.0], [67.3, 275.0], [67.4, 275.0], [67.5, 275.0], [67.6, 275.0], [67.7, 275.0], [67.8, 275.0], [67.9, 276.0], [68.0, 276.0], [68.1, 276.0], [68.2, 276.0], [68.3, 276.0], [68.4, 276.0], [68.5, 276.0], [68.6, 276.0], [68.7, 276.0], [68.8, 276.0], [68.9, 276.0], [69.0, 276.0], [69.1, 276.0], [69.2, 276.0], [69.3, 276.0], [69.4, 276.0], [69.5, 277.0], [69.6, 277.0], [69.7, 277.0], [69.8, 277.0], [69.9, 277.0], [70.0, 277.0], [70.1, 277.0], [70.2, 277.0], [70.3, 277.0], [70.4, 277.0], [70.5, 277.0], [70.6, 277.0], [70.7, 277.0], [70.8, 277.0], [70.9, 277.0], [71.0, 277.0], [71.1, 277.0], [71.2, 277.0], [71.3, 278.0], [71.4, 278.0], [71.5, 278.0], [71.6, 278.0], [71.7, 278.0], [71.8, 278.0], [71.9, 278.0], [72.0, 278.0], [72.1, 278.0], [72.2, 278.0], [72.3, 278.0], [72.4, 279.0], [72.5, 279.0], [72.6, 279.0], [72.7, 279.0], [72.8, 279.0], [72.9, 279.0], [73.0, 279.0], [73.1, 279.0], [73.2, 279.0], [73.3, 279.0], [73.4, 279.0], [73.5, 279.0], [73.6, 279.0], [73.7, 279.0], [73.8, 279.0], [73.9, 280.0], [74.0, 280.0], [74.1, 280.0], [74.2, 280.0], [74.3, 280.0], [74.4, 280.0], [74.5, 280.0], [74.6, 280.0], [74.7, 280.0], [74.8, 280.0], [74.9, 281.0], [75.0, 281.0], [75.1, 281.0], [75.2, 281.0], [75.3, 281.0], [75.4, 281.0], [75.5, 281.0], [75.6, 281.0], [75.7, 281.0], [75.8, 282.0], [75.9, 282.0], [76.0, 282.0], [76.1, 282.0], [76.2, 282.0], [76.3, 282.0], [76.4, 282.0], [76.5, 283.0], [76.6, 283.0], [76.7, 283.0], [76.8, 283.0], [76.9, 283.0], [77.0, 283.0], [77.1, 283.0], [77.2, 283.0], [77.3, 283.0], [77.4, 283.0], [77.5, 283.0], [77.6, 284.0], [77.7, 284.0], [77.8, 284.0], [77.9, 284.0], [78.0, 284.0], [78.1, 284.0], [78.2, 284.0], [78.3, 284.0], [78.4, 285.0], [78.5, 285.0], [78.6, 285.0], [78.7, 285.0], [78.8, 285.0], [78.9, 285.0], [79.0, 285.0], [79.1, 285.0], [79.2, 285.0], [79.3, 285.0], [79.4, 286.0], [79.5, 286.0], [79.6, 286.0], [79.7, 286.0], [79.8, 286.0], [79.9, 286.0], [80.0, 286.0], [80.1, 286.0], [80.2, 286.0], [80.3, 286.0], [80.4, 286.0], [80.5, 287.0], [80.6, 287.0], [80.7, 287.0], [80.8, 287.0], [80.9, 288.0], [81.0, 288.0], [81.1, 288.0], [81.2, 288.0], [81.3, 288.0], [81.4, 288.0], [81.5, 288.0], [81.6, 288.0], [81.7, 288.0], [81.8, 288.0], [81.9, 288.0], [82.0, 288.0], [82.1, 289.0], [82.2, 290.0], [82.3, 290.0], [82.4, 290.0], [82.5, 290.0], [82.6, 290.0], [82.7, 290.0], [82.8, 290.0], [82.9, 290.0], [83.0, 290.0], [83.1, 290.0], [83.2, 291.0], [83.3, 291.0], [83.4, 291.0], [83.5, 291.0], [83.6, 292.0], [83.7, 292.0], [83.8, 292.0], [83.9, 293.0], [84.0, 293.0], [84.1, 293.0], [84.2, 293.0], [84.3, 293.0], [84.4, 293.0], [84.5, 294.0], [84.6, 294.0], [84.7, 294.0], [84.8, 294.0], [84.9, 295.0], [85.0, 295.0], [85.1, 296.0], [85.2, 296.0], [85.3, 296.0], [85.4, 296.0], [85.5, 297.0], [85.6, 297.0], [85.7, 297.0], [85.8, 297.0], [85.9, 297.0], [86.0, 297.0], [86.1, 298.0], [86.2, 298.0], [86.3, 298.0], [86.4, 298.0], [86.5, 299.0], [86.6, 299.0], [86.7, 299.0], [86.8, 299.0], [86.9, 299.0], [87.0, 299.0], [87.1, 300.0], [87.2, 300.0], [87.3, 301.0], [87.4, 301.0], [87.5, 301.0], [87.6, 301.0], [87.7, 301.0], [87.8, 302.0], [87.9, 302.0], [88.0, 302.0], [88.1, 302.0], [88.2, 302.0], [88.3, 303.0], [88.4, 303.0], [88.5, 303.0], [88.6, 303.0], [88.7, 303.0], [88.8, 303.0], [88.9, 303.0], [89.0, 304.0], [89.1, 304.0], [89.2, 304.0], [89.3, 304.0], [89.4, 304.0], [89.5, 304.0], [89.6, 304.0], [89.7, 305.0], [89.8, 306.0], [89.9, 306.0], [90.0, 306.0], [90.1, 306.0], [90.2, 307.0], [90.3, 307.0], [90.4, 307.0], [90.5, 308.0], [90.6, 308.0], [90.7, 308.0], [90.8, 309.0], [90.9, 309.0], [91.0, 309.0], [91.1, 310.0], [91.2, 310.0], [91.3, 311.0], [91.4, 311.0], [91.5, 311.0], [91.6, 311.0], [91.7, 311.0], [91.8, 311.0], [91.9, 311.0], [92.0, 312.0], [92.1, 313.0], [92.2, 313.0], [92.3, 314.0], [92.4, 314.0], [92.5, 314.0], [92.6, 314.0], [92.7, 315.0], [92.8, 315.0], [92.9, 315.0], [93.0, 315.0], [93.1, 316.0], [93.2, 317.0], [93.3, 317.0], [93.4, 317.0], [93.5, 317.0], [93.6, 318.0], [93.7, 318.0], [93.8, 318.0], [93.9, 318.0], [94.0, 318.0], [94.1, 319.0], [94.2, 319.0], [94.3, 319.0], [94.4, 320.0], [94.5, 320.0], [94.6, 321.0], [94.7, 323.0], [94.8, 323.0], [94.9, 324.0], [95.0, 324.0], [95.1, 326.0], [95.2, 327.0], [95.3, 327.0], [95.4, 327.0], [95.5, 327.0], [95.6, 327.0], [95.7, 328.0], [95.8, 329.0], [95.9, 330.0], [96.0, 330.0], [96.1, 330.0], [96.2, 331.0], [96.3, 332.0], [96.4, 332.0], [96.5, 332.0], [96.6, 333.0], [96.7, 333.0], [96.8, 334.0], [96.9, 335.0], [97.0, 335.0], [97.1, 335.0], [97.2, 338.0], [97.3, 339.0], [97.4, 340.0], [97.5, 340.0], [97.6, 342.0], [97.7, 345.0], [97.8, 345.0], [97.9, 345.0], [98.0, 345.0], [98.1, 347.0], [98.2, 348.0], [98.3, 351.0], [98.4, 354.0], [98.5, 354.0], [98.6, 354.0], [98.7, 361.0], [98.8, 366.0], [98.9, 367.0], [99.0, 367.0], [99.1, 375.0], [99.2, 379.0], [99.3, 383.0], [99.4, 384.0], [99.5, 384.0], [99.6, 384.0], [99.7, 403.0], [99.8, 426.0], [99.9, 1276.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 699.0, "series": [{"data": [[34500.0, 1.0], [34100.0, 1.0], [33700.0, 1.0], [32900.0, 1.0], [36100.0, 3.0], [35700.0, 2.0], [36500.0, 2.0], [38500.0, 3.0], [37300.0, 2.0], [38900.0, 1.0], [39700.0, 3.0], [40500.0, 3.0], [42100.0, 2.0], [43700.0, 1.0], [46100.0, 1.0], [48500.0, 2.0], [49700.0, 1.0], [52100.0, 1.0], [51300.0, 1.0], [51700.0, 1.0], [200.0, 3.0], [53300.0, 1.0], [54500.0, 1.0], [59300.0, 1.0], [60500.0, 5.0], [59700.0, 1.0], [300.0, 78.0], [400.0, 49.0], [500.0, 1.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 4.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2400.0, 2.0], [3900.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [4700.0, 2.0], [5000.0, 2.0], [5100.0, 2.0], [4900.0, 1.0], [5300.0, 10.0], [5200.0, 2.0], [5600.0, 3.0], [5500.0, 10.0], [5400.0, 10.0], [5800.0, 6.0], [5700.0, 1.0], [5900.0, 4.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6500.0, 4.0], [6600.0, 3.0], [6400.0, 1.0], [6800.0, 2.0], [6700.0, 4.0], [6900.0, 2.0], [7100.0, 2.0], [7000.0, 3.0], [7200.0, 3.0], [7400.0, 1.0], [7600.0, 3.0], [7500.0, 1.0], [7900.0, 5.0], [7700.0, 1.0], [7800.0, 2.0], [8100.0, 4.0], [8500.0, 3.0], [8200.0, 3.0], [8700.0, 1.0], [8600.0, 1.0], [8300.0, 2.0], [9100.0, 2.0], [9000.0, 3.0], [8900.0, 4.0], [9200.0, 2.0], [8800.0, 1.0], [9400.0, 3.0], [9600.0, 4.0], [9300.0, 2.0], [9500.0, 3.0], [9700.0, 2.0], [9900.0, 6.0], [9800.0, 2.0], [10200.0, 1.0], [10100.0, 5.0], [10000.0, 3.0], [10700.0, 2.0], [10400.0, 3.0], [10300.0, 2.0], [10500.0, 1.0], [11000.0, 4.0], [11100.0, 1.0], [10800.0, 4.0], [11200.0, 4.0], [10900.0, 3.0], [11500.0, 2.0], [11400.0, 2.0], [11600.0, 1.0], [11700.0, 1.0], [11300.0, 1.0], [12000.0, 4.0], [11900.0, 3.0], [11800.0, 2.0], [12100.0, 3.0], [12200.0, 4.0], [12400.0, 8.0], [12500.0, 2.0], [12600.0, 1.0], [12700.0, 2.0], [12300.0, 4.0], [12900.0, 2.0], [13200.0, 2.0], [13100.0, 2.0], [12800.0, 2.0], [13000.0, 2.0], [13800.0, 1.0], [13600.0, 1.0], [13400.0, 2.0], [13700.0, 1.0], [13500.0, 1.0], [14000.0, 4.0], [14100.0, 4.0], [13900.0, 2.0], [14200.0, 1.0], [14800.0, 4.0], [14700.0, 1.0], [14600.0, 3.0], [14400.0, 1.0], [15200.0, 1.0], [15100.0, 4.0], [15000.0, 2.0], [14900.0, 1.0], [15700.0, 1.0], [16200.0, 1.0], [16100.0, 2.0], [15900.0, 2.0], [16300.0, 1.0], [17000.0, 1.0], [17400.0, 1.0], [16600.0, 1.0], [17800.0, 1.0], [18000.0, 1.0], [18200.0, 1.0], [18400.0, 2.0], [19200.0, 2.0], [19400.0, 2.0], [18600.0, 1.0], [18800.0, 1.0], [20200.0, 5.0], [20000.0, 1.0], [19600.0, 1.0], [19800.0, 2.0], [20400.0, 1.0], [21000.0, 1.0], [20600.0, 2.0], [20800.0, 2.0], [21200.0, 2.0], [21400.0, 2.0], [21800.0, 3.0], [22000.0, 2.0], [22400.0, 1.0], [22200.0, 1.0], [23000.0, 4.0], [22800.0, 2.0], [23200.0, 2.0], [23400.0, 1.0], [24000.0, 1.0], [23600.0, 1.0], [24400.0, 1.0], [24200.0, 3.0], [23800.0, 1.0], [24800.0, 4.0], [25400.0, 1.0], [25000.0, 1.0], [24600.0, 1.0], [26600.0, 3.0], [26200.0, 1.0], [25800.0, 1.0], [25600.0, 4.0], [26800.0, 1.0], [27400.0, 1.0], [27600.0, 1.0], [28200.0, 2.0], [28800.0, 1.0], [30200.0, 1.0], [30400.0, 1.0], [29800.0, 2.0], [31600.0, 1.0], [31200.0, 1.0], [31800.0, 2.0], [32200.0, 1.0], [33600.0, 1.0], [35600.0, 1.0], [35200.0, 2.0], [36400.0, 1.0], [36000.0, 2.0], [38000.0, 1.0], [40800.0, 3.0], [40400.0, 1.0], [40000.0, 1.0], [41600.0, 2.0], [41200.0, 4.0], [42800.0, 1.0], [42400.0, 1.0], [42000.0, 1.0], [44000.0, 1.0], [43600.0, 1.0], [45200.0, 1.0], [48400.0, 3.0], [47600.0, 2.0], [48800.0, 1.0], [50400.0, 1.0], [49600.0, 1.0], [50000.0, 2.0], [52800.0, 1.0], [53600.0, 1.0], [57200.0, 1.0], [60400.0, 19.0], [60000.0, 1.0], [33500.0, 1.0], [35100.0, 1.0], [37500.0, 1.0], [38300.0, 1.0], [37100.0, 1.0], [40300.0, 3.0], [39100.0, 1.0], [40700.0, 1.0], [39500.0, 2.0], [41900.0, 1.0], [42700.0, 1.0], [43500.0, 2.0], [44700.0, 1.0], [44300.0, 1.0], [46700.0, 2.0], [45500.0, 1.0], [47100.0, 1.0], [45100.0, 1.0], [48700.0, 1.0], [49100.0, 1.0], [50700.0, 1.0], [51100.0, 1.0], [52700.0, 1.0], [52300.0, 1.0], [54700.0, 2.0], [56700.0, 1.0], [60300.0, 16.0], [17100.0, 3.0], [17300.0, 1.0], [16500.0, 1.0], [18300.0, 1.0], [18100.0, 2.0], [17700.0, 2.0], [18700.0, 3.0], [19100.0, 4.0], [19300.0, 3.0], [19700.0, 1.0], [19500.0, 1.0], [20100.0, 1.0], [20900.0, 5.0], [21300.0, 3.0], [21500.0, 1.0], [20500.0, 1.0], [21100.0, 1.0], [22300.0, 3.0], [22100.0, 2.0], [22500.0, 2.0], [21900.0, 1.0], [21700.0, 1.0], [23500.0, 5.0], [23100.0, 2.0], [23300.0, 3.0], [22700.0, 1.0], [23700.0, 2.0], [24300.0, 4.0], [23900.0, 1.0], [24500.0, 2.0], [25300.0, 1.0], [24700.0, 2.0], [26100.0, 1.0], [25700.0, 2.0], [26300.0, 1.0], [26500.0, 3.0], [26700.0, 2.0], [27100.0, 1.0], [27900.0, 2.0], [27700.0, 2.0], [28500.0, 1.0], [28100.0, 1.0], [29100.0, 1.0], [29500.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [30500.0, 3.0], [30100.0, 3.0], [29900.0, 2.0], [30300.0, 1.0], [29700.0, 1.0], [31100.0, 1.0], [30900.0, 1.0], [31300.0, 1.0], [31900.0, 1.0], [32100.0, 1.0], [32500.0, 2.0], [32300.0, 1.0], [32700.0, 1.0], [34200.0, 1.0], [33800.0, 1.0], [33000.0, 1.0], [34600.0, 1.0], [35000.0, 1.0], [35800.0, 1.0], [40600.0, 1.0], [39400.0, 1.0], [42200.0, 3.0], [43000.0, 2.0], [41800.0, 1.0], [45000.0, 1.0], [44600.0, 1.0], [43400.0, 1.0], [44200.0, 2.0], [46200.0, 2.0], [49000.0, 1.0], [47400.0, 1.0], [47800.0, 1.0], [50200.0, 1.0], [49800.0, 1.0], [51000.0, 2.0], [55400.0, 1.0], [56600.0, 1.0], [59000.0, 1.0], [57400.0, 1.0], [58600.0, 1.0], [60200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 128.0], [33300.0, 2.0], [34900.0, 2.0], [36100.0, 1.0], [35700.0, 2.0], [37700.0, 1.0], [36900.0, 1.0], [40900.0, 3.0], [40500.0, 2.0], [40100.0, 1.0], [41300.0, 1.0], [41700.0, 2.0], [42500.0, 1.0], [43700.0, 1.0], [44900.0, 2.0], [46900.0, 1.0], [48100.0, 2.0], [47300.0, 1.0], [48500.0, 1.0], [49300.0, 1.0], [50500.0, 1.0], [49700.0, 1.0], [50900.0, 1.0], [53300.0, 1.0], [56900.0, 1.0], [60100.0, 36.0], [59700.0, 1.0], [500.0, 1.0], [700.0, 1.0], [800.0, 2.0], [900.0, 4.0], [1000.0, 2.0], [1100.0, 4.0], [1200.0, 3.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [3700.0, 1.0], [4300.0, 2.0], [4100.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [4700.0, 2.0], [4800.0, 3.0], [5000.0, 7.0], [5100.0, 12.0], [5300.0, 7.0], [5200.0, 8.0], [5600.0, 5.0], [5500.0, 5.0], [5400.0, 2.0], [5700.0, 1.0], [6100.0, 2.0], [5900.0, 2.0], [6200.0, 3.0], [6600.0, 3.0], [6400.0, 5.0], [6500.0, 3.0], [6800.0, 4.0], [6900.0, 3.0], [6700.0, 2.0], [7300.0, 3.0], [7200.0, 1.0], [7400.0, 2.0], [7600.0, 4.0], [7500.0, 1.0], [7900.0, 4.0], [7700.0, 2.0], [7800.0, 2.0], [8000.0, 2.0], [8200.0, 2.0], [8400.0, 2.0], [8600.0, 4.0], [8700.0, 1.0], [8500.0, 1.0], [8300.0, 1.0], [8800.0, 4.0], [9200.0, 4.0], [9100.0, 2.0], [9000.0, 3.0], [8900.0, 1.0], [9600.0, 3.0], [9500.0, 2.0], [9300.0, 3.0], [9400.0, 3.0], [9700.0, 4.0], [10100.0, 3.0], [9900.0, 2.0], [9800.0, 6.0], [10000.0, 1.0], [10200.0, 2.0], [10400.0, 3.0], [10700.0, 3.0], [10600.0, 5.0], [10500.0, 1.0], [10800.0, 2.0], [11200.0, 2.0], [11100.0, 2.0], [10900.0, 4.0], [11300.0, 2.0], [11400.0, 1.0], [11700.0, 3.0], [11500.0, 2.0], [11600.0, 1.0], [12200.0, 5.0], [12100.0, 5.0], [11800.0, 6.0], [12000.0, 4.0], [11900.0, 4.0], [12600.0, 3.0], [12700.0, 2.0], [12300.0, 1.0], [12400.0, 2.0], [12500.0, 1.0], [12900.0, 2.0], [13300.0, 2.0], [13100.0, 2.0], [12800.0, 1.0], [13000.0, 1.0], [13700.0, 5.0], [13800.0, 5.0], [13600.0, 1.0], [13400.0, 1.0], [14300.0, 3.0], [13900.0, 1.0], [14100.0, 1.0], [14500.0, 2.0], [14800.0, 3.0], [14400.0, 1.0], [14700.0, 2.0], [14600.0, 2.0], [14900.0, 3.0], [15800.0, 2.0], [15600.0, 1.0], [15400.0, 1.0], [15700.0, 1.0], [15900.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [16200.0, 1.0], [16800.0, 3.0], [17000.0, 1.0], [17400.0, 1.0], [18400.0, 3.0], [18000.0, 1.0], [17800.0, 1.0], [19000.0, 3.0], [19200.0, 1.0], [18800.0, 3.0], [18600.0, 1.0], [19800.0, 2.0], [20400.0, 1.0], [20000.0, 2.0], [20200.0, 1.0], [20800.0, 1.0], [20600.0, 3.0], [21000.0, 3.0], [22000.0, 3.0], [21800.0, 2.0], [22200.0, 2.0], [21600.0, 1.0], [22400.0, 1.0], [23200.0, 5.0], [22800.0, 5.0], [23400.0, 2.0], [23000.0, 3.0], [23600.0, 1.0], [24000.0, 3.0], [24200.0, 2.0], [24400.0, 2.0], [24600.0, 3.0], [25200.0, 1.0], [25400.0, 3.0], [26400.0, 4.0], [25800.0, 1.0], [26000.0, 1.0], [26200.0, 3.0], [26800.0, 1.0], [27400.0, 3.0], [27200.0, 1.0], [27600.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [28400.0, 1.0], [28600.0, 1.0], [29200.0, 1.0], [29400.0, 1.0], [29600.0, 1.0], [30200.0, 2.0], [30000.0, 1.0], [31000.0, 2.0], [32200.0, 1.0], [32000.0, 1.0], [32600.0, 2.0], [32400.0, 1.0], [34800.0, 1.0], [34400.0, 1.0], [36800.0, 1.0], [38800.0, 1.0], [37200.0, 1.0], [38000.0, 1.0], [40000.0, 3.0], [39200.0, 3.0], [39600.0, 1.0], [42000.0, 2.0], [42400.0, 1.0], [42800.0, 1.0], [43200.0, 3.0], [44400.0, 1.0], [44000.0, 2.0], [46400.0, 1.0], [45200.0, 1.0], [46000.0, 1.0], [48800.0, 2.0], [47200.0, 1.0], [48400.0, 1.0], [52400.0, 1.0], [52000.0, 1.0], [55200.0, 1.0], [54400.0, 2.0], [56400.0, 1.0], [58800.0, 1.0], [60000.0, 1.0], [34700.0, 1.0], [33900.0, 1.0], [33500.0, 1.0], [35900.0, 2.0], [36300.0, 1.0], [35500.0, 1.0], [38300.0, 2.0], [37100.0, 1.0], [38700.0, 1.0], [40300.0, 2.0], [42700.0, 1.0], [41900.0, 2.0], [41500.0, 1.0], [44700.0, 1.0], [44300.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [43500.0, 1.0], [45900.0, 1.0], [46300.0, 1.0], [47500.0, 1.0], [49900.0, 1.0], [49500.0, 2.0], [50700.0, 2.0], [51100.0, 1.0], [53100.0, 1.0], [57100.0, 1.0], [56300.0, 1.0], [58300.0, 1.0], [59900.0, 1.0], [16700.0, 1.0], [17100.0, 1.0], [17500.0, 2.0], [17700.0, 1.0], [17900.0, 2.0], [18100.0, 2.0], [18300.0, 1.0], [18900.0, 2.0], [19300.0, 1.0], [19100.0, 3.0], [19900.0, 3.0], [19500.0, 3.0], [20300.0, 1.0], [20100.0, 1.0], [21500.0, 4.0], [20500.0, 3.0], [20900.0, 3.0], [21100.0, 2.0], [21300.0, 1.0], [20700.0, 1.0], [21700.0, 2.0], [22500.0, 2.0], [22100.0, 2.0], [22700.0, 1.0], [23100.0, 2.0], [23300.0, 1.0], [22900.0, 1.0], [23700.0, 2.0], [24500.0, 2.0], [24100.0, 4.0], [23900.0, 1.0], [24300.0, 1.0], [25300.0, 3.0], [25100.0, 1.0], [25500.0, 1.0], [26500.0, 1.0], [26300.0, 1.0], [25900.0, 1.0], [27500.0, 1.0], [27900.0, 2.0], [28500.0, 1.0], [28900.0, 1.0], [29500.0, 1.0], [29900.0, 4.0], [29700.0, 2.0], [30700.0, 1.0], [30300.0, 2.0], [31300.0, 1.0], [31500.0, 3.0], [30900.0, 1.0], [31900.0, 2.0], [32300.0, 1.0], [34200.0, 1.0], [33800.0, 1.0], [33400.0, 1.0], [35400.0, 3.0], [35800.0, 1.0], [36200.0, 1.0], [38200.0, 1.0], [39400.0, 3.0], [40600.0, 2.0], [40200.0, 2.0], [42200.0, 1.0], [41400.0, 1.0], [41800.0, 1.0], [41000.0, 1.0], [45800.0, 1.0], [47400.0, 1.0], [48200.0, 3.0], [50200.0, 1.0], [49800.0, 1.0], [52600.0, 1.0], [51800.0, 1.0], [51400.0, 1.0], [54200.0, 1.0], [59000.0, 1.0], [60200.0, 3.0], [59400.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 101.0], [1200.0, 1.0], [200.0, 699.0], [400.0, 2.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 663.0, "series": [{"data": [[0.0, 663.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 597.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 336.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.68545514E12, "maxY": 25.0, "series": [{"data": [[1.6854564E12, 15.493589743589745], [1.6854561E12, 23.788888888888895], [1.6854552E12, 5.0], [1.68545532E12, 1.5], [1.68545562E12, 10.0], [1.68545592E12, 18.917647058823533], [1.68545538E12, 4.090909090909091], [1.68545568E12, 10.575471698113203], [1.6854555E12, 5.323529411764705], [1.6854558E12, 15.0], [1.68545652E12, 9.809917355371901], [1.68545622E12, 25.0], [1.68545526E12, 5.0], [1.68545556E12, 8.676470588235297], [1.68545586E12, 15.18867924528302], [1.68545646E12, 12.605633802816904], [1.68545664E12, 4.571428571428572], [1.68545634E12, 19.666666666666675], [1.68545604E12, 20.304347826086957], [1.68545574E12, 14.216867469879519], [1.68545658E12, 5.086419753086419], [1.68545628E12, 21.806201550387616], [1.68545598E12, 20.0], [1.68545616E12, 25.0], [1.68545514E12, 2.8695652173913047], [1.68545544E12, 5.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545664E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 254.0, "minX": 1.0, "maxY": 30036.090909090908, "series": [{"data": [[2.0, 7388.166666666667], [3.0, 5418.0], [4.0, 10893.142857142859], [5.0, 13387.950617283952], [6.0, 14946.25], [7.0, 10134.5], [8.0, 26207.428571428572], [9.0, 13853.5], [10.0, 17472.637254901965], [11.0, 2045.0555555555554], [12.0, 4090.9], [13.0, 13840.6], [14.0, 13132.250000000002], [15.0, 20026.187500000007], [1.0, 6249.666666666667], [16.0, 26872.120000000003], [17.0, 26621.0], [18.0, 25478.692307692305], [19.0, 30036.090909090908], [20.0, 19258.792899408294], [21.0, 27374.555555555555], [22.0, 19331.26086956522], [23.0, 26717.1875], [24.0, 18945.562500000004], [25.0, 29500.68595041323]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.119196988707664, 19997.412797992456]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 7124.166666666666], [3.0, 5156.0], [4.0, 10632.285714285716], [5.0, 13281.937500000002], [6.0, 14674.0], [7.0, 9866.5], [8.0, 25945.85714285714], [9.0, 18114.666666666668], [10.0, 17372.574257425735], [11.0, 1778.2777777777778], [12.0, 3822.2000000000003], [13.0, 13584.6], [14.0, 12863.375], [15.0, 19742.351562499985], [1.0, 5936.333333333333], [16.0, 26589.000000000004], [17.0, 26347.875], [18.0, 25206.69230769231], [19.0, 29765.545454545456], [20.0, 18981.3372781065], [21.0, 27104.333333333332], [22.0, 19059.0], [23.0, 26447.5625], [24.0, 18679.125], [25.0, 29227.495867768594]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.14987405541563, 19797.366498740535]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 267.7142857142857], [3.0, 254.0], [4.0, 278.3333333333333], [5.0, 268.9135802469136], [6.0, 261.33333333333337], [7.0, 269.0], [8.0, 275.71428571428567], [9.0, 301.8], [10.0, 266.2079207920791], [11.0, 264.38888888888897], [12.0, 263.1111111111111], [13.0, 271.33333333333337], [14.0, 288.25], [15.0, 278.39843749999994], [1.0, 299.25], [16.0, 318.04], [17.0, 268.0], [18.0, 272.69230769230774], [19.0, 336.625], [20.0, 273.05917159763305], [21.0, 265.2727272727273], [22.0, 267.7619047619047], [23.0, 266.34999999999997], [24.0, 267.6923076923077], [25.0, 275.97520661157034]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.016189290161886, 274.5728518057289]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 73.38333333333334, "minX": 1.68545514E12, "maxY": 8999.966666666667, "series": [{"data": [[1.6854564E12, 3148.8333333333335], [1.6854561E12, 2926.866666666667], [1.6854552E12, 807.2166666666667], [1.68545532E12, 219.33333333333334], [1.68545562E12, 1485.2833333333333], [1.68545592E12, 2090.2], [1.68545538E12, 842.6833333333333], [1.68545568E12, 1361.7333333333333], [1.6854555E12, 879.7833333333333], [1.6854558E12, 2311.983333333333], [1.68545652E12, 2825.6666666666665], [1.68545622E12, 3265.9666666666667], [1.68545526E12, 73.38333333333334], [1.68545556E12, 769.3], [1.68545586E12, 2824.0333333333333], [1.68545646E12, 3524.0333333333333], [1.68545664E12, 1212.05], [1.68545634E12, 3318.25], [1.68545604E12, 2407.9166666666665], [1.68545574E12, 1633.45], [1.68545658E12, 1982.1666666666667], [1.68545628E12, 2857.4], [1.68545598E12, 2090.15], [1.68545616E12, 3302.25], [1.68545514E12, 621.7166666666667], [1.68545544E12, 1174.1333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6854564E12, 7295.3], [1.6854561E12, 7311.95], [1.6854552E12, 1295.9333333333334], [1.68545532E12, 278.3], [1.68545562E12, 4594.35], [1.68545592E12, 3618.1666666666665], [1.68545538E12, 1181.9166666666667], [1.68545568E12, 3872.516666666667], [1.6854555E12, 1343.0666666666666], [1.6854558E12, 4526.75], [1.68545652E12, 6125.266666666666], [1.68545622E12, 6939.7], [1.68545526E12, 275.8333333333333], [1.68545556E12, 1218.3833333333334], [1.68545586E12, 5689.45], [1.68545646E12, 6884.45], [1.68545664E12, 2280.366666666667], [1.68545634E12, 8999.966666666667], [1.68545604E12, 6932.366666666667], [1.68545574E12, 3900.133333333333], [1.68545658E12, 4325.0], [1.68545628E12, 7099.666666666667], [1.68545598E12, 7317.883333333333], [1.68545616E12, 6594.883333333333], [1.68545514E12, 914.25], [1.68545544E12, 1826.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545664E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 259.2692307692308, "minX": 1.68545514E12, "maxY": 32373.851851851854, "series": [{"data": [[1.6854564E12, 20322.32727272727], [1.6854561E12, 22553.84745762713], [1.6854552E12, 19026.416666666668], [1.68545532E12, 5603.5], [1.68545562E12, 24306.423076923078], [1.68545592E12, 30557.642857142862], [1.68545538E12, 12956.800000000001], [1.68545568E12, 12087.714285714284], [1.6854555E12, 20680.899999999998], [1.6854558E12, 20716.975000000002], [1.68545652E12, 10243.431818181818], [1.68545622E12, 30196.452380952385], [1.68545556E12, 30418.461538461535], [1.68545586E12, 18611.689655172417], [1.68545646E12, 12079.586956521744], [1.68545664E12, 8241.3125], [1.68545634E12, 15068.499999999996], [1.68545604E12, 16911.150943396235], [1.68545574E12, 27272.576923076926], [1.68545658E12, 7281.185185185185], [1.68545628E12, 27338.111111111117], [1.68545598E12, 23400.489361702126], [1.68545616E12, 29291.857142857138], [1.68545514E12, 8226.333333333334], [1.68545544E12, 18344.823529411766]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854564E12, 19305.46153846153], [1.6854561E12, 21565.474576271186], [1.6854552E12, 18499.36363636364], [1.68545532E12, 5305.0], [1.68545562E12, 26387.34482758621], [1.68545592E12, 32373.851851851854], [1.68545538E12, 12686.100000000002], [1.68545568E12, 12168.088235294112], [1.6854555E12, 19394.0], [1.6854558E12, 20631.281249999996], [1.68545652E12, 10295.487179487178], [1.68545622E12, 31201.17777777778], [1.68545526E12, 21501.0], [1.68545556E12, 27925.11111111111], [1.68545586E12, 17711.4054054054], [1.68545646E12, 12728.480000000001], [1.68545664E12, 8052.4444444444425], [1.68545634E12, 15280.825396825398], [1.68545604E12, 17287.056603773588], [1.68545574E12, 25786.185185185186], [1.68545658E12, 7672.107142857144], [1.68545628E12, 27714.77272727272], [1.68545598E12, 23117.26086956521], [1.68545616E12, 27597.17777777778], [1.68545514E12, 7948.666666666667], [1.68545544E12, 18616.625]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854564E12, 288.18367346938777], [1.6854561E12, 268.6612903225806], [1.6854552E12, 274.8181818181818], [1.68545532E12, 283.75], [1.68545562E12, 267.0714285714285], [1.68545592E12, 288.56666666666666], [1.68545538E12, 269.9230769230769], [1.68545568E12, 264.83783783783787], [1.6854555E12, 262.0], [1.6854558E12, 305.7096774193549], [1.68545652E12, 267.4473684210527], [1.68545622E12, 278.6363636363636], [1.68545526E12, 302.0], [1.68545556E12, 291.0833333333333], [1.68545586E12, 276.82500000000005], [1.68545646E12, 268.7826086956521], [1.68545664E12, 264.53333333333336], [1.68545634E12, 275.86666666666673], [1.68545604E12, 267.6727272727274], [1.68545574E12, 268.60000000000014], [1.68545658E12, 259.2692307692308], [1.68545628E12, 273.8500000000001], [1.68545598E12, 276.5869565217391], [1.68545616E12, 271.7333333333334], [1.68545514E12, 278.54545454545456], [1.68545544E12, 284.68750000000006]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545664E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 259.0384615384615, "minX": 1.68545514E12, "maxY": 32373.555555555547, "series": [{"data": [[1.6854564E12, 20320.981818181823], [1.6854561E12, 22552.94915254237], [1.6854552E12, 19026.0], [1.68545532E12, 5598.5], [1.68545562E12, 24305.769230769234], [1.68545592E12, 30557.07142857143], [1.68545538E12, 12956.0], [1.68545568E12, 12087.314285714287], [1.6854555E12, 20680.5], [1.6854558E12, 20710.875], [1.68545652E12, 10242.750000000004], [1.68545622E12, 30194.523809523813], [1.68545556E12, 30417.615384615383], [1.68545586E12, 18610.655172413793], [1.68545646E12, 12078.76086956522], [1.68545664E12, 8240.1875], [1.68545634E12, 15067.150000000001], [1.68545604E12, 16910.566037735858], [1.68545574E12, 27271.538461538457], [1.68545658E12, 7280.925925925926], [1.68545628E12, 27337.31111111111], [1.68545598E12, 23399.74468085106], [1.68545616E12, 29290.20408163265], [1.68545514E12, 8225.5], [1.68545544E12, 18344.29411764706]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854564E12, 19304.788461538454], [1.6854561E12, 21565.016949152534], [1.6854552E12, 18499.272727272728], [1.68545532E12, 5305.0], [1.68545562E12, 26386.999999999993], [1.68545592E12, 32373.555555555547], [1.68545538E12, 12685.8], [1.68545568E12, 12167.91176470588], [1.6854555E12, 19394.0], [1.6854558E12, 20626.15625], [1.68545652E12, 10295.179487179488], [1.68545622E12, 31200.377777777783], [1.68545526E12, 21500.0], [1.68545556E12, 27924.88888888889], [1.68545586E12, 17711.05405405406], [1.68545646E12, 12728.080000000002], [1.68545664E12, 8051.944444444445], [1.68545634E12, 15279.984126984125], [1.68545604E12, 17286.8679245283], [1.68545574E12, 25785.629629629628], [1.68545658E12, 7672.000000000001], [1.68545628E12, 27714.454545454548], [1.68545598E12, 23117.130434782608], [1.68545616E12, 27596.48888888889], [1.68545514E12, 7948.333333333333], [1.68545544E12, 18616.187499999996]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854564E12, 287.3061224489796], [1.6854561E12, 267.95161290322596], [1.6854552E12, 274.6363636363636], [1.68545532E12, 281.25], [1.68545562E12, 266.7857142857143], [1.68545592E12, 287.93333333333334], [1.68545538E12, 269.38461538461536], [1.68545568E12, 264.5945945945947], [1.6854555E12, 261.5384615384615], [1.6854558E12, 303.67741935483883], [1.68545652E12, 267.1052631578948], [1.68545622E12, 277.909090909091], [1.68545526E12, 302.0], [1.68545556E12, 290.6666666666667], [1.68545586E12, 276.37499999999994], [1.68545646E12, 268.47826086956525], [1.68545664E12, 264.0666666666666], [1.68545634E12, 275.4333333333332], [1.68545604E12, 267.36363636363626], [1.68545574E12, 267.49999999999994], [1.68545658E12, 259.0384615384615], [1.68545628E12, 273.24999999999994], [1.68545598E12, 276.13043478260875], [1.68545616E12, 270.73333333333335], [1.68545514E12, 278.0909090909091], [1.68545544E12, 284.62500000000006]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545664E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545514E12, "maxY": 168.0, "series": [{"data": [[1.6854564E12, 129.98181818181817], [1.6854561E12, 128.79661016949146], [1.6854552E12, 128.16666666666666], [1.68545532E12, 156.5], [1.68545562E12, 130.42307692307688], [1.68545592E12, 133.75], [1.68545538E12, 128.0], [1.68545568E12, 131.42857142857142], [1.6854555E12, 129.7], [1.6854558E12, 142.025], [1.68545652E12, 128.24999999999997], [1.68545622E12, 130.5952380952381], [1.68545556E12, 128.84615384615384], [1.68545586E12, 129.00000000000003], [1.68545646E12, 128.73913043478265], [1.68545664E12, 131.9375], [1.68545634E12, 132.71666666666664], [1.68545604E12, 130.52830188679246], [1.68545574E12, 127.53846153846152], [1.68545658E12, 127.11111111111111], [1.68545628E12, 128.08888888888887], [1.68545598E12, 133.95744680851064], [1.68545616E12, 130.0816326530612], [1.68545514E12, 141.16666666666669], [1.68545544E12, 132.76470588235298]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854564E12, 0.0], [1.6854561E12, 0.0], [1.6854552E12, 0.0], [1.68545532E12, 0.0], [1.68545562E12, 0.0], [1.68545592E12, 0.0], [1.68545538E12, 0.0], [1.68545568E12, 0.0], [1.6854555E12, 0.0], [1.6854558E12, 0.0], [1.68545652E12, 0.0], [1.68545622E12, 0.0], [1.68545526E12, 0.0], [1.68545556E12, 0.0], [1.68545586E12, 0.0], [1.68545646E12, 0.0], [1.68545664E12, 0.0], [1.68545634E12, 0.0], [1.68545604E12, 0.0], [1.68545574E12, 0.0], [1.68545658E12, 0.0], [1.68545628E12, 0.0], [1.68545598E12, 0.0], [1.68545616E12, 0.0], [1.68545514E12, 0.0], [1.68545544E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854564E12, 128.44897959183675], [1.6854561E12, 129.1612903225807], [1.6854552E12, 127.27272727272727], [1.68545532E12, 142.25], [1.68545562E12, 130.64285714285717], [1.68545592E12, 134.96666666666664], [1.68545538E12, 128.30769230769232], [1.68545568E12, 130.51351351351352], [1.6854555E12, 129.00000000000003], [1.6854558E12, 145.12903225806448], [1.68545652E12, 128.8421052631579], [1.68545622E12, 129.54545454545453], [1.68545526E12, 168.0], [1.68545556E12, 129.00000000000003], [1.68545586E12, 129.8], [1.68545646E12, 128.69565217391303], [1.68545664E12, 132.26666666666668], [1.68545634E12, 132.98333333333335], [1.68545604E12, 130.7454545454545], [1.68545574E12, 130.23333333333332], [1.68545658E12, 126.96153846153845], [1.68545628E12, 129.07500000000005], [1.68545598E12, 131.7391304347826], [1.68545616E12, 130.11111111111111], [1.68545514E12, 135.27272727272728], [1.68545544E12, 133.18749999999997]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545664E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 247.0, "minX": 1.68545514E12, "maxY": 60055.0, "series": [{"data": [[1.6854564E12, 60055.0], [1.6854561E12, 59057.0], [1.6854552E12, 23750.0], [1.68545532E12, 5310.0], [1.68545562E12, 44704.0], [1.68545592E12, 49394.0], [1.68545538E12, 17537.0], [1.68545568E12, 44997.0], [1.6854555E12, 23130.0], [1.6854558E12, 37254.0], [1.68545652E12, 22023.0], [1.68545622E12, 45860.0], [1.68545526E12, 21501.0], [1.68545556E12, 41344.0], [1.68545586E12, 27595.0], [1.68545646E12, 32484.0], [1.68545664E12, 14395.0], [1.68545634E12, 54480.0], [1.68545604E12, 59958.0], [1.68545574E12, 56493.0], [1.68545658E12, 12212.0], [1.68545628E12, 55200.0], [1.68545598E12, 9175.0], [1.68545616E12, 58849.0], [1.68545514E12, 12200.0], [1.68545544E12, 22831.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6854564E12, 50920.0], [1.6854561E12, 24930.4], [1.6854552E12, 22907.399999999998], [1.68545532E12, 5310.0], [1.68545562E12, 43285.4], [1.68545592E12, 42549.8], [1.68545538E12, 16500.800000000003], [1.68545568E12, 44462.2], [1.6854555E12, 22568.0], [1.6854558E12, 31755.2], [1.68545652E12, 12655.800000000003], [1.68545622E12, 40073.0], [1.68545526E12, 21501.0], [1.68545556E12, 31168.0], [1.68545586E12, 23256.8], [1.68545646E12, 21289.799999999996], [1.68545664E12, 11728.2], [1.68545634E12, 44927.79999999999], [1.68545604E12, 35536.200000000004], [1.68545574E12, 52449.0], [1.68545658E12, 10860.5], [1.68545628E12, 49680.0], [1.68545598E12, 5121.5], [1.68545616E12, 39335.600000000006], [1.68545514E12, 11087.199999999999], [1.68545544E12, 21550.399999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6854564E12, 60055.0], [1.6854561E12, 59057.0], [1.6854552E12, 23750.0], [1.68545532E12, 5310.0], [1.68545562E12, 44704.0], [1.68545592E12, 49394.0], [1.68545538E12, 17537.0], [1.68545568E12, 44997.0], [1.6854555E12, 23130.0], [1.6854558E12, 37254.0], [1.68545652E12, 22023.0], [1.68545622E12, 45860.0], [1.68545526E12, 21501.0], [1.68545556E12, 41344.0], [1.68545586E12, 27595.0], [1.68545646E12, 32484.0], [1.68545664E12, 14395.0], [1.68545634E12, 54480.0], [1.68545604E12, 59958.0], [1.68545574E12, 56493.0], [1.68545658E12, 12212.0], [1.68545628E12, 55200.0], [1.68545598E12, 9175.0], [1.68545616E12, 58849.0], [1.68545514E12, 12200.0], [1.68545544E12, 22831.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6854564E12, 57154.0], [1.6854561E12, 27224.6], [1.6854552E12, 23677.25], [1.68545532E12, 5310.0], [1.68545562E12, 44069.799999999996], [1.68545592E12, 47242.9], [1.68545538E12, 17403.6], [1.68545568E12, 44921.1], [1.6854555E12, 23071.5], [1.6854558E12, 34680.799999999996], [1.68545652E12, 18716.099999999995], [1.68545622E12, 41719.5], [1.68545526E12, 21501.0], [1.68545556E12, 40349.39999999999], [1.68545586E12, 25998.5], [1.68545646E12, 24023.95], [1.68545664E12, 14255.0], [1.68545634E12, 49557.1], [1.68545604E12, 50348.799999999865], [1.68545574E12, 53144.0], [1.68545658E12, 12086.75], [1.68545628E12, 50830.200000000004], [1.68545598E12, 7092.75], [1.68545616E12, 46575.80000000001], [1.68545514E12, 12200.0], [1.68545544E12, 22749.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6854564E12, 250.0], [1.6854561E12, 249.0], [1.6854552E12, 247.0], [1.68545532E12, 252.0], [1.68545562E12, 262.0], [1.68545592E12, 248.0], [1.68545538E12, 253.0], [1.68545568E12, 253.0], [1.6854555E12, 254.0], [1.6854558E12, 268.0], [1.68545652E12, 250.0], [1.68545622E12, 249.0], [1.68545526E12, 302.0], [1.68545556E12, 258.0], [1.68545586E12, 251.0], [1.68545646E12, 247.0], [1.68545664E12, 251.0], [1.68545634E12, 252.0], [1.68545604E12, 249.0], [1.68545574E12, 251.0], [1.68545658E12, 249.0], [1.68545628E12, 249.0], [1.68545598E12, 249.0], [1.68545616E12, 251.0], [1.68545514E12, 254.0], [1.68545544E12, 262.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6854564E12, 5134.0], [1.6854561E12, 287.0], [1.6854552E12, 5008.5], [1.68545532E12, 315.0], [1.68545562E12, 34253.0], [1.68545592E12, 383.0], [1.68545538E12, 285.0], [1.68545568E12, 5612.0], [1.6854555E12, 273.0], [1.6854558E12, 5608.0], [1.68545652E12, 5028.0], [1.68545622E12, 11224.0], [1.68545526E12, 10901.5], [1.68545556E12, 324.0], [1.68545586E12, 327.0], [1.68545646E12, 5138.5], [1.68545664E12, 5081.0], [1.68545634E12, 303.5], [1.68545604E12, 282.0], [1.68545574E12, 318.0], [1.68545658E12, 4406.0], [1.68545628E12, 7999.0], [1.68545598E12, 278.0], [1.68545616E12, 3830.0], [1.68545514E12, 303.0], [1.68545544E12, 4587.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545664E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 40357.0, "series": [{"data": [[2.0, 310.5], [8.0, 10142.0], [9.0, 3726.0], [10.0, 266.0], [11.0, 5265.0], [3.0, 335.0], [12.0, 16853.0], [13.0, 11084.5], [14.0, 278.0], [1.0, 301.0], [4.0, 2261.5], [20.0, 40357.0], [5.0, 356.0], [6.0, 309.0], [7.0, 300.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 255.0], [8.0, 222.5], [9.0, 253.0], [10.0, 10960.0], [3.0, 250.0], [12.0, 250.0], [14.0, 560.0], [4.0, 250.0], [1.0, 133.0], [20.0, 259.5], [5.0, 252.5], [6.0, 267.0], [7.0, 252.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 40357.0, "series": [{"data": [[2.0, 310.0], [8.0, 10141.5], [9.0, 3726.0], [10.0, 266.0], [11.0, 5261.0], [3.0, 335.0], [12.0, 16853.0], [13.0, 11084.5], [14.0, 278.0], [1.0, 301.0], [4.0, 2261.5], [20.0, 40357.0], [5.0, 356.0], [6.0, 309.0], [7.0, 299.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 254.5], [8.0, 222.5], [9.0, 253.0], [10.0, 10960.0], [3.0, 250.0], [12.0, 250.0], [14.0, 560.0], [4.0, 250.0], [1.0, 133.0], [20.0, 259.5], [5.0, 252.0], [6.0, 267.0], [7.0, 252.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545514E12, "maxY": 2.1166666666666667, "series": [{"data": [[1.6854564E12, 1.6166666666666667], [1.6854561E12, 2.1166666666666667], [1.6854552E12, 0.31666666666666665], [1.68545532E12, 0.11666666666666667], [1.68545562E12, 0.95], [1.68545592E12, 1.0166666666666666], [1.68545538E12, 0.45], [1.68545568E12, 1.1833333333333333], [1.6854555E12, 0.43333333333333335], [1.6854558E12, 1.15], [1.68545652E12, 1.25], [1.68545622E12, 1.4666666666666666], [1.68545526E12, 0.016666666666666666], [1.68545556E12, 0.4], [1.68545586E12, 1.3], [1.68545646E12, 1.55], [1.68545664E12, 0.48333333333333334], [1.68545634E12, 2.0], [1.68545604E12, 1.8166666666666667], [1.68545574E12, 0.95], [1.68545658E12, 0.9], [1.68545628E12, 1.2666666666666666], [1.68545598E12, 1.5], [1.68545616E12, 1.5], [1.68545514E12, 0.35], [1.68545544E12, 0.5166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545664E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545514E12, "maxY": 1.6, "series": [{"data": [[1.6854564E12, 1.3166666666666667], [1.6854561E12, 1.05], [1.6854552E12, 0.36666666666666664], [1.68545532E12, 0.1], [1.68545562E12, 0.55], [1.68545592E12, 0.95], [1.68545538E12, 0.38333333333333336], [1.68545568E12, 0.36666666666666664], [1.6854555E12, 0.4], [1.6854558E12, 1.05], [1.68545652E12, 1.2833333333333334], [1.68545622E12, 1.4833333333333334], [1.68545526E12, 0.03333333333333333], [1.68545556E12, 0.35], [1.68545586E12, 1.2833333333333334], [1.68545646E12, 1.6], [1.68545664E12, 0.55], [1.68545634E12, 1.2666666666666666], [1.68545604E12, 0.7833333333333333], [1.68545574E12, 0.65], [1.68545658E12, 0.9], [1.68545628E12, 1.25], [1.68545598E12, 0.7333333333333333], [1.68545616E12, 1.5], [1.68545514E12, 0.2833333333333333], [1.68545544E12, 0.5333333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6854561E12, 0.16666666666666666], [1.68545598E12, 0.26666666666666666], [1.68545604E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.6854564E12, 0.36666666666666664], [1.68545574E12, 0.3], [1.6854561E12, 0.5666666666666667], [1.68545628E12, 0.15], [1.68545598E12, 0.26666666666666666], [1.68545568E12, 0.8166666666666667], [1.68545634E12, 0.7666666666666667], [1.68545604E12, 0.8666666666666667], [1.68545562E12, 0.4]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.6854561E12, 0.23333333333333334], [1.68545598E12, 0.26666666666666666], [1.68545634E12, 0.016666666666666666], [1.68545604E12, 0.13333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545664E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545514E12, "maxY": 0.8333333333333334, "series": [{"data": [[1.6854564E12, 0.6333333333333333], [1.6854561E12, 0.7], [1.6854552E12, 0.18333333333333332], [1.68545532E12, 0.06666666666666667], [1.68545562E12, 0.21666666666666667], [1.68545592E12, 0.5], [1.68545538E12, 0.21666666666666667], [1.68545568E12, 0.18333333333333332], [1.6854555E12, 0.21666666666666667], [1.6854558E12, 0.5166666666666667], [1.68545652E12, 0.6333333333333333], [1.68545622E12, 0.7333333333333333], [1.68545526E12, 0.016666666666666666], [1.68545556E12, 0.2], [1.68545586E12, 0.6666666666666666], [1.68545646E12, 0.7666666666666667], [1.68545664E12, 0.25], [1.68545634E12, 0.6833333333333333], [1.68545604E12, 0.5], [1.68545574E12, 0.35], [1.68545658E12, 0.43333333333333335], [1.68545628E12, 0.55], [1.68545598E12, 0.65], [1.68545616E12, 0.75], [1.68545514E12, 0.18333333333333332], [1.68545544E12, 0.26666666666666666]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.6854564E12, 0.18333333333333332], [1.68545574E12, 0.15], [1.6854561E12, 0.3333333333333333], [1.68545628E12, 0.11666666666666667], [1.68545598E12, 0.11666666666666667], [1.68545568E12, 0.43333333333333335], [1.68545634E12, 0.31666666666666665], [1.68545604E12, 0.4166666666666667], [1.68545562E12, 0.25]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.6854564E12, 0.18333333333333332], [1.68545574E12, 0.15], [1.6854561E12, 0.6333333333333333], [1.68545628E12, 0.03333333333333333], [1.68545598E12, 0.6833333333333333], [1.68545568E12, 0.38333333333333336], [1.68545634E12, 0.4666666666666667], [1.68545604E12, 0.6], [1.68545562E12, 0.15]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6854564E12, 0.55], [1.6854561E12, 0.25], [1.6854552E12, 0.2], [1.68545532E12, 0.03333333333333333], [1.68545562E12, 0.25], [1.68545592E12, 0.43333333333333335], [1.68545538E12, 0.16666666666666666], [1.68545568E12, 0.03333333333333333], [1.6854555E12, 0.16666666666666666], [1.6854558E12, 0.65], [1.68545652E12, 0.7333333333333333], [1.68545622E12, 0.7], [1.68545556E12, 0.21666666666666667], [1.68545586E12, 0.48333333333333334], [1.68545646E12, 0.7666666666666667], [1.68545664E12, 0.26666666666666666], [1.68545634E12, 0.4], [1.68545604E12, 0.16666666666666666], [1.68545574E12, 0.15], [1.68545658E12, 0.45], [1.68545628E12, 0.6333333333333333], [1.68545598E12, 0.1], [1.68545616E12, 0.7666666666666667], [1.68545514E12, 0.1], [1.68545544E12, 0.2833333333333333]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545592E12, 0.03333333333333333], [1.6854564E12, 0.36666666666666664], [1.68545574E12, 0.2833333333333333], [1.6854561E12, 0.7333333333333333], [1.68545628E12, 0.11666666666666667], [1.68545598E12, 0.6833333333333333], [1.68545568E12, 0.55], [1.68545616E12, 0.05], [1.68545634E12, 0.6], [1.6854558E12, 0.016666666666666666], [1.68545604E12, 0.7166666666666667], [1.68545562E12, 0.18333333333333332]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6854564E12, 0.6833333333333333], [1.6854561E12, 0.35], [1.6854552E12, 0.18333333333333332], [1.68545532E12, 0.03333333333333333], [1.68545562E12, 0.3333333333333333], [1.68545592E12, 0.45], [1.68545538E12, 0.16666666666666666], [1.68545568E12, 0.18333333333333332], [1.6854555E12, 0.18333333333333332], [1.6854558E12, 0.5333333333333333], [1.68545652E12, 0.65], [1.68545622E12, 0.75], [1.68545526E12, 0.016666666666666666], [1.68545556E12, 0.15], [1.68545586E12, 0.6166666666666667], [1.68545646E12, 0.8333333333333334], [1.68545664E12, 0.3], [1.68545634E12, 0.5833333333333334], [1.68545604E12, 0.2833333333333333], [1.68545574E12, 0.3], [1.68545658E12, 0.4666666666666667], [1.68545628E12, 0.7], [1.68545598E12, 0.08333333333333333], [1.68545616E12, 0.75], [1.68545514E12, 0.1], [1.68545544E12, 0.26666666666666666]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545664E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545514E12, "maxY": 2.3666666666666667, "series": [{"data": [[1.6854564E12, 1.8666666666666667], [1.6854561E12, 1.3], [1.6854552E12, 0.5666666666666667], [1.68545532E12, 0.13333333333333333], [1.68545562E12, 0.8], [1.68545592E12, 1.3833333333333333], [1.68545538E12, 0.55], [1.68545568E12, 0.4], [1.6854555E12, 0.5666666666666667], [1.6854558E12, 1.7], [1.68545652E12, 2.0166666666666666], [1.68545622E12, 2.183333333333333], [1.68545526E12, 0.03333333333333333], [1.68545556E12, 0.5666666666666667], [1.68545586E12, 1.7666666666666666], [1.68545646E12, 2.3666666666666667], [1.68545664E12, 0.8166666666666667], [1.68545634E12, 1.6666666666666667], [1.68545604E12, 0.95], [1.68545574E12, 0.8], [1.68545658E12, 1.35], [1.68545628E12, 1.8833333333333333], [1.68545598E12, 0.8333333333333334], [1.68545616E12, 2.2666666666666666], [1.68545514E12, 0.38333333333333336], [1.68545544E12, 0.8166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545592E12, 0.03333333333333333], [1.6854564E12, 0.7333333333333333], [1.68545574E12, 0.5833333333333334], [1.6854561E12, 1.7], [1.68545628E12, 0.26666666666666666], [1.68545598E12, 1.4833333333333334], [1.68545568E12, 1.3666666666666667], [1.68545616E12, 0.05], [1.68545634E12, 1.3833333333333333], [1.6854558E12, 0.016666666666666666], [1.68545604E12, 1.7333333333333334], [1.68545562E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545664E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

