/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 113.0, "minX": 0.0, "maxY": 61012.0, "series": [{"data": [[0.0, 225.0], [0.1, 225.0], [0.2, 229.0], [0.3, 231.0], [0.4, 231.0], [0.5, 234.0], [0.6, 235.0], [0.7, 235.0], [0.8, 237.0], [0.9, 238.0], [1.0, 238.0], [1.1, 238.0], [1.2, 239.0], [1.3, 239.0], [1.4, 240.0], [1.5, 242.0], [1.6, 242.0], [1.7, 249.0], [1.8, 250.0], [1.9, 250.0], [2.0, 263.0], [2.1, 281.0], [2.2, 281.0], [2.3, 282.0], [2.4, 339.0], [2.5, 339.0], [2.6, 340.0], [2.7, 340.0], [2.8, 340.0], [2.9, 340.0], [3.0, 340.0], [3.1, 340.0], [3.2, 341.0], [3.3, 341.0], [3.4, 341.0], [3.5, 341.0], [3.6, 341.0], [3.7, 341.0], [3.8, 341.0], [3.9, 342.0], [4.0, 342.0], [4.1, 342.0], [4.2, 342.0], [4.3, 342.0], [4.4, 342.0], [4.5, 342.0], [4.6, 342.0], [4.7, 342.0], [4.8, 342.0], [4.9, 342.0], [5.0, 342.0], [5.1, 342.0], [5.2, 342.0], [5.3, 342.0], [5.4, 342.0], [5.5, 342.0], [5.6, 343.0], [5.7, 343.0], [5.8, 343.0], [5.9, 343.0], [6.0, 343.0], [6.1, 343.0], [6.2, 343.0], [6.3, 343.0], [6.4, 343.0], [6.5, 343.0], [6.6, 343.0], [6.7, 343.0], [6.8, 343.0], [6.9, 343.0], [7.0, 343.0], [7.1, 343.0], [7.2, 343.0], [7.3, 343.0], [7.4, 343.0], [7.5, 343.0], [7.6, 343.0], [7.7, 344.0], [7.8, 344.0], [7.9, 344.0], [8.0, 344.0], [8.1, 344.0], [8.2, 344.0], [8.3, 344.0], [8.4, 344.0], [8.5, 344.0], [8.6, 345.0], [8.7, 345.0], [8.8, 345.0], [8.9, 345.0], [9.0, 345.0], [9.1, 345.0], [9.2, 345.0], [9.3, 345.0], [9.4, 345.0], [9.5, 345.0], [9.6, 345.0], [9.7, 345.0], [9.8, 345.0], [9.9, 346.0], [10.0, 346.0], [10.1, 346.0], [10.2, 346.0], [10.3, 346.0], [10.4, 346.0], [10.5, 346.0], [10.6, 347.0], [10.7, 347.0], [10.8, 347.0], [10.9, 347.0], [11.0, 347.0], [11.1, 347.0], [11.2, 347.0], [11.3, 347.0], [11.4, 348.0], [11.5, 348.0], [11.6, 348.0], [11.7, 349.0], [11.8, 351.0], [11.9, 351.0], [12.0, 351.0], [12.1, 351.0], [12.2, 351.0], [12.3, 351.0], [12.4, 352.0], [12.5, 352.0], [12.6, 352.0], [12.7, 353.0], [12.8, 353.0], [12.9, 354.0], [13.0, 354.0], [13.1, 354.0], [13.2, 355.0], [13.3, 355.0], [13.4, 355.0], [13.5, 355.0], [13.6, 355.0], [13.7, 355.0], [13.8, 356.0], [13.9, 356.0], [14.0, 356.0], [14.1, 356.0], [14.2, 356.0], [14.3, 356.0], [14.4, 356.0], [14.5, 357.0], [14.6, 357.0], [14.7, 357.0], [14.8, 357.0], [14.9, 357.0], [15.0, 357.0], [15.1, 357.0], [15.2, 357.0], [15.3, 358.0], [15.4, 358.0], [15.5, 358.0], [15.6, 358.0], [15.7, 358.0], [15.8, 358.0], [15.9, 358.0], [16.0, 358.0], [16.1, 358.0], [16.2, 359.0], [16.3, 359.0], [16.4, 359.0], [16.5, 359.0], [16.6, 359.0], [16.7, 359.0], [16.8, 359.0], [16.9, 359.0], [17.0, 359.0], [17.1, 359.0], [17.2, 359.0], [17.3, 359.0], [17.4, 359.0], [17.5, 359.0], [17.6, 359.0], [17.7, 360.0], [17.8, 360.0], [17.9, 360.0], [18.0, 360.0], [18.1, 360.0], [18.2, 360.0], [18.3, 360.0], [18.4, 360.0], [18.5, 360.0], [18.6, 360.0], [18.7, 361.0], [18.8, 361.0], [18.9, 361.0], [19.0, 361.0], [19.1, 361.0], [19.2, 361.0], [19.3, 361.0], [19.4, 361.0], [19.5, 361.0], [19.6, 361.0], [19.7, 361.0], [19.8, 362.0], [19.9, 362.0], [20.0, 362.0], [20.1, 362.0], [20.2, 362.0], [20.3, 363.0], [20.4, 363.0], [20.5, 363.0], [20.6, 363.0], [20.7, 363.0], [20.8, 364.0], [20.9, 364.0], [21.0, 364.0], [21.1, 365.0], [21.2, 365.0], [21.3, 365.0], [21.4, 366.0], [21.5, 366.0], [21.6, 366.0], [21.7, 367.0], [21.8, 367.0], [21.9, 367.0], [22.0, 367.0], [22.1, 367.0], [22.2, 367.0], [22.3, 367.0], [22.4, 368.0], [22.5, 368.0], [22.6, 369.0], [22.7, 370.0], [22.8, 370.0], [22.9, 370.0], [23.0, 371.0], [23.1, 371.0], [23.2, 372.0], [23.3, 372.0], [23.4, 372.0], [23.5, 373.0], [23.6, 375.0], [23.7, 375.0], [23.8, 375.0], [23.9, 375.0], [24.0, 375.0], [24.1, 375.0], [24.2, 375.0], [24.3, 375.0], [24.4, 377.0], [24.5, 380.0], [24.6, 380.0], [24.7, 380.0], [24.8, 382.0], [24.9, 382.0], [25.0, 383.0], [25.1, 384.0], [25.2, 384.0], [25.3, 384.0], [25.4, 386.0], [25.5, 386.0], [25.6, 388.0], [25.7, 389.0], [25.8, 389.0], [25.9, 390.0], [26.0, 391.0], [26.1, 391.0], [26.2, 393.0], [26.3, 394.0], [26.4, 394.0], [26.5, 399.0], [26.6, 399.0], [26.7, 399.0], [26.8, 404.0], [26.9, 407.0], [27.0, 407.0], [27.1, 411.0], [27.2, 421.0], [27.3, 421.0], [27.4, 425.0], [27.5, 426.0], [27.6, 426.0], [27.7, 442.0], [27.8, 443.0], [27.9, 443.0], [28.0, 446.0], [28.1, 450.0], [28.2, 450.0], [28.3, 466.0], [28.4, 491.0], [28.5, 491.0], [28.6, 533.0], [28.7, 585.0], [28.8, 585.0], [28.9, 750.0], [29.0, 812.0], [29.1, 812.0], [29.2, 845.0], [29.3, 850.0], [29.4, 850.0], [29.5, 860.0], [29.6, 882.0], [29.7, 882.0], [29.8, 888.0], [29.9, 920.0], [30.0, 941.0], [30.1, 941.0], [30.2, 975.0], [30.3, 1003.0], [30.4, 1003.0], [30.5, 1008.0], [30.6, 1016.0], [30.7, 1016.0], [30.8, 1018.0], [30.9, 1047.0], [31.0, 1047.0], [31.1, 1059.0], [31.2, 1082.0], [31.3, 1082.0], [31.4, 1083.0], [31.5, 1137.0], [31.6, 1137.0], [31.7, 1138.0], [31.8, 1140.0], [31.9, 1140.0], [32.0, 1159.0], [32.1, 1161.0], [32.2, 1161.0], [32.3, 1177.0], [32.4, 1179.0], [32.5, 1179.0], [32.6, 1186.0], [32.7, 1195.0], [32.8, 1195.0], [32.9, 1195.0], [33.0, 1196.0], [33.1, 1196.0], [33.2, 1198.0], [33.3, 1199.0], [33.4, 1199.0], [33.5, 1202.0], [33.6, 1208.0], [33.7, 1208.0], [33.8, 1212.0], [33.9, 1212.0], [34.0, 1212.0], [34.1, 1220.0], [34.2, 1222.0], [34.3, 1222.0], [34.4, 1225.0], [34.5, 1246.0], [34.6, 1246.0], [34.7, 1247.0], [34.8, 1250.0], [34.9, 1250.0], [35.0, 1255.0], [35.1, 1259.0], [35.2, 1259.0], [35.3, 1260.0], [35.4, 1271.0], [35.5, 1271.0], [35.6, 1280.0], [35.7, 1286.0], [35.8, 1286.0], [35.9, 1291.0], [36.0, 1296.0], [36.1, 1296.0], [36.2, 1301.0], [36.3, 1311.0], [36.4, 1311.0], [36.5, 1317.0], [36.6, 1325.0], [36.7, 1325.0], [36.8, 1328.0], [36.9, 1350.0], [37.0, 1350.0], [37.1, 1374.0], [37.2, 1377.0], [37.3, 1377.0], [37.4, 1387.0], [37.5, 1400.0], [37.6, 1400.0], [37.7, 1408.0], [37.8, 1411.0], [37.9, 1411.0], [38.0, 1413.0], [38.1, 1413.0], [38.2, 1413.0], [38.3, 1450.0], [38.4, 1455.0], [38.5, 1455.0], [38.6, 1469.0], [38.7, 1484.0], [38.8, 1484.0], [38.9, 1493.0], [39.0, 1525.0], [39.1, 1525.0], [39.2, 1547.0], [39.3, 1554.0], [39.4, 1554.0], [39.5, 1555.0], [39.6, 1574.0], [39.7, 1574.0], [39.8, 1581.0], [39.9, 1584.0], [40.0, 1584.0], [40.1, 1584.0], [40.2, 1588.0], [40.3, 1616.0], [40.4, 1616.0], [40.5, 1616.0], [40.6, 1637.0], [40.7, 1637.0], [40.8, 1643.0], [40.9, 1649.0], [41.0, 1649.0], [41.1, 1671.0], [41.2, 1723.0], [41.3, 1723.0], [41.4, 1730.0], [41.5, 1747.0], [41.6, 1747.0], [41.7, 1757.0], [41.8, 1759.0], [41.9, 1759.0], [42.0, 1765.0], [42.1, 1778.0], [42.2, 1778.0], [42.3, 1797.0], [42.4, 1808.0], [42.5, 1808.0], [42.6, 1829.0], [42.7, 1870.0], [42.8, 1870.0], [42.9, 1920.0], [43.0, 1930.0], [43.1, 1930.0], [43.2, 1937.0], [43.3, 1948.0], [43.4, 1948.0], [43.5, 1951.0], [43.6, 1969.0], [43.7, 1969.0], [43.8, 1970.0], [43.9, 1973.0], [44.0, 1973.0], [44.1, 2002.0], [44.2, 2034.0], [44.3, 2034.0], [44.4, 2089.0], [44.5, 2106.0], [44.6, 2106.0], [44.7, 2134.0], [44.8, 2134.0], [44.9, 2134.0], [45.0, 2138.0], [45.1, 2140.0], [45.2, 2140.0], [45.3, 2202.0], [45.4, 2281.0], [45.5, 2281.0], [45.6, 2287.0], [45.7, 2301.0], [45.8, 2301.0], [45.9, 2304.0], [46.0, 2335.0], [46.1, 2335.0], [46.2, 2359.0], [46.3, 2411.0], [46.4, 2411.0], [46.5, 2429.0], [46.6, 2487.0], [46.7, 2487.0], [46.8, 2512.0], [46.9, 2618.0], [47.0, 2618.0], [47.1, 2687.0], [47.2, 2733.0], [47.3, 2733.0], [47.4, 2780.0], [47.5, 2781.0], [47.6, 2781.0], [47.7, 2795.0], [47.8, 2934.0], [47.9, 2934.0], [48.0, 2945.0], [48.1, 3020.0], [48.2, 3020.0], [48.3, 3086.0], [48.4, 3217.0], [48.5, 3217.0], [48.6, 3266.0], [48.7, 3269.0], [48.8, 3269.0], [48.9, 3341.0], [49.0, 3359.0], [49.1, 3359.0], [49.2, 3362.0], [49.3, 3390.0], [49.4, 3390.0], [49.5, 3432.0], [49.6, 3443.0], [49.7, 3443.0], [49.8, 3510.0], [49.9, 3606.0], [50.0, 3606.0], [50.1, 3619.0], [50.2, 3721.0], [50.3, 3781.0], [50.4, 3781.0], [50.5, 3789.0], [50.6, 3825.0], [50.7, 3825.0], [50.8, 3873.0], [50.9, 3915.0], [51.0, 3915.0], [51.1, 3921.0], [51.2, 3931.0], [51.3, 3931.0], [51.4, 3943.0], [51.5, 3989.0], [51.6, 3989.0], [51.7, 4095.0], [51.8, 4112.0], [51.9, 4112.0], [52.0, 4170.0], [52.1, 4183.0], [52.2, 4183.0], [52.3, 4401.0], [52.4, 4509.0], [52.5, 4509.0], [52.6, 4535.0], [52.7, 4558.0], [52.8, 4558.0], [52.9, 4568.0], [53.0, 4589.0], [53.1, 4589.0], [53.2, 4636.0], [53.3, 4639.0], [53.4, 4639.0], [53.5, 4694.0], [53.6, 4716.0], [53.7, 4716.0], [53.8, 4725.0], [53.9, 4759.0], [54.0, 4759.0], [54.1, 4764.0], [54.2, 4790.0], [54.3, 4790.0], [54.4, 4858.0], [54.5, 4884.0], [54.6, 4884.0], [54.7, 4920.0], [54.8, 4942.0], [54.9, 4942.0], [55.0, 4946.0], [55.1, 4993.0], [55.2, 4993.0], [55.3, 5048.0], [55.4, 5096.0], [55.5, 5096.0], [55.6, 5216.0], [55.7, 5331.0], [55.8, 5331.0], [55.9, 5360.0], [56.0, 5458.0], [56.1, 5458.0], [56.2, 5474.0], [56.3, 5577.0], [56.4, 5577.0], [56.5, 5698.0], [56.6, 5698.0], [56.7, 5698.0], [56.8, 5963.0], [56.9, 6055.0], [57.0, 6055.0], [57.1, 6139.0], [57.2, 6254.0], [57.3, 6254.0], [57.4, 6319.0], [57.5, 6364.0], [57.6, 6364.0], [57.7, 6388.0], [57.8, 6462.0], [57.9, 6462.0], [58.0, 6508.0], [58.1, 6541.0], [58.2, 6541.0], [58.3, 6670.0], [58.4, 6847.0], [58.5, 6847.0], [58.6, 6912.0], [58.7, 6994.0], [58.8, 6994.0], [58.9, 7020.0], [59.0, 7025.0], [59.1, 7025.0], [59.2, 7184.0], [59.3, 7186.0], [59.4, 7186.0], [59.5, 7301.0], [59.6, 7351.0], [59.7, 7351.0], [59.8, 7517.0], [59.9, 7542.0], [60.0, 7542.0], [60.1, 7642.0], [60.2, 7710.0], [60.3, 7785.0], [60.4, 7785.0], [60.5, 8120.0], [60.6, 8159.0], [60.7, 8159.0], [60.8, 8352.0], [60.9, 8481.0], [61.0, 8481.0], [61.1, 8661.0], [61.2, 8710.0], [61.3, 8710.0], [61.4, 8715.0], [61.5, 8717.0], [61.6, 8717.0], [61.7, 8720.0], [61.8, 8920.0], [61.9, 8920.0], [62.0, 9008.0], [62.1, 9012.0], [62.2, 9012.0], [62.3, 9041.0], [62.4, 9062.0], [62.5, 9062.0], [62.6, 9091.0], [62.7, 9105.0], [62.8, 9105.0], [62.9, 9211.0], [63.0, 9229.0], [63.1, 9229.0], [63.2, 9242.0], [63.3, 9427.0], [63.4, 9427.0], [63.5, 9558.0], [63.6, 9579.0], [63.7, 9579.0], [63.8, 9704.0], [63.9, 9746.0], [64.0, 9746.0], [64.1, 9748.0], [64.2, 9937.0], [64.3, 9937.0], [64.4, 9958.0], [64.5, 9972.0], [64.6, 9972.0], [64.7, 10066.0], [64.8, 10611.0], [64.9, 10611.0], [65.0, 10632.0], [65.1, 10656.0], [65.2, 10656.0], [65.3, 10818.0], [65.4, 10858.0], [65.5, 10858.0], [65.6, 10873.0], [65.7, 10922.0], [65.8, 10922.0], [65.9, 10939.0], [66.0, 10961.0], [66.1, 10961.0], [66.2, 10970.0], [66.3, 11033.0], [66.4, 11033.0], [66.5, 11198.0], [66.6, 11257.0], [66.7, 11257.0], [66.8, 11303.0], [66.9, 11337.0], [67.0, 11337.0], [67.1, 11351.0], [67.2, 11414.0], [67.3, 11414.0], [67.4, 11713.0], [67.5, 11919.0], [67.6, 11919.0], [67.7, 11939.0], [67.8, 12246.0], [67.9, 12246.0], [68.0, 12262.0], [68.1, 12277.0], [68.2, 12277.0], [68.3, 12454.0], [68.4, 12607.0], [68.5, 12607.0], [68.6, 12623.0], [68.7, 12654.0], [68.8, 12654.0], [68.9, 13304.0], [69.0, 13307.0], [69.1, 13307.0], [69.2, 13414.0], [69.3, 13549.0], [69.4, 13549.0], [69.5, 13719.0], [69.6, 13830.0], [69.7, 13830.0], [69.8, 14172.0], [69.9, 14246.0], [70.0, 14246.0], [70.1, 14339.0], [70.2, 14557.0], [70.3, 15088.0], [70.4, 15088.0], [70.5, 15423.0], [70.6, 15462.0], [70.7, 15462.0], [70.8, 16121.0], [70.9, 16690.0], [71.0, 16690.0], [71.1, 17052.0], [71.2, 17185.0], [71.3, 17185.0], [71.4, 17339.0], [71.5, 17574.0], [71.6, 17574.0], [71.7, 17696.0], [71.8, 17770.0], [71.9, 17770.0], [72.0, 18322.0], [72.1, 18541.0], [72.2, 18541.0], [72.3, 18584.0], [72.4, 18665.0], [72.5, 18665.0], [72.6, 18697.0], [72.7, 18790.0], [72.8, 18790.0], [72.9, 19002.0], [73.0, 19288.0], [73.1, 19288.0], [73.2, 19395.0], [73.3, 19443.0], [73.4, 19443.0], [73.5, 19533.0], [73.6, 19671.0], [73.7, 19671.0], [73.8, 19720.0], [73.9, 19742.0], [74.0, 19742.0], [74.1, 19942.0], [74.2, 20055.0], [74.3, 20055.0], [74.4, 20105.0], [74.5, 20140.0], [74.6, 20140.0], [74.7, 20435.0], [74.8, 20536.0], [74.9, 20536.0], [75.0, 20586.0], [75.1, 20627.0], [75.2, 20627.0], [75.3, 20692.0], [75.4, 20730.0], [75.5, 20730.0], [75.6, 20767.0], [75.7, 20913.0], [75.8, 20913.0], [75.9, 20944.0], [76.0, 21057.0], [76.1, 21057.0], [76.2, 21065.0], [76.3, 21070.0], [76.4, 21070.0], [76.5, 21148.0], [76.6, 21267.0], [76.7, 21267.0], [76.8, 21468.0], [76.9, 21512.0], [77.0, 21512.0], [77.1, 21742.0], [77.2, 21758.0], [77.3, 21758.0], [77.4, 21859.0], [77.5, 22123.0], [77.6, 22123.0], [77.7, 22141.0], [77.8, 22285.0], [77.9, 22285.0], [78.0, 22396.0], [78.1, 23034.0], [78.2, 23034.0], [78.3, 23252.0], [78.4, 23337.0], [78.5, 23337.0], [78.6, 23728.0], [78.7, 23850.0], [78.8, 23850.0], [78.9, 23997.0], [79.0, 24217.0], [79.1, 24217.0], [79.2, 25068.0], [79.3, 25116.0], [79.4, 25116.0], [79.5, 25432.0], [79.6, 25727.0], [79.7, 25727.0], [79.8, 26713.0], [79.9, 26722.0], [80.0, 27224.0], [80.1, 27224.0], [80.2, 27236.0], [80.3, 27294.0], [80.4, 27294.0], [80.5, 27535.0], [80.6, 28192.0], [80.7, 28192.0], [80.8, 28422.0], [80.9, 28546.0], [81.0, 28546.0], [81.1, 28732.0], [81.2, 29208.0], [81.3, 29208.0], [81.4, 29356.0], [81.5, 29735.0], [81.6, 29735.0], [81.7, 29941.0], [81.8, 29981.0], [81.9, 29981.0], [82.0, 30030.0], [82.1, 30385.0], [82.2, 30385.0], [82.3, 30685.0], [82.4, 31041.0], [82.5, 31041.0], [82.6, 31539.0], [82.7, 31928.0], [82.8, 31928.0], [82.9, 31959.0], [83.0, 32682.0], [83.1, 32682.0], [83.2, 33366.0], [83.3, 33428.0], [83.4, 33428.0], [83.5, 33652.0], [83.6, 34260.0], [83.7, 34260.0], [83.8, 34261.0], [83.9, 34534.0], [84.0, 34534.0], [84.1, 35341.0], [84.2, 36398.0], [84.3, 36398.0], [84.4, 36986.0], [84.5, 37101.0], [84.6, 37101.0], [84.7, 37424.0], [84.8, 37477.0], [84.9, 37477.0], [85.0, 38007.0], [85.1, 38192.0], [85.2, 38192.0], [85.3, 40353.0], [85.4, 40608.0], [85.5, 40608.0], [85.6, 40715.0], [85.7, 40823.0], [85.8, 40823.0], [85.9, 40834.0], [86.0, 40984.0], [86.1, 40984.0], [86.2, 41332.0], [86.3, 41731.0], [86.4, 41731.0], [86.5, 41752.0], [86.6, 41762.0], [86.7, 41762.0], [86.8, 41792.0], [86.9, 41848.0], [87.0, 41848.0], [87.1, 41971.0], [87.2, 42021.0], [87.3, 42021.0], [87.4, 43183.0], [87.5, 43268.0], [87.6, 43268.0], [87.7, 43440.0], [87.8, 43450.0], [87.9, 43450.0], [88.0, 43666.0], [88.1, 43932.0], [88.2, 43932.0], [88.3, 44132.0], [88.4, 44638.0], [88.5, 44638.0], [88.6, 44823.0], [88.7, 44858.0], [88.8, 44858.0], [88.9, 44976.0], [89.0, 44991.0], [89.1, 44991.0], [89.2, 45909.0], [89.3, 46210.0], [89.4, 46210.0], [89.5, 46577.0], [89.6, 47215.0], [89.7, 47215.0], [89.8, 47535.0], [89.9, 49864.0], [90.0, 50285.0], [90.1, 50285.0], [90.2, 54033.0], [90.3, 54559.0], [90.4, 54559.0], [90.5, 55337.0], [90.6, 55457.0], [90.7, 55457.0], [90.8, 55465.0], [90.9, 57326.0], [91.0, 57326.0], [91.1, 57600.0], [91.2, 57973.0], [91.3, 57973.0], [91.4, 58929.0], [91.5, 59111.0], [91.6, 59111.0], [91.7, 59173.0], [91.8, 59762.0], [91.9, 59762.0], [92.0, 60310.0], [92.1, 60347.0], [92.2, 60347.0], [92.3, 60348.0], [92.4, 60352.0], [92.5, 60352.0], [92.6, 60354.0], [92.7, 60355.0], [92.8, 60355.0], [92.9, 60360.0], [93.0, 60360.0], [93.1, 60360.0], [93.2, 60363.0], [93.3, 60364.0], [93.4, 60364.0], [93.5, 60364.0], [93.6, 60364.0], [93.7, 60364.0], [93.8, 60365.0], [93.9, 60365.0], [94.0, 60365.0], [94.1, 60370.0], [94.2, 60372.0], [94.3, 60372.0], [94.4, 60374.0], [94.5, 60377.0], [94.6, 60377.0], [94.7, 60377.0], [94.8, 60378.0], [94.9, 60378.0], [95.0, 60382.0], [95.1, 60384.0], [95.2, 60384.0], [95.3, 60390.0], [95.4, 60391.0], [95.5, 60391.0], [95.6, 60399.0], [95.7, 60401.0], [95.8, 60401.0], [95.9, 60411.0], [96.0, 60415.0], [96.1, 60415.0], [96.2, 60416.0], [96.3, 60428.0], [96.4, 60428.0], [96.5, 60429.0], [96.6, 60431.0], [96.7, 60431.0], [96.8, 60432.0], [96.9, 60436.0], [97.0, 60436.0], [97.1, 60442.0], [97.2, 60447.0], [97.3, 60447.0], [97.4, 60461.0], [97.5, 60467.0], [97.6, 60467.0], [97.7, 60472.0], [97.8, 60475.0], [97.9, 60475.0], [98.0, 60478.0], [98.1, 60478.0], [98.2, 60478.0], [98.3, 60494.0], [98.4, 60501.0], [98.5, 60501.0], [98.6, 60507.0], [98.7, 60511.0], [98.8, 60511.0], [98.9, 60512.0], [99.0, 60526.0], [99.1, 60526.0], [99.2, 60543.0], [99.3, 60550.0], [99.4, 60550.0], [99.5, 60562.0], [99.6, 60575.0], [99.7, 60575.0], [99.8, 60587.0], [99.9, 61012.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 113.0], [0.1, 113.0], [0.2, 113.0], [0.3, 113.0], [0.4, 113.0], [0.5, 113.0], [0.6, 113.0], [0.7, 113.0], [0.8, 114.0], [0.9, 114.0], [1.0, 114.0], [1.1, 114.0], [1.2, 114.0], [1.3, 114.0], [1.4, 114.0], [1.5, 114.0], [1.6, 114.0], [1.7, 114.0], [1.8, 114.0], [1.9, 114.0], [2.0, 114.0], [2.1, 114.0], [2.2, 115.0], [2.3, 115.0], [2.4, 115.0], [2.5, 115.0], [2.6, 115.0], [2.7, 115.0], [2.8, 115.0], [2.9, 115.0], [3.0, 115.0], [3.1, 115.0], [3.2, 115.0], [3.3, 115.0], [3.4, 115.0], [3.5, 115.0], [3.6, 115.0], [3.7, 115.0], [3.8, 115.0], [3.9, 115.0], [4.0, 115.0], [4.1, 115.0], [4.2, 115.0], [4.3, 115.0], [4.4, 115.0], [4.5, 115.0], [4.6, 115.0], [4.7, 115.0], [4.8, 115.0], [4.9, 116.0], [5.0, 116.0], [5.1, 116.0], [5.2, 116.0], [5.3, 116.0], [5.4, 116.0], [5.5, 116.0], [5.6, 116.0], [5.7, 116.0], [5.8, 116.0], [5.9, 116.0], [6.0, 116.0], [6.1, 116.0], [6.2, 116.0], [6.3, 116.0], [6.4, 116.0], [6.5, 116.0], [6.6, 116.0], [6.7, 116.0], [6.8, 116.0], [6.9, 116.0], [7.0, 116.0], [7.1, 116.0], [7.2, 116.0], [7.3, 116.0], [7.4, 116.0], [7.5, 116.0], [7.6, 116.0], [7.7, 117.0], [7.8, 117.0], [7.9, 117.0], [8.0, 117.0], [8.1, 117.0], [8.2, 117.0], [8.3, 117.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 117.0], [8.8, 117.0], [8.9, 117.0], [9.0, 117.0], [9.1, 117.0], [9.2, 117.0], [9.3, 117.0], [9.4, 117.0], [9.5, 117.0], [9.6, 117.0], [9.7, 117.0], [9.8, 117.0], [9.9, 117.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 118.0], [10.4, 118.0], [10.5, 118.0], [10.6, 118.0], [10.7, 118.0], [10.8, 118.0], [10.9, 118.0], [11.0, 118.0], [11.1, 118.0], [11.2, 118.0], [11.3, 118.0], [11.4, 118.0], [11.5, 118.0], [11.6, 118.0], [11.7, 119.0], [11.8, 119.0], [11.9, 119.0], [12.0, 119.0], [12.1, 119.0], [12.2, 119.0], [12.3, 119.0], [12.4, 119.0], [12.5, 119.0], [12.6, 119.0], [12.7, 119.0], [12.8, 119.0], [12.9, 119.0], [13.0, 119.0], [13.1, 119.0], [13.2, 119.0], [13.3, 119.0], [13.4, 119.0], [13.5, 119.0], [13.6, 119.0], [13.7, 119.0], [13.8, 119.0], [13.9, 119.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 119.0], [14.4, 119.0], [14.5, 119.0], [14.6, 119.0], [14.7, 119.0], [14.8, 119.0], [14.9, 120.0], [15.0, 120.0], [15.1, 120.0], [15.2, 120.0], [15.3, 120.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 121.0], [18.0, 121.0], [18.1, 121.0], [18.2, 121.0], [18.3, 121.0], [18.4, 121.0], [18.5, 121.0], [18.6, 121.0], [18.7, 121.0], [18.8, 121.0], [18.9, 121.0], [19.0, 121.0], [19.1, 121.0], [19.2, 121.0], [19.3, 121.0], [19.4, 121.0], [19.5, 121.0], [19.6, 122.0], [19.7, 122.0], [19.8, 122.0], [19.9, 122.0], [20.0, 122.0], [20.1, 122.0], [20.2, 122.0], [20.3, 122.0], [20.4, 122.0], [20.5, 122.0], [20.6, 122.0], [20.7, 122.0], [20.8, 122.0], [20.9, 122.0], [21.0, 123.0], [21.1, 123.0], [21.2, 123.0], [21.3, 123.0], [21.4, 123.0], [21.5, 123.0], [21.6, 123.0], [21.7, 123.0], [21.8, 123.0], [21.9, 123.0], [22.0, 123.0], [22.1, 123.0], [22.2, 124.0], [22.3, 124.0], [22.4, 124.0], [22.5, 124.0], [22.6, 124.0], [22.7, 124.0], [22.8, 124.0], [22.9, 124.0], [23.0, 124.0], [23.1, 124.0], [23.2, 124.0], [23.3, 124.0], [23.4, 125.0], [23.5, 125.0], [23.6, 125.0], [23.7, 125.0], [23.8, 125.0], [23.9, 125.0], [24.0, 125.0], [24.1, 125.0], [24.2, 125.0], [24.3, 125.0], [24.4, 125.0], [24.5, 125.0], [24.6, 125.0], [24.7, 125.0], [24.8, 125.0], [24.9, 125.0], [25.0, 126.0], [25.1, 126.0], [25.2, 126.0], [25.3, 126.0], [25.4, 126.0], [25.5, 126.0], [25.6, 126.0], [25.7, 126.0], [25.8, 126.0], [25.9, 126.0], [26.0, 127.0], [26.1, 127.0], [26.2, 128.0], [26.3, 128.0], [26.4, 128.0], [26.5, 129.0], [26.6, 129.0], [26.7, 129.0], [26.8, 129.0], [26.9, 129.0], [27.0, 136.0], [27.1, 455.0], [27.2, 455.0], [27.3, 569.0], [27.4, 587.0], [27.5, 587.0], [27.6, 596.0], [27.7, 605.0], [27.8, 605.0], [27.9, 617.0], [28.0, 640.0], [28.1, 640.0], [28.2, 651.0], [28.3, 692.0], [28.4, 692.0], [28.5, 718.0], [28.6, 741.0], [28.7, 741.0], [28.8, 766.0], [28.9, 769.0], [29.0, 769.0], [29.1, 773.0], [29.2, 773.0], [29.3, 776.0], [29.4, 791.0], [29.5, 791.0], [29.6, 810.0], [29.7, 821.0], [29.8, 821.0], [29.9, 857.0], [30.0, 888.0], [30.1, 888.0], [30.2, 892.0], [30.3, 903.0], [30.4, 903.0], [30.5, 906.0], [30.6, 906.0], [30.7, 906.0], [30.8, 913.0], [30.9, 925.0], [31.0, 925.0], [31.1, 928.0], [31.2, 932.0], [31.3, 932.0], [31.4, 932.0], [31.5, 941.0], [31.6, 941.0], [31.7, 945.0], [31.8, 945.0], [31.9, 947.0], [32.0, 948.0], [32.1, 948.0], [32.2, 969.0], [32.3, 970.0], [32.4, 970.0], [32.5, 970.0], [32.6, 972.0], [32.7, 972.0], [32.8, 972.0], [32.9, 977.0], [33.0, 977.0], [33.1, 980.0], [33.2, 988.0], [33.3, 988.0], [33.4, 990.0], [33.5, 994.0], [33.6, 994.0], [33.7, 1002.0], [33.8, 1010.0], [33.9, 1010.0], [34.0, 1013.0], [34.1, 1018.0], [34.2, 1018.0], [34.3, 1031.0], [34.4, 1031.0], [34.5, 1033.0], [34.6, 1039.0], [34.7, 1039.0], [34.8, 1061.0], [34.9, 1072.0], [35.0, 1072.0], [35.1, 1081.0], [35.2, 1082.0], [35.3, 1082.0], [35.4, 1096.0], [35.5, 1123.0], [35.6, 1123.0], [35.7, 1137.0], [35.8, 1142.0], [35.9, 1142.0], [36.0, 1153.0], [36.1, 1153.0], [36.2, 1153.0], [36.3, 1161.0], [36.4, 1174.0], [36.5, 1174.0], [36.6, 1184.0], [36.7, 1189.0], [36.8, 1189.0], [36.9, 1214.0], [37.0, 1214.0], [37.1, 1217.0], [37.2, 1238.0], [37.3, 1238.0], [37.4, 1249.0], [37.5, 1263.0], [37.6, 1263.0], [37.7, 1267.0], [37.8, 1292.0], [37.9, 1292.0], [38.0, 1308.0], [38.1, 1310.0], [38.2, 1310.0], [38.3, 1330.0], [38.4, 1342.0], [38.5, 1342.0], [38.6, 1348.0], [38.7, 1355.0], [38.8, 1355.0], [38.9, 1369.0], [39.0, 1375.0], [39.1, 1375.0], [39.2, 1407.0], [39.3, 1416.0], [39.4, 1416.0], [39.5, 1420.0], [39.6, 1420.0], [39.7, 1429.0], [39.8, 1469.0], [39.9, 1469.0], [40.0, 1484.0], [40.1, 1485.0], [40.2, 1485.0], [40.3, 1487.0], [40.4, 1502.0], [40.5, 1502.0], [40.6, 1506.0], [40.7, 1531.0], [40.8, 1531.0], [40.9, 1534.0], [41.0, 1554.0], [41.1, 1554.0], [41.2, 1564.0], [41.3, 1586.0], [41.4, 1586.0], [41.5, 1614.0], [41.6, 1638.0], [41.7, 1638.0], [41.8, 1644.0], [41.9, 1662.0], [42.0, 1662.0], [42.1, 1684.0], [42.2, 1684.0], [42.3, 1688.0], [42.4, 1691.0], [42.5, 1691.0], [42.6, 1693.0], [42.7, 1710.0], [42.8, 1710.0], [42.9, 1730.0], [43.0, 1764.0], [43.1, 1764.0], [43.2, 1780.0], [43.3, 1810.0], [43.4, 1810.0], [43.5, 1820.0], [43.6, 1825.0], [43.7, 1825.0], [43.8, 1845.0], [43.9, 1853.0], [44.0, 1853.0], [44.1, 1868.0], [44.2, 2005.0], [44.3, 2005.0], [44.4, 2020.0], [44.5, 2037.0], [44.6, 2037.0], [44.7, 2049.0], [44.8, 2049.0], [44.9, 2075.0], [45.0, 2175.0], [45.1, 2175.0], [45.2, 2184.0], [45.3, 2203.0], [45.4, 2203.0], [45.5, 2237.0], [45.6, 2257.0], [45.7, 2257.0], [45.8, 2286.0], [45.9, 2381.0], [46.0, 2381.0], [46.1, 2494.0], [46.2, 2524.0], [46.3, 2524.0], [46.4, 2541.0], [46.5, 2688.0], [46.6, 2688.0], [46.7, 2706.0], [46.8, 2766.0], [46.9, 2766.0], [47.0, 2835.0], [47.1, 2896.0], [47.2, 2896.0], [47.3, 2924.0], [47.4, 2924.0], [47.5, 2990.0], [47.6, 3010.0], [47.7, 3010.0], [47.8, 3034.0], [47.9, 3079.0], [48.0, 3079.0], [48.1, 3079.0], [48.2, 3126.0], [48.3, 3126.0], [48.4, 3187.0], [48.5, 3243.0], [48.6, 3243.0], [48.7, 3263.0], [48.8, 3268.0], [48.9, 3268.0], [49.0, 3430.0], [49.1, 3489.0], [49.2, 3489.0], [49.3, 3495.0], [49.4, 3524.0], [49.5, 3524.0], [49.6, 3582.0], [49.7, 3590.0], [49.8, 3590.0], [49.9, 3665.0], [50.0, 3692.0], [50.1, 3692.0], [50.2, 3700.0], [50.3, 3700.0], [50.4, 3758.0], [50.5, 3856.0], [50.6, 3856.0], [50.7, 3882.0], [50.8, 3936.0], [50.9, 3936.0], [51.0, 3954.0], [51.1, 4127.0], [51.2, 4127.0], [51.3, 4219.0], [51.4, 4257.0], [51.5, 4257.0], [51.6, 4284.0], [51.7, 4299.0], [51.8, 4299.0], [51.9, 4318.0], [52.0, 4328.0], [52.1, 4328.0], [52.2, 4405.0], [52.3, 4420.0], [52.4, 4420.0], [52.5, 4447.0], [52.6, 4461.0], [52.7, 4461.0], [52.8, 4469.0], [52.9, 4469.0], [53.0, 4470.0], [53.1, 4538.0], [53.2, 4538.0], [53.3, 4616.0], [53.4, 4621.0], [53.5, 4621.0], [53.6, 4673.0], [53.7, 4680.0], [53.8, 4680.0], [53.9, 4697.0], [54.0, 4753.0], [54.1, 4753.0], [54.2, 4811.0], [54.3, 4869.0], [54.4, 4869.0], [54.5, 4930.0], [54.6, 5062.0], [54.7, 5062.0], [54.8, 5129.0], [54.9, 5181.0], [55.0, 5181.0], [55.1, 5210.0], [55.2, 5234.0], [55.3, 5234.0], [55.4, 5267.0], [55.5, 5267.0], [55.6, 5460.0], [55.7, 5708.0], [55.8, 5708.0], [55.9, 5809.0], [56.0, 5892.0], [56.1, 5892.0], [56.2, 5988.0], [56.3, 6086.0], [56.4, 6086.0], [56.5, 6102.0], [56.6, 6126.0], [56.7, 6126.0], [56.8, 6132.0], [56.9, 6277.0], [57.0, 6277.0], [57.1, 6278.0], [57.2, 6438.0], [57.3, 6438.0], [57.4, 6569.0], [57.5, 6612.0], [57.6, 6612.0], [57.7, 6726.0], [57.8, 6792.0], [57.9, 6792.0], [58.0, 6793.0], [58.1, 6793.0], [58.2, 6933.0], [58.3, 6954.0], [58.4, 6954.0], [58.5, 7069.0], [58.6, 7106.0], [58.7, 7106.0], [58.8, 7290.0], [58.9, 7296.0], [59.0, 7296.0], [59.1, 7354.0], [59.2, 7470.0], [59.3, 7470.0], [59.4, 7542.0], [59.5, 7861.0], [59.6, 7861.0], [59.7, 7916.0], [59.8, 8056.0], [59.9, 8056.0], [60.0, 8240.0], [60.1, 8404.0], [60.2, 8404.0], [60.3, 8412.0], [60.4, 8463.0], [60.5, 8463.0], [60.6, 8472.0], [60.7, 8472.0], [60.8, 8486.0], [60.9, 8682.0], [61.0, 8682.0], [61.1, 8765.0], [61.2, 8770.0], [61.3, 8770.0], [61.4, 8793.0], [61.5, 8812.0], [61.6, 8812.0], [61.7, 8852.0], [61.8, 8877.0], [61.9, 8877.0], [62.0, 8953.0], [62.1, 8983.0], [62.2, 8983.0], [62.3, 9007.0], [62.4, 9183.0], [62.5, 9183.0], [62.6, 9301.0], [62.7, 9306.0], [62.8, 9306.0], [62.9, 9325.0], [63.0, 9501.0], [63.1, 9501.0], [63.2, 9520.0], [63.3, 9520.0], [63.4, 9632.0], [63.5, 9684.0], [63.6, 9684.0], [63.7, 9737.0], [63.8, 9833.0], [63.9, 9833.0], [64.0, 10349.0], [64.1, 10371.0], [64.2, 10371.0], [64.3, 10425.0], [64.4, 10545.0], [64.5, 10545.0], [64.6, 10586.0], [64.7, 10623.0], [64.8, 10623.0], [64.9, 10684.0], [65.0, 10688.0], [65.1, 10688.0], [65.2, 10721.0], [65.3, 10730.0], [65.4, 10730.0], [65.5, 10783.0], [65.6, 10940.0], [65.7, 10940.0], [65.8, 11022.0], [65.9, 11022.0], [66.0, 11055.0], [66.1, 11080.0], [66.2, 11080.0], [66.3, 11087.0], [66.4, 11176.0], [66.5, 11176.0], [66.6, 11451.0], [66.7, 11472.0], [66.8, 11472.0], [66.9, 11708.0], [67.0, 11997.0], [67.1, 11997.0], [67.2, 12014.0], [67.3, 12036.0], [67.4, 12036.0], [67.5, 12123.0], [67.6, 12259.0], [67.7, 12259.0], [67.8, 12306.0], [67.9, 12424.0], [68.0, 12424.0], [68.1, 12964.0], [68.2, 13067.0], [68.3, 13067.0], [68.4, 13067.0], [68.5, 13067.0], [68.6, 13317.0], [68.7, 13475.0], [68.8, 13475.0], [68.9, 13590.0], [69.0, 13939.0], [69.1, 13939.0], [69.2, 13941.0], [69.3, 14108.0], [69.4, 14108.0], [69.5, 14320.0], [69.6, 14856.0], [69.7, 14856.0], [69.8, 15187.0], [69.9, 15224.0], [70.0, 15224.0], [70.1, 15855.0], [70.2, 16452.0], [70.3, 16452.0], [70.4, 16812.0], [70.5, 16935.0], [70.6, 16935.0], [70.7, 17107.0], [70.8, 17336.0], [70.9, 17336.0], [71.0, 17464.0], [71.1, 17464.0], [71.2, 17512.0], [71.3, 18086.0], [71.4, 18086.0], [71.5, 18288.0], [71.6, 18344.0], [71.7, 18344.0], [71.8, 18409.0], [71.9, 18470.0], [72.0, 18470.0], [72.1, 18501.0], [72.2, 18759.0], [72.3, 18759.0], [72.4, 19048.0], [72.5, 19167.0], [72.6, 19167.0], [72.7, 19207.0], [72.8, 19257.0], [72.9, 19257.0], [73.0, 19335.0], [73.1, 19480.0], [73.2, 19480.0], [73.3, 19512.0], [73.4, 19699.0], [73.5, 19699.0], [73.6, 19826.0], [73.7, 19826.0], [73.8, 19864.0], [73.9, 19902.0], [74.0, 19902.0], [74.1, 20196.0], [74.2, 20247.0], [74.3, 20247.0], [74.4, 20317.0], [74.5, 20359.0], [74.6, 20359.0], [74.7, 20465.0], [74.8, 20489.0], [74.9, 20489.0], [75.0, 20538.0], [75.1, 20636.0], [75.2, 20636.0], [75.3, 20707.0], [75.4, 20775.0], [75.5, 20775.0], [75.6, 20800.0], [75.7, 20829.0], [75.8, 20829.0], [75.9, 20890.0], [76.0, 20958.0], [76.1, 20958.0], [76.2, 21230.0], [76.3, 21283.0], [76.4, 21283.0], [76.5, 21486.0], [76.6, 21486.0], [76.7, 21533.0], [76.8, 21627.0], [76.9, 21627.0], [77.0, 21880.0], [77.1, 21906.0], [77.2, 21906.0], [77.3, 22039.0], [77.4, 22170.0], [77.5, 22170.0], [77.6, 22727.0], [77.7, 23003.0], [77.8, 23003.0], [77.9, 23109.0], [78.0, 23440.0], [78.1, 23440.0], [78.2, 23617.0], [78.3, 23750.0], [78.4, 23750.0], [78.5, 23873.0], [78.6, 24832.0], [78.7, 24832.0], [78.8, 24888.0], [78.9, 25192.0], [79.0, 25192.0], [79.1, 25490.0], [79.2, 25490.0], [79.3, 26476.0], [79.4, 26487.0], [79.5, 26487.0], [79.6, 26996.0], [79.7, 26996.0], [79.8, 26996.0], [79.9, 27068.0], [80.0, 27289.0], [80.1, 27289.0], [80.2, 27918.0], [80.3, 28107.0], [80.4, 28107.0], [80.5, 28294.0], [80.6, 28490.0], [80.7, 28490.0], [80.8, 28964.0], [80.9, 29080.0], [81.0, 29080.0], [81.1, 29508.0], [81.2, 29692.0], [81.3, 29692.0], [81.4, 29700.0], [81.5, 29751.0], [81.6, 29751.0], [81.7, 30141.0], [81.8, 30141.0], [81.9, 30454.0], [82.0, 30646.0], [82.1, 30646.0], [82.2, 31313.0], [82.3, 31678.0], [82.4, 31678.0], [82.5, 31725.0], [82.6, 32415.0], [82.7, 32415.0], [82.8, 33083.0], [82.9, 33185.0], [83.0, 33185.0], [83.1, 33392.0], [83.2, 34020.0], [83.3, 34020.0], [83.4, 34030.0], [83.5, 34197.0], [83.6, 34197.0], [83.7, 35083.0], [83.8, 36119.0], [83.9, 36119.0], [84.0, 36681.0], [84.1, 36865.0], [84.2, 36865.0], [84.3, 37166.0], [84.4, 37166.0], [84.5, 37245.0], [84.6, 37715.0], [84.7, 37715.0], [84.8, 37900.0], [84.9, 40123.0], [85.0, 40123.0], [85.1, 40364.0], [85.2, 40475.0], [85.3, 40475.0], [85.4, 40513.0], [85.5, 40592.0], [85.6, 40592.0], [85.7, 40742.0], [85.8, 41096.0], [85.9, 41096.0], [86.0, 41431.0], [86.1, 41505.0], [86.2, 41505.0], [86.3, 41509.0], [86.4, 41568.0], [86.5, 41568.0], [86.6, 41617.0], [86.7, 41712.0], [86.8, 41712.0], [86.9, 41794.0], [87.0, 41794.0], [87.1, 42941.0], [87.2, 43022.0], [87.3, 43022.0], [87.4, 43180.0], [87.5, 43206.0], [87.6, 43206.0], [87.7, 43437.0], [87.8, 43699.0], [87.9, 43699.0], [88.0, 43892.0], [88.1, 44407.0], [88.2, 44407.0], [88.3, 44583.0], [88.4, 44592.0], [88.5, 44592.0], [88.6, 44748.0], [88.7, 44766.0], [88.8, 44766.0], [88.9, 45677.0], [89.0, 45968.0], [89.1, 45968.0], [89.2, 46338.0], [89.3, 46986.0], [89.4, 46986.0], [89.5, 47295.0], [89.6, 47295.0], [89.7, 49625.0], [89.8, 50058.0], [89.9, 50058.0], [90.0, 53803.0], [90.1, 54317.0], [90.2, 54317.0], [90.3, 55094.0], [90.4, 55225.0], [90.5, 55225.0], [90.6, 55230.0], [90.7, 57083.0], [90.8, 57083.0], [90.9, 57357.0], [91.0, 57722.0], [91.1, 57722.0], [91.2, 58690.0], [91.3, 58870.0], [91.4, 58870.0], [91.5, 58932.0], [91.6, 59525.0], [91.7, 59525.0], [91.8, 60078.0], [91.9, 60117.0], [92.0, 60117.0], [92.1, 60118.0], [92.2, 60118.0], [92.3, 60118.0], [92.4, 60119.0], [92.5, 60119.0], [92.6, 60119.0], [92.7, 60121.0], [92.8, 60121.0], [92.9, 60121.0], [93.0, 60121.0], [93.1, 60121.0], [93.2, 60122.0], [93.3, 60122.0], [93.4, 60122.0], [93.5, 60122.0], [93.6, 60122.0], [93.7, 60122.0], [93.8, 60122.0], [93.9, 60123.0], [94.0, 60123.0], [94.1, 60124.0], [94.2, 60124.0], [94.3, 60124.0], [94.4, 60124.0], [94.5, 60124.0], [94.6, 60124.0], [94.7, 60124.0], [94.8, 60124.0], [94.9, 60124.0], [95.0, 60125.0], [95.1, 60125.0], [95.2, 60125.0], [95.3, 60125.0], [95.4, 60125.0], [95.5, 60126.0], [95.6, 60126.0], [95.7, 60126.0], [95.8, 60127.0], [95.9, 60131.0], [96.0, 60131.0], [96.1, 60134.0], [96.2, 60136.0], [96.3, 60136.0], [96.4, 60141.0], [96.5, 60142.0], [96.6, 60142.0], [96.7, 60148.0], [96.8, 60150.0], [96.9, 60150.0], [97.0, 60152.0], [97.1, 60164.0], [97.2, 60164.0], [97.3, 60182.0], [97.4, 60182.0], [97.5, 60185.0], [97.6, 60196.0], [97.7, 60196.0], [97.8, 60202.0], [97.9, 60208.0], [98.0, 60208.0], [98.1, 60215.0], [98.2, 60217.0], [98.3, 60217.0], [98.4, 60219.0], [98.5, 60230.0], [98.6, 60230.0], [98.7, 60230.0], [98.8, 60231.0], [98.9, 60231.0], [99.0, 60232.0], [99.1, 60238.0], [99.2, 60238.0], [99.3, 60245.0], [99.4, 60301.0], [99.5, 60301.0], [99.6, 60304.0], [99.7, 60324.0], [99.8, 60324.0], [99.9, 60330.0], [100.0, 60330.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 223.0], [0.1, 223.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 225.0], [0.7, 225.0], [0.8, 225.0], [0.9, 225.0], [1.0, 225.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 225.0], [2.0, 225.0], [2.1, 225.0], [2.2, 225.0], [2.3, 225.0], [2.4, 226.0], [2.5, 226.0], [2.6, 226.0], [2.7, 226.0], [2.8, 226.0], [2.9, 226.0], [3.0, 226.0], [3.1, 226.0], [3.2, 226.0], [3.3, 226.0], [3.4, 226.0], [3.5, 226.0], [3.6, 226.0], [3.7, 226.0], [3.8, 226.0], [3.9, 226.0], [4.0, 226.0], [4.1, 226.0], [4.2, 226.0], [4.3, 226.0], [4.4, 226.0], [4.5, 226.0], [4.6, 226.0], [4.7, 226.0], [4.8, 226.0], [4.9, 226.0], [5.0, 226.0], [5.1, 226.0], [5.2, 226.0], [5.3, 226.0], [5.4, 227.0], [5.5, 227.0], [5.6, 227.0], [5.7, 227.0], [5.8, 227.0], [5.9, 227.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 227.0], [6.5, 227.0], [6.6, 227.0], [6.7, 227.0], [6.8, 227.0], [6.9, 227.0], [7.0, 227.0], [7.1, 227.0], [7.2, 227.0], [7.3, 227.0], [7.4, 227.0], [7.5, 227.0], [7.6, 227.0], [7.7, 227.0], [7.8, 227.0], [7.9, 227.0], [8.0, 227.0], [8.1, 227.0], [8.2, 227.0], [8.3, 227.0], [8.4, 227.0], [8.5, 227.0], [8.6, 227.0], [8.7, 227.0], [8.8, 227.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 227.0], [9.6, 228.0], [9.7, 228.0], [9.8, 228.0], [9.9, 228.0], [10.0, 228.0], [10.1, 228.0], [10.2, 228.0], [10.3, 228.0], [10.4, 228.0], [10.5, 228.0], [10.6, 228.0], [10.7, 228.0], [10.8, 228.0], [10.9, 228.0], [11.0, 228.0], [11.1, 228.0], [11.2, 228.0], [11.3, 228.0], [11.4, 228.0], [11.5, 228.0], [11.6, 228.0], [11.7, 228.0], [11.8, 228.0], [11.9, 228.0], [12.0, 228.0], [12.1, 228.0], [12.2, 228.0], [12.3, 228.0], [12.4, 228.0], [12.5, 228.0], [12.6, 228.0], [12.7, 228.0], [12.8, 228.0], [12.9, 228.0], [13.0, 229.0], [13.1, 229.0], [13.2, 229.0], [13.3, 229.0], [13.4, 229.0], [13.5, 229.0], [13.6, 229.0], [13.7, 229.0], [13.8, 229.0], [13.9, 229.0], [14.0, 229.0], [14.1, 229.0], [14.2, 229.0], [14.3, 229.0], [14.4, 229.0], [14.5, 229.0], [14.6, 229.0], [14.7, 229.0], [14.8, 229.0], [14.9, 229.0], [15.0, 229.0], [15.1, 229.0], [15.2, 229.0], [15.3, 229.0], [15.4, 229.0], [15.5, 229.0], [15.6, 229.0], [15.7, 229.0], [15.8, 229.0], [15.9, 229.0], [16.0, 229.0], [16.1, 229.0], [16.2, 229.0], [16.3, 229.0], [16.4, 229.0], [16.5, 229.0], [16.6, 229.0], [16.7, 230.0], [16.8, 230.0], [16.9, 230.0], [17.0, 230.0], [17.1, 230.0], [17.2, 230.0], [17.3, 230.0], [17.4, 230.0], [17.5, 230.0], [17.6, 230.0], [17.7, 230.0], [17.8, 230.0], [17.9, 230.0], [18.0, 230.0], [18.1, 230.0], [18.2, 230.0], [18.3, 230.0], [18.4, 230.0], [18.5, 230.0], [18.6, 230.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 231.0], [19.2, 231.0], [19.3, 231.0], [19.4, 231.0], [19.5, 231.0], [19.6, 231.0], [19.7, 231.0], [19.8, 231.0], [19.9, 231.0], [20.0, 231.0], [20.1, 231.0], [20.2, 231.0], [20.3, 231.0], [20.4, 231.0], [20.5, 231.0], [20.6, 231.0], [20.7, 231.0], [20.8, 231.0], [20.9, 231.0], [21.0, 231.0], [21.1, 231.0], [21.2, 231.0], [21.3, 231.0], [21.4, 232.0], [21.5, 232.0], [21.6, 232.0], [21.7, 232.0], [21.8, 232.0], [21.9, 232.0], [22.0, 232.0], [22.1, 232.0], [22.2, 232.0], [22.3, 232.0], [22.4, 232.0], [22.5, 232.0], [22.6, 232.0], [22.7, 232.0], [22.8, 232.0], [22.9, 232.0], [23.0, 232.0], [23.1, 232.0], [23.2, 232.0], [23.3, 232.0], [23.4, 232.0], [23.5, 232.0], [23.6, 232.0], [23.7, 232.0], [23.8, 232.0], [23.9, 232.0], [24.0, 232.0], [24.1, 232.0], [24.2, 232.0], [24.3, 232.0], [24.4, 232.0], [24.5, 232.0], [24.6, 232.0], [24.7, 232.0], [24.8, 233.0], [24.9, 233.0], [25.0, 233.0], [25.1, 233.0], [25.2, 233.0], [25.3, 233.0], [25.4, 233.0], [25.5, 233.0], [25.6, 233.0], [25.7, 233.0], [25.8, 233.0], [25.9, 233.0], [26.0, 234.0], [26.1, 234.0], [26.2, 234.0], [26.3, 234.0], [26.4, 234.0], [26.5, 234.0], [26.6, 234.0], [26.7, 234.0], [26.8, 234.0], [26.9, 234.0], [27.0, 234.0], [27.1, 234.0], [27.2, 234.0], [27.3, 234.0], [27.4, 234.0], [27.5, 234.0], [27.6, 234.0], [27.7, 234.0], [27.8, 234.0], [27.9, 234.0], [28.0, 234.0], [28.1, 234.0], [28.2, 234.0], [28.3, 234.0], [28.4, 235.0], [28.5, 235.0], [28.6, 235.0], [28.7, 235.0], [28.8, 235.0], [28.9, 235.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 235.0], [29.5, 235.0], [29.6, 235.0], [29.7, 235.0], [29.8, 235.0], [29.9, 235.0], [30.0, 235.0], [30.1, 235.0], [30.2, 235.0], [30.3, 235.0], [30.4, 235.0], [30.5, 235.0], [30.6, 235.0], [30.7, 235.0], [30.8, 236.0], [30.9, 236.0], [31.0, 236.0], [31.1, 236.0], [31.2, 236.0], [31.3, 236.0], [31.4, 236.0], [31.5, 236.0], [31.6, 236.0], [31.7, 236.0], [31.8, 236.0], [31.9, 236.0], [32.0, 236.0], [32.1, 236.0], [32.2, 236.0], [32.3, 236.0], [32.4, 236.0], [32.5, 236.0], [32.6, 236.0], [32.7, 236.0], [32.8, 236.0], [32.9, 236.0], [33.0, 236.0], [33.1, 236.0], [33.2, 236.0], [33.3, 236.0], [33.4, 237.0], [33.5, 237.0], [33.6, 237.0], [33.7, 237.0], [33.8, 237.0], [33.9, 237.0], [34.0, 237.0], [34.1, 237.0], [34.2, 237.0], [34.3, 237.0], [34.4, 237.0], [34.5, 237.0], [34.6, 237.0], [34.7, 237.0], [34.8, 237.0], [34.9, 237.0], [35.0, 237.0], [35.1, 237.0], [35.2, 237.0], [35.3, 237.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 237.0], [35.8, 237.0], [35.9, 237.0], [36.0, 237.0], [36.1, 237.0], [36.2, 237.0], [36.3, 237.0], [36.4, 237.0], [36.5, 237.0], [36.6, 237.0], [36.7, 237.0], [36.8, 237.0], [36.9, 237.0], [37.0, 237.0], [37.1, 237.0], [37.2, 237.0], [37.3, 237.0], [37.4, 237.0], [37.5, 237.0], [37.6, 238.0], [37.7, 238.0], [37.8, 238.0], [37.9, 238.0], [38.0, 238.0], [38.1, 238.0], [38.2, 238.0], [38.3, 238.0], [38.4, 238.0], [38.5, 238.0], [38.6, 238.0], [38.7, 238.0], [38.8, 238.0], [38.9, 238.0], [39.0, 238.0], [39.1, 238.0], [39.2, 238.0], [39.3, 238.0], [39.4, 238.0], [39.5, 238.0], [39.6, 238.0], [39.7, 238.0], [39.8, 238.0], [39.9, 238.0], [40.0, 238.0], [40.1, 238.0], [40.2, 238.0], [40.3, 238.0], [40.4, 238.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 238.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 239.0], [41.3, 239.0], [41.4, 239.0], [41.5, 239.0], [41.6, 239.0], [41.7, 239.0], [41.8, 239.0], [41.9, 239.0], [42.0, 239.0], [42.1, 239.0], [42.2, 239.0], [42.3, 239.0], [42.4, 239.0], [42.5, 239.0], [42.6, 239.0], [42.7, 239.0], [42.8, 239.0], [42.9, 239.0], [43.0, 239.0], [43.1, 239.0], [43.2, 239.0], [43.3, 239.0], [43.4, 239.0], [43.5, 239.0], [43.6, 239.0], [43.7, 239.0], [43.8, 239.0], [43.9, 239.0], [44.0, 239.0], [44.1, 239.0], [44.2, 239.0], [44.3, 239.0], [44.4, 239.0], [44.5, 239.0], [44.6, 239.0], [44.7, 239.0], [44.8, 239.0], [44.9, 239.0], [45.0, 239.0], [45.1, 240.0], [45.2, 240.0], [45.3, 240.0], [45.4, 240.0], [45.5, 240.0], [45.6, 240.0], [45.7, 240.0], [45.8, 240.0], [45.9, 240.0], [46.0, 240.0], [46.1, 240.0], [46.2, 240.0], [46.3, 240.0], [46.4, 240.0], [46.5, 240.0], [46.6, 240.0], [46.7, 240.0], [46.8, 240.0], [46.9, 240.0], [47.0, 240.0], [47.1, 240.0], [47.2, 240.0], [47.3, 240.0], [47.4, 240.0], [47.5, 240.0], [47.6, 240.0], [47.7, 240.0], [47.8, 240.0], [47.9, 240.0], [48.0, 240.0], [48.1, 240.0], [48.2, 240.0], [48.3, 240.0], [48.4, 240.0], [48.5, 240.0], [48.6, 240.0], [48.7, 240.0], [48.8, 240.0], [48.9, 240.0], [49.0, 240.0], [49.1, 240.0], [49.2, 240.0], [49.3, 240.0], [49.4, 241.0], [49.5, 241.0], [49.6, 241.0], [49.7, 241.0], [49.8, 241.0], [49.9, 241.0], [50.0, 241.0], [50.1, 241.0], [50.2, 241.0], [50.3, 241.0], [50.4, 241.0], [50.5, 241.0], [50.6, 241.0], [50.7, 241.0], [50.8, 241.0], [50.9, 241.0], [51.0, 241.0], [51.1, 241.0], [51.2, 241.0], [51.3, 241.0], [51.4, 241.0], [51.5, 241.0], [51.6, 241.0], [51.7, 241.0], [51.8, 242.0], [51.9, 242.0], [52.0, 242.0], [52.1, 242.0], [52.2, 242.0], [52.3, 242.0], [52.4, 242.0], [52.5, 242.0], [52.6, 242.0], [52.7, 242.0], [52.8, 242.0], [52.9, 242.0], [53.0, 242.0], [53.1, 242.0], [53.2, 242.0], [53.3, 242.0], [53.4, 242.0], [53.5, 242.0], [53.6, 242.0], [53.7, 242.0], [53.8, 242.0], [53.9, 242.0], [54.0, 242.0], [54.1, 243.0], [54.2, 243.0], [54.3, 243.0], [54.4, 243.0], [54.5, 243.0], [54.6, 243.0], [54.7, 243.0], [54.8, 243.0], [54.9, 243.0], [55.0, 243.0], [55.1, 243.0], [55.2, 243.0], [55.3, 243.0], [55.4, 243.0], [55.5, 243.0], [55.6, 243.0], [55.7, 243.0], [55.8, 243.0], [55.9, 243.0], [56.0, 243.0], [56.1, 243.0], [56.2, 243.0], [56.3, 243.0], [56.4, 243.0], [56.5, 243.0], [56.6, 243.0], [56.7, 244.0], [56.8, 244.0], [56.9, 244.0], [57.0, 244.0], [57.1, 244.0], [57.2, 244.0], [57.3, 244.0], [57.4, 244.0], [57.5, 244.0], [57.6, 244.0], [57.7, 245.0], [57.8, 245.0], [57.9, 245.0], [58.0, 245.0], [58.1, 245.0], [58.2, 245.0], [58.3, 245.0], [58.4, 245.0], [58.5, 245.0], [58.6, 245.0], [58.7, 245.0], [58.8, 245.0], [58.9, 246.0], [59.0, 246.0], [59.1, 246.0], [59.2, 246.0], [59.3, 246.0], [59.4, 246.0], [59.5, 246.0], [59.6, 246.0], [59.7, 246.0], [59.8, 246.0], [59.9, 246.0], [60.0, 246.0], [60.1, 246.0], [60.2, 246.0], [60.3, 246.0], [60.4, 246.0], [60.5, 246.0], [60.6, 246.0], [60.7, 246.0], [60.8, 246.0], [60.9, 247.0], [61.0, 247.0], [61.1, 247.0], [61.2, 247.0], [61.3, 247.0], [61.4, 247.0], [61.5, 247.0], [61.6, 247.0], [61.7, 247.0], [61.8, 247.0], [61.9, 247.0], [62.0, 247.0], [62.1, 247.0], [62.2, 248.0], [62.3, 248.0], [62.4, 248.0], [62.5, 248.0], [62.6, 248.0], [62.7, 248.0], [62.8, 248.0], [62.9, 249.0], [63.0, 249.0], [63.1, 249.0], [63.2, 249.0], [63.3, 249.0], [63.4, 249.0], [63.5, 249.0], [63.6, 249.0], [63.7, 249.0], [63.8, 249.0], [63.9, 249.0], [64.0, 249.0], [64.1, 249.0], [64.2, 249.0], [64.3, 249.0], [64.4, 250.0], [64.5, 250.0], [64.6, 250.0], [64.7, 250.0], [64.8, 250.0], [64.9, 250.0], [65.0, 250.0], [65.1, 250.0], [65.2, 250.0], [65.3, 250.0], [65.4, 250.0], [65.5, 251.0], [65.6, 251.0], [65.7, 251.0], [65.8, 251.0], [65.9, 251.0], [66.0, 251.0], [66.1, 251.0], [66.2, 252.0], [66.3, 252.0], [66.4, 252.0], [66.5, 252.0], [66.6, 252.0], [66.7, 253.0], [66.8, 253.0], [66.9, 253.0], [67.0, 253.0], [67.1, 253.0], [67.2, 253.0], [67.3, 254.0], [67.4, 254.0], [67.5, 254.0], [67.6, 254.0], [67.7, 254.0], [67.8, 254.0], [67.9, 254.0], [68.0, 254.0], [68.1, 254.0], [68.2, 254.0], [68.3, 254.0], [68.4, 254.0], [68.5, 254.0], [68.6, 254.0], [68.7, 254.0], [68.8, 255.0], [68.9, 255.0], [69.0, 255.0], [69.1, 255.0], [69.2, 255.0], [69.3, 255.0], [69.4, 255.0], [69.5, 255.0], [69.6, 256.0], [69.7, 256.0], [69.8, 256.0], [69.9, 256.0], [70.0, 256.0], [70.1, 256.0], [70.2, 256.0], [70.3, 256.0], [70.4, 257.0], [70.5, 257.0], [70.6, 257.0], [70.7, 257.0], [70.8, 258.0], [70.9, 258.0], [71.0, 258.0], [71.1, 258.0], [71.2, 258.0], [71.3, 258.0], [71.4, 258.0], [71.5, 258.0], [71.6, 258.0], [71.7, 258.0], [71.8, 258.0], [71.9, 258.0], [72.0, 259.0], [72.1, 259.0], [72.2, 259.0], [72.3, 259.0], [72.4, 259.0], [72.5, 259.0], [72.6, 260.0], [72.7, 260.0], [72.8, 260.0], [72.9, 260.0], [73.0, 260.0], [73.1, 260.0], [73.2, 260.0], [73.3, 260.0], [73.4, 261.0], [73.5, 261.0], [73.6, 261.0], [73.7, 261.0], [73.8, 262.0], [73.9, 262.0], [74.0, 262.0], [74.1, 262.0], [74.2, 262.0], [74.3, 262.0], [74.4, 262.0], [74.5, 262.0], [74.6, 263.0], [74.7, 263.0], [74.8, 263.0], [74.9, 263.0], [75.0, 263.0], [75.1, 263.0], [75.2, 263.0], [75.3, 263.0], [75.4, 263.0], [75.5, 264.0], [75.6, 264.0], [75.7, 264.0], [75.8, 264.0], [75.9, 264.0], [76.0, 264.0], [76.1, 264.0], [76.2, 265.0], [76.3, 265.0], [76.4, 265.0], [76.5, 265.0], [76.6, 265.0], [76.7, 265.0], [76.8, 266.0], [76.9, 266.0], [77.0, 266.0], [77.1, 266.0], [77.2, 266.0], [77.3, 266.0], [77.4, 266.0], [77.5, 266.0], [77.6, 266.0], [77.7, 267.0], [77.8, 267.0], [77.9, 267.0], [78.0, 268.0], [78.1, 269.0], [78.2, 269.0], [78.3, 269.0], [78.4, 269.0], [78.5, 269.0], [78.6, 269.0], [78.7, 269.0], [78.8, 269.0], [78.9, 270.0], [79.0, 270.0], [79.1, 270.0], [79.2, 270.0], [79.3, 271.0], [79.4, 271.0], [79.5, 271.0], [79.6, 271.0], [79.7, 271.0], [79.8, 271.0], [79.9, 272.0], [80.0, 272.0], [80.1, 272.0], [80.2, 273.0], [80.3, 273.0], [80.4, 273.0], [80.5, 274.0], [80.6, 274.0], [80.7, 274.0], [80.8, 274.0], [80.9, 274.0], [81.0, 274.0], [81.1, 275.0], [81.2, 275.0], [81.3, 275.0], [81.4, 275.0], [81.5, 275.0], [81.6, 276.0], [81.7, 276.0], [81.8, 276.0], [81.9, 276.0], [82.0, 276.0], [82.1, 276.0], [82.2, 276.0], [82.3, 276.0], [82.4, 276.0], [82.5, 277.0], [82.6, 277.0], [82.7, 277.0], [82.8, 277.0], [82.9, 277.0], [83.0, 277.0], [83.1, 277.0], [83.2, 278.0], [83.3, 278.0], [83.4, 278.0], [83.5, 279.0], [83.6, 279.0], [83.7, 279.0], [83.8, 281.0], [83.9, 281.0], [84.0, 281.0], [84.1, 281.0], [84.2, 281.0], [84.3, 282.0], [84.4, 282.0], [84.5, 282.0], [84.6, 282.0], [84.7, 282.0], [84.8, 282.0], [84.9, 282.0], [85.0, 283.0], [85.1, 283.0], [85.2, 283.0], [85.3, 283.0], [85.4, 284.0], [85.5, 284.0], [85.6, 284.0], [85.7, 285.0], [85.8, 285.0], [85.9, 286.0], [86.0, 286.0], [86.1, 286.0], [86.2, 286.0], [86.3, 286.0], [86.4, 286.0], [86.5, 287.0], [86.6, 288.0], [86.7, 288.0], [86.8, 288.0], [86.9, 288.0], [87.0, 288.0], [87.1, 288.0], [87.2, 289.0], [87.3, 289.0], [87.4, 289.0], [87.5, 290.0], [87.6, 290.0], [87.7, 290.0], [87.8, 290.0], [87.9, 290.0], [88.0, 290.0], [88.1, 291.0], [88.2, 291.0], [88.3, 292.0], [88.4, 292.0], [88.5, 292.0], [88.6, 292.0], [88.7, 295.0], [88.8, 295.0], [88.9, 296.0], [89.0, 296.0], [89.1, 296.0], [89.2, 300.0], [89.3, 300.0], [89.4, 300.0], [89.5, 300.0], [89.6, 303.0], [89.7, 303.0], [89.8, 304.0], [89.9, 305.0], [90.0, 305.0], [90.1, 305.0], [90.2, 305.0], [90.3, 305.0], [90.4, 305.0], [90.5, 305.0], [90.6, 305.0], [90.7, 305.0], [90.8, 307.0], [90.9, 307.0], [91.0, 307.0], [91.1, 308.0], [91.2, 308.0], [91.3, 309.0], [91.4, 310.0], [91.5, 310.0], [91.6, 310.0], [91.7, 311.0], [91.8, 311.0], [91.9, 311.0], [92.0, 313.0], [92.1, 313.0], [92.2, 314.0], [92.3, 315.0], [92.4, 316.0], [92.5, 316.0], [92.6, 317.0], [92.7, 321.0], [92.8, 321.0], [92.9, 321.0], [93.0, 321.0], [93.1, 321.0], [93.2, 323.0], [93.3, 324.0], [93.4, 324.0], [93.5, 325.0], [93.6, 326.0], [93.7, 326.0], [93.8, 327.0], [93.9, 328.0], [94.0, 328.0], [94.1, 328.0], [94.2, 331.0], [94.3, 331.0], [94.4, 331.0], [94.5, 332.0], [94.6, 332.0], [94.7, 335.0], [94.8, 336.0], [94.9, 336.0], [95.0, 336.0], [95.1, 337.0], [95.2, 337.0], [95.3, 338.0], [95.4, 339.0], [95.5, 339.0], [95.6, 344.0], [95.7, 345.0], [95.8, 345.0], [95.9, 346.0], [96.0, 348.0], [96.1, 348.0], [96.2, 353.0], [96.3, 356.0], [96.4, 356.0], [96.5, 363.0], [96.6, 366.0], [96.7, 366.0], [96.8, 368.0], [96.9, 370.0], [97.0, 370.0], [97.1, 372.0], [97.2, 374.0], [97.3, 374.0], [97.4, 376.0], [97.5, 378.0], [97.6, 378.0], [97.7, 380.0], [97.8, 395.0], [97.9, 395.0], [98.0, 398.0], [98.1, 408.0], [98.2, 408.0], [98.3, 413.0], [98.4, 430.0], [98.5, 430.0], [98.6, 436.0], [98.7, 447.0], [98.8, 447.0], [98.9, 447.0], [99.0, 450.0], [99.1, 450.0], [99.2, 470.0], [99.3, 479.0], [99.4, 479.0], [99.5, 488.0], [99.6, 494.0], [99.7, 494.0], [99.8, 616.0], [99.9, 890.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 598.0, "series": [{"data": [[33300.0, 1.0], [34500.0, 1.0], [35300.0, 1.0], [38100.0, 1.0], [36900.0, 1.0], [40900.0, 1.0], [41700.0, 4.0], [41300.0, 1.0], [44100.0, 1.0], [44900.0, 2.0], [46500.0, 1.0], [200.0, 16.0], [54500.0, 1.0], [55300.0, 1.0], [57300.0, 1.0], [58900.0, 1.0], [60500.0, 10.0], [59700.0, 1.0], [300.0, 163.0], [400.0, 12.0], [500.0, 2.0], [700.0, 1.0], [800.0, 6.0], [900.0, 3.0], [1000.0, 8.0], [1100.0, 13.0], [1200.0, 18.0], [1300.0, 9.0], [1400.0, 10.0], [1500.0, 9.0], [1600.0, 6.0], [1700.0, 8.0], [1800.0, 3.0], [1900.0, 8.0], [2000.0, 3.0], [2100.0, 5.0], [2300.0, 4.0], [2200.0, 3.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 4.0], [2900.0, 2.0], [3000.0, 2.0], [3200.0, 3.0], [3300.0, 4.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 3.0], [3600.0, 2.0], [3800.0, 2.0], [3900.0, 5.0], [4000.0, 1.0], [4100.0, 3.0], [4500.0, 5.0], [4600.0, 3.0], [4400.0, 1.0], [4700.0, 5.0], [4800.0, 2.0], [4900.0, 4.0], [5000.0, 2.0], [5300.0, 2.0], [5200.0, 1.0], [5500.0, 1.0], [5400.0, 2.0], [5600.0, 2.0], [6100.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6300.0, 3.0], [6200.0, 1.0], [6600.0, 1.0], [6500.0, 2.0], [6400.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7300.0, 2.0], [7500.0, 2.0], [7600.0, 1.0], [7700.0, 2.0], [8100.0, 2.0], [8700.0, 4.0], [8300.0, 1.0], [8600.0, 1.0], [8400.0, 1.0], [9200.0, 3.0], [9000.0, 5.0], [9100.0, 1.0], [8900.0, 1.0], [9500.0, 2.0], [9700.0, 3.0], [9400.0, 1.0], [9900.0, 3.0], [10000.0, 1.0], [10600.0, 3.0], [10800.0, 3.0], [10900.0, 4.0], [11200.0, 1.0], [11000.0, 1.0], [11100.0, 1.0], [11300.0, 3.0], [11700.0, 1.0], [11400.0, 1.0], [11900.0, 2.0], [12200.0, 3.0], [12600.0, 3.0], [12400.0, 1.0], [13300.0, 2.0], [13700.0, 1.0], [13800.0, 1.0], [13400.0, 1.0], [13500.0, 1.0], [14200.0, 1.0], [14100.0, 1.0], [14300.0, 1.0], [14500.0, 1.0], [15000.0, 1.0], [15400.0, 2.0], [16100.0, 1.0], [16600.0, 1.0], [17000.0, 1.0], [17600.0, 1.0], [19000.0, 1.0], [19200.0, 1.0], [18600.0, 2.0], [19400.0, 1.0], [20000.0, 1.0], [19600.0, 1.0], [20400.0, 1.0], [21000.0, 3.0], [21200.0, 1.0], [20600.0, 2.0], [21400.0, 1.0], [21800.0, 1.0], [22200.0, 1.0], [23000.0, 1.0], [23200.0, 1.0], [23800.0, 1.0], [24200.0, 1.0], [25000.0, 1.0], [25400.0, 1.0], [27200.0, 3.0], [28400.0, 1.0], [29200.0, 1.0], [30000.0, 1.0], [30600.0, 1.0], [31000.0, 1.0], [32600.0, 1.0], [33600.0, 1.0], [38000.0, 1.0], [40800.0, 2.0], [42000.0, 1.0], [43600.0, 1.0], [44800.0, 2.0], [43200.0, 1.0], [47200.0, 1.0], [54000.0, 1.0], [57600.0, 1.0], [60400.0, 18.0], [36300.0, 1.0], [37100.0, 1.0], [40300.0, 1.0], [40700.0, 1.0], [41900.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [45900.0, 1.0], [47500.0, 1.0], [59100.0, 2.0], [57900.0, 1.0], [60300.0, 25.0], [17100.0, 1.0], [17300.0, 1.0], [17500.0, 1.0], [18300.0, 1.0], [17700.0, 1.0], [19300.0, 1.0], [18700.0, 1.0], [18500.0, 2.0], [20100.0, 2.0], [19500.0, 1.0], [19900.0, 1.0], [19700.0, 2.0], [20900.0, 2.0], [20700.0, 2.0], [21100.0, 1.0], [20500.0, 2.0], [21500.0, 1.0], [21700.0, 2.0], [22100.0, 2.0], [22300.0, 1.0], [23300.0, 1.0], [23700.0, 1.0], [23900.0, 1.0], [25100.0, 1.0], [25700.0, 1.0], [26700.0, 2.0], [27500.0, 1.0], [28500.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [28700.0, 1.0], [29700.0, 1.0], [29900.0, 2.0], [30300.0, 1.0], [31500.0, 1.0], [31900.0, 2.0], [34200.0, 2.0], [33400.0, 1.0], [37400.0, 2.0], [40600.0, 1.0], [41800.0, 1.0], [44600.0, 1.0], [43400.0, 2.0], [46200.0, 1.0], [49800.0, 1.0], [50200.0, 1.0], [55400.0, 2.0], [61000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 177.0], [33300.0, 1.0], [34100.0, 1.0], [36100.0, 1.0], [37700.0, 1.0], [40500.0, 2.0], [40100.0, 1.0], [42900.0, 1.0], [41700.0, 2.0], [44500.0, 2.0], [46900.0, 1.0], [57300.0, 1.0], [58900.0, 1.0], [57700.0, 1.0], [60100.0, 38.0], [400.0, 1.0], [500.0, 3.0], [600.0, 5.0], [700.0, 7.0], [800.0, 5.0], [900.0, 22.0], [1000.0, 12.0], [1100.0, 9.0], [1200.0, 7.0], [1300.0, 8.0], [1400.0, 8.0], [1500.0, 7.0], [1600.0, 8.0], [1700.0, 4.0], [1800.0, 6.0], [2000.0, 5.0], [2100.0, 2.0], [2200.0, 4.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 2.0], [3200.0, 3.0], [3400.0, 3.0], [3500.0, 3.0], [3700.0, 2.0], [3600.0, 2.0], [3800.0, 2.0], [3900.0, 2.0], [4200.0, 4.0], [4300.0, 2.0], [4100.0, 1.0], [4400.0, 6.0], [4600.0, 5.0], [4500.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [5100.0, 2.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 3.0], [5400.0, 1.0], [5800.0, 2.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 3.0], [5900.0, 1.0], [6200.0, 2.0], [6600.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [6700.0, 3.0], [6900.0, 2.0], [7100.0, 1.0], [7000.0, 1.0], [7200.0, 2.0], [7400.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8000.0, 1.0], [8400.0, 5.0], [8700.0, 3.0], [8600.0, 1.0], [8200.0, 1.0], [9000.0, 1.0], [8800.0, 3.0], [9100.0, 1.0], [8900.0, 2.0], [9300.0, 3.0], [9500.0, 2.0], [9600.0, 2.0], [9700.0, 1.0], [9800.0, 1.0], [10500.0, 2.0], [10600.0, 3.0], [10300.0, 2.0], [10700.0, 3.0], [10400.0, 1.0], [11000.0, 4.0], [10900.0, 1.0], [11100.0, 1.0], [11700.0, 1.0], [11400.0, 2.0], [12000.0, 2.0], [12200.0, 1.0], [12100.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [12400.0, 1.0], [13000.0, 2.0], [12900.0, 1.0], [13300.0, 1.0], [13400.0, 1.0], [13500.0, 1.0], [14300.0, 1.0], [13900.0, 2.0], [14100.0, 1.0], [14800.0, 1.0], [15200.0, 1.0], [15100.0, 1.0], [15800.0, 1.0], [16400.0, 1.0], [17400.0, 1.0], [16800.0, 1.0], [18400.0, 2.0], [18200.0, 1.0], [18000.0, 1.0], [19000.0, 1.0], [19200.0, 2.0], [19400.0, 1.0], [19800.0, 2.0], [19600.0, 1.0], [20400.0, 2.0], [20200.0, 1.0], [21400.0, 1.0], [20600.0, 1.0], [20800.0, 3.0], [21200.0, 2.0], [21600.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [23000.0, 1.0], [23400.0, 1.0], [23600.0, 1.0], [23800.0, 1.0], [24800.0, 2.0], [25400.0, 1.0], [26400.0, 2.0], [27200.0, 1.0], [27000.0, 1.0], [28200.0, 1.0], [28400.0, 1.0], [29600.0, 1.0], [29000.0, 1.0], [30400.0, 1.0], [30600.0, 1.0], [31600.0, 1.0], [32400.0, 1.0], [34000.0, 2.0], [36800.0, 1.0], [37200.0, 1.0], [40400.0, 1.0], [41600.0, 1.0], [43600.0, 1.0], [44400.0, 1.0], [43200.0, 1.0], [45600.0, 1.0], [47200.0, 1.0], [49600.0, 1.0], [50000.0, 1.0], [55200.0, 2.0], [58800.0, 1.0], [60000.0, 1.0], [33100.0, 1.0], [37900.0, 1.0], [37100.0, 1.0], [40700.0, 1.0], [40300.0, 1.0], [41500.0, 3.0], [44700.0, 2.0], [43100.0, 1.0], [46300.0, 1.0], [45900.0, 1.0], [54300.0, 1.0], [60300.0, 4.0], [59500.0, 1.0], [17300.0, 1.0], [16900.0, 1.0], [17100.0, 1.0], [18300.0, 1.0], [17500.0, 1.0], [18700.0, 1.0], [19100.0, 1.0], [18500.0, 1.0], [19300.0, 1.0], [19900.0, 1.0], [19500.0, 1.0], [20300.0, 2.0], [20100.0, 1.0], [20700.0, 2.0], [20900.0, 1.0], [21500.0, 1.0], [20500.0, 1.0], [21900.0, 1.0], [22100.0, 1.0], [22700.0, 1.0], [23100.0, 1.0], [23700.0, 1.0], [25100.0, 1.0], [26900.0, 2.0], [27900.0, 1.0], [28100.0, 1.0], [28900.0, 1.0], [29500.0, 1.0], [29700.0, 2.0], [30100.0, 1.0], [31700.0, 1.0], [31300.0, 1.0], [33000.0, 1.0], [36600.0, 1.0], [35000.0, 1.0], [41400.0, 1.0], [43000.0, 1.0], [41000.0, 1.0], [43400.0, 1.0], [43800.0, 1.0], [55000.0, 1.0], [53800.0, 1.0], [57000.0, 1.0], [58600.0, 1.0], [60200.0, 11.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 60.0], [600.0, 1.0], [200.0, 598.0], [400.0, 11.0], [800.0, 1.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 61000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 661.0, "series": [{"data": [[0.0, 505.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 157.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 661.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.28125, "minX": 1.68517818E12, "maxY": 24.805019305019307, "series": [{"data": [[1.68517854E12, 12.318518518518522], [1.68517884E12, 20.0], [1.68517818E12, 3.28125], [1.68517848E12, 10.0], [1.68517878E12, 20.0], [1.68517842E12, 10.0], [1.68517872E12, 17.808510638297875], [1.68517902E12, 15.577464788732394], [1.68517836E12, 8.531914893617019], [1.68517866E12, 15.0], [1.68517896E12, 24.805019305019307], [1.6851783E12, 5.0], [1.6851786E12, 15.0], [1.6851789E12, 24.09302325581395], [1.68517824E12, 5.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517902E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 236.66666666666666, "minX": 1.0, "maxY": 47215.0, "series": [{"data": [[2.0, 13436.0], [3.0, 12643.0], [4.0, 14131.4], [5.0, 18365.93103448276], [6.0, 37067.5], [7.0, 26658.166666666668], [8.0, 47215.0], [9.0, 16466.0], [10.0, 15653.818181818186], [11.0, 4130.5625], [12.0, 4396.466666666665], [13.0, 1975.2500000000002], [14.0, 13237.5], [15.0, 28491.338709677417], [1.0, 13321.0], [16.0, 11236.363636363636], [17.0, 3851.166666666666], [18.0, 12183.8], [19.0, 13761.88888888889], [20.0, 13401.865591397855], [21.0, 12671.2], [22.0, 281.0], [23.0, 529.9], [24.0, 27051.92307692308], [25.0, 9438.653409090908]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.943283582089546, 13823.340298507463]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 13206.0], [8.0, 46986.0], [9.0, 32415.0], [10.0, 15609.82894736842], [11.0, 4154.133333333333], [3.0, 12400.666666666666], [12.0, 4435.214285714285], [13.0, 2284.666666666667], [14.0, 13001.4375], [15.0, 28710.131147540982], [1.0, 13048.0], [4.0, 13897.2], [16.0, 12094.0], [17.0, 3938.909090909091], [18.0, 14930.75], [19.0, 15186.75], [5.0, 18111.48275862069], [20.0, 13200.762162162164], [21.0, 15479.499999999998], [23.0, 306.22222222222223], [6.0, 36837.5], [24.0, 29026.166666666668], [25.0, 9232.948571428573], [7.0, 26420.333333333336]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.961773700305844, 13898.094801223244]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 250.0], [3.0, 236.66666666666666], [4.0, 247.8], [5.0, 252.1034482758621], [6.0, 238.0], [7.0, 246.42857142857142], [8.0, 246.0], [9.0, 271.6666666666667], [10.0, 245.42105263157887], [11.0, 240.5625], [12.0, 242.26666666666665], [13.0, 278.6666666666667], [14.0, 244.92857142857142], [15.0, 243.968253968254], [1.0, 270.5], [16.0, 238.83333333333331], [17.0, 246.81818181818178], [18.0, 243.57142857142858], [19.0, 244.125], [20.0, 271.4171122994652], [21.0, 278.0], [22.0, 296.0], [23.0, 247.77777777777777], [24.0, 363.57142857142856], [25.0, 250.632183908046]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.91803278688525, 257.1669150521612]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 733.8333333333334, "minX": 1.68517818E12, "maxY": 23576.416666666668, "series": [{"data": [[1.68517854E12, 2365.5333333333333], [1.68517884E12, 5117.75], [1.68517818E12, 841.8666666666667], [1.68517848E12, 2020.0833333333333], [1.68517878E12, 2125.75], [1.68517842E12, 807.2166666666667], [1.68517872E12, 1832.4833333333333], [1.68517902E12, 2364.883333333333], [1.68517836E12, 1208.7833333333333], [1.68517866E12, 1170.9166666666667], [1.68517896E12, 5894.383333333333], [1.6851783E12, 1247.5166666666667], [1.6851786E12, 1761.2], [1.6851789E12, 1260.5166666666667], [1.68517824E12, 733.8333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68517854E12, 6633.083333333333], [1.68517884E12, 17036.683333333334], [1.68517818E12, 916.5666666666667], [1.68517848E12, 6931.15], [1.68517878E12, 6961.016666666666], [1.68517842E12, 1757.4333333333334], [1.68517872E12, 3873.1833333333334], [1.68517902E12, 9545.65], [1.68517836E12, 2313.1833333333334], [1.68517866E12, 3162.266666666667], [1.68517896E12, 23576.416666666668], [1.6851783E12, 2850.9333333333334], [1.6851786E12, 2998.0666666666666], [1.6851789E12, 3397.85], [1.68517824E12, 1660.7166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517902E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 241.4117647058824, "minX": 1.68517818E12, "maxY": 47416.14285714286, "series": [{"data": [[1.68517854E12, 12565.349999999999], [1.68517884E12, 10437.991150442482], [1.68517818E12, 9141.666666666666], [1.68517848E12, 10251.370370370367], [1.68517878E12, 23347.023809523813], [1.68517842E12, 38536.818181818184], [1.68517872E12, 24629.666666666664], [1.68517902E12, 4082.0694444444443], [1.68517836E12, 28059.071428571428], [1.68517866E12, 47416.14285714286], [1.68517896E12, 4703.977653631283], [1.6851783E12, 17792.5], [1.6851786E12, 23085.103448275866], [1.6851789E12, 41406.00000000001], [1.68517824E12, 18964.866666666665]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68517854E12, 10967.066666666664], [1.68517884E12, 10005.09565217391], [1.68517818E12, 8889.555555555555], [1.68517848E12, 11020.020408163266], [1.68517878E12, 23225.234042553184], [1.68517842E12, 38252.454545454544], [1.68517872E12, 28017.142857142866], [1.68517902E12, 3876.0410958904113], [1.68517836E12, 27816.785714285714], [1.68517866E12, 41306.117647058825], [1.68517896E12, 7784.485380116966], [1.6851783E12, 18242.117647058825], [1.6851786E12, 21481.416666666664], [1.6851789E12, 33999.79166666667], [1.68517824E12, 18101.800000000003]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68517854E12, 244.26000000000002], [1.68517884E12, 266.0695652173913], [1.68517818E12, 248.0], [1.68517848E12, 242.0], [1.68517878E12, 299.2978723404256], [1.68517842E12, 242.9090909090909], [1.68517872E12, 247.72727272727272], [1.68517902E12, 241.4117647058824], [1.68517836E12, 263.10526315789474], [1.68517866E12, 241.64705882352942], [1.68517896E12, 250.6547619047619], [1.6851783E12, 259.4117647058824], [1.6851786E12, 247.0], [1.6851789E12, 314.2758620689656], [1.68517824E12, 241.89999999999998]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517902E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 241.05882352941177, "minX": 1.68517818E12, "maxY": 47415.21428571429, "series": [{"data": [[1.68517854E12, 12564.825], [1.68517884E12, 10437.42477876106], [1.68517818E12, 9140.222222222223], [1.68517848E12, 10251.055555555555], [1.68517878E12, 23346.166666666664], [1.68517842E12, 38535.818181818184], [1.68517872E12, 24629.121212121212], [1.68517902E12, 4081.847222222223], [1.68517836E12, 28058.714285714286], [1.68517866E12, 47415.21428571429], [1.68517896E12, 4703.357541899445], [1.6851783E12, 17791.666666666668], [1.6851786E12, 23084.44827586207], [1.6851789E12, 41405.030303030304], [1.68517824E12, 18964.266666666666]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68517854E12, 10966.844444444445], [1.68517884E12, 10005.034782608696], [1.68517818E12, 8889.444444444445], [1.68517848E12, 11019.938775510205], [1.68517878E12, 23225.127659574475], [1.68517842E12, 38252.27272727272], [1.68517872E12, 28017.0], [1.68517902E12, 3876.0], [1.68517836E12, 27816.714285714286], [1.68517866E12, 41305.76470588235], [1.68517896E12, 7784.432748538019], [1.6851783E12, 18241.764705882353], [1.6851786E12, 21481.208333333336], [1.6851789E12, 33999.75], [1.68517824E12, 18101.7]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68517854E12, 243.86], [1.68517884E12, 265.66086956521724], [1.68517818E12, 247.0], [1.68517848E12, 241.8367346938776], [1.68517878E12, 298.468085106383], [1.68517842E12, 242.63636363636365], [1.68517872E12, 247.45454545454547], [1.68517902E12, 241.22058823529412], [1.68517836E12, 262.42105263157896], [1.68517866E12, 241.05882352941177], [1.68517896E12, 250.16071428571428], [1.6851783E12, 259.05882352941165], [1.6851786E12, 246.54166666666666], [1.6851789E12, 312.5862068965517], [1.68517824E12, 241.5]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517902E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68517818E12, "maxY": 137.25, "series": [{"data": [[1.68517854E12, 115.875], [1.68517884E12, 117.70796460176992], [1.68517818E12, 123.44444444444444], [1.68517848E12, 116.37037037037034], [1.68517878E12, 115.83333333333333], [1.68517842E12, 124.63636363636365], [1.68517872E12, 117.9090909090909], [1.68517902E12, 116.2083333333333], [1.68517836E12, 117.28571428571428], [1.68517866E12, 116.78571428571429], [1.68517896E12, 116.26815642458097], [1.6851783E12, 137.25], [1.6851786E12, 117.9310344827586], [1.6851789E12, 117.09090909090907], [1.68517824E12, 116.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68517854E12, 0.0], [1.68517884E12, 0.0], [1.68517818E12, 0.0], [1.68517848E12, 0.0], [1.68517878E12, 0.0], [1.68517842E12, 0.0], [1.68517872E12, 0.0], [1.68517902E12, 0.0], [1.68517836E12, 0.0], [1.68517866E12, 0.0], [1.68517896E12, 0.0], [1.6851783E12, 0.0], [1.6851786E12, 0.0], [1.6851789E12, 0.0], [1.68517824E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68517854E12, 116.28000000000002], [1.68517884E12, 117.17391304347827], [1.68517818E12, 120.14285714285717], [1.68517848E12, 116.51020408163264], [1.68517878E12, 117.38297872340425], [1.68517842E12, 115.27272727272727], [1.68517872E12, 116.63636363636364], [1.68517902E12, 116.23529411764706], [1.68517836E12, 121.7894736842105], [1.68517866E12, 118.58823529411765], [1.68517896E12, 116.17857142857139], [1.6851783E12, 131.05882352941177], [1.6851786E12, 118.04166666666666], [1.6851789E12, 117.51724137931033], [1.68517824E12, 116.89999999999999]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517902E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.68517818E12, "maxY": 60078.0, "series": [{"data": [[1.68517854E12, 37245.0], [1.68517884E12, 413.0], [1.68517818E12, 11708.0], [1.68517848E12, 44766.0], [1.68517878E12, 616.0], [1.68517842E12, 44592.0], [1.68517872E12, 60078.0], [1.68517902E12, 50058.0], [1.68517836E12, 34030.0], [1.68517866E12, 58690.0], [1.68517896E12, 470.0], [1.6851783E12, 22727.0], [1.6851786E12, 30141.0], [1.6851789E12, 890.0], [1.68517824E12, 21486.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68517854E12, 31141.200000000004], [1.68517884E12, 329.00000000000006], [1.68517818E12, 10608.2], [1.68517848E12, 44459.8], [1.68517878E12, 444.60000000000014], [1.68517842E12, 43288.2], [1.68517872E12, 57951.600000000006], [1.68517902E12, 39018.80000000003], [1.68517836E12, 33309.2], [1.68517866E12, 54938.6], [1.68517896E12, 326.4], [1.6851783E12, 21893.0], [1.6851786E12, 28372.600000000002], [1.6851789E12, 447.0], [1.68517824E12, 20687.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68517854E12, 37245.0], [1.68517884E12, 407.72000000000014], [1.68517818E12, 11708.0], [1.68517848E12, 44766.0], [1.68517878E12, 616.0], [1.68517842E12, 44592.0], [1.68517872E12, 60078.0], [1.68517902E12, 50058.0], [1.68517836E12, 34030.0], [1.68517866E12, 58690.0], [1.68517896E12, 470.0], [1.6851783E12, 22727.0], [1.6851786E12, 30141.0], [1.6851789E12, 890.0], [1.68517824E12, 21486.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68517854E12, 36985.4], [1.68517884E12, 368.4], [1.68517818E12, 11490.999999999996], [1.68517848E12, 44750.7], [1.68517878E12, 491.59999999999997], [1.68517842E12, 44418.75], [1.68517872E12, 59287.799999999996], [1.68517902E12, 49754.9], [1.68517836E12, 34023.0], [1.68517866E12, 57725.799999999996], [1.68517896E12, 345.2], [1.6851783E12, 22211.0], [1.6851786E12, 29728.05], [1.6851789E12, 670.0], [1.68517824E12, 21450.45]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68517854E12, 228.0], [1.68517884E12, 229.0], [1.68517818E12, 231.0], [1.68517848E12, 229.0], [1.68517878E12, 230.0], [1.68517842E12, 224.0], [1.68517872E12, 229.0], [1.68517902E12, 229.0], [1.68517836E12, 229.0], [1.68517866E12, 229.0], [1.68517896E12, 226.0], [1.6851783E12, 228.0], [1.6851786E12, 228.0], [1.6851789E12, 235.0], [1.68517824E12, 228.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68517854E12, 267.0], [1.68517884E12, 249.0], [1.68517818E12, 257.0], [1.68517848E12, 265.0], [1.68517878E12, 264.0], [1.68517842E12, 9836.5], [1.68517872E12, 250.0], [1.68517902E12, 260.0], [1.68517836E12, 300.0], [1.68517866E12, 269.0], [1.68517896E12, 249.0], [1.6851783E12, 2296.5], [1.6851786E12, 3641.0], [1.6851789E12, 265.0], [1.68517824E12, 6878.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517902E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 225.0, "minX": 1.0, "maxY": 60118.0, "series": [{"data": [[2.0, 266.5], [8.0, 263.0], [9.0, 265.0], [10.0, 295.0], [11.0, 289.5], [44.0, 237.5], [3.0, 283.0], [12.0, 251.5], [13.0, 281.5], [14.0, 249.0], [15.0, 325.0], [1.0, 262.0], [4.0, 260.0], [16.0, 274.0], [17.0, 37715.0], [18.0, 339.5], [5.0, 282.0], [20.0, 249.0], [21.0, 234.5], [6.0, 265.0], [26.0, 235.0], [27.0, 240.0], [7.0, 255.0], [28.0, 239.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 230.0], [8.0, 1310.0], [9.0, 1388.5], [10.0, 227.5], [11.0, 2049.0], [44.0, 6045.0], [3.0, 240.0], [12.0, 684.5], [13.0, 225.5], [14.0, 60118.0], [15.0, 226.0], [1.0, 344.0], [4.0, 228.0], [16.0, 1825.0], [18.0, 863.5], [5.0, 229.0], [20.0, 225.0], [21.0, 8363.0], [6.0, 1238.0], [26.0, 6569.0], [27.0, 6277.0], [7.0, 227.0], [28.0, 3741.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 225.0, "minX": 1.0, "maxY": 60118.0, "series": [{"data": [[2.0, 266.0], [8.0, 263.0], [9.0, 264.0], [10.0, 294.5], [11.0, 288.0], [44.0, 237.0], [3.0, 283.0], [12.0, 251.0], [13.0, 281.0], [14.0, 249.0], [15.0, 325.0], [1.0, 259.0], [4.0, 260.0], [16.0, 274.0], [17.0, 37715.0], [18.0, 339.5], [5.0, 279.0], [20.0, 249.0], [21.0, 234.5], [6.0, 265.0], [26.0, 235.0], [27.0, 240.0], [7.0, 255.0], [28.0, 239.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 229.5], [8.0, 1310.0], [9.0, 1388.5], [10.0, 227.5], [11.0, 2049.0], [44.0, 6045.0], [3.0, 240.0], [12.0, 684.0], [13.0, 225.5], [14.0, 60118.0], [15.0, 226.0], [1.0, 344.0], [4.0, 228.0], [16.0, 1825.0], [18.0, 863.5], [5.0, 228.0], [20.0, 225.0], [21.0, 8363.0], [6.0, 1237.0], [26.0, 6569.0], [27.0, 6277.0], [7.0, 227.0], [28.0, 3740.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.68517818E12, "maxY": 5.55, "series": [{"data": [[1.68517854E12, 1.7166666666666666], [1.68517884E12, 3.6666666666666665], [1.68517818E12, 0.43333333333333335], [1.68517848E12, 1.55], [1.68517878E12, 1.5666666666666667], [1.68517842E12, 0.4666666666666667], [1.68517872E12, 1.0666666666666667], [1.68517902E12, 2.2], [1.68517836E12, 0.5333333333333333], [1.68517866E12, 0.5333333333333333], [1.68517896E12, 5.55], [1.6851783E12, 0.5666666666666667], [1.6851786E12, 0.8333333333333334], [1.6851789E12, 1.0333333333333334], [1.68517824E12, 0.36666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517902E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68517818E12, "maxY": 2.4, "series": [{"data": [[1.68517854E12, 0.85], [1.68517884E12, 1.9166666666666667], [1.68517818E12, 0.38333333333333336], [1.68517848E12, 0.6], [1.68517878E12, 0.7833333333333333], [1.68517842E12, 0.36666666666666664], [1.68517872E12, 0.7833333333333333], [1.68517902E12, 0.55], [1.68517836E12, 0.55], [1.68517866E12, 0.5166666666666667], [1.68517896E12, 1.5833333333333333], [1.6851783E12, 0.5666666666666667], [1.6851786E12, 0.8], [1.6851789E12, 0.48333333333333334], [1.68517824E12, 0.3333333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68517902E12, 0.2833333333333333], [1.68517884E12, 1.6666666666666667], [1.68517896E12, 1.4666666666666666], [1.68517878E12, 0.5333333333333333], [1.6851789E12, 0.3], [1.68517872E12, 0.2]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68517854E12, 0.7333333333333333], [1.68517902E12, 1.5166666666666666], [1.68517848E12, 1.0333333333333334], [1.68517896E12, 2.4]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68517884E12, 0.25], [1.68517866E12, 0.05], [1.68517896E12, 0.2], [1.68517878E12, 0.25], [1.6851789E12, 0.1], [1.68517872E12, 0.03333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517902E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68517818E12, "maxY": 2.966666666666667, "series": [{"data": [[1.68517854E12, 0.5], [1.68517884E12, 1.9166666666666667], [1.68517818E12, 0.23333333333333334], [1.68517848E12, 0.35], [1.68517878E12, 0.7833333333333333], [1.68517842E12, 0.18333333333333332], [1.68517872E12, 0.55], [1.68517902E12, 0.4166666666666667], [1.68517836E12, 0.31666666666666665], [1.68517866E12, 0.2833333333333333], [1.68517896E12, 1.5833333333333333], [1.6851783E12, 0.2833333333333333], [1.6851786E12, 0.4], [1.6851789E12, 0.48333333333333334], [1.68517824E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68517854E12, 0.3333333333333333], [1.68517902E12, 0.7166666666666667], [1.68517848E12, 0.4666666666666667], [1.68517896E12, 1.2166666666666666]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68517854E12, 0.4], [1.68517902E12, 1.0833333333333333], [1.68517884E12, 1.9166666666666667], [1.68517866E12, 0.05], [1.68517848E12, 0.5666666666666667], [1.68517896E12, 2.85], [1.68517878E12, 0.7833333333333333], [1.6851789E12, 0.4], [1.68517872E12, 0.23333333333333334]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68517854E12, 0.13333333333333333], [1.68517902E12, 0.11666666666666667], [1.68517836E12, 0.23333333333333334], [1.68517818E12, 0.15], [1.68517866E12, 0.18333333333333332], [1.68517848E12, 0.16666666666666666], [1.68517896E12, 0.016666666666666666], [1.6851783E12, 0.2], [1.6851786E12, 0.48333333333333334], [1.68517842E12, 0.18333333333333332], [1.68517824E12, 0.25], [1.68517872E12, 0.2]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68517854E12, 0.5333333333333333], [1.68517902E12, 1.0833333333333333], [1.68517884E12, 1.8833333333333333], [1.68517866E12, 0.05], [1.68517848E12, 0.7333333333333333], [1.68517896E12, 2.966666666666667], [1.68517878E12, 0.7], [1.6851789E12, 0.55], [1.68517872E12, 0.35]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68517854E12, 0.35], [1.68517902E12, 0.13333333333333333], [1.68517836E12, 0.23333333333333334], [1.68517818E12, 0.15], [1.68517866E12, 0.23333333333333334], [1.68517848E12, 0.25], [1.6851783E12, 0.2833333333333333], [1.6851786E12, 0.4], [1.68517842E12, 0.18333333333333332], [1.68517824E12, 0.16666666666666666], [1.68517872E12, 0.23333333333333334]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517902E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68517818E12, "maxY": 7.033333333333333, "series": [{"data": [[1.68517854E12, 0.9833333333333333], [1.68517884E12, 1.9166666666666667], [1.68517818E12, 0.5333333333333333], [1.68517848E12, 0.7666666666666667], [1.68517878E12, 0.7833333333333333], [1.68517842E12, 0.55], [1.68517872E12, 0.9833333333333333], [1.68517902E12, 0.6666666666666666], [1.68517836E12, 0.7833333333333333], [1.68517866E12, 0.7], [1.68517896E12, 1.6], [1.6851783E12, 0.7666666666666667], [1.6851786E12, 1.2833333333333334], [1.6851789E12, 0.48333333333333334], [1.68517824E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68517854E12, 1.2666666666666666], [1.68517902E12, 2.8833333333333333], [1.68517884E12, 3.8], [1.68517866E12, 0.1], [1.68517848E12, 1.7666666666666666], [1.68517896E12, 7.033333333333333], [1.68517878E12, 1.4833333333333334], [1.6851789E12, 0.95], [1.68517872E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517902E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

