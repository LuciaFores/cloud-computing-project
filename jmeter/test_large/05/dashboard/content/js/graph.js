/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "maxY": 60517.0, "series": [{"data": [[0.0, 232.0], [0.1, 232.0], [0.2, 239.0], [0.3, 239.0], [0.4, 240.0], [0.5, 240.0], [0.6, 244.0], [0.7, 244.0], [0.8, 252.0], [0.9, 252.0], [1.0, 339.0], [1.1, 339.0], [1.2, 340.0], [1.3, 340.0], [1.4, 340.0], [1.5, 340.0], [1.6, 340.0], [1.7, 340.0], [1.8, 341.0], [1.9, 341.0], [2.0, 341.0], [2.1, 341.0], [2.2, 342.0], [2.3, 342.0], [2.4, 342.0], [2.5, 342.0], [2.6, 342.0], [2.7, 342.0], [2.8, 343.0], [2.9, 343.0], [3.0, 343.0], [3.1, 343.0], [3.2, 343.0], [3.3, 343.0], [3.4, 344.0], [3.5, 344.0], [3.6, 344.0], [3.7, 344.0], [3.8, 344.0], [3.9, 344.0], [4.0, 344.0], [4.1, 344.0], [4.2, 344.0], [4.3, 345.0], [4.4, 345.0], [4.5, 345.0], [4.6, 345.0], [4.7, 345.0], [4.8, 345.0], [4.9, 345.0], [5.0, 345.0], [5.1, 345.0], [5.2, 345.0], [5.3, 346.0], [5.4, 346.0], [5.5, 347.0], [5.6, 347.0], [5.7, 347.0], [5.8, 347.0], [5.9, 347.0], [6.0, 347.0], [6.1, 347.0], [6.2, 347.0], [6.3, 348.0], [6.4, 348.0], [6.5, 349.0], [6.6, 349.0], [6.7, 349.0], [6.8, 349.0], [6.9, 349.0], [7.0, 349.0], [7.1, 351.0], [7.2, 351.0], [7.3, 352.0], [7.4, 352.0], [7.5, 352.0], [7.6, 352.0], [7.7, 353.0], [7.8, 353.0], [7.9, 353.0], [8.0, 353.0], [8.1, 353.0], [8.2, 353.0], [8.3, 354.0], [8.4, 355.0], [8.5, 355.0], [8.6, 355.0], [8.7, 355.0], [8.8, 355.0], [8.9, 355.0], [9.0, 356.0], [9.1, 356.0], [9.2, 356.0], [9.3, 356.0], [9.4, 356.0], [9.5, 356.0], [9.6, 357.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 358.0], [10.3, 358.0], [10.4, 358.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 358.0], [10.9, 358.0], [11.0, 358.0], [11.1, 358.0], [11.2, 359.0], [11.3, 359.0], [11.4, 359.0], [11.5, 359.0], [11.6, 359.0], [11.7, 359.0], [11.8, 359.0], [11.9, 359.0], [12.0, 359.0], [12.1, 359.0], [12.2, 359.0], [12.3, 359.0], [12.4, 360.0], [12.5, 360.0], [12.6, 360.0], [12.7, 360.0], [12.8, 360.0], [12.9, 360.0], [13.0, 360.0], [13.1, 361.0], [13.2, 361.0], [13.3, 361.0], [13.4, 361.0], [13.5, 361.0], [13.6, 361.0], [13.7, 361.0], [13.8, 361.0], [13.9, 362.0], [14.0, 362.0], [14.1, 362.0], [14.2, 362.0], [14.3, 362.0], [14.4, 362.0], [14.5, 362.0], [14.6, 362.0], [14.7, 363.0], [14.8, 363.0], [14.9, 363.0], [15.0, 363.0], [15.1, 364.0], [15.2, 364.0], [15.3, 364.0], [15.4, 364.0], [15.5, 364.0], [15.6, 364.0], [15.7, 365.0], [15.8, 365.0], [15.9, 365.0], [16.0, 365.0], [16.1, 365.0], [16.2, 365.0], [16.3, 366.0], [16.4, 366.0], [16.5, 366.0], [16.6, 366.0], [16.7, 366.0], [16.8, 366.0], [16.9, 366.0], [17.0, 366.0], [17.1, 366.0], [17.2, 366.0], [17.3, 366.0], [17.4, 367.0], [17.5, 367.0], [17.6, 368.0], [17.7, 368.0], [17.8, 370.0], [17.9, 370.0], [18.0, 370.0], [18.1, 370.0], [18.2, 370.0], [18.3, 370.0], [18.4, 373.0], [18.5, 373.0], [18.6, 373.0], [18.7, 373.0], [18.8, 373.0], [18.9, 373.0], [19.0, 375.0], [19.1, 375.0], [19.2, 376.0], [19.3, 376.0], [19.4, 377.0], [19.5, 377.0], [19.6, 378.0], [19.7, 378.0], [19.8, 378.0], [19.9, 378.0], [20.0, 378.0], [20.1, 378.0], [20.2, 380.0], [20.3, 380.0], [20.4, 380.0], [20.5, 380.0], [20.6, 382.0], [20.7, 382.0], [20.8, 383.0], [20.9, 385.0], [21.0, 385.0], [21.1, 386.0], [21.2, 386.0], [21.3, 388.0], [21.4, 388.0], [21.5, 389.0], [21.6, 389.0], [21.7, 391.0], [21.8, 391.0], [21.9, 391.0], [22.0, 391.0], [22.1, 391.0], [22.2, 391.0], [22.3, 393.0], [22.4, 393.0], [22.5, 393.0], [22.6, 393.0], [22.7, 395.0], [22.8, 395.0], [22.9, 396.0], [23.0, 396.0], [23.1, 399.0], [23.2, 399.0], [23.3, 401.0], [23.4, 401.0], [23.5, 404.0], [23.6, 404.0], [23.7, 406.0], [23.8, 406.0], [23.9, 408.0], [24.0, 408.0], [24.1, 409.0], [24.2, 409.0], [24.3, 415.0], [24.4, 415.0], [24.5, 417.0], [24.6, 417.0], [24.7, 418.0], [24.8, 418.0], [24.9, 418.0], [25.0, 421.0], [25.1, 421.0], [25.2, 426.0], [25.3, 426.0], [25.4, 542.0], [25.5, 542.0], [25.6, 1413.0], [25.7, 1413.0], [25.8, 1518.0], [25.9, 1518.0], [26.0, 1735.0], [26.1, 1735.0], [26.2, 2588.0], [26.3, 2588.0], [26.4, 3471.0], [26.5, 3471.0], [26.6, 4505.0], [26.7, 4505.0], [26.8, 4542.0], [26.9, 4542.0], [27.0, 4656.0], [27.1, 4656.0], [27.2, 4781.0], [27.3, 4781.0], [27.4, 4818.0], [27.5, 4818.0], [27.6, 4826.0], [27.7, 4826.0], [27.8, 4993.0], [27.9, 4993.0], [28.0, 5224.0], [28.1, 5224.0], [28.2, 5356.0], [28.3, 5356.0], [28.4, 5396.0], [28.5, 5396.0], [28.6, 5467.0], [28.7, 5467.0], [28.8, 5490.0], [28.9, 5490.0], [29.0, 5492.0], [29.1, 5492.0], [29.2, 5598.0], [29.3, 5638.0], [29.4, 5638.0], [29.5, 5640.0], [29.6, 5640.0], [29.7, 5698.0], [29.8, 5698.0], [29.9, 5720.0], [30.0, 5720.0], [30.1, 5844.0], [30.2, 5844.0], [30.3, 6038.0], [30.4, 6038.0], [30.5, 6069.0], [30.6, 6069.0], [30.7, 6077.0], [30.8, 6077.0], [30.9, 6129.0], [31.0, 6129.0], [31.1, 6198.0], [31.2, 6198.0], [31.3, 6220.0], [31.4, 6220.0], [31.5, 6498.0], [31.6, 6498.0], [31.7, 6500.0], [31.8, 6500.0], [31.9, 6538.0], [32.0, 6538.0], [32.1, 6576.0], [32.2, 6576.0], [32.3, 6585.0], [32.4, 6585.0], [32.5, 6617.0], [32.6, 6617.0], [32.7, 6744.0], [32.8, 6744.0], [32.9, 6750.0], [33.0, 6750.0], [33.1, 6782.0], [33.2, 6782.0], [33.3, 6909.0], [33.4, 6955.0], [33.5, 6955.0], [33.6, 7013.0], [33.7, 7013.0], [33.8, 7026.0], [33.9, 7026.0], [34.0, 7031.0], [34.1, 7031.0], [34.2, 7107.0], [34.3, 7107.0], [34.4, 7165.0], [34.5, 7165.0], [34.6, 7387.0], [34.7, 7387.0], [34.8, 7471.0], [34.9, 7471.0], [35.0, 7705.0], [35.1, 7705.0], [35.2, 7941.0], [35.3, 7941.0], [35.4, 7945.0], [35.5, 7945.0], [35.6, 8012.0], [35.7, 8012.0], [35.8, 8145.0], [35.9, 8145.0], [36.0, 8407.0], [36.1, 8407.0], [36.2, 8470.0], [36.3, 8470.0], [36.4, 8749.0], [36.5, 8749.0], [36.6, 8796.0], [36.7, 8796.0], [36.8, 8822.0], [36.9, 8822.0], [37.0, 9158.0], [37.1, 9158.0], [37.2, 9181.0], [37.3, 9181.0], [37.4, 9286.0], [37.5, 9339.0], [37.6, 9339.0], [37.7, 9375.0], [37.8, 9375.0], [37.9, 9463.0], [38.0, 9463.0], [38.1, 9473.0], [38.2, 9473.0], [38.3, 9610.0], [38.4, 9610.0], [38.5, 9651.0], [38.6, 9651.0], [38.7, 9669.0], [38.8, 9669.0], [38.9, 9932.0], [39.0, 9932.0], [39.1, 10120.0], [39.2, 10120.0], [39.3, 10328.0], [39.4, 10328.0], [39.5, 10690.0], [39.6, 10690.0], [39.7, 10830.0], [39.8, 10830.0], [39.9, 11131.0], [40.0, 11131.0], [40.1, 11442.0], [40.2, 11442.0], [40.3, 11514.0], [40.4, 11514.0], [40.5, 11886.0], [40.6, 11886.0], [40.7, 12043.0], [40.8, 12043.0], [40.9, 12056.0], [41.0, 12056.0], [41.1, 12077.0], [41.2, 12077.0], [41.3, 12109.0], [41.4, 12109.0], [41.5, 12193.0], [41.6, 12193.0], [41.7, 12206.0], [41.8, 12243.0], [41.9, 12243.0], [42.0, 12326.0], [42.1, 12326.0], [42.2, 12468.0], [42.3, 12468.0], [42.4, 12567.0], [42.5, 12567.0], [42.6, 12761.0], [42.7, 12761.0], [42.8, 12847.0], [42.9, 12847.0], [43.0, 12920.0], [43.1, 12920.0], [43.2, 12927.0], [43.3, 12927.0], [43.4, 13036.0], [43.5, 13036.0], [43.6, 13046.0], [43.7, 13046.0], [43.8, 13220.0], [43.9, 13220.0], [44.0, 13251.0], [44.1, 13251.0], [44.2, 13352.0], [44.3, 13352.0], [44.4, 13380.0], [44.5, 13380.0], [44.6, 13509.0], [44.7, 13509.0], [44.8, 13548.0], [44.9, 13548.0], [45.0, 13704.0], [45.1, 13704.0], [45.2, 13742.0], [45.3, 13742.0], [45.4, 13837.0], [45.5, 13837.0], [45.6, 13849.0], [45.7, 13849.0], [45.8, 14164.0], [45.9, 14225.0], [46.0, 14225.0], [46.1, 14483.0], [46.2, 14483.0], [46.3, 14594.0], [46.4, 14594.0], [46.5, 14608.0], [46.6, 14608.0], [46.7, 14620.0], [46.8, 14620.0], [46.9, 14730.0], [47.0, 14730.0], [47.1, 14779.0], [47.2, 14779.0], [47.3, 15131.0], [47.4, 15131.0], [47.5, 15193.0], [47.6, 15193.0], [47.7, 15214.0], [47.8, 15214.0], [47.9, 15237.0], [48.0, 15237.0], [48.1, 15357.0], [48.2, 15357.0], [48.3, 15393.0], [48.4, 15393.0], [48.5, 15434.0], [48.6, 15434.0], [48.7, 15453.0], [48.8, 15453.0], [48.9, 15581.0], [49.0, 15581.0], [49.1, 15589.0], [49.2, 15589.0], [49.3, 15742.0], [49.4, 15742.0], [49.5, 15745.0], [49.6, 15745.0], [49.7, 15791.0], [49.8, 15791.0], [49.9, 15882.0], [50.0, 15896.0], [50.1, 15896.0], [50.2, 16051.0], [50.3, 16051.0], [50.4, 16173.0], [50.5, 16173.0], [50.6, 16196.0], [50.7, 16196.0], [50.8, 16299.0], [50.9, 16299.0], [51.0, 16301.0], [51.1, 16301.0], [51.2, 16419.0], [51.3, 16419.0], [51.4, 16611.0], [51.5, 16611.0], [51.6, 16634.0], [51.7, 16634.0], [51.8, 16715.0], [51.9, 16715.0], [52.0, 16928.0], [52.1, 16928.0], [52.2, 16931.0], [52.3, 16931.0], [52.4, 17014.0], [52.5, 17014.0], [52.6, 17151.0], [52.7, 17151.0], [52.8, 17158.0], [52.9, 17158.0], [53.0, 17272.0], [53.1, 17272.0], [53.2, 17289.0], [53.3, 17289.0], [53.4, 17525.0], [53.5, 17525.0], [53.6, 17548.0], [53.7, 17548.0], [53.8, 17549.0], [53.9, 17549.0], [54.0, 17897.0], [54.1, 17897.0], [54.2, 17964.0], [54.3, 18029.0], [54.4, 18029.0], [54.5, 18046.0], [54.6, 18046.0], [54.7, 18149.0], [54.8, 18149.0], [54.9, 18504.0], [55.0, 18504.0], [55.1, 18589.0], [55.2, 18589.0], [55.3, 18797.0], [55.4, 18797.0], [55.5, 18846.0], [55.6, 18846.0], [55.7, 18850.0], [55.8, 18850.0], [55.9, 18898.0], [56.0, 18898.0], [56.1, 18913.0], [56.2, 18913.0], [56.3, 18992.0], [56.4, 18992.0], [56.5, 19032.0], [56.6, 19032.0], [56.7, 19198.0], [56.8, 19198.0], [56.9, 19354.0], [57.0, 19354.0], [57.1, 19522.0], [57.2, 19522.0], [57.3, 19559.0], [57.4, 19559.0], [57.5, 19684.0], [57.6, 19684.0], [57.7, 19731.0], [57.8, 19731.0], [57.9, 19806.0], [58.0, 19806.0], [58.1, 19806.0], [58.2, 19806.0], [58.3, 19876.0], [58.4, 20010.0], [58.5, 20010.0], [58.6, 20037.0], [58.7, 20037.0], [58.8, 20075.0], [58.9, 20075.0], [59.0, 20096.0], [59.1, 20096.0], [59.2, 20143.0], [59.3, 20143.0], [59.4, 20188.0], [59.5, 20188.0], [59.6, 20389.0], [59.7, 20389.0], [59.8, 20393.0], [59.9, 20393.0], [60.0, 20415.0], [60.1, 20415.0], [60.2, 20696.0], [60.3, 20696.0], [60.4, 20834.0], [60.5, 20834.0], [60.6, 20889.0], [60.7, 20889.0], [60.8, 20900.0], [60.9, 20900.0], [61.0, 20996.0], [61.1, 20996.0], [61.2, 21188.0], [61.3, 21188.0], [61.4, 21189.0], [61.5, 21189.0], [61.6, 21190.0], [61.7, 21190.0], [61.8, 21428.0], [61.9, 21428.0], [62.0, 21429.0], [62.1, 21429.0], [62.2, 21584.0], [62.3, 21584.0], [62.4, 21614.0], [62.5, 21722.0], [62.6, 21722.0], [62.7, 21814.0], [62.8, 21814.0], [62.9, 21817.0], [63.0, 21817.0], [63.1, 21838.0], [63.2, 21838.0], [63.3, 21863.0], [63.4, 21863.0], [63.5, 21864.0], [63.6, 21864.0], [63.7, 21885.0], [63.8, 21885.0], [63.9, 21915.0], [64.0, 21915.0], [64.1, 21994.0], [64.2, 21994.0], [64.3, 22359.0], [64.4, 22359.0], [64.5, 22576.0], [64.6, 22576.0], [64.7, 22878.0], [64.8, 22878.0], [64.9, 22901.0], [65.0, 22901.0], [65.1, 23080.0], [65.2, 23080.0], [65.3, 23214.0], [65.4, 23214.0], [65.5, 23224.0], [65.6, 23224.0], [65.7, 23285.0], [65.8, 23285.0], [65.9, 23511.0], [66.0, 23511.0], [66.1, 23663.0], [66.2, 23663.0], [66.3, 23707.0], [66.4, 23707.0], [66.5, 24291.0], [66.6, 24291.0], [66.7, 24312.0], [66.8, 24450.0], [66.9, 24450.0], [67.0, 24450.0], [67.1, 24450.0], [67.2, 24691.0], [67.3, 24691.0], [67.4, 24786.0], [67.5, 24786.0], [67.6, 24891.0], [67.7, 24891.0], [67.8, 25337.0], [67.9, 25337.0], [68.0, 25375.0], [68.1, 25375.0], [68.2, 25557.0], [68.3, 25557.0], [68.4, 25572.0], [68.5, 25572.0], [68.6, 25601.0], [68.7, 25601.0], [68.8, 25721.0], [68.9, 25721.0], [69.0, 26018.0], [69.1, 26018.0], [69.2, 26166.0], [69.3, 26166.0], [69.4, 26220.0], [69.5, 26220.0], [69.6, 26461.0], [69.7, 26461.0], [69.8, 26556.0], [69.9, 26556.0], [70.0, 26710.0], [70.1, 26710.0], [70.2, 26830.0], [70.3, 26830.0], [70.4, 27239.0], [70.5, 27239.0], [70.6, 27314.0], [70.7, 27314.0], [70.8, 27609.0], [70.9, 27626.0], [71.0, 27626.0], [71.1, 27704.0], [71.2, 27704.0], [71.3, 27769.0], [71.4, 27769.0], [71.5, 27908.0], [71.6, 27908.0], [71.7, 28025.0], [71.8, 28025.0], [71.9, 28047.0], [72.0, 28047.0], [72.1, 28051.0], [72.2, 28051.0], [72.3, 28114.0], [72.4, 28114.0], [72.5, 28243.0], [72.6, 28243.0], [72.7, 28326.0], [72.8, 28326.0], [72.9, 28564.0], [73.0, 28564.0], [73.1, 28596.0], [73.2, 28596.0], [73.3, 28616.0], [73.4, 28616.0], [73.5, 29155.0], [73.6, 29155.0], [73.7, 29252.0], [73.8, 29252.0], [73.9, 29351.0], [74.0, 29351.0], [74.1, 29404.0], [74.2, 29404.0], [74.3, 29770.0], [74.4, 29770.0], [74.5, 29823.0], [74.6, 29823.0], [74.7, 30082.0], [74.8, 30082.0], [74.9, 30302.0], [75.0, 30552.0], [75.1, 30552.0], [75.2, 30970.0], [75.3, 30970.0], [75.4, 31253.0], [75.5, 31253.0], [75.6, 31432.0], [75.7, 31432.0], [75.8, 31662.0], [75.9, 31662.0], [76.0, 31779.0], [76.1, 31779.0], [76.2, 31786.0], [76.3, 31786.0], [76.4, 31806.0], [76.5, 31806.0], [76.6, 32108.0], [76.7, 32108.0], [76.8, 32114.0], [76.9, 32114.0], [77.0, 32119.0], [77.1, 32119.0], [77.2, 32158.0], [77.3, 32158.0], [77.4, 32206.0], [77.5, 32206.0], [77.6, 32287.0], [77.7, 32287.0], [77.8, 32403.0], [77.9, 32403.0], [78.0, 32435.0], [78.1, 32435.0], [78.2, 32563.0], [78.3, 32563.0], [78.4, 32773.0], [78.5, 32773.0], [78.6, 32830.0], [78.7, 32830.0], [78.8, 33291.0], [78.9, 33291.0], [79.0, 33338.0], [79.1, 33338.0], [79.2, 33340.0], [79.3, 34078.0], [79.4, 34078.0], [79.5, 34693.0], [79.6, 34693.0], [79.7, 34794.0], [79.8, 34794.0], [79.9, 34806.0], [80.0, 34806.0], [80.1, 35372.0], [80.2, 35372.0], [80.3, 36291.0], [80.4, 36291.0], [80.5, 36411.0], [80.6, 36411.0], [80.7, 36581.0], [80.8, 36581.0], [80.9, 36875.0], [81.0, 36875.0], [81.1, 37110.0], [81.2, 37110.0], [81.3, 37181.0], [81.4, 37181.0], [81.5, 37190.0], [81.6, 37190.0], [81.7, 37246.0], [81.8, 37246.0], [81.9, 37350.0], [82.0, 37350.0], [82.1, 37357.0], [82.2, 37357.0], [82.3, 37533.0], [82.4, 37533.0], [82.5, 37548.0], [82.6, 37548.0], [82.7, 37927.0], [82.8, 37927.0], [82.9, 38176.0], [83.0, 38176.0], [83.1, 38829.0], [83.2, 38829.0], [83.3, 39067.0], [83.4, 39159.0], [83.5, 39159.0], [83.6, 39306.0], [83.7, 39306.0], [83.8, 39546.0], [83.9, 39546.0], [84.0, 39785.0], [84.1, 39785.0], [84.2, 39852.0], [84.3, 39852.0], [84.4, 39853.0], [84.5, 39853.0], [84.6, 40198.0], [84.7, 40198.0], [84.8, 40374.0], [84.9, 40374.0], [85.0, 40614.0], [85.1, 40614.0], [85.2, 40871.0], [85.3, 40871.0], [85.4, 41097.0], [85.5, 41097.0], [85.6, 41243.0], [85.7, 41243.0], [85.8, 41664.0], [85.9, 41664.0], [86.0, 41670.0], [86.1, 41670.0], [86.2, 41720.0], [86.3, 41720.0], [86.4, 41723.0], [86.5, 41723.0], [86.6, 41805.0], [86.7, 41805.0], [86.8, 41896.0], [86.9, 41896.0], [87.0, 42133.0], [87.1, 42133.0], [87.2, 42278.0], [87.3, 42278.0], [87.4, 42518.0], [87.5, 43703.0], [87.6, 43703.0], [87.7, 44031.0], [87.8, 44031.0], [87.9, 44032.0], [88.0, 44032.0], [88.1, 44251.0], [88.2, 44251.0], [88.3, 44503.0], [88.4, 44503.0], [88.5, 44622.0], [88.6, 44622.0], [88.7, 44723.0], [88.8, 44723.0], [88.9, 44975.0], [89.0, 44975.0], [89.1, 45116.0], [89.2, 45116.0], [89.3, 45123.0], [89.4, 45123.0], [89.5, 45179.0], [89.6, 45179.0], [89.7, 45189.0], [89.8, 45189.0], [89.9, 45193.0], [90.0, 45193.0], [90.1, 45232.0], [90.2, 45232.0], [90.3, 45338.0], [90.4, 45338.0], [90.5, 45747.0], [90.6, 45747.0], [90.7, 45894.0], [90.8, 45894.0], [90.9, 46207.0], [91.0, 46207.0], [91.1, 46344.0], [91.2, 46344.0], [91.3, 46355.0], [91.4, 46355.0], [91.5, 46373.0], [91.6, 46373.0], [91.7, 47446.0], [91.8, 47657.0], [91.9, 47657.0], [92.0, 48361.0], [92.1, 48361.0], [92.2, 48611.0], [92.3, 48611.0], [92.4, 48691.0], [92.5, 48691.0], [92.6, 48727.0], [92.7, 48727.0], [92.8, 48827.0], [92.9, 48827.0], [93.0, 49218.0], [93.1, 49218.0], [93.2, 49306.0], [93.3, 49306.0], [93.4, 50460.0], [93.5, 50460.0], [93.6, 52720.0], [93.7, 52720.0], [93.8, 53145.0], [93.9, 53145.0], [94.0, 53422.0], [94.1, 53422.0], [94.2, 53717.0], [94.3, 53717.0], [94.4, 53822.0], [94.5, 53822.0], [94.6, 53909.0], [94.7, 53909.0], [94.8, 54320.0], [94.9, 54320.0], [95.0, 54798.0], [95.1, 54798.0], [95.2, 55163.0], [95.3, 55163.0], [95.4, 55207.0], [95.5, 55207.0], [95.6, 55386.0], [95.7, 55386.0], [95.8, 56211.0], [95.9, 56393.0], [96.0, 56393.0], [96.1, 57020.0], [96.2, 57020.0], [96.3, 57719.0], [96.4, 57719.0], [96.5, 58346.0], [96.6, 58346.0], [96.7, 58814.0], [96.8, 58814.0], [96.9, 58909.0], [97.0, 58909.0], [97.1, 59179.0], [97.2, 59179.0], [97.3, 59652.0], [97.4, 59652.0], [97.5, 60347.0], [97.6, 60347.0], [97.7, 60347.0], [97.8, 60347.0], [97.9, 60347.0], [98.0, 60347.0], [98.1, 60351.0], [98.2, 60351.0], [98.3, 60353.0], [98.4, 60353.0], [98.5, 60357.0], [98.6, 60357.0], [98.7, 60359.0], [98.8, 60359.0], [98.9, 60367.0], [99.0, 60367.0], [99.1, 60367.0], [99.2, 60367.0], [99.3, 60387.0], [99.4, 60387.0], [99.5, 60397.0], [99.6, 60397.0], [99.7, 60468.0], [99.8, 60468.0], [99.9, 60517.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 114.0], [0.1, 114.0], [0.2, 114.0], [0.3, 114.0], [0.4, 114.0], [0.5, 114.0], [0.6, 114.0], [0.7, 114.0], [0.8, 114.0], [0.9, 114.0], [1.0, 115.0], [1.1, 115.0], [1.2, 115.0], [1.3, 115.0], [1.4, 115.0], [1.5, 115.0], [1.6, 115.0], [1.7, 115.0], [1.8, 115.0], [1.9, 115.0], [2.0, 115.0], [2.1, 115.0], [2.2, 115.0], [2.3, 115.0], [2.4, 115.0], [2.5, 115.0], [2.6, 115.0], [2.7, 115.0], [2.8, 115.0], [2.9, 115.0], [3.0, 115.0], [3.1, 115.0], [3.2, 116.0], [3.3, 116.0], [3.4, 116.0], [3.5, 116.0], [3.6, 116.0], [3.7, 116.0], [3.8, 116.0], [3.9, 116.0], [4.0, 116.0], [4.1, 116.0], [4.2, 116.0], [4.3, 116.0], [4.4, 116.0], [4.5, 116.0], [4.6, 116.0], [4.7, 116.0], [4.8, 116.0], [4.9, 116.0], [5.0, 116.0], [5.1, 116.0], [5.2, 116.0], [5.3, 116.0], [5.4, 116.0], [5.5, 116.0], [5.6, 116.0], [5.7, 116.0], [5.8, 116.0], [5.9, 116.0], [6.0, 116.0], [6.1, 116.0], [6.2, 116.0], [6.3, 116.0], [6.4, 116.0], [6.5, 116.0], [6.6, 117.0], [6.7, 117.0], [6.8, 117.0], [6.9, 117.0], [7.0, 117.0], [7.1, 117.0], [7.2, 117.0], [7.3, 117.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 117.0], [7.8, 117.0], [7.9, 117.0], [8.0, 117.0], [8.1, 117.0], [8.2, 117.0], [8.3, 117.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 117.0], [8.8, 117.0], [8.9, 117.0], [9.0, 117.0], [9.1, 118.0], [9.2, 118.0], [9.3, 118.0], [9.4, 118.0], [9.5, 118.0], [9.6, 118.0], [9.7, 118.0], [9.8, 118.0], [9.9, 118.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 118.0], [10.4, 118.0], [10.5, 119.0], [10.6, 119.0], [10.7, 119.0], [10.8, 119.0], [10.9, 119.0], [11.0, 119.0], [11.1, 119.0], [11.2, 119.0], [11.3, 119.0], [11.4, 119.0], [11.5, 119.0], [11.6, 119.0], [11.7, 120.0], [11.8, 120.0], [11.9, 120.0], [12.0, 120.0], [12.1, 120.0], [12.2, 120.0], [12.3, 120.0], [12.4, 120.0], [12.5, 120.0], [12.6, 120.0], [12.7, 120.0], [12.8, 120.0], [12.9, 120.0], [13.0, 120.0], [13.1, 120.0], [13.2, 120.0], [13.3, 120.0], [13.4, 120.0], [13.5, 120.0], [13.6, 120.0], [13.7, 120.0], [13.8, 120.0], [13.9, 120.0], [14.0, 120.0], [14.1, 121.0], [14.2, 121.0], [14.3, 121.0], [14.4, 121.0], [14.5, 121.0], [14.6, 121.0], [14.7, 121.0], [14.8, 121.0], [14.9, 121.0], [15.0, 121.0], [15.1, 121.0], [15.2, 121.0], [15.3, 121.0], [15.4, 121.0], [15.5, 121.0], [15.6, 121.0], [15.7, 121.0], [15.8, 121.0], [15.9, 121.0], [16.0, 121.0], [16.1, 121.0], [16.2, 121.0], [16.3, 121.0], [16.4, 121.0], [16.5, 121.0], [16.6, 121.0], [16.7, 121.0], [16.8, 121.0], [16.9, 121.0], [17.0, 121.0], [17.1, 121.0], [17.2, 121.0], [17.3, 121.0], [17.4, 121.0], [17.5, 121.0], [17.6, 121.0], [17.7, 121.0], [17.8, 122.0], [17.9, 122.0], [18.0, 122.0], [18.1, 122.0], [18.2, 122.0], [18.3, 122.0], [18.4, 122.0], [18.5, 122.0], [18.6, 122.0], [18.7, 122.0], [18.8, 122.0], [18.9, 122.0], [19.0, 122.0], [19.1, 122.0], [19.2, 122.0], [19.3, 122.0], [19.4, 122.0], [19.5, 122.0], [19.6, 122.0], [19.7, 122.0], [19.8, 123.0], [19.9, 123.0], [20.0, 123.0], [20.1, 123.0], [20.2, 123.0], [20.3, 123.0], [20.4, 123.0], [20.5, 123.0], [20.6, 123.0], [20.7, 123.0], [20.8, 124.0], [20.9, 124.0], [21.0, 124.0], [21.1, 124.0], [21.2, 124.0], [21.3, 124.0], [21.4, 124.0], [21.5, 124.0], [21.6, 124.0], [21.7, 125.0], [21.8, 125.0], [21.9, 125.0], [22.0, 125.0], [22.1, 125.0], [22.2, 125.0], [22.3, 126.0], [22.4, 126.0], [22.5, 126.0], [22.6, 126.0], [22.7, 126.0], [22.8, 126.0], [22.9, 127.0], [23.0, 127.0], [23.1, 127.0], [23.2, 127.0], [23.3, 127.0], [23.4, 127.0], [23.5, 128.0], [23.6, 128.0], [23.7, 129.0], [23.8, 129.0], [23.9, 130.0], [24.0, 130.0], [24.1, 130.0], [24.2, 130.0], [24.3, 132.0], [24.4, 132.0], [24.5, 140.0], [24.6, 140.0], [24.7, 316.0], [24.8, 316.0], [24.9, 1183.0], [25.0, 1183.0], [25.1, 1229.0], [25.2, 1229.0], [25.3, 1506.0], [25.4, 1506.0], [25.5, 2354.0], [25.6, 2354.0], [25.7, 3240.0], [25.8, 3240.0], [25.9, 4276.0], [26.0, 4276.0], [26.1, 4292.0], [26.2, 4292.0], [26.3, 4414.0], [26.4, 4414.0], [26.5, 4539.0], [26.6, 4539.0], [26.7, 4573.0], [26.8, 4573.0], [26.9, 4597.0], [27.0, 4597.0], [27.1, 4754.0], [27.2, 4754.0], [27.3, 4985.0], [27.4, 4985.0], [27.5, 5124.0], [27.6, 5124.0], [27.7, 5159.0], [27.8, 5159.0], [27.9, 5218.0], [28.0, 5218.0], [28.1, 5232.0], [28.2, 5232.0], [28.3, 5251.0], [28.4, 5251.0], [28.5, 5293.0], [28.6, 5371.0], [28.7, 5371.0], [28.8, 5371.0], [28.9, 5371.0], [29.0, 5451.0], [29.1, 5451.0], [29.2, 5459.0], [29.3, 5459.0], [29.4, 5604.0], [29.5, 5604.0], [29.6, 5797.0], [29.7, 5797.0], [29.8, 5811.0], [29.9, 5811.0], [30.0, 5833.0], [30.1, 5833.0], [30.2, 5885.0], [30.3, 5885.0], [30.4, 5964.0], [30.5, 5964.0], [30.6, 5972.0], [30.7, 5972.0], [30.8, 6250.0], [30.9, 6250.0], [31.0, 6263.0], [31.1, 6263.0], [31.2, 6297.0], [31.3, 6297.0], [31.4, 6343.0], [31.5, 6343.0], [31.6, 6346.0], [31.7, 6346.0], [31.8, 6390.0], [31.9, 6390.0], [32.0, 6500.0], [32.1, 6500.0], [32.2, 6519.0], [32.3, 6519.0], [32.4, 6528.0], [32.5, 6528.0], [32.6, 6685.0], [32.7, 6685.0], [32.8, 6701.0], [32.9, 6701.0], [33.0, 6742.0], [33.1, 6742.0], [33.2, 6788.0], [33.3, 6788.0], [33.4, 6792.0], [33.5, 6792.0], [33.6, 6877.0], [33.7, 6877.0], [33.8, 6919.0], [33.9, 6919.0], [34.0, 7146.0], [34.1, 7146.0], [34.2, 7237.0], [34.3, 7237.0], [34.4, 7463.0], [34.5, 7463.0], [34.6, 7699.0], [34.7, 7699.0], [34.8, 7712.0], [34.9, 7712.0], [35.0, 7759.0], [35.1, 7759.0], [35.2, 7905.0], [35.3, 7905.0], [35.4, 8168.0], [35.5, 8168.0], [35.6, 8231.0], [35.7, 8231.0], [35.8, 8511.0], [35.9, 8553.0], [36.0, 8553.0], [36.1, 8584.0], [36.2, 8584.0], [36.3, 8917.0], [36.4, 8917.0], [36.5, 8922.0], [36.6, 8922.0], [36.7, 9048.0], [36.8, 9048.0], [36.9, 9108.0], [37.0, 9108.0], [37.1, 9137.0], [37.2, 9137.0], [37.3, 9226.0], [37.4, 9226.0], [37.5, 9238.0], [37.6, 9238.0], [37.7, 9239.0], [37.8, 9239.0], [37.9, 9396.0], [38.0, 9396.0], [38.1, 9441.0], [38.2, 9441.0], [38.3, 9695.0], [38.4, 9695.0], [38.5, 9893.0], [38.6, 9893.0], [38.7, 10082.0], [38.8, 10082.0], [38.9, 10457.0], [39.0, 10457.0], [39.1, 10594.0], [39.2, 10594.0], [39.3, 10896.0], [39.4, 10896.0], [39.5, 10959.0], [39.6, 10959.0], [39.7, 11199.0], [39.8, 11199.0], [39.9, 11284.0], [40.0, 11284.0], [40.1, 11652.0], [40.2, 11652.0], [40.3, 11773.0], [40.4, 11773.0], [40.5, 11799.0], [40.6, 11799.0], [40.7, 11833.0], [40.8, 11833.0], [40.9, 11863.0], [41.0, 11863.0], [41.1, 11951.0], [41.2, 11951.0], [41.3, 11993.0], [41.4, 11993.0], [41.5, 12087.0], [41.6, 12087.0], [41.7, 12191.0], [41.8, 12191.0], [41.9, 12323.0], [42.0, 12323.0], [42.1, 12529.0], [42.2, 12529.0], [42.3, 12606.0], [42.4, 12606.0], [42.5, 12647.0], [42.6, 12647.0], [42.7, 12656.0], [42.8, 12656.0], [42.9, 12798.0], [43.0, 12799.0], [43.1, 12799.0], [43.2, 12984.0], [43.3, 12984.0], [43.4, 13019.0], [43.5, 13019.0], [43.6, 13088.0], [43.7, 13088.0], [43.8, 13118.0], [43.9, 13118.0], [44.0, 13249.0], [44.1, 13249.0], [44.2, 13310.0], [44.3, 13310.0], [44.4, 13474.0], [44.5, 13474.0], [44.6, 13512.0], [44.7, 13512.0], [44.8, 13571.0], [44.9, 13571.0], [45.0, 13578.0], [45.1, 13578.0], [45.2, 13914.0], [45.3, 13914.0], [45.4, 13974.0], [45.5, 13974.0], [45.6, 14181.0], [45.7, 14181.0], [45.8, 14227.0], [45.9, 14227.0], [46.0, 14351.0], [46.1, 14351.0], [46.2, 14379.0], [46.3, 14379.0], [46.4, 14490.0], [46.5, 14490.0], [46.6, 14543.0], [46.7, 14543.0], [46.8, 14885.0], [46.9, 14885.0], [47.0, 14926.0], [47.1, 14926.0], [47.2, 14934.0], [47.3, 14934.0], [47.4, 15001.0], [47.5, 15001.0], [47.6, 15127.0], [47.7, 15127.0], [47.8, 15128.0], [47.9, 15128.0], [48.0, 15196.0], [48.1, 15196.0], [48.2, 15207.0], [48.3, 15207.0], [48.4, 15332.0], [48.5, 15332.0], [48.6, 15344.0], [48.7, 15344.0], [48.8, 15502.0], [48.9, 15502.0], [49.0, 15518.0], [49.1, 15518.0], [49.2, 15551.0], [49.3, 15551.0], [49.4, 15584.0], [49.5, 15584.0], [49.6, 15664.0], [49.7, 15664.0], [49.8, 15818.0], [49.9, 15818.0], [50.0, 15920.0], [50.1, 15971.0], [50.2, 15971.0], [50.3, 16061.0], [50.4, 16061.0], [50.5, 16063.0], [50.6, 16063.0], [50.7, 16192.0], [50.8, 16192.0], [50.9, 16383.0], [51.0, 16383.0], [51.1, 16384.0], [51.2, 16384.0], [51.3, 16486.0], [51.4, 16486.0], [51.5, 16690.0], [51.6, 16690.0], [51.7, 16702.0], [51.8, 16702.0], [51.9, 16767.0], [52.0, 16767.0], [52.1, 16904.0], [52.2, 16904.0], [52.3, 16919.0], [52.4, 16919.0], [52.5, 17034.0], [52.6, 17034.0], [52.7, 17039.0], [52.8, 17039.0], [52.9, 17274.0], [53.0, 17274.0], [53.1, 17282.0], [53.2, 17282.0], [53.3, 17311.0], [53.4, 17311.0], [53.5, 17665.0], [53.6, 17665.0], [53.7, 17700.0], [53.8, 17700.0], [53.9, 17804.0], [54.0, 17804.0], [54.1, 17808.0], [54.2, 17808.0], [54.3, 17907.0], [54.4, 17907.0], [54.5, 18265.0], [54.6, 18265.0], [54.7, 18353.0], [54.8, 18353.0], [54.9, 18551.0], [55.0, 18551.0], [55.1, 18607.0], [55.2, 18607.0], [55.3, 18613.0], [55.4, 18613.0], [55.5, 18615.0], [55.6, 18615.0], [55.7, 18684.0], [55.8, 18684.0], [55.9, 18743.0], [56.0, 18743.0], [56.1, 18795.0], [56.2, 18795.0], [56.3, 18962.0], [56.4, 18962.0], [56.5, 19114.0], [56.6, 19114.0], [56.7, 19266.0], [56.8, 19266.0], [56.9, 19278.0], [57.0, 19278.0], [57.1, 19389.0], [57.2, 19470.0], [57.3, 19470.0], [57.4, 19562.0], [57.5, 19562.0], [57.6, 19565.0], [57.7, 19565.0], [57.8, 19627.0], [57.9, 19627.0], [58.0, 19773.0], [58.1, 19773.0], [58.2, 19797.0], [58.3, 19797.0], [58.4, 19850.0], [58.5, 19850.0], [58.6, 19857.0], [58.7, 19857.0], [58.8, 19908.0], [58.9, 19908.0], [59.0, 19941.0], [59.1, 19941.0], [59.2, 20121.0], [59.3, 20121.0], [59.4, 20149.0], [59.5, 20149.0], [59.6, 20188.0], [59.7, 20188.0], [59.8, 20448.0], [59.9, 20448.0], [60.0, 20597.0], [60.1, 20597.0], [60.2, 20642.0], [60.3, 20642.0], [60.4, 20651.0], [60.5, 20651.0], [60.6, 20723.0], [60.7, 20723.0], [60.8, 20935.0], [60.9, 20935.0], [61.0, 20947.0], [61.1, 20947.0], [61.2, 20954.0], [61.3, 20954.0], [61.4, 21159.0], [61.5, 21159.0], [61.6, 21192.0], [61.7, 21192.0], [61.8, 21352.0], [61.9, 21352.0], [62.0, 21374.0], [62.1, 21374.0], [62.2, 21485.0], [62.3, 21485.0], [62.4, 21565.0], [62.5, 21565.0], [62.6, 21580.0], [62.7, 21580.0], [62.8, 21598.0], [62.9, 21598.0], [63.0, 21627.0], [63.1, 21627.0], [63.2, 21631.0], [63.3, 21631.0], [63.4, 21636.0], [63.5, 21636.0], [63.6, 21675.0], [63.7, 21675.0], [63.8, 21732.0], [63.9, 21732.0], [64.0, 22126.0], [64.1, 22126.0], [64.2, 22345.0], [64.3, 22645.0], [64.4, 22645.0], [64.5, 22676.0], [64.6, 22676.0], [64.7, 22818.0], [64.8, 22818.0], [64.9, 22977.0], [65.0, 22977.0], [65.1, 22987.0], [65.2, 22987.0], [65.3, 23031.0], [65.4, 23031.0], [65.5, 23253.0], [65.6, 23253.0], [65.7, 23406.0], [65.8, 23406.0], [65.9, 23459.0], [66.0, 23459.0], [66.1, 24056.0], [66.2, 24056.0], [66.3, 24082.0], [66.4, 24082.0], [66.5, 24144.0], [66.6, 24144.0], [66.7, 24201.0], [66.8, 24201.0], [66.9, 24441.0], [67.0, 24441.0], [67.1, 24543.0], [67.2, 24543.0], [67.3, 24620.0], [67.4, 24620.0], [67.5, 25108.0], [67.6, 25108.0], [67.7, 25146.0], [67.8, 25146.0], [67.9, 25316.0], [68.0, 25316.0], [68.1, 25317.0], [68.2, 25317.0], [68.3, 25336.0], [68.4, 25336.0], [68.5, 25455.0], [68.6, 25455.0], [68.7, 25774.0], [68.8, 25774.0], [68.9, 25928.0], [69.0, 25928.0], [69.1, 25984.0], [69.2, 25984.0], [69.3, 26218.0], [69.4, 26218.0], [69.5, 26300.0], [69.6, 26300.0], [69.7, 26479.0], [69.8, 26479.0], [69.9, 26590.0], [70.0, 26590.0], [70.1, 26941.0], [70.2, 26941.0], [70.3, 27085.0], [70.4, 27085.0], [70.5, 27339.0], [70.6, 27339.0], [70.7, 27396.0], [70.8, 27396.0], [70.9, 27441.0], [71.0, 27441.0], [71.1, 27501.0], [71.2, 27501.0], [71.3, 27668.0], [71.4, 27668.0], [71.5, 27774.0], [71.6, 27797.0], [71.7, 27797.0], [71.8, 27802.0], [71.9, 27802.0], [72.0, 27832.0], [72.1, 27832.0], [72.2, 27997.0], [72.3, 27997.0], [72.4, 28100.0], [72.5, 28100.0], [72.6, 28315.0], [72.7, 28315.0], [72.8, 28369.0], [72.9, 28369.0], [73.0, 28390.0], [73.1, 28390.0], [73.2, 28914.0], [73.3, 28914.0], [73.4, 29020.0], [73.5, 29020.0], [73.6, 29055.0], [73.7, 29055.0], [73.8, 29155.0], [73.9, 29155.0], [74.0, 29486.0], [74.1, 29486.0], [74.2, 29586.0], [74.3, 29586.0], [74.4, 29823.0], [74.5, 29823.0], [74.6, 30066.0], [74.7, 30066.0], [74.8, 30320.0], [74.9, 30320.0], [75.0, 30730.0], [75.1, 30730.0], [75.2, 31021.0], [75.3, 31021.0], [75.4, 31153.0], [75.5, 31153.0], [75.6, 31414.0], [75.7, 31414.0], [75.8, 31497.0], [75.9, 31497.0], [76.0, 31545.0], [76.1, 31545.0], [76.2, 31567.0], [76.3, 31567.0], [76.4, 31814.0], [76.5, 31814.0], [76.6, 31874.0], [76.7, 31874.0], [76.8, 31878.0], [76.9, 31878.0], [77.0, 31890.0], [77.1, 31890.0], [77.2, 31969.0], [77.3, 31969.0], [77.4, 32053.0], [77.5, 32053.0], [77.6, 32160.0], [77.7, 32160.0], [77.8, 32201.0], [77.9, 32201.0], [78.0, 32328.0], [78.1, 32328.0], [78.2, 32536.0], [78.3, 32536.0], [78.4, 32587.0], [78.5, 32587.0], [78.6, 33061.0], [78.7, 33086.0], [78.8, 33086.0], [78.9, 33086.0], [79.0, 33086.0], [79.1, 33838.0], [79.2, 33838.0], [79.3, 34455.0], [79.4, 34455.0], [79.5, 34483.0], [79.6, 34483.0], [79.7, 34526.0], [79.8, 34526.0], [79.9, 35145.0], [80.0, 35145.0], [80.1, 36053.0], [80.2, 36053.0], [80.3, 36160.0], [80.4, 36160.0], [80.5, 36347.0], [80.6, 36347.0], [80.7, 36602.0], [80.8, 36602.0], [80.9, 36824.0], [81.0, 36824.0], [81.1, 36941.0], [81.2, 36941.0], [81.3, 36963.0], [81.4, 36963.0], [81.5, 37020.0], [81.6, 37020.0], [81.7, 37069.0], [81.8, 37069.0], [81.9, 37085.0], [82.0, 37085.0], [82.1, 37274.0], [82.2, 37274.0], [82.3, 37308.0], [82.4, 37308.0], [82.5, 37683.0], [82.6, 37683.0], [82.7, 37937.0], [82.8, 37937.0], [82.9, 38592.0], [83.0, 38592.0], [83.1, 38843.0], [83.2, 38843.0], [83.3, 38899.0], [83.4, 38899.0], [83.5, 39050.0], [83.6, 39050.0], [83.7, 39320.0], [83.8, 39320.0], [83.9, 39545.0], [84.0, 39545.0], [84.1, 39577.0], [84.2, 39577.0], [84.3, 39600.0], [84.4, 39600.0], [84.5, 39948.0], [84.6, 39948.0], [84.7, 40110.0], [84.8, 40110.0], [84.9, 40369.0], [85.0, 40369.0], [85.1, 40645.0], [85.2, 40645.0], [85.3, 40862.0], [85.4, 40862.0], [85.5, 41004.0], [85.6, 41004.0], [85.7, 41418.0], [85.8, 41427.0], [85.9, 41427.0], [86.0, 41473.0], [86.1, 41473.0], [86.2, 41487.0], [86.3, 41487.0], [86.4, 41578.0], [86.5, 41578.0], [86.6, 41630.0], [86.7, 41630.0], [86.8, 41890.0], [86.9, 41890.0], [87.0, 42035.0], [87.1, 42035.0], [87.2, 42265.0], [87.3, 42265.0], [87.4, 43471.0], [87.5, 43471.0], [87.6, 43787.0], [87.7, 43787.0], [87.8, 43802.0], [87.9, 43802.0], [88.0, 44013.0], [88.1, 44013.0], [88.2, 44262.0], [88.3, 44262.0], [88.4, 44380.0], [88.5, 44380.0], [88.6, 44457.0], [88.7, 44457.0], [88.8, 44748.0], [88.9, 44748.0], [89.0, 44803.0], [89.1, 44803.0], [89.2, 44856.0], [89.3, 44856.0], [89.4, 44934.0], [89.5, 44934.0], [89.6, 44941.0], [89.7, 44941.0], [89.8, 44959.0], [89.9, 44959.0], [90.0, 44996.0], [90.1, 44996.0], [90.2, 45099.0], [90.3, 45099.0], [90.4, 45516.0], [90.5, 45516.0], [90.6, 45655.0], [90.7, 45655.0], [90.8, 45967.0], [90.9, 45967.0], [91.0, 46105.0], [91.1, 46105.0], [91.2, 46117.0], [91.3, 46117.0], [91.4, 46148.0], [91.5, 46148.0], [91.6, 47211.0], [91.7, 47211.0], [91.8, 47423.0], [91.9, 47423.0], [92.0, 48133.0], [92.1, 48133.0], [92.2, 48374.0], [92.3, 48374.0], [92.4, 48391.0], [92.5, 48391.0], [92.6, 48488.0], [92.7, 48488.0], [92.8, 48564.0], [92.9, 48981.0], [93.0, 48981.0], [93.1, 49037.0], [93.2, 49037.0], [93.3, 50233.0], [93.4, 50233.0], [93.5, 52482.0], [93.6, 52482.0], [93.7, 52897.0], [93.8, 52897.0], [93.9, 53195.0], [94.0, 53195.0], [94.1, 53481.0], [94.2, 53481.0], [94.3, 53597.0], [94.4, 53597.0], [94.5, 53673.0], [94.6, 53673.0], [94.7, 54086.0], [94.8, 54086.0], [94.9, 54560.0], [95.0, 54560.0], [95.1, 54932.0], [95.2, 54932.0], [95.3, 54973.0], [95.4, 54973.0], [95.5, 55145.0], [95.6, 55145.0], [95.7, 55964.0], [95.8, 55964.0], [95.9, 56164.0], [96.0, 56164.0], [96.1, 56752.0], [96.2, 56752.0], [96.3, 57459.0], [96.4, 57459.0], [96.5, 58050.0], [96.6, 58050.0], [96.7, 58575.0], [96.8, 58575.0], [96.9, 58683.0], [97.0, 58683.0], [97.1, 58939.0], [97.2, 58939.0], [97.3, 59415.0], [97.4, 59415.0], [97.5, 60118.0], [97.6, 60118.0], [97.7, 60118.0], [97.8, 60118.0], [97.9, 60118.0], [98.0, 60118.0], [98.1, 60119.0], [98.2, 60119.0], [98.3, 60119.0], [98.4, 60119.0], [98.5, 60120.0], [98.6, 60120.0], [98.7, 60121.0], [98.8, 60121.0], [98.9, 60123.0], [99.0, 60123.0], [99.1, 60123.0], [99.2, 60123.0], [99.3, 60124.0], [99.4, 60124.0], [99.5, 60126.0], [99.6, 60126.0], [99.7, 60227.0], [99.8, 60227.0], [99.9, 60239.0], [100.0, 60239.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 224.0], [0.1, 224.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 225.0], [0.9, 225.0], [1.0, 225.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 225.0], [2.0, 225.0], [2.1, 225.0], [2.2, 225.0], [2.3, 225.0], [2.4, 225.0], [2.5, 225.0], [2.6, 225.0], [2.7, 225.0], [2.8, 225.0], [2.9, 225.0], [3.0, 226.0], [3.1, 226.0], [3.2, 226.0], [3.3, 226.0], [3.4, 226.0], [3.5, 226.0], [3.6, 226.0], [3.7, 226.0], [3.8, 226.0], [3.9, 226.0], [4.0, 226.0], [4.1, 226.0], [4.2, 226.0], [4.3, 226.0], [4.4, 226.0], [4.5, 226.0], [4.6, 226.0], [4.7, 226.0], [4.8, 226.0], [4.9, 226.0], [5.0, 226.0], [5.1, 226.0], [5.2, 226.0], [5.3, 227.0], [5.4, 227.0], [5.5, 227.0], [5.6, 227.0], [5.7, 227.0], [5.8, 227.0], [5.9, 227.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 227.0], [6.5, 227.0], [6.6, 227.0], [6.7, 227.0], [6.8, 227.0], [6.9, 227.0], [7.0, 227.0], [7.1, 227.0], [7.2, 227.0], [7.3, 227.0], [7.4, 227.0], [7.5, 227.0], [7.6, 227.0], [7.7, 227.0], [7.8, 227.0], [7.9, 227.0], [8.0, 227.0], [8.1, 227.0], [8.2, 227.0], [8.3, 227.0], [8.4, 227.0], [8.5, 227.0], [8.6, 227.0], [8.7, 227.0], [8.8, 227.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 228.0], [9.5, 228.0], [9.6, 228.0], [9.7, 228.0], [9.8, 228.0], [9.9, 228.0], [10.0, 228.0], [10.1, 228.0], [10.2, 228.0], [10.3, 228.0], [10.4, 228.0], [10.5, 228.0], [10.6, 228.0], [10.7, 228.0], [10.8, 229.0], [10.9, 229.0], [11.0, 229.0], [11.1, 229.0], [11.2, 229.0], [11.3, 229.0], [11.4, 229.0], [11.5, 229.0], [11.6, 229.0], [11.7, 229.0], [11.8, 229.0], [11.9, 229.0], [12.0, 229.0], [12.1, 229.0], [12.2, 229.0], [12.3, 229.0], [12.4, 229.0], [12.5, 229.0], [12.6, 229.0], [12.7, 229.0], [12.8, 229.0], [12.9, 229.0], [13.0, 229.0], [13.1, 229.0], [13.2, 229.0], [13.3, 229.0], [13.4, 229.0], [13.5, 229.0], [13.6, 229.0], [13.7, 229.0], [13.8, 229.0], [13.9, 230.0], [14.0, 230.0], [14.1, 230.0], [14.2, 230.0], [14.3, 230.0], [14.4, 230.0], [14.5, 230.0], [14.6, 230.0], [14.7, 230.0], [14.8, 230.0], [14.9, 230.0], [15.0, 230.0], [15.1, 230.0], [15.2, 230.0], [15.3, 230.0], [15.4, 230.0], [15.5, 230.0], [15.6, 230.0], [15.7, 230.0], [15.8, 230.0], [15.9, 230.0], [16.0, 230.0], [16.1, 230.0], [16.2, 230.0], [16.3, 230.0], [16.4, 230.0], [16.5, 230.0], [16.6, 230.0], [16.7, 230.0], [16.8, 230.0], [16.9, 230.0], [17.0, 231.0], [17.1, 231.0], [17.2, 231.0], [17.3, 231.0], [17.4, 231.0], [17.5, 231.0], [17.6, 231.0], [17.7, 231.0], [17.8, 231.0], [17.9, 231.0], [18.0, 231.0], [18.1, 231.0], [18.2, 231.0], [18.3, 231.0], [18.4, 231.0], [18.5, 231.0], [18.6, 231.0], [18.7, 231.0], [18.8, 232.0], [18.9, 232.0], [19.0, 232.0], [19.1, 232.0], [19.2, 232.0], [19.3, 232.0], [19.4, 232.0], [19.5, 232.0], [19.6, 232.0], [19.7, 232.0], [19.8, 232.0], [19.9, 232.0], [20.0, 232.0], [20.1, 232.0], [20.2, 232.0], [20.3, 232.0], [20.4, 232.0], [20.5, 232.0], [20.6, 232.0], [20.7, 232.0], [20.8, 232.0], [20.9, 232.0], [21.0, 232.0], [21.1, 233.0], [21.2, 233.0], [21.3, 233.0], [21.4, 233.0], [21.5, 233.0], [21.6, 233.0], [21.7, 233.0], [21.8, 233.0], [21.9, 233.0], [22.0, 233.0], [22.1, 233.0], [22.2, 233.0], [22.3, 233.0], [22.4, 233.0], [22.5, 233.0], [22.6, 233.0], [22.7, 233.0], [22.8, 233.0], [22.9, 233.0], [23.0, 233.0], [23.1, 234.0], [23.2, 234.0], [23.3, 234.0], [23.4, 234.0], [23.5, 234.0], [23.6, 234.0], [23.7, 234.0], [23.8, 234.0], [23.9, 234.0], [24.0, 234.0], [24.1, 234.0], [24.2, 234.0], [24.3, 234.0], [24.4, 234.0], [24.5, 234.0], [24.6, 234.0], [24.7, 234.0], [24.8, 234.0], [24.9, 234.0], [25.0, 234.0], [25.1, 234.0], [25.2, 234.0], [25.3, 234.0], [25.4, 234.0], [25.5, 234.0], [25.6, 234.0], [25.7, 234.0], [25.8, 234.0], [25.9, 234.0], [26.0, 234.0], [26.1, 234.0], [26.2, 235.0], [26.3, 235.0], [26.4, 235.0], [26.5, 235.0], [26.6, 235.0], [26.7, 235.0], [26.8, 235.0], [26.9, 235.0], [27.0, 235.0], [27.1, 235.0], [27.2, 235.0], [27.3, 235.0], [27.4, 235.0], [27.5, 235.0], [27.6, 235.0], [27.7, 235.0], [27.8, 235.0], [27.9, 235.0], [28.0, 236.0], [28.1, 236.0], [28.2, 236.0], [28.3, 236.0], [28.4, 236.0], [28.5, 236.0], [28.6, 236.0], [28.7, 236.0], [28.8, 236.0], [28.9, 236.0], [29.0, 236.0], [29.1, 236.0], [29.2, 236.0], [29.3, 236.0], [29.4, 236.0], [29.5, 236.0], [29.6, 236.0], [29.7, 236.0], [29.8, 236.0], [29.9, 236.0], [30.0, 236.0], [30.1, 236.0], [30.2, 236.0], [30.3, 236.0], [30.4, 236.0], [30.5, 236.0], [30.6, 236.0], [30.7, 236.0], [30.8, 236.0], [30.9, 236.0], [31.0, 236.0], [31.1, 236.0], [31.2, 236.0], [31.3, 236.0], [31.4, 236.0], [31.5, 236.0], [31.6, 236.0], [31.7, 236.0], [31.8, 236.0], [31.9, 236.0], [32.0, 236.0], [32.1, 236.0], [32.2, 236.0], [32.3, 236.0], [32.4, 236.0], [32.5, 237.0], [32.6, 237.0], [32.7, 237.0], [32.8, 237.0], [32.9, 237.0], [33.0, 237.0], [33.1, 237.0], [33.2, 237.0], [33.3, 237.0], [33.4, 237.0], [33.5, 237.0], [33.6, 237.0], [33.7, 237.0], [33.8, 237.0], [33.9, 237.0], [34.0, 237.0], [34.1, 237.0], [34.2, 237.0], [34.3, 237.0], [34.4, 237.0], [34.5, 237.0], [34.6, 237.0], [34.7, 237.0], [34.8, 237.0], [34.9, 237.0], [35.0, 237.0], [35.1, 237.0], [35.2, 237.0], [35.3, 237.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 237.0], [35.8, 237.0], [35.9, 237.0], [36.0, 237.0], [36.1, 237.0], [36.2, 237.0], [36.3, 237.0], [36.4, 237.0], [36.5, 237.0], [36.6, 237.0], [36.7, 237.0], [36.8, 237.0], [36.9, 237.0], [37.0, 237.0], [37.1, 237.0], [37.2, 237.0], [37.3, 237.0], [37.4, 238.0], [37.5, 238.0], [37.6, 238.0], [37.7, 238.0], [37.8, 238.0], [37.9, 238.0], [38.0, 238.0], [38.1, 238.0], [38.2, 238.0], [38.3, 238.0], [38.4, 238.0], [38.5, 238.0], [38.6, 238.0], [38.7, 238.0], [38.8, 238.0], [38.9, 238.0], [39.0, 238.0], [39.1, 238.0], [39.2, 238.0], [39.3, 238.0], [39.4, 238.0], [39.5, 238.0], [39.6, 238.0], [39.7, 238.0], [39.8, 238.0], [39.9, 238.0], [40.0, 238.0], [40.1, 238.0], [40.2, 238.0], [40.3, 238.0], [40.4, 238.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 238.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 238.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 238.0], [41.7, 238.0], [41.8, 238.0], [41.9, 238.0], [42.0, 238.0], [42.1, 238.0], [42.2, 239.0], [42.3, 239.0], [42.4, 239.0], [42.5, 239.0], [42.6, 239.0], [42.7, 239.0], [42.8, 239.0], [42.9, 239.0], [43.0, 239.0], [43.1, 239.0], [43.2, 239.0], [43.3, 239.0], [43.4, 239.0], [43.5, 239.0], [43.6, 239.0], [43.7, 239.0], [43.8, 239.0], [43.9, 239.0], [44.0, 239.0], [44.1, 239.0], [44.2, 239.0], [44.3, 239.0], [44.4, 239.0], [44.5, 239.0], [44.6, 239.0], [44.7, 239.0], [44.8, 239.0], [44.9, 239.0], [45.0, 239.0], [45.1, 239.0], [45.2, 239.0], [45.3, 239.0], [45.4, 239.0], [45.5, 239.0], [45.6, 239.0], [45.7, 239.0], [45.8, 239.0], [45.9, 239.0], [46.0, 239.0], [46.1, 239.0], [46.2, 239.0], [46.3, 239.0], [46.4, 239.0], [46.5, 239.0], [46.6, 239.0], [46.7, 239.0], [46.8, 239.0], [46.9, 239.0], [47.0, 239.0], [47.1, 239.0], [47.2, 239.0], [47.3, 239.0], [47.4, 239.0], [47.5, 239.0], [47.6, 239.0], [47.7, 239.0], [47.8, 239.0], [47.9, 239.0], [48.0, 239.0], [48.1, 240.0], [48.2, 240.0], [48.3, 240.0], [48.4, 240.0], [48.5, 240.0], [48.6, 240.0], [48.7, 240.0], [48.8, 240.0], [48.9, 240.0], [49.0, 240.0], [49.1, 240.0], [49.2, 240.0], [49.3, 240.0], [49.4, 240.0], [49.5, 240.0], [49.6, 240.0], [49.7, 240.0], [49.8, 240.0], [49.9, 240.0], [50.0, 240.0], [50.1, 240.0], [50.2, 240.0], [50.3, 240.0], [50.4, 240.0], [50.5, 240.0], [50.6, 240.0], [50.7, 240.0], [50.8, 240.0], [50.9, 240.0], [51.0, 240.0], [51.1, 240.0], [51.2, 240.0], [51.3, 240.0], [51.4, 240.0], [51.5, 240.0], [51.6, 240.0], [51.7, 240.0], [51.8, 240.0], [51.9, 240.0], [52.0, 240.0], [52.1, 240.0], [52.2, 240.0], [52.3, 240.0], [52.4, 240.0], [52.5, 240.0], [52.6, 240.0], [52.7, 240.0], [52.8, 240.0], [52.9, 240.0], [53.0, 240.0], [53.1, 240.0], [53.2, 240.0], [53.3, 240.0], [53.4, 240.0], [53.5, 240.0], [53.6, 241.0], [53.7, 241.0], [53.8, 241.0], [53.9, 241.0], [54.0, 241.0], [54.1, 241.0], [54.2, 241.0], [54.3, 241.0], [54.4, 241.0], [54.5, 241.0], [54.6, 241.0], [54.7, 241.0], [54.8, 241.0], [54.9, 241.0], [55.0, 241.0], [55.1, 241.0], [55.2, 241.0], [55.3, 241.0], [55.4, 241.0], [55.5, 241.0], [55.6, 241.0], [55.7, 241.0], [55.8, 241.0], [55.9, 242.0], [56.0, 242.0], [56.1, 242.0], [56.2, 242.0], [56.3, 242.0], [56.4, 242.0], [56.5, 242.0], [56.6, 242.0], [56.7, 242.0], [56.8, 242.0], [56.9, 242.0], [57.0, 242.0], [57.1, 242.0], [57.2, 242.0], [57.3, 242.0], [57.4, 242.0], [57.5, 242.0], [57.6, 242.0], [57.7, 242.0], [57.8, 242.0], [57.9, 242.0], [58.0, 242.0], [58.1, 242.0], [58.2, 242.0], [58.3, 243.0], [58.4, 243.0], [58.5, 243.0], [58.6, 243.0], [58.7, 243.0], [58.8, 243.0], [58.9, 243.0], [59.0, 243.0], [59.1, 243.0], [59.2, 243.0], [59.3, 243.0], [59.4, 243.0], [59.5, 243.0], [59.6, 243.0], [59.7, 243.0], [59.8, 243.0], [59.9, 243.0], [60.0, 243.0], [60.1, 243.0], [60.2, 243.0], [60.3, 243.0], [60.4, 243.0], [60.5, 243.0], [60.6, 243.0], [60.7, 243.0], [60.8, 243.0], [60.9, 243.0], [61.0, 243.0], [61.1, 243.0], [61.2, 243.0], [61.3, 243.0], [61.4, 244.0], [61.5, 244.0], [61.6, 244.0], [61.7, 244.0], [61.8, 244.0], [61.9, 244.0], [62.0, 244.0], [62.1, 244.0], [62.2, 244.0], [62.3, 244.0], [62.4, 244.0], [62.5, 244.0], [62.6, 244.0], [62.7, 244.0], [62.8, 244.0], [62.9, 244.0], [63.0, 244.0], [63.1, 244.0], [63.2, 244.0], [63.3, 244.0], [63.4, 244.0], [63.5, 244.0], [63.6, 244.0], [63.7, 244.0], [63.8, 244.0], [63.9, 244.0], [64.0, 244.0], [64.1, 244.0], [64.2, 244.0], [64.3, 245.0], [64.4, 245.0], [64.5, 245.0], [64.6, 245.0], [64.7, 245.0], [64.8, 245.0], [64.9, 245.0], [65.0, 245.0], [65.1, 245.0], [65.2, 245.0], [65.3, 245.0], [65.4, 245.0], [65.5, 246.0], [65.6, 246.0], [65.7, 246.0], [65.8, 246.0], [65.9, 246.0], [66.0, 246.0], [66.1, 246.0], [66.2, 246.0], [66.3, 246.0], [66.4, 246.0], [66.5, 246.0], [66.6, 246.0], [66.7, 246.0], [66.8, 246.0], [66.9, 246.0], [67.0, 246.0], [67.1, 246.0], [67.2, 246.0], [67.3, 246.0], [67.4, 247.0], [67.5, 247.0], [67.6, 247.0], [67.7, 247.0], [67.8, 247.0], [67.9, 247.0], [68.0, 247.0], [68.1, 247.0], [68.2, 247.0], [68.3, 247.0], [68.4, 247.0], [68.5, 247.0], [68.6, 247.0], [68.7, 247.0], [68.8, 247.0], [68.9, 247.0], [69.0, 248.0], [69.1, 248.0], [69.2, 248.0], [69.3, 248.0], [69.4, 248.0], [69.5, 248.0], [69.6, 248.0], [69.7, 248.0], [69.8, 248.0], [69.9, 248.0], [70.0, 248.0], [70.1, 248.0], [70.2, 249.0], [70.3, 249.0], [70.4, 249.0], [70.5, 249.0], [70.6, 249.0], [70.7, 249.0], [70.8, 249.0], [70.9, 249.0], [71.0, 249.0], [71.1, 249.0], [71.2, 249.0], [71.3, 249.0], [71.4, 249.0], [71.5, 249.0], [71.6, 249.0], [71.7, 250.0], [71.8, 250.0], [71.9, 250.0], [72.0, 250.0], [72.1, 250.0], [72.2, 250.0], [72.3, 250.0], [72.4, 250.0], [72.5, 250.0], [72.6, 250.0], [72.7, 250.0], [72.8, 250.0], [72.9, 250.0], [73.0, 250.0], [73.1, 251.0], [73.2, 251.0], [73.3, 251.0], [73.4, 251.0], [73.5, 251.0], [73.6, 251.0], [73.7, 251.0], [73.8, 251.0], [73.9, 251.0], [74.0, 251.0], [74.1, 251.0], [74.2, 251.0], [74.3, 252.0], [74.4, 252.0], [74.5, 252.0], [74.6, 252.0], [74.7, 252.0], [74.8, 252.0], [74.9, 252.0], [75.0, 252.0], [75.1, 252.0], [75.2, 253.0], [75.3, 253.0], [75.4, 253.0], [75.5, 253.0], [75.6, 253.0], [75.7, 253.0], [75.8, 253.0], [75.9, 253.0], [76.0, 253.0], [76.1, 253.0], [76.2, 254.0], [76.3, 254.0], [76.4, 254.0], [76.5, 254.0], [76.6, 254.0], [76.7, 254.0], [76.8, 254.0], [76.9, 254.0], [77.0, 254.0], [77.1, 254.0], [77.2, 255.0], [77.3, 255.0], [77.4, 255.0], [77.5, 255.0], [77.6, 256.0], [77.7, 256.0], [77.8, 256.0], [77.9, 256.0], [78.0, 256.0], [78.1, 256.0], [78.2, 256.0], [78.3, 256.0], [78.4, 256.0], [78.5, 256.0], [78.6, 256.0], [78.7, 256.0], [78.8, 257.0], [78.9, 257.0], [79.0, 257.0], [79.1, 257.0], [79.2, 257.0], [79.3, 257.0], [79.4, 257.0], [79.5, 258.0], [79.6, 258.0], [79.7, 258.0], [79.8, 258.0], [79.9, 258.0], [80.0, 258.0], [80.1, 258.0], [80.2, 258.0], [80.3, 259.0], [80.4, 259.0], [80.5, 259.0], [80.6, 259.0], [80.7, 259.0], [80.8, 259.0], [80.9, 259.0], [81.0, 259.0], [81.1, 260.0], [81.2, 260.0], [81.3, 260.0], [81.4, 260.0], [81.5, 260.0], [81.6, 260.0], [81.7, 260.0], [81.8, 260.0], [81.9, 260.0], [82.0, 260.0], [82.1, 260.0], [82.2, 260.0], [82.3, 260.0], [82.4, 260.0], [82.5, 260.0], [82.6, 260.0], [82.7, 261.0], [82.8, 261.0], [82.9, 261.0], [83.0, 261.0], [83.1, 261.0], [83.2, 261.0], [83.3, 262.0], [83.4, 262.0], [83.5, 262.0], [83.6, 262.0], [83.7, 262.0], [83.8, 263.0], [83.9, 263.0], [84.0, 263.0], [84.1, 263.0], [84.2, 263.0], [84.3, 263.0], [84.4, 263.0], [84.5, 263.0], [84.6, 264.0], [84.7, 264.0], [84.8, 264.0], [84.9, 264.0], [85.0, 264.0], [85.1, 264.0], [85.2, 264.0], [85.3, 264.0], [85.4, 264.0], [85.5, 264.0], [85.6, 264.0], [85.7, 264.0], [85.8, 265.0], [85.9, 265.0], [86.0, 265.0], [86.1, 265.0], [86.2, 265.0], [86.3, 265.0], [86.4, 265.0], [86.5, 265.0], [86.6, 266.0], [86.7, 266.0], [86.8, 266.0], [86.9, 266.0], [87.0, 266.0], [87.1, 266.0], [87.2, 266.0], [87.3, 266.0], [87.4, 266.0], [87.5, 267.0], [87.6, 267.0], [87.7, 267.0], [87.8, 267.0], [87.9, 267.0], [88.0, 267.0], [88.1, 268.0], [88.2, 268.0], [88.3, 268.0], [88.4, 268.0], [88.5, 268.0], [88.6, 268.0], [88.7, 268.0], [88.8, 268.0], [88.9, 269.0], [89.0, 269.0], [89.1, 269.0], [89.2, 269.0], [89.3, 269.0], [89.4, 269.0], [89.5, 269.0], [89.6, 269.0], [89.7, 270.0], [89.8, 270.0], [89.9, 271.0], [90.0, 271.0], [90.1, 271.0], [90.2, 271.0], [90.3, 271.0], [90.4, 271.0], [90.5, 272.0], [90.6, 272.0], [90.7, 273.0], [90.8, 273.0], [90.9, 273.0], [91.0, 273.0], [91.1, 275.0], [91.2, 275.0], [91.3, 277.0], [91.4, 277.0], [91.5, 277.0], [91.6, 277.0], [91.7, 277.0], [91.8, 278.0], [91.9, 278.0], [92.0, 278.0], [92.1, 278.0], [92.2, 279.0], [92.3, 279.0], [92.4, 279.0], [92.5, 279.0], [92.6, 280.0], [92.7, 280.0], [92.8, 280.0], [92.9, 280.0], [93.0, 280.0], [93.1, 280.0], [93.2, 280.0], [93.3, 280.0], [93.4, 282.0], [93.5, 282.0], [93.6, 283.0], [93.7, 283.0], [93.8, 284.0], [93.9, 284.0], [94.0, 284.0], [94.1, 284.0], [94.2, 286.0], [94.3, 286.0], [94.4, 287.0], [94.5, 287.0], [94.6, 288.0], [94.7, 288.0], [94.8, 288.0], [94.9, 288.0], [95.0, 288.0], [95.1, 288.0], [95.2, 289.0], [95.3, 289.0], [95.4, 289.0], [95.5, 289.0], [95.6, 290.0], [95.7, 290.0], [95.8, 291.0], [95.9, 292.0], [96.0, 292.0], [96.1, 293.0], [96.2, 293.0], [96.3, 293.0], [96.4, 293.0], [96.5, 294.0], [96.6, 294.0], [96.7, 295.0], [96.8, 295.0], [96.9, 295.0], [97.0, 295.0], [97.1, 296.0], [97.2, 296.0], [97.3, 296.0], [97.4, 296.0], [97.5, 298.0], [97.6, 298.0], [97.7, 298.0], [97.8, 298.0], [97.9, 300.0], [98.0, 300.0], [98.1, 300.0], [98.2, 300.0], [98.3, 302.0], [98.4, 302.0], [98.5, 305.0], [98.6, 305.0], [98.7, 306.0], [98.8, 306.0], [98.9, 320.0], [99.0, 320.0], [99.1, 323.0], [99.2, 323.0], [99.3, 345.0], [99.4, 345.0], [99.5, 372.0], [99.6, 372.0], [99.7, 427.0], [99.8, 427.0], [99.9, 1247.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 501.0, "series": [{"data": [[33300.0, 2.0], [35300.0, 1.0], [36500.0, 1.0], [37300.0, 2.0], [38100.0, 1.0], [40100.0, 1.0], [39300.0, 1.0], [39700.0, 1.0], [41700.0, 2.0], [42500.0, 1.0], [42100.0, 1.0], [44500.0, 1.0], [43700.0, 1.0], [44900.0, 1.0], [45300.0, 1.0], [45700.0, 1.0], [49300.0, 1.0], [200.0, 5.0], [53700.0, 1.0], [55300.0, 1.0], [58900.0, 1.0], [57700.0, 1.0], [60500.0, 1.0], [300.0, 114.0], [400.0, 11.0], [500.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1700.0, 1.0], [2500.0, 1.0], [3400.0, 1.0], [4500.0, 2.0], [4600.0, 1.0], [4800.0, 2.0], [4700.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 2.0], [5600.0, 3.0], [5500.0, 1.0], [5400.0, 3.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 3.0], [6100.0, 2.0], [6200.0, 1.0], [6500.0, 4.0], [6400.0, 1.0], [6600.0, 1.0], [6700.0, 3.0], [6900.0, 2.0], [7100.0, 2.0], [7000.0, 3.0], [7400.0, 1.0], [7300.0, 1.0], [7700.0, 1.0], [7900.0, 2.0], [8100.0, 1.0], [8000.0, 1.0], [8400.0, 2.0], [8700.0, 2.0], [9100.0, 2.0], [9200.0, 1.0], [8800.0, 1.0], [9300.0, 2.0], [9600.0, 3.0], [9400.0, 2.0], [9900.0, 1.0], [10100.0, 1.0], [10600.0, 1.0], [10300.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [12100.0, 2.0], [12200.0, 2.0], [12000.0, 3.0], [11800.0, 1.0], [12300.0, 1.0], [12700.0, 1.0], [12500.0, 1.0], [12400.0, 1.0], [13200.0, 2.0], [13000.0, 2.0], [12900.0, 2.0], [12800.0, 1.0], [13300.0, 2.0], [13800.0, 2.0], [13500.0, 2.0], [13700.0, 2.0], [14100.0, 1.0], [14200.0, 1.0], [14700.0, 2.0], [14500.0, 1.0], [14400.0, 1.0], [14600.0, 2.0], [15200.0, 2.0], [15300.0, 2.0], [15100.0, 2.0], [15500.0, 2.0], [15400.0, 2.0], [15700.0, 3.0], [15800.0, 2.0], [16100.0, 2.0], [16200.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [16400.0, 1.0], [16600.0, 2.0], [17200.0, 2.0], [17000.0, 1.0], [17800.0, 1.0], [18000.0, 2.0], [18800.0, 3.0], [19000.0, 1.0], [20000.0, 4.0], [20400.0, 1.0], [19800.0, 3.0], [19600.0, 1.0], [20800.0, 2.0], [21400.0, 2.0], [20600.0, 1.0], [21800.0, 6.0], [21600.0, 1.0], [23200.0, 3.0], [23000.0, 1.0], [22800.0, 1.0], [24400.0, 2.0], [24200.0, 1.0], [23600.0, 1.0], [24800.0, 1.0], [24600.0, 1.0], [26200.0, 1.0], [26400.0, 1.0], [26000.0, 1.0], [25600.0, 1.0], [26800.0, 1.0], [27600.0, 2.0], [27200.0, 1.0], [28000.0, 3.0], [28600.0, 1.0], [28200.0, 1.0], [29200.0, 1.0], [29400.0, 1.0], [29800.0, 1.0], [30000.0, 1.0], [31600.0, 1.0], [31400.0, 1.0], [31200.0, 1.0], [32400.0, 2.0], [32200.0, 2.0], [31800.0, 1.0], [34800.0, 1.0], [34000.0, 1.0], [32800.0, 1.0], [33200.0, 1.0], [36800.0, 1.0], [36400.0, 1.0], [37200.0, 1.0], [38800.0, 1.0], [40800.0, 1.0], [41200.0, 1.0], [41600.0, 2.0], [44000.0, 2.0], [45200.0, 1.0], [48800.0, 1.0], [47600.0, 1.0], [50400.0, 1.0], [49200.0, 1.0], [55200.0, 1.0], [58800.0, 1.0], [59600.0, 1.0], [60400.0, 1.0], [34700.0, 1.0], [37100.0, 3.0], [37500.0, 2.0], [37900.0, 1.0], [39100.0, 1.0], [40300.0, 1.0], [39500.0, 1.0], [44700.0, 1.0], [45100.0, 5.0], [46300.0, 3.0], [48300.0, 1.0], [48700.0, 1.0], [53100.0, 1.0], [52700.0, 1.0], [53900.0, 1.0], [54300.0, 1.0], [55100.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [58300.0, 1.0], [59100.0, 1.0], [60300.0, 11.0], [16900.0, 2.0], [17100.0, 2.0], [16700.0, 1.0], [17500.0, 3.0], [18100.0, 1.0], [17900.0, 1.0], [18700.0, 1.0], [19100.0, 1.0], [18900.0, 2.0], [18500.0, 2.0], [19300.0, 1.0], [20300.0, 2.0], [19700.0, 1.0], [19500.0, 2.0], [20100.0, 2.0], [21100.0, 3.0], [21500.0, 1.0], [20900.0, 2.0], [22300.0, 1.0], [21900.0, 2.0], [21700.0, 1.0], [22500.0, 1.0], [23500.0, 1.0], [22900.0, 1.0], [23700.0, 1.0], [24300.0, 1.0], [25500.0, 2.0], [25300.0, 2.0], [24700.0, 1.0], [25700.0, 1.0], [26500.0, 1.0], [26100.0, 1.0], [27300.0, 1.0], [26700.0, 1.0], [27900.0, 1.0], [28500.0, 2.0], [27700.0, 2.0], [28100.0, 1.0], [28300.0, 1.0], [29100.0, 1.0], [29300.0, 1.0], [30300.0, 1.0], [30500.0, 1.0], [29700.0, 1.0], [30900.0, 1.0], [31700.0, 2.0], [32500.0, 1.0], [32100.0, 4.0], [32700.0, 1.0], [34600.0, 1.0], [36200.0, 1.0], [39800.0, 2.0], [40600.0, 1.0], [39000.0, 1.0], [42200.0, 1.0], [41800.0, 2.0], [41000.0, 1.0], [44600.0, 1.0], [44200.0, 1.0], [45800.0, 1.0], [46200.0, 1.0], [48600.0, 2.0], [47400.0, 1.0], [53400.0, 1.0], [53800.0, 1.0], [56200.0, 1.0], [57000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 125.0], [34500.0, 1.0], [36100.0, 1.0], [37300.0, 1.0], [36900.0, 2.0], [38500.0, 1.0], [40100.0, 1.0], [39300.0, 1.0], [44900.0, 4.0], [43700.0, 1.0], [46100.0, 3.0], [48100.0, 1.0], [48500.0, 1.0], [48900.0, 1.0], [54900.0, 2.0], [54500.0, 1.0], [56100.0, 1.0], [58900.0, 1.0], [58500.0, 1.0], [60100.0, 11.0], [300.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1500.0, 1.0], [2300.0, 1.0], [3200.0, 1.0], [4200.0, 2.0], [4500.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [4900.0, 1.0], [5100.0, 2.0], [5200.0, 4.0], [5300.0, 2.0], [5600.0, 1.0], [5400.0, 2.0], [5800.0, 3.0], [5700.0, 1.0], [5900.0, 2.0], [6200.0, 3.0], [6300.0, 3.0], [6500.0, 3.0], [6600.0, 1.0], [6900.0, 1.0], [6700.0, 4.0], [6800.0, 1.0], [7100.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [7900.0, 1.0], [7700.0, 2.0], [8100.0, 1.0], [8500.0, 3.0], [8200.0, 1.0], [9100.0, 2.0], [8900.0, 2.0], [9200.0, 3.0], [9000.0, 1.0], [9600.0, 1.0], [9400.0, 1.0], [9300.0, 1.0], [10000.0, 1.0], [9800.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [10900.0, 1.0], [11200.0, 1.0], [11600.0, 1.0], [11700.0, 2.0], [11900.0, 2.0], [12000.0, 1.0], [11800.0, 2.0], [12100.0, 1.0], [12700.0, 2.0], [12600.0, 3.0], [12500.0, 1.0], [12300.0, 1.0], [13000.0, 2.0], [12900.0, 1.0], [13300.0, 1.0], [13200.0, 1.0], [13100.0, 1.0], [13500.0, 3.0], [13400.0, 1.0], [13900.0, 2.0], [14300.0, 2.0], [14200.0, 1.0], [14100.0, 1.0], [14500.0, 1.0], [14800.0, 1.0], [14400.0, 1.0], [14900.0, 2.0], [15300.0, 2.0], [15100.0, 3.0], [15000.0, 1.0], [15200.0, 1.0], [15500.0, 4.0], [15600.0, 1.0], [15800.0, 1.0], [15900.0, 2.0], [16000.0, 2.0], [16100.0, 1.0], [16300.0, 2.0], [17200.0, 2.0], [16600.0, 1.0], [17000.0, 2.0], [16400.0, 1.0], [17600.0, 1.0], [17800.0, 2.0], [18200.0, 1.0], [18600.0, 4.0], [19400.0, 1.0], [19200.0, 2.0], [20400.0, 1.0], [19800.0, 2.0], [19600.0, 1.0], [20600.0, 2.0], [21400.0, 1.0], [21600.0, 4.0], [23400.0, 2.0], [23200.0, 1.0], [22600.0, 2.0], [22800.0, 1.0], [23000.0, 1.0], [24200.0, 1.0], [24400.0, 1.0], [24000.0, 2.0], [25400.0, 1.0], [24600.0, 1.0], [26200.0, 1.0], [26400.0, 1.0], [27600.0, 1.0], [27000.0, 1.0], [27400.0, 1.0], [27800.0, 2.0], [29000.0, 2.0], [29400.0, 1.0], [30000.0, 1.0], [29800.0, 1.0], [31400.0, 2.0], [31000.0, 1.0], [32200.0, 1.0], [31800.0, 4.0], [32000.0, 1.0], [34400.0, 2.0], [36800.0, 1.0], [36000.0, 1.0], [38800.0, 2.0], [37200.0, 1.0], [37600.0, 1.0], [39600.0, 1.0], [40800.0, 1.0], [42000.0, 1.0], [41600.0, 1.0], [44800.0, 2.0], [44400.0, 1.0], [44000.0, 1.0], [45600.0, 1.0], [47200.0, 1.0], [48400.0, 1.0], [52800.0, 1.0], [52400.0, 1.0], [53600.0, 1.0], [54000.0, 1.0], [58000.0, 1.0], [35100.0, 1.0], [36300.0, 1.0], [37900.0, 1.0], [40300.0, 1.0], [39500.0, 2.0], [39900.0, 1.0], [41500.0, 1.0], [44700.0, 1.0], [44300.0, 1.0], [45900.0, 1.0], [45500.0, 1.0], [48300.0, 2.0], [53100.0, 1.0], [55100.0, 1.0], [53500.0, 1.0], [55900.0, 1.0], [56700.0, 1.0], [16900.0, 2.0], [16700.0, 2.0], [17300.0, 1.0], [17900.0, 1.0], [18300.0, 1.0], [17700.0, 1.0], [18500.0, 1.0], [18900.0, 1.0], [18700.0, 2.0], [19300.0, 1.0], [19100.0, 1.0], [20100.0, 3.0], [19700.0, 2.0], [19500.0, 2.0], [19900.0, 2.0], [20900.0, 3.0], [21100.0, 2.0], [20500.0, 1.0], [21300.0, 2.0], [21500.0, 3.0], [20700.0, 1.0], [22100.0, 1.0], [21700.0, 1.0], [22300.0, 1.0], [22900.0, 2.0], [24100.0, 1.0], [24500.0, 1.0], [25300.0, 3.0], [25100.0, 2.0], [25900.0, 2.0], [26300.0, 1.0], [25700.0, 1.0], [26500.0, 1.0], [27500.0, 1.0], [27300.0, 2.0], [26900.0, 1.0], [27700.0, 2.0], [28300.0, 3.0], [27900.0, 1.0], [28100.0, 1.0], [28900.0, 1.0], [29500.0, 1.0], [29100.0, 1.0], [30700.0, 1.0], [30300.0, 1.0], [31100.0, 1.0], [31500.0, 2.0], [32300.0, 1.0], [32500.0, 2.0], [32100.0, 1.0], [31900.0, 1.0], [33800.0, 1.0], [33000.0, 3.0], [36600.0, 1.0], [37000.0, 3.0], [40600.0, 1.0], [39000.0, 1.0], [41000.0, 1.0], [41400.0, 4.0], [42200.0, 1.0], [41800.0, 1.0], [43800.0, 1.0], [45000.0, 1.0], [43400.0, 1.0], [44200.0, 1.0], [49000.0, 1.0], [47400.0, 1.0], [50200.0, 1.0], [53400.0, 1.0], [58600.0, 1.0], [57400.0, 1.0], [59400.0, 1.0], [60200.0, 2.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 9.0], [1200.0, 1.0], [200.0, 501.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 252.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 404.0, "series": [{"data": [[0.0, 404.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 363.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 252.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6851348E12, "maxY": 24.253588516746397, "series": [{"data": [[1.6851351E12, 10.0], [1.6851354E12, 18.2803738317757], [1.6851357E12, 12.619718309859152], [1.68513504E12, 8.1025641025641], [1.68513516E12, 10.01639344262295], [1.68513486E12, 3.59375], [1.68513546E12, 20.0], [1.6851348E12, 1.0], [1.68513558E12, 23.016759776536297], [1.68513492E12, 5.0], [1.68513522E12, 14.812500000000002], [1.68513552E12, 20.06511627906977], [1.68513534E12, 15.076923076923077], [1.68513564E12, 24.253588516746397], [1.68513528E12, 15.0], [1.68513498E12, 5.131578947368421]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6851357E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 235.28571428571428, "minX": 1.0, "maxY": 39806.87499999999, "series": [{"data": [[2.0, 11530.666666666666], [3.0, 17014.0], [4.0, 12271.75], [5.0, 18079.5], [6.0, 18884.666666666664], [7.0, 5698.0], [8.0, 239.0], [9.0, 25944.100000000002], [10.0, 39806.87499999999], [11.0, 244.0], [12.0, 8611.666666666666], [13.0, 9266.5], [14.0, 19141.0], [15.0, 16771.036036036025], [1.0, 6325.5], [16.0, 27690.09090909091], [17.0, 19833.333333333336], [18.0, 15823.333333333334], [19.0, 29766.692307692312], [20.0, 16712.0447761194], [21.0, 11266.476190476193], [22.0, 11793.357142857143], [23.0, 14419.400000000001], [24.0, 7861.5714285714275], [25.0, 22415.02631578947]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.330078125, 19125.09375000001]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 11284.333333333334], [9.0, 25698.899999999998], [10.0, 39550.65625], [12.0, 8366.666666666666], [3.0, 16767.0], [13.0, 9029.5], [14.0, 28358.5], [15.0, 16526.954954954956], [1.0, 6017.5], [4.0, 12037.25], [16.0, 27439.727272727272], [17.0, 19586.77777777778], [18.0, 15567.333333333334], [19.0, 29526.846153846156], [5.0, 17831.42857142857], [20.0, 16466.71641791046], [21.0, 11019.809523809525], [22.0, 12436.153846153848], [23.0, 14173.199999999999], [6.0, 18639.166666666664], [24.0, 8723.5], [25.0, 22169.355263157893], [7.0, 5459.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.34516765285995, 19063.11439842208]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 235.66666666666666], [3.0, 243.0], [4.0, 241.25], [5.0, 248.10714285714286], [6.0, 245.66666666666669], [7.0, 266.0], [8.0, 245.0], [9.0, 260.1111111111111], [10.0, 249.84374999999997], [11.0, 246.0], [12.0, 267.0], [13.0, 254.0], [14.0, 239.33333333333334], [15.0, 242.82882882882885], [1.0, 288.0], [16.0, 252.36363636363635], [17.0, 244.8], [18.0, 242.87500000000003], [19.0, 250.42857142857142], [20.0, 243.87969924812035], [21.0, 246.57142857142858], [22.0, 250.71428571428572], [23.0, 342.3], [24.0, 235.28571428571428], [25.0, 249.6315789473684]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.322265625000018, 248.14257812500017]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6.866666666666666, "minX": 1.6851348E12, "maxY": 10260.05, "series": [{"data": [[1.6851351E12, 807.2166666666667], [1.6851354E12, 2626.516666666667], [1.6851357E12, 1694.35], [1.68513504E12, 1099.1166666666666], [1.68513516E12, 1503.95], [1.68513486E12, 805.5833333333334], [1.68513546E12, 3258.5], [1.6851348E12, 36.28333333333333], [1.68513558E12, 3539.2], [1.68513492E12, 953.9833333333333], [1.68513522E12, 831.9666666666667], [1.68513552E12, 3911.7166666666667], [1.68513534E12, 2311.983333333333], [1.68513564E12, 4778.916666666667], [1.68513528E12, 1960.0333333333333], [1.68513498E12, 843.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6851351E12, 1800.9833333333333], [1.6851354E12, 5224.616666666667], [1.6851357E12, 4077.3333333333335], [1.68513504E12, 1727.9166666666667], [1.68513516E12, 3052.6666666666665], [1.68513486E12, 1671.5166666666667], [1.68513546E12, 7614.566666666667], [1.6851348E12, 6.866666666666666], [1.68513558E12, 9094.816666666668], [1.68513492E12, 1744.65], [1.68513522E12, 2177.75], [1.68513552E12, 10260.05], [1.68513534E12, 6851.716666666666], [1.68513564E12, 9536.166666666666], [1.68513528E12, 6725.966666666666], [1.68513498E12, 1692.1666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6851357E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 240.30769230769232, "minX": 1.6851348E12, "maxY": 43732.8, "series": [{"data": [[1.6851351E12, 35191.63636363636], [1.6851354E12, 22556.470588235294], [1.6851357E12, 11378.359999999999], [1.68513504E12, 28752.0], [1.68513516E12, 43732.8], [1.68513486E12, 12301.2], [1.68513546E12, 19451.83928571429], [1.68513558E12, 12930.666666666668], [1.68513492E12, 18237.75], [1.68513522E12, 36379.64705882353], [1.68513552E12, 13473.056338028171], [1.68513534E12, 15839.960000000003], [1.68513564E12, 22814.89041095891], [1.68513528E12, 14049.020408163266], [1.68513498E12, 19480.066666666666]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6851351E12, 34926.09090909091], [1.6851354E12, 23602.264705882346], [1.6851357E12, 14622.516129032258], [1.68513504E12, 25703.0], [1.68513516E12, 43483.05], [1.68513486E12, 11322.888888888889], [1.68513546E12, 18618.07692307693], [1.68513558E12, 12396.931034482757], [1.68513492E12, 18035.076923076922], [1.68513522E12, 35333.92857142857], [1.68513552E12, 14367.29166666667], [1.68513534E12, 13209.169811320757], [1.68513564E12, 22640.275362318836], [1.68513528E12, 16923.91489361702], [1.68513498E12, 19173.090909090908]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6851351E12, 260.0909090909091], [1.6851354E12, 247.23076923076923], [1.6851357E12, 247.0], [1.68513504E12, 257.3529411764706], [1.68513516E12, 240.90476190476193], [1.68513486E12, 240.30769230769232], [1.68513546E12, 246.03846153846158], [1.6851348E12, 345.0], [1.68513558E12, 261.4426229508198], [1.68513492E12, 254.0], [1.68513522E12, 247.1764705882353], [1.68513552E12, 243.20833333333337], [1.68513534E12, 242.24528301886798], [1.68513564E12, 249.73134328358213], [1.68513528E12, 242.9791666666666], [1.68513498E12, 245.58333333333331]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6851357E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 239.84615384615384, "minX": 1.6851348E12, "maxY": 43732.24999999999, "series": [{"data": [[1.6851351E12, 35190.454545454544], [1.6851354E12, 22556.058823529413], [1.6851357E12, 11376.64], [1.68513504E12, 28750.55555555555], [1.68513516E12, 43732.24999999999], [1.68513486E12, 12299.800000000001], [1.68513546E12, 19451.23214285715], [1.68513558E12, 12930.2], [1.68513492E12, 18237.166666666664], [1.68513522E12, 36379.117647058825], [1.68513552E12, 13472.732394366198], [1.68513534E12, 15839.619999999999], [1.68513564E12, 22814.000000000004], [1.68513528E12, 14048.44897959184], [1.68513498E12, 19479.73333333333]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6851351E12, 34925.90909090909], [1.6851354E12, 23602.08823529412], [1.6851357E12, 14621.967741935483], [1.68513504E12, 25702.153846153848], [1.68513516E12, 43482.70000000001], [1.68513486E12, 11322.666666666668], [1.68513546E12, 18617.71153846154], [1.68513558E12, 12396.827586206897], [1.68513492E12, 18034.769230769234], [1.68513522E12, 35333.571428571435], [1.68513552E12, 14367.166666666672], [1.68513534E12, 13209.018867924526], [1.68513564E12, 22639.753623188404], [1.68513528E12, 16923.63829787234], [1.68513498E12, 19173.000000000004]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6851351E12, 259.8181818181818], [1.6851354E12, 247.0], [1.6851357E12, 244.93333333333334], [1.68513504E12, 256.7058823529412], [1.68513516E12, 240.7619047619048], [1.68513486E12, 239.84615384615384], [1.68513546E12, 245.73076923076923], [1.6851348E12, 337.0], [1.68513558E12, 261.0819672131148], [1.68513492E12, 253.92307692307696], [1.68513522E12, 246.64705882352942], [1.68513552E12, 243.0], [1.68513534E12, 242.03773584905656], [1.68513564E12, 249.44776119402982], [1.68513528E12, 242.81250000000003], [1.68513498E12, 245.08333333333334]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6851357E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6851348E12, "maxY": 195.0, "series": [{"data": [[1.6851351E12, 118.18181818181817], [1.6851354E12, 119.38235294117648], [1.6851357E12, 118.08], [1.68513504E12, 117.44444444444444], [1.68513516E12, 117.74999999999999], [1.68513486E12, 124.2], [1.68513546E12, 116.3035714285714], [1.68513558E12, 117.58333333333333], [1.68513492E12, 122.5], [1.68513522E12, 119.41176470588235], [1.68513552E12, 117.49295774647887], [1.68513534E12, 116.3], [1.68513564E12, 117.34246575342463], [1.68513528E12, 118.26530612244898], [1.68513498E12, 117.33333333333334]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6851351E12, 0.0], [1.6851354E12, 0.0], [1.6851357E12, 0.0], [1.68513504E12, 0.0], [1.68513516E12, 0.0], [1.68513486E12, 0.0], [1.68513546E12, 0.0], [1.68513558E12, 0.0], [1.68513492E12, 0.0], [1.68513522E12, 0.0], [1.68513552E12, 0.0], [1.68513534E12, 0.0], [1.68513564E12, 0.0], [1.68513528E12, 0.0], [1.68513498E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6851351E12, 119.0909090909091], [1.6851354E12, 118.97435897435898], [1.6851357E12, 116.33333333333334], [1.68513504E12, 117.6470588235294], [1.68513516E12, 118.76190476190476], [1.68513486E12, 117.07692307692307], [1.68513546E12, 117.44230769230768], [1.6851348E12, 195.0], [1.68513558E12, 118.03278688524591], [1.68513492E12, 121.00000000000001], [1.68513522E12, 116.64705882352942], [1.68513552E12, 116.7638888888889], [1.68513534E12, 116.09433962264153], [1.68513564E12, 117.49253731343286], [1.68513528E12, 118.52083333333339], [1.68513498E12, 118.41666666666666]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6851357E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.6851348E12, "maxY": 59415.0, "series": [{"data": [[1.6851351E12, 42035.0], [1.6851354E12, 42265.0], [1.6851357E12, 33086.0], [1.68513504E12, 32536.0], [1.68513516E12, 46117.0], [1.68513486E12, 18551.0], [1.68513546E12, 38592.0], [1.6851348E12, 345.0], [1.68513558E12, 41890.0], [1.68513492E12, 22126.0], [1.68513522E12, 58050.0], [1.68513552E12, 40862.0], [1.68513534E12, 55145.0], [1.68513564E12, 58575.0], [1.68513528E12, 59415.0], [1.68513498E12, 21675.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6851351E12, 40582.799999999996], [1.6851354E12, 38466.99999999999], [1.6851357E12, 22747.600000000002], [1.68513504E12, 32168.7], [1.68513516E12, 44955.4], [1.68513486E12, 15049.699999999997], [1.68513546E12, 29922.0], [1.6851348E12, 345.0], [1.68513558E12, 15848.6], [1.68513492E12, 21025.4], [1.68513522E12, 56164.0], [1.68513552E12, 31961.100000000002], [1.68513534E12, 48431.0], [1.68513564E12, 29188.100000000002], [1.68513528E12, 56432.399999999994], [1.68513498E12, 21604.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6851351E12, 42035.0], [1.6851354E12, 42265.0], [1.6851357E12, 33086.0], [1.68513504E12, 32536.0], [1.68513516E12, 46117.0], [1.68513486E12, 18551.0], [1.68513546E12, 38592.0], [1.6851348E12, 345.0], [1.68513558E12, 41890.0], [1.68513492E12, 22126.0], [1.68513522E12, 58050.0], [1.68513552E12, 40862.0], [1.68513534E12, 55145.0], [1.68513564E12, 58251.35999999999], [1.68513528E12, 59415.0], [1.68513498E12, 21675.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6851351E12, 41880.35], [1.6851354E12, 40981.799999999996], [1.6851357E12, 26199.049999999996], [1.68513504E12, 32421.6], [1.68513516E12, 46004.4], [1.68513486E12, 18156.349999999995], [1.68513546E12, 33435.249999999985], [1.6851348E12, 345.0], [1.68513558E12, 29716.599999999973], [1.68513492E12, 21799.1], [1.68513522E12, 58050.0], [1.68513552E12, 34421.15000000001], [1.68513534E12, 53231.25], [1.68513564E12, 41628.14999999998], [1.68513528E12, 59034.2], [1.68513498E12, 21666.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6851351E12, 230.0], [1.6851354E12, 227.0], [1.6851357E12, 224.0], [1.68513504E12, 234.0], [1.68513516E12, 228.0], [1.68513486E12, 231.0], [1.68513546E12, 227.0], [1.6851348E12, 345.0], [1.68513558E12, 228.0], [1.68513492E12, 232.0], [1.68513522E12, 231.0], [1.68513552E12, 227.0], [1.68513534E12, 226.0], [1.68513564E12, 229.0], [1.68513528E12, 233.0], [1.68513498E12, 233.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6851351E12, 7826.0], [1.6851354E12, 288.0], [1.6851357E12, 9029.5], [1.68513504E12, 279.5], [1.68513516E12, 296.0], [1.68513486E12, 249.5], [1.68513546E12, 7191.5], [1.6851348E12, 345.0], [1.68513558E12, 269.0], [1.68513492E12, 6122.0], [1.68513522E12, 278.0], [1.68513552E12, 293.0], [1.68513534E12, 274.0], [1.68513564E12, 274.0], [1.68513528E12, 267.0], [1.68513498E12, 280.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6851357E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 121.0, "minX": 1.0, "maxY": 21598.0, "series": [{"data": [[2.0, 270.0], [8.0, 6500.0], [9.0, 13523.0], [10.0, 8155.5], [11.0, 21598.0], [3.0, 287.0], [12.0, 264.0], [13.0, 6343.0], [1.0, 257.0], [4.0, 279.5], [16.0, 17423.0], [5.0, 5707.5], [6.0, 288.5], [7.0, 9755.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 224.0], [4.0, 124.5], [2.0, 224.0], [8.0, 227.0], [9.0, 238.0], [5.0, 225.0], [11.0, 226.0], [3.0, 121.0], [6.0, 176.0], [12.0, 1229.0], [13.0, 234.0], [7.0, 227.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 121.0, "minX": 1.0, "maxY": 21597.0, "series": [{"data": [[2.0, 269.0], [8.0, 6499.0], [9.0, 13523.0], [10.0, 8155.5], [11.0, 21597.0], [3.0, 286.0], [12.0, 264.0], [13.0, 6343.0], [1.0, 257.0], [4.0, 279.5], [16.0, 17423.0], [5.0, 5707.0], [6.0, 288.5], [7.0, 9755.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 224.0], [4.0, 124.0], [2.0, 224.0], [8.0, 227.0], [9.0, 238.0], [5.0, 225.0], [11.0, 226.0], [3.0, 121.0], [6.0, 176.0], [12.0, 1229.0], [13.0, 234.0], [7.0, 226.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851348E12, "maxY": 2.3333333333333335, "series": [{"data": [[1.6851351E12, 0.36666666666666664], [1.6851354E12, 1.3333333333333333], [1.6851357E12, 0.5166666666666667], [1.68513504E12, 0.5833333333333334], [1.68513516E12, 0.5833333333333334], [1.68513486E12, 0.4166666666666667], [1.68513546E12, 1.7166666666666666], [1.6851348E12, 0.016666666666666666], [1.68513558E12, 2.1], [1.68513492E12, 0.4666666666666667], [1.68513522E12, 0.6166666666666667], [1.68513552E12, 2.3333333333333335], [1.68513534E12, 1.8166666666666667], [1.68513564E12, 2.1666666666666665], [1.68513528E12, 1.5666666666666667], [1.68513498E12, 0.38333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6851357E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851348E12, "maxY": 2.1333333333333333, "series": [{"data": [[1.6851351E12, 0.36666666666666664], [1.6851354E12, 1.1833333333333333], [1.6851357E12, 0.7666666666666667], [1.68513504E12, 0.5], [1.68513516E12, 0.6833333333333333], [1.68513486E12, 0.36666666666666664], [1.68513546E12, 1.3666666666666667], [1.6851348E12, 0.016666666666666666], [1.68513558E12, 1.45], [1.68513492E12, 0.43333333333333335], [1.68513522E12, 0.31666666666666665], [1.68513552E12, 1.5], [1.68513534E12, 0.7333333333333333], [1.68513564E12, 2.1333333333333333], [1.68513528E12, 0.5833333333333334], [1.68513498E12, 0.38333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68513558E12, 0.05], [1.68513564E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68513558E12, 0.4166666666666667], [1.6851354E12, 0.03333333333333333], [1.68513522E12, 0.18333333333333332], [1.68513552E12, 0.9], [1.68513534E12, 1.0333333333333334], [1.68513546E12, 0.36666666666666664], [1.68513528E12, 0.9666666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68513558E12, 0.06666666666666667], [1.68513522E12, 0.016666666666666666], [1.68513564E12, 0.1], [1.68513528E12, 0.03333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6851357E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851348E12, "maxY": 1.1166666666666667, "series": [{"data": [[1.6851351E12, 0.18333333333333332], [1.6851354E12, 0.6166666666666667], [1.6851357E12, 0.25], [1.68513504E12, 0.2833333333333333], [1.68513516E12, 0.35], [1.68513486E12, 0.21666666666666667], [1.68513546E12, 0.6666666666666666], [1.6851348E12, 0.016666666666666666], [1.68513558E12, 0.8333333333333334], [1.68513492E12, 0.21666666666666667], [1.68513522E12, 0.18333333333333332], [1.68513552E12, 0.7833333333333333], [1.68513534E12, 0.45], [1.68513564E12, 1.1166666666666667], [1.68513528E12, 0.36666666666666664], [1.68513498E12, 0.2]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68513558E12, 0.18333333333333332], [1.6851354E12, 0.03333333333333333], [1.68513522E12, 0.1], [1.68513552E12, 0.4166666666666667], [1.68513534E12, 0.43333333333333335], [1.68513546E12, 0.2], [1.68513528E12, 0.43333333333333335]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68513558E12, 0.35], [1.68513522E12, 0.1], [1.68513552E12, 0.48333333333333334], [1.68513534E12, 0.6], [1.68513564E12, 0.13333333333333333], [1.68513546E12, 0.16666666666666666], [1.68513528E12, 0.5666666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6851351E12, 0.18333333333333332], [1.6851354E12, 0.4166666666666667], [1.6851357E12, 0.4166666666666667], [1.68513504E12, 0.15], [1.68513516E12, 0.3333333333333333], [1.68513486E12, 0.16666666666666666], [1.68513546E12, 0.7], [1.68513558E12, 0.5], [1.68513492E12, 0.2], [1.68513522E12, 0.15], [1.68513552E12, 0.38333333333333336], [1.68513534E12, 0.1], [1.68513564E12, 1.1], [1.68513528E12, 0.1], [1.68513498E12, 0.25]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68513558E12, 0.5], [1.6851354E12, 0.15], [1.68513522E12, 0.13333333333333333], [1.68513552E12, 0.8], [1.68513534E12, 0.7333333333333333], [1.68513564E12, 0.11666666666666667], [1.68513546E12, 0.23333333333333334], [1.68513528E12, 0.7166666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6851351E12, 0.18333333333333332], [1.6851354E12, 0.5666666666666667], [1.6851357E12, 0.5166666666666667], [1.68513504E12, 0.21666666666666667], [1.68513516E12, 0.3333333333333333], [1.68513486E12, 0.15], [1.68513546E12, 0.7], [1.68513558E12, 0.6166666666666667], [1.68513492E12, 0.21666666666666667], [1.68513522E12, 0.13333333333333333], [1.68513552E12, 0.7166666666666667], [1.68513534E12, 0.2833333333333333], [1.68513564E12, 1.0166666666666666], [1.68513528E12, 0.21666666666666667], [1.68513498E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6851357E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851348E12, "maxY": 3.2333333333333334, "series": [{"data": [[1.6851351E12, 0.55], [1.6851354E12, 1.6], [1.6851357E12, 1.1833333333333333], [1.68513504E12, 0.65], [1.68513516E12, 1.0166666666666666], [1.68513486E12, 0.5333333333333333], [1.68513546E12, 2.066666666666667], [1.6851348E12, 0.016666666666666666], [1.68513558E12, 1.95], [1.68513492E12, 0.6333333333333333], [1.68513522E12, 0.4666666666666667], [1.68513552E12, 1.8833333333333333], [1.68513534E12, 0.8333333333333334], [1.68513564E12, 3.2333333333333334], [1.68513528E12, 0.6833333333333333], [1.68513498E12, 0.6333333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68513558E12, 1.0333333333333334], [1.6851354E12, 0.18333333333333332], [1.68513522E12, 0.3333333333333333], [1.68513552E12, 1.7], [1.68513534E12, 1.7666666666666666], [1.68513564E12, 0.25], [1.68513546E12, 0.6], [1.68513528E12, 1.7166666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6851357E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

