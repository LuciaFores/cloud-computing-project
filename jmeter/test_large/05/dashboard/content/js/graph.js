/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "maxY": 60556.0, "series": [{"data": [[0.0, 230.0], [0.1, 230.0], [0.2, 230.0], [0.3, 230.0], [0.4, 230.0], [0.5, 231.0], [0.6, 231.0], [0.7, 255.0], [0.8, 255.0], [0.9, 280.0], [1.0, 280.0], [1.1, 341.0], [1.2, 341.0], [1.3, 341.0], [1.4, 341.0], [1.5, 341.0], [1.6, 341.0], [1.7, 343.0], [1.8, 343.0], [1.9, 344.0], [2.0, 344.0], [2.1, 344.0], [2.2, 344.0], [2.3, 345.0], [2.4, 345.0], [2.5, 345.0], [2.6, 345.0], [2.7, 345.0], [2.8, 345.0], [2.9, 345.0], [3.0, 345.0], [3.1, 345.0], [3.2, 345.0], [3.3, 345.0], [3.4, 345.0], [3.5, 346.0], [3.6, 346.0], [3.7, 346.0], [3.8, 346.0], [3.9, 346.0], [4.0, 346.0], [4.1, 346.0], [4.2, 346.0], [4.3, 346.0], [4.4, 346.0], [4.5, 346.0], [4.6, 346.0], [4.7, 346.0], [4.8, 346.0], [4.9, 347.0], [5.0, 347.0], [5.1, 347.0], [5.2, 347.0], [5.3, 347.0], [5.4, 347.0], [5.5, 348.0], [5.6, 348.0], [5.7, 348.0], [5.8, 348.0], [5.9, 349.0], [6.0, 349.0], [6.1, 349.0], [6.2, 349.0], [6.3, 349.0], [6.4, 349.0], [6.5, 350.0], [6.6, 350.0], [6.7, 350.0], [6.8, 350.0], [6.9, 351.0], [7.0, 351.0], [7.1, 351.0], [7.2, 351.0], [7.3, 351.0], [7.4, 351.0], [7.5, 351.0], [7.6, 351.0], [7.7, 352.0], [7.8, 352.0], [7.9, 353.0], [8.0, 353.0], [8.1, 354.0], [8.2, 354.0], [8.3, 355.0], [8.4, 355.0], [8.5, 355.0], [8.6, 356.0], [8.7, 356.0], [8.8, 356.0], [8.9, 356.0], [9.0, 356.0], [9.1, 356.0], [9.2, 356.0], [9.3, 356.0], [9.4, 357.0], [9.5, 357.0], [9.6, 357.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 358.0], [10.3, 358.0], [10.4, 358.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 359.0], [10.9, 359.0], [11.0, 359.0], [11.1, 359.0], [11.2, 360.0], [11.3, 360.0], [11.4, 360.0], [11.5, 360.0], [11.6, 360.0], [11.7, 360.0], [11.8, 360.0], [11.9, 360.0], [12.0, 360.0], [12.1, 360.0], [12.2, 360.0], [12.3, 360.0], [12.4, 360.0], [12.5, 360.0], [12.6, 361.0], [12.7, 361.0], [12.8, 361.0], [12.9, 361.0], [13.0, 361.0], [13.1, 361.0], [13.2, 361.0], [13.3, 361.0], [13.4, 361.0], [13.5, 361.0], [13.6, 362.0], [13.7, 362.0], [13.8, 362.0], [13.9, 362.0], [14.0, 362.0], [14.1, 362.0], [14.2, 362.0], [14.3, 362.0], [14.4, 363.0], [14.5, 363.0], [14.6, 363.0], [14.7, 363.0], [14.8, 363.0], [14.9, 363.0], [15.0, 363.0], [15.1, 363.0], [15.2, 363.0], [15.3, 363.0], [15.4, 363.0], [15.5, 363.0], [15.6, 363.0], [15.7, 363.0], [15.8, 364.0], [15.9, 364.0], [16.0, 364.0], [16.1, 364.0], [16.2, 364.0], [16.3, 364.0], [16.4, 365.0], [16.5, 365.0], [16.6, 365.0], [16.7, 365.0], [16.8, 365.0], [16.9, 366.0], [17.0, 366.0], [17.1, 366.0], [17.2, 366.0], [17.3, 366.0], [17.4, 366.0], [17.5, 366.0], [17.6, 366.0], [17.7, 366.0], [17.8, 366.0], [17.9, 367.0], [18.0, 367.0], [18.1, 367.0], [18.2, 367.0], [18.3, 368.0], [18.4, 368.0], [18.5, 369.0], [18.6, 369.0], [18.7, 370.0], [18.8, 370.0], [18.9, 370.0], [19.0, 370.0], [19.1, 372.0], [19.2, 372.0], [19.3, 374.0], [19.4, 374.0], [19.5, 375.0], [19.6, 375.0], [19.7, 377.0], [19.8, 377.0], [19.9, 377.0], [20.0, 377.0], [20.1, 378.0], [20.2, 378.0], [20.3, 378.0], [20.4, 378.0], [20.5, 379.0], [20.6, 379.0], [20.7, 380.0], [20.8, 380.0], [20.9, 380.0], [21.0, 380.0], [21.1, 383.0], [21.2, 383.0], [21.3, 384.0], [21.4, 384.0], [21.5, 386.0], [21.6, 386.0], [21.7, 387.0], [21.8, 387.0], [21.9, 387.0], [22.0, 387.0], [22.1, 387.0], [22.2, 387.0], [22.3, 390.0], [22.4, 390.0], [22.5, 391.0], [22.6, 391.0], [22.7, 399.0], [22.8, 399.0], [22.9, 400.0], [23.0, 400.0], [23.1, 402.0], [23.2, 402.0], [23.3, 408.0], [23.4, 408.0], [23.5, 409.0], [23.6, 409.0], [23.7, 414.0], [23.8, 414.0], [23.9, 414.0], [24.0, 414.0], [24.1, 415.0], [24.2, 415.0], [24.3, 418.0], [24.4, 418.0], [24.5, 420.0], [24.6, 420.0], [24.7, 1104.0], [24.8, 1104.0], [24.9, 1116.0], [25.0, 1116.0], [25.1, 1116.0], [25.2, 1170.0], [25.3, 1170.0], [25.4, 1224.0], [25.5, 1224.0], [25.6, 1232.0], [25.7, 1232.0], [25.8, 1295.0], [25.9, 1295.0], [26.0, 1336.0], [26.1, 1336.0], [26.2, 1336.0], [26.3, 1336.0], [26.4, 1342.0], [26.5, 1342.0], [26.6, 1379.0], [26.7, 1379.0], [26.8, 1384.0], [26.9, 1384.0], [27.0, 1556.0], [27.1, 1556.0], [27.2, 2519.0], [27.3, 2519.0], [27.4, 2827.0], [27.5, 2827.0], [27.6, 3798.0], [27.7, 3798.0], [27.8, 4232.0], [27.9, 4232.0], [28.0, 4626.0], [28.1, 4626.0], [28.2, 4737.0], [28.3, 4737.0], [28.4, 4991.0], [28.5, 4991.0], [28.6, 5157.0], [28.7, 5157.0], [28.8, 5239.0], [28.9, 5239.0], [29.0, 5271.0], [29.1, 5271.0], [29.2, 5286.0], [29.3, 5286.0], [29.4, 5289.0], [29.5, 5289.0], [29.6, 5368.0], [29.7, 5368.0], [29.8, 5398.0], [29.9, 5398.0], [30.0, 5418.0], [30.1, 5418.0], [30.2, 5422.0], [30.3, 5422.0], [30.4, 5429.0], [30.5, 5429.0], [30.6, 5466.0], [30.7, 5466.0], [30.8, 5531.0], [30.9, 5531.0], [31.0, 5544.0], [31.1, 5544.0], [31.2, 5556.0], [31.3, 5556.0], [31.4, 5590.0], [31.5, 5590.0], [31.6, 5605.0], [31.7, 5605.0], [31.8, 5639.0], [31.9, 5639.0], [32.0, 5740.0], [32.1, 5740.0], [32.2, 5828.0], [32.3, 5828.0], [32.4, 6075.0], [32.5, 6075.0], [32.6, 6082.0], [32.7, 6082.0], [32.8, 6140.0], [32.9, 6140.0], [33.0, 6392.0], [33.1, 6392.0], [33.2, 6397.0], [33.3, 6397.0], [33.4, 6397.0], [33.5, 6467.0], [33.6, 6467.0], [33.7, 6591.0], [33.8, 6591.0], [33.9, 6660.0], [34.0, 6660.0], [34.1, 6662.0], [34.2, 6662.0], [34.3, 6726.0], [34.4, 6726.0], [34.5, 6759.0], [34.6, 6759.0], [34.7, 6832.0], [34.8, 6832.0], [34.9, 7253.0], [35.0, 7253.0], [35.1, 7503.0], [35.2, 7503.0], [35.3, 7862.0], [35.4, 7862.0], [35.5, 8141.0], [35.6, 8141.0], [35.7, 8167.0], [35.8, 8167.0], [35.9, 8262.0], [36.0, 8262.0], [36.1, 8346.0], [36.2, 8346.0], [36.3, 8535.0], [36.4, 8535.0], [36.5, 8536.0], [36.6, 8536.0], [36.7, 8841.0], [36.8, 8841.0], [36.9, 8867.0], [37.0, 8867.0], [37.1, 8895.0], [37.2, 8895.0], [37.3, 8917.0], [37.4, 8917.0], [37.5, 9063.0], [37.6, 9063.0], [37.7, 9147.0], [37.8, 9147.0], [37.9, 9153.0], [38.0, 9153.0], [38.1, 9219.0], [38.2, 9219.0], [38.3, 9223.0], [38.4, 9223.0], [38.5, 9253.0], [38.6, 9253.0], [38.7, 9291.0], [38.8, 9291.0], [38.9, 9494.0], [39.0, 9494.0], [39.1, 9601.0], [39.2, 9601.0], [39.3, 9628.0], [39.4, 9628.0], [39.5, 9799.0], [39.6, 9799.0], [39.7, 9925.0], [39.8, 9925.0], [39.9, 10029.0], [40.0, 10029.0], [40.1, 10402.0], [40.2, 10402.0], [40.3, 10499.0], [40.4, 10499.0], [40.5, 10513.0], [40.6, 10513.0], [40.7, 10663.0], [40.8, 10663.0], [40.9, 10793.0], [41.0, 10793.0], [41.1, 10922.0], [41.2, 10922.0], [41.3, 10961.0], [41.4, 10961.0], [41.5, 10965.0], [41.6, 10965.0], [41.7, 10965.0], [41.8, 10988.0], [41.9, 10988.0], [42.0, 11462.0], [42.1, 11462.0], [42.2, 11608.0], [42.3, 11608.0], [42.4, 11684.0], [42.5, 11684.0], [42.6, 11702.0], [42.7, 11702.0], [42.8, 11753.0], [42.9, 11753.0], [43.0, 11874.0], [43.1, 11874.0], [43.2, 11925.0], [43.3, 11925.0], [43.4, 12206.0], [43.5, 12206.0], [43.6, 12247.0], [43.7, 12247.0], [43.8, 12370.0], [43.9, 12370.0], [44.0, 12457.0], [44.1, 12457.0], [44.2, 12733.0], [44.3, 12733.0], [44.4, 12804.0], [44.5, 12804.0], [44.6, 12924.0], [44.7, 12924.0], [44.8, 13156.0], [44.9, 13156.0], [45.0, 13161.0], [45.1, 13161.0], [45.2, 13215.0], [45.3, 13215.0], [45.4, 13243.0], [45.5, 13243.0], [45.6, 13355.0], [45.7, 13355.0], [45.8, 13658.0], [45.9, 13658.0], [46.0, 13691.0], [46.1, 13691.0], [46.2, 13759.0], [46.3, 13759.0], [46.4, 13763.0], [46.5, 13763.0], [46.6, 13828.0], [46.7, 13828.0], [46.8, 13850.0], [46.9, 13850.0], [47.0, 13885.0], [47.1, 13885.0], [47.2, 14029.0], [47.3, 14029.0], [47.4, 14045.0], [47.5, 14045.0], [47.6, 14125.0], [47.7, 14125.0], [47.8, 14135.0], [47.9, 14135.0], [48.0, 14188.0], [48.1, 14188.0], [48.2, 14679.0], [48.3, 14679.0], [48.4, 14804.0], [48.5, 14804.0], [48.6, 14906.0], [48.7, 14906.0], [48.8, 15081.0], [48.9, 15081.0], [49.0, 15112.0], [49.1, 15112.0], [49.2, 15179.0], [49.3, 15179.0], [49.4, 15278.0], [49.5, 15278.0], [49.6, 15441.0], [49.7, 15441.0], [49.8, 15891.0], [49.9, 15891.0], [50.0, 15891.0], [50.1, 15910.0], [50.2, 15910.0], [50.3, 15926.0], [50.4, 15926.0], [50.5, 16000.0], [50.6, 16000.0], [50.7, 16176.0], [50.8, 16176.0], [50.9, 16216.0], [51.0, 16216.0], [51.1, 16317.0], [51.2, 16317.0], [51.3, 16467.0], [51.4, 16467.0], [51.5, 16494.0], [51.6, 16494.0], [51.7, 16542.0], [51.8, 16542.0], [51.9, 16907.0], [52.0, 16907.0], [52.1, 17020.0], [52.2, 17020.0], [52.3, 17153.0], [52.4, 17153.0], [52.5, 17624.0], [52.6, 17624.0], [52.7, 17954.0], [52.8, 17954.0], [52.9, 18010.0], [53.0, 18010.0], [53.1, 18121.0], [53.2, 18121.0], [53.3, 18125.0], [53.4, 18125.0], [53.5, 18254.0], [53.6, 18254.0], [53.7, 18300.0], [53.8, 18300.0], [53.9, 18387.0], [54.0, 18387.0], [54.1, 18425.0], [54.2, 18425.0], [54.3, 18661.0], [54.4, 18661.0], [54.5, 18915.0], [54.6, 18915.0], [54.7, 19033.0], [54.8, 19033.0], [54.9, 19099.0], [55.0, 19099.0], [55.1, 19151.0], [55.2, 19151.0], [55.3, 19392.0], [55.4, 19392.0], [55.5, 19405.0], [55.6, 19405.0], [55.7, 19538.0], [55.8, 19538.0], [55.9, 19554.0], [56.0, 19554.0], [56.1, 19766.0], [56.2, 19766.0], [56.3, 19902.0], [56.4, 19902.0], [56.5, 19972.0], [56.6, 19972.0], [56.7, 20161.0], [56.8, 20161.0], [56.9, 20409.0], [57.0, 20409.0], [57.1, 20464.0], [57.2, 20464.0], [57.3, 20465.0], [57.4, 20465.0], [57.5, 20848.0], [57.6, 20848.0], [57.7, 20854.0], [57.8, 20854.0], [57.9, 21298.0], [58.0, 21298.0], [58.1, 21347.0], [58.2, 21347.0], [58.3, 21439.0], [58.4, 21439.0], [58.5, 21439.0], [58.6, 21529.0], [58.7, 21529.0], [58.8, 21580.0], [58.9, 21580.0], [59.0, 21716.0], [59.1, 21716.0], [59.2, 21777.0], [59.3, 21777.0], [59.4, 21837.0], [59.5, 21837.0], [59.6, 21978.0], [59.7, 21978.0], [59.8, 21979.0], [59.9, 21979.0], [60.0, 22024.0], [60.1, 22024.0], [60.2, 22071.0], [60.3, 22071.0], [60.4, 22119.0], [60.5, 22119.0], [60.6, 22298.0], [60.7, 22298.0], [60.8, 22354.0], [60.9, 22354.0], [61.0, 22397.0], [61.1, 22397.0], [61.2, 22631.0], [61.3, 22631.0], [61.4, 22792.0], [61.5, 22792.0], [61.6, 22832.0], [61.7, 22832.0], [61.8, 22877.0], [61.9, 22877.0], [62.0, 23074.0], [62.1, 23074.0], [62.2, 23221.0], [62.3, 23221.0], [62.4, 23235.0], [62.5, 23235.0], [62.6, 23352.0], [62.7, 23352.0], [62.8, 23515.0], [62.9, 23515.0], [63.0, 23699.0], [63.1, 23699.0], [63.2, 23809.0], [63.3, 23809.0], [63.4, 23820.0], [63.5, 23820.0], [63.6, 23977.0], [63.7, 23977.0], [63.8, 23998.0], [63.9, 23998.0], [64.0, 24065.0], [64.1, 24065.0], [64.2, 24282.0], [64.3, 24282.0], [64.4, 24485.0], [64.5, 24485.0], [64.6, 24589.0], [64.7, 24589.0], [64.8, 24830.0], [64.9, 24830.0], [65.0, 25022.0], [65.1, 25022.0], [65.2, 25078.0], [65.3, 25078.0], [65.4, 25105.0], [65.5, 25105.0], [65.6, 25307.0], [65.7, 25307.0], [65.8, 25857.0], [65.9, 25857.0], [66.0, 25878.0], [66.1, 25878.0], [66.2, 26175.0], [66.3, 26175.0], [66.4, 26205.0], [66.5, 26205.0], [66.6, 27413.0], [66.7, 27413.0], [66.8, 27413.0], [66.9, 27606.0], [67.0, 27606.0], [67.1, 27645.0], [67.2, 27645.0], [67.3, 27696.0], [67.4, 27696.0], [67.5, 27941.0], [67.6, 27941.0], [67.7, 28003.0], [67.8, 28003.0], [67.9, 28125.0], [68.0, 28125.0], [68.1, 28125.0], [68.2, 28125.0], [68.3, 28548.0], [68.4, 28548.0], [68.5, 28600.0], [68.6, 28600.0], [68.7, 29014.0], [68.8, 29014.0], [68.9, 29372.0], [69.0, 29372.0], [69.1, 29520.0], [69.2, 29520.0], [69.3, 29541.0], [69.4, 29541.0], [69.5, 29571.0], [69.6, 29571.0], [69.7, 29597.0], [69.8, 29597.0], [69.9, 29610.0], [70.0, 29610.0], [70.1, 29777.0], [70.2, 29777.0], [70.3, 29782.0], [70.4, 29782.0], [70.5, 29986.0], [70.6, 29986.0], [70.7, 30041.0], [70.8, 30041.0], [70.9, 30056.0], [71.0, 30056.0], [71.1, 30199.0], [71.2, 30199.0], [71.3, 30211.0], [71.4, 30211.0], [71.5, 30340.0], [71.6, 30340.0], [71.7, 30699.0], [71.8, 30699.0], [71.9, 30718.0], [72.0, 30718.0], [72.1, 30794.0], [72.2, 30794.0], [72.3, 31221.0], [72.4, 31221.0], [72.5, 31272.0], [72.6, 31272.0], [72.7, 31381.0], [72.8, 31381.0], [72.9, 31404.0], [73.0, 31404.0], [73.1, 31546.0], [73.2, 31546.0], [73.3, 31782.0], [73.4, 31782.0], [73.5, 31908.0], [73.6, 31908.0], [73.7, 31934.0], [73.8, 31934.0], [73.9, 32156.0], [74.0, 32156.0], [74.1, 32500.0], [74.2, 32500.0], [74.3, 32885.0], [74.4, 32885.0], [74.5, 33106.0], [74.6, 33106.0], [74.7, 33290.0], [74.8, 33290.0], [74.9, 33313.0], [75.0, 33313.0], [75.1, 33313.0], [75.2, 33347.0], [75.3, 33347.0], [75.4, 33471.0], [75.5, 33471.0], [75.6, 33530.0], [75.7, 33530.0], [75.8, 34013.0], [75.9, 34013.0], [76.0, 34216.0], [76.1, 34216.0], [76.2, 34234.0], [76.3, 34234.0], [76.4, 34500.0], [76.5, 34500.0], [76.6, 34558.0], [76.7, 34558.0], [76.8, 34598.0], [76.9, 34598.0], [77.0, 34732.0], [77.1, 34732.0], [77.2, 35103.0], [77.3, 35103.0], [77.4, 35154.0], [77.5, 35154.0], [77.6, 35313.0], [77.7, 35313.0], [77.8, 35452.0], [77.9, 35452.0], [78.0, 35531.0], [78.1, 35531.0], [78.2, 35682.0], [78.3, 35682.0], [78.4, 35890.0], [78.5, 35890.0], [78.6, 36054.0], [78.7, 36054.0], [78.8, 36098.0], [78.9, 36098.0], [79.0, 36480.0], [79.1, 36480.0], [79.2, 36547.0], [79.3, 36547.0], [79.4, 36780.0], [79.5, 36780.0], [79.6, 36935.0], [79.7, 36935.0], [79.8, 37234.0], [79.9, 37234.0], [80.0, 37347.0], [80.1, 37347.0], [80.2, 37351.0], [80.3, 37351.0], [80.4, 37418.0], [80.5, 37418.0], [80.6, 37492.0], [80.7, 37492.0], [80.8, 37790.0], [80.9, 37790.0], [81.0, 37901.0], [81.1, 37901.0], [81.2, 37913.0], [81.3, 37913.0], [81.4, 37919.0], [81.5, 37919.0], [81.6, 38095.0], [81.7, 38095.0], [81.8, 38131.0], [81.9, 38131.0], [82.0, 38240.0], [82.1, 38240.0], [82.2, 38265.0], [82.3, 38265.0], [82.4, 38423.0], [82.5, 38423.0], [82.6, 38429.0], [82.7, 38429.0], [82.8, 38434.0], [82.9, 38434.0], [83.0, 39108.0], [83.1, 39108.0], [83.2, 39915.0], [83.3, 39915.0], [83.4, 39915.0], [83.5, 40097.0], [83.6, 40097.0], [83.7, 40102.0], [83.8, 40102.0], [83.9, 40251.0], [84.0, 40251.0], [84.1, 40343.0], [84.2, 40343.0], [84.3, 40735.0], [84.4, 40735.0], [84.5, 40898.0], [84.6, 40898.0], [84.7, 41489.0], [84.8, 41489.0], [84.9, 41846.0], [85.0, 41846.0], [85.1, 42073.0], [85.2, 42073.0], [85.3, 42111.0], [85.4, 42111.0], [85.5, 42148.0], [85.6, 42148.0], [85.7, 42567.0], [85.8, 42567.0], [85.9, 42950.0], [86.0, 42950.0], [86.1, 43236.0], [86.2, 43236.0], [86.3, 43304.0], [86.4, 43304.0], [86.5, 43535.0], [86.6, 43535.0], [86.7, 43988.0], [86.8, 43988.0], [86.9, 45059.0], [87.0, 45059.0], [87.1, 45122.0], [87.2, 45122.0], [87.3, 45261.0], [87.4, 45261.0], [87.5, 45427.0], [87.6, 45427.0], [87.7, 45702.0], [87.8, 45702.0], [87.9, 45849.0], [88.0, 45849.0], [88.1, 45868.0], [88.2, 45868.0], [88.3, 45968.0], [88.4, 45968.0], [88.5, 46202.0], [88.6, 46202.0], [88.7, 46957.0], [88.8, 46957.0], [88.9, 47300.0], [89.0, 47300.0], [89.1, 47382.0], [89.2, 47382.0], [89.3, 48009.0], [89.4, 48009.0], [89.5, 49003.0], [89.6, 49003.0], [89.7, 49608.0], [89.8, 49608.0], [89.9, 49730.0], [90.0, 49730.0], [90.1, 49789.0], [90.2, 49789.0], [90.3, 50197.0], [90.4, 50197.0], [90.5, 50285.0], [90.6, 50285.0], [90.7, 51142.0], [90.8, 51142.0], [90.9, 51757.0], [91.0, 51757.0], [91.1, 51918.0], [91.2, 51918.0], [91.3, 52030.0], [91.4, 52030.0], [91.5, 53058.0], [91.6, 53058.0], [91.7, 53058.0], [91.8, 53153.0], [91.9, 53153.0], [92.0, 53542.0], [92.1, 53542.0], [92.2, 54069.0], [92.3, 54069.0], [92.4, 54271.0], [92.5, 54271.0], [92.6, 54969.0], [92.7, 54969.0], [92.8, 55249.0], [92.9, 55249.0], [93.0, 55473.0], [93.1, 55473.0], [93.2, 56178.0], [93.3, 56178.0], [93.4, 56729.0], [93.5, 56729.0], [93.6, 57053.0], [93.7, 57053.0], [93.8, 57177.0], [93.9, 57177.0], [94.0, 57658.0], [94.1, 57658.0], [94.2, 57931.0], [94.3, 57931.0], [94.4, 58609.0], [94.5, 58609.0], [94.6, 60175.0], [94.7, 60175.0], [94.8, 60343.0], [94.9, 60343.0], [95.0, 60345.0], [95.1, 60345.0], [95.2, 60346.0], [95.3, 60346.0], [95.4, 60346.0], [95.5, 60346.0], [95.6, 60349.0], [95.7, 60349.0], [95.8, 60352.0], [95.9, 60352.0], [96.0, 60356.0], [96.1, 60356.0], [96.2, 60359.0], [96.3, 60359.0], [96.4, 60360.0], [96.5, 60360.0], [96.6, 60365.0], [96.7, 60365.0], [96.8, 60366.0], [96.9, 60366.0], [97.0, 60373.0], [97.1, 60373.0], [97.2, 60376.0], [97.3, 60376.0], [97.4, 60387.0], [97.5, 60387.0], [97.6, 60397.0], [97.7, 60397.0], [97.8, 60410.0], [97.9, 60410.0], [98.0, 60419.0], [98.1, 60419.0], [98.2, 60458.0], [98.3, 60458.0], [98.4, 60459.0], [98.5, 60459.0], [98.6, 60461.0], [98.7, 60461.0], [98.8, 60463.0], [98.9, 60463.0], [99.0, 60479.0], [99.1, 60479.0], [99.2, 60489.0], [99.3, 60489.0], [99.4, 60496.0], [99.5, 60496.0], [99.6, 60528.0], [99.7, 60528.0], [99.8, 60556.0], [99.9, 60556.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 114.0], [0.1, 114.0], [0.2, 114.0], [0.3, 114.0], [0.4, 114.0], [0.5, 114.0], [0.6, 114.0], [0.7, 114.0], [0.8, 114.0], [0.9, 114.0], [1.0, 114.0], [1.1, 115.0], [1.2, 115.0], [1.3, 115.0], [1.4, 115.0], [1.5, 115.0], [1.6, 115.0], [1.7, 115.0], [1.8, 115.0], [1.9, 116.0], [2.0, 116.0], [2.1, 116.0], [2.2, 116.0], [2.3, 116.0], [2.4, 116.0], [2.5, 116.0], [2.6, 116.0], [2.7, 116.0], [2.8, 116.0], [2.9, 116.0], [3.0, 116.0], [3.1, 116.0], [3.2, 116.0], [3.3, 116.0], [3.4, 116.0], [3.5, 116.0], [3.6, 116.0], [3.7, 116.0], [3.8, 116.0], [3.9, 116.0], [4.0, 116.0], [4.1, 117.0], [4.2, 117.0], [4.3, 117.0], [4.4, 117.0], [4.5, 117.0], [4.6, 117.0], [4.7, 117.0], [4.8, 117.0], [4.9, 117.0], [5.0, 117.0], [5.1, 117.0], [5.2, 117.0], [5.3, 117.0], [5.4, 118.0], [5.5, 118.0], [5.6, 118.0], [5.7, 118.0], [5.8, 118.0], [5.9, 118.0], [6.0, 118.0], [6.1, 118.0], [6.2, 118.0], [6.3, 118.0], [6.4, 118.0], [6.5, 118.0], [6.6, 118.0], [6.7, 118.0], [6.8, 118.0], [6.9, 118.0], [7.0, 118.0], [7.1, 118.0], [7.2, 118.0], [7.3, 118.0], [7.4, 119.0], [7.5, 119.0], [7.6, 119.0], [7.7, 119.0], [7.8, 119.0], [7.9, 119.0], [8.0, 119.0], [8.1, 119.0], [8.2, 119.0], [8.3, 119.0], [8.4, 120.0], [8.5, 120.0], [8.6, 120.0], [8.7, 120.0], [8.8, 120.0], [8.9, 120.0], [9.0, 120.0], [9.1, 120.0], [9.2, 120.0], [9.3, 120.0], [9.4, 120.0], [9.5, 120.0], [9.6, 120.0], [9.7, 120.0], [9.8, 120.0], [9.9, 120.0], [10.0, 120.0], [10.1, 120.0], [10.2, 120.0], [10.3, 120.0], [10.4, 120.0], [10.5, 120.0], [10.6, 120.0], [10.7, 120.0], [10.8, 120.0], [10.9, 120.0], [11.0, 120.0], [11.1, 120.0], [11.2, 120.0], [11.3, 120.0], [11.4, 120.0], [11.5, 120.0], [11.6, 120.0], [11.7, 120.0], [11.8, 120.0], [11.9, 120.0], [12.0, 120.0], [12.1, 121.0], [12.2, 121.0], [12.3, 121.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 121.0], [13.2, 121.0], [13.3, 121.0], [13.4, 121.0], [13.5, 121.0], [13.6, 121.0], [13.7, 121.0], [13.8, 121.0], [13.9, 121.0], [14.0, 121.0], [14.1, 121.0], [14.2, 121.0], [14.3, 121.0], [14.4, 121.0], [14.5, 121.0], [14.6, 121.0], [14.7, 121.0], [14.8, 122.0], [14.9, 122.0], [15.0, 122.0], [15.1, 122.0], [15.2, 122.0], [15.3, 122.0], [15.4, 122.0], [15.5, 122.0], [15.6, 122.0], [15.7, 122.0], [15.8, 122.0], [15.9, 122.0], [16.0, 122.0], [16.1, 122.0], [16.2, 122.0], [16.3, 122.0], [16.4, 122.0], [16.5, 122.0], [16.6, 122.0], [16.7, 122.0], [16.8, 122.0], [16.9, 122.0], [17.0, 122.0], [17.1, 122.0], [17.2, 123.0], [17.3, 123.0], [17.4, 123.0], [17.5, 123.0], [17.6, 123.0], [17.7, 123.0], [17.8, 123.0], [17.9, 123.0], [18.0, 123.0], [18.1, 123.0], [18.2, 123.0], [18.3, 123.0], [18.4, 123.0], [18.5, 124.0], [18.6, 124.0], [18.7, 124.0], [18.8, 124.0], [18.9, 124.0], [19.0, 124.0], [19.1, 124.0], [19.2, 124.0], [19.3, 124.0], [19.4, 124.0], [19.5, 124.0], [19.6, 124.0], [19.7, 124.0], [19.8, 124.0], [19.9, 124.0], [20.0, 124.0], [20.1, 125.0], [20.2, 125.0], [20.3, 125.0], [20.4, 125.0], [20.5, 125.0], [20.6, 125.0], [20.7, 125.0], [20.8, 125.0], [20.9, 125.0], [21.0, 125.0], [21.1, 125.0], [21.2, 125.0], [21.3, 125.0], [21.4, 125.0], [21.5, 126.0], [21.6, 126.0], [21.7, 126.0], [21.8, 126.0], [21.9, 126.0], [22.0, 126.0], [22.1, 126.0], [22.2, 126.0], [22.3, 127.0], [22.4, 127.0], [22.5, 127.0], [22.6, 127.0], [22.7, 128.0], [22.8, 128.0], [22.9, 128.0], [23.0, 128.0], [23.1, 128.0], [23.2, 130.0], [23.3, 130.0], [23.4, 132.0], [23.5, 132.0], [23.6, 141.0], [23.7, 141.0], [23.8, 190.0], [23.9, 190.0], [24.0, 850.0], [24.1, 850.0], [24.2, 872.0], [24.3, 872.0], [24.4, 930.0], [24.5, 930.0], [24.6, 968.0], [24.7, 968.0], [24.8, 1004.0], [24.9, 1004.0], [25.0, 1055.0], [25.1, 1055.0], [25.2, 1097.0], [25.3, 1097.0], [25.4, 1099.0], [25.5, 1099.0], [25.6, 1114.0], [25.7, 1114.0], [25.8, 1117.0], [25.9, 1117.0], [26.0, 1133.0], [26.1, 1133.0], [26.2, 1318.0], [26.3, 1318.0], [26.4, 2272.0], [26.5, 2272.0], [26.6, 2597.0], [26.7, 2597.0], [26.8, 3558.0], [26.9, 3558.0], [27.0, 4006.0], [27.1, 4006.0], [27.2, 4386.0], [27.3, 4386.0], [27.4, 4386.0], [27.5, 4390.0], [27.6, 4390.0], [27.7, 4763.0], [27.8, 4763.0], [27.9, 4920.0], [28.0, 4920.0], [28.1, 5005.0], [28.2, 5005.0], [28.3, 5023.0], [28.4, 5023.0], [28.5, 5049.0], [28.6, 5049.0], [28.7, 5056.0], [28.8, 5056.0], [28.9, 5079.0], [29.0, 5079.0], [29.1, 5120.0], [29.2, 5120.0], [29.3, 5174.0], [29.4, 5174.0], [29.5, 5178.0], [29.6, 5178.0], [29.7, 5198.0], [29.8, 5198.0], [29.9, 5201.0], [30.0, 5201.0], [30.1, 5213.0], [30.2, 5213.0], [30.3, 5216.0], [30.4, 5216.0], [30.5, 5222.0], [30.6, 5222.0], [30.7, 5256.0], [30.8, 5256.0], [30.9, 5344.0], [31.0, 5344.0], [31.1, 5385.0], [31.2, 5385.0], [31.3, 5510.0], [31.4, 5510.0], [31.5, 5597.0], [31.6, 5597.0], [31.7, 5825.0], [31.8, 5825.0], [31.9, 5825.0], [32.0, 5848.0], [32.1, 5848.0], [32.2, 5883.0], [32.3, 5883.0], [32.4, 6157.0], [32.5, 6157.0], [32.6, 6170.0], [32.7, 6170.0], [32.8, 6189.0], [32.9, 6189.0], [33.0, 6353.0], [33.1, 6353.0], [33.2, 6415.0], [33.3, 6415.0], [33.4, 6436.0], [33.5, 6436.0], [33.6, 6485.0], [33.7, 6485.0], [33.8, 6517.0], [33.9, 6517.0], [34.0, 6592.0], [34.1, 6592.0], [34.2, 7004.0], [34.3, 7004.0], [34.4, 7278.0], [34.5, 7278.0], [34.6, 7602.0], [34.7, 7602.0], [34.8, 7907.0], [34.9, 7907.0], [35.0, 7923.0], [35.1, 7923.0], [35.2, 7999.0], [35.3, 7999.0], [35.4, 8037.0], [35.5, 8037.0], [35.6, 8296.0], [35.7, 8296.0], [35.8, 8307.0], [35.9, 8307.0], [36.0, 8602.0], [36.1, 8602.0], [36.2, 8619.0], [36.3, 8619.0], [36.4, 8619.0], [36.5, 8656.0], [36.6, 8656.0], [36.7, 8673.0], [36.8, 8673.0], [36.9, 8823.0], [37.0, 8823.0], [37.1, 8895.0], [37.2, 8895.0], [37.3, 8925.0], [37.4, 8925.0], [37.5, 8937.0], [37.6, 8937.0], [37.7, 8963.0], [37.8, 8963.0], [37.9, 8964.0], [38.0, 8964.0], [38.1, 9054.0], [38.2, 9054.0], [38.3, 9261.0], [38.4, 9261.0], [38.5, 9358.0], [38.6, 9358.0], [38.7, 9389.0], [38.8, 9389.0], [38.9, 9564.0], [39.0, 9564.0], [39.1, 9625.0], [39.2, 9625.0], [39.3, 9792.0], [39.4, 9792.0], [39.5, 10152.0], [39.6, 10152.0], [39.7, 10262.0], [39.8, 10262.0], [39.9, 10280.0], [40.0, 10280.0], [40.1, 10421.0], [40.2, 10421.0], [40.3, 10568.0], [40.4, 10568.0], [40.5, 10676.0], [40.6, 10676.0], [40.7, 10723.0], [40.8, 10723.0], [40.9, 10734.0], [41.0, 10734.0], [41.1, 10734.0], [41.2, 10757.0], [41.3, 10757.0], [41.4, 11197.0], [41.5, 11197.0], [41.6, 11369.0], [41.7, 11369.0], [41.8, 11454.0], [41.9, 11454.0], [42.0, 11474.0], [42.1, 11474.0], [42.2, 11523.0], [42.3, 11523.0], [42.4, 11632.0], [42.5, 11632.0], [42.6, 11684.0], [42.7, 11684.0], [42.8, 11975.0], [42.9, 11975.0], [43.0, 12004.0], [43.1, 12004.0], [43.2, 12121.0], [43.3, 12121.0], [43.4, 12220.0], [43.5, 12220.0], [43.6, 12477.0], [43.7, 12477.0], [43.8, 12548.0], [43.9, 12548.0], [44.0, 12691.0], [44.1, 12691.0], [44.2, 12904.0], [44.3, 12904.0], [44.4, 12932.0], [44.5, 12932.0], [44.6, 12970.0], [44.7, 12970.0], [44.8, 12996.0], [44.9, 12996.0], [45.0, 13094.0], [45.1, 13094.0], [45.2, 13416.0], [45.3, 13416.0], [45.4, 13434.0], [45.5, 13434.0], [45.6, 13434.0], [45.7, 13522.0], [45.8, 13522.0], [45.9, 13528.0], [46.0, 13528.0], [46.1, 13595.0], [46.2, 13595.0], [46.3, 13613.0], [46.4, 13613.0], [46.5, 13633.0], [46.6, 13633.0], [46.7, 13796.0], [46.8, 13796.0], [46.9, 13807.0], [47.0, 13807.0], [47.1, 13899.0], [47.2, 13899.0], [47.3, 13899.0], [47.4, 13899.0], [47.5, 13947.0], [47.6, 13947.0], [47.7, 14441.0], [47.8, 14441.0], [47.9, 14564.0], [48.0, 14564.0], [48.1, 14660.0], [48.2, 14660.0], [48.3, 14851.0], [48.4, 14851.0], [48.5, 14863.0], [48.6, 14863.0], [48.7, 14947.0], [48.8, 14947.0], [48.9, 15034.0], [49.0, 15034.0], [49.1, 15209.0], [49.2, 15209.0], [49.3, 15628.0], [49.4, 15628.0], [49.5, 15676.0], [49.6, 15676.0], [49.7, 15685.0], [49.8, 15685.0], [49.9, 15745.0], [50.0, 15745.0], [50.1, 15745.0], [50.2, 15933.0], [50.3, 15933.0], [50.4, 15968.0], [50.5, 15968.0], [50.6, 16077.0], [50.7, 16077.0], [50.8, 16218.0], [50.9, 16218.0], [51.0, 16243.0], [51.1, 16243.0], [51.2, 16296.0], [51.3, 16296.0], [51.4, 16672.0], [51.5, 16672.0], [51.6, 16778.0], [51.7, 16778.0], [51.8, 16916.0], [51.9, 16916.0], [52.0, 17370.0], [52.1, 17370.0], [52.2, 17666.0], [52.3, 17666.0], [52.4, 17766.0], [52.5, 17766.0], [52.6, 17848.0], [52.7, 17848.0], [52.8, 17891.0], [52.9, 17891.0], [53.0, 18008.0], [53.1, 18008.0], [53.2, 18055.0], [53.3, 18055.0], [53.4, 18148.0], [53.5, 18148.0], [53.6, 18197.0], [53.7, 18197.0], [53.8, 18417.0], [53.9, 18417.0], [54.0, 18675.0], [54.1, 18675.0], [54.2, 18787.0], [54.3, 18787.0], [54.4, 18832.0], [54.5, 18832.0], [54.6, 18832.0], [54.7, 18909.0], [54.8, 18909.0], [54.9, 19137.0], [55.0, 19137.0], [55.1, 19164.0], [55.2, 19164.0], [55.3, 19296.0], [55.4, 19296.0], [55.5, 19315.0], [55.6, 19315.0], [55.7, 19493.0], [55.8, 19493.0], [55.9, 19675.0], [56.0, 19675.0], [56.1, 19723.0], [56.2, 19723.0], [56.3, 19908.0], [56.4, 19908.0], [56.5, 20179.0], [56.6, 20179.0], [56.7, 20212.0], [56.8, 20212.0], [56.9, 20236.0], [57.0, 20236.0], [57.1, 20610.0], [57.2, 20610.0], [57.3, 20613.0], [57.4, 20613.0], [57.5, 21056.0], [57.6, 21056.0], [57.7, 21100.0], [57.8, 21100.0], [57.9, 21210.0], [58.0, 21210.0], [58.1, 21289.0], [58.2, 21289.0], [58.3, 21326.0], [58.4, 21326.0], [58.5, 21476.0], [58.6, 21476.0], [58.7, 21543.0], [58.8, 21543.0], [58.9, 21602.0], [59.0, 21602.0], [59.1, 21602.0], [59.2, 21740.0], [59.3, 21740.0], [59.4, 21751.0], [59.5, 21751.0], [59.6, 21784.0], [59.7, 21784.0], [59.8, 21833.0], [59.9, 21833.0], [60.0, 21878.0], [60.1, 21878.0], [60.2, 22059.0], [60.3, 22059.0], [60.4, 22102.0], [60.5, 22102.0], [60.6, 22103.0], [60.7, 22103.0], [60.8, 22402.0], [60.9, 22402.0], [61.0, 22525.0], [61.1, 22525.0], [61.2, 22584.0], [61.3, 22584.0], [61.4, 22645.0], [61.5, 22645.0], [61.6, 22834.0], [61.7, 22834.0], [61.8, 22965.0], [61.9, 22965.0], [62.0, 22982.0], [62.1, 22982.0], [62.2, 23112.0], [62.3, 23112.0], [62.4, 23279.0], [62.5, 23279.0], [62.6, 23395.0], [62.7, 23395.0], [62.8, 23541.0], [62.9, 23541.0], [63.0, 23553.0], [63.1, 23553.0], [63.2, 23714.0], [63.3, 23714.0], [63.4, 23762.0], [63.5, 23762.0], [63.6, 23817.0], [63.7, 23817.0], [63.8, 23817.0], [63.9, 24045.0], [64.0, 24045.0], [64.1, 24253.0], [64.2, 24253.0], [64.3, 24353.0], [64.4, 24353.0], [64.5, 24592.0], [64.6, 24592.0], [64.7, 24784.0], [64.8, 24784.0], [64.9, 24835.0], [65.0, 24835.0], [65.1, 24852.0], [65.2, 24852.0], [65.3, 25066.0], [65.4, 25066.0], [65.5, 25620.0], [65.6, 25620.0], [65.7, 25629.0], [65.8, 25629.0], [65.9, 25935.0], [66.0, 25935.0], [66.1, 25974.0], [66.2, 25974.0], [66.3, 27122.0], [66.4, 27122.0], [66.5, 27363.0], [66.6, 27363.0], [66.7, 27374.0], [66.8, 27374.0], [66.9, 27376.0], [67.0, 27376.0], [67.1, 27701.0], [67.2, 27701.0], [67.3, 27762.0], [67.4, 27762.0], [67.5, 27852.0], [67.6, 27852.0], [67.7, 27879.0], [67.8, 27879.0], [67.9, 28316.0], [68.0, 28316.0], [68.1, 28347.0], [68.2, 28347.0], [68.3, 28347.0], [68.4, 28774.0], [68.5, 28774.0], [68.6, 29108.0], [68.7, 29108.0], [68.8, 29284.0], [68.9, 29284.0], [69.0, 29310.0], [69.1, 29310.0], [69.2, 29332.0], [69.3, 29332.0], [69.4, 29342.0], [69.5, 29342.0], [69.6, 29369.0], [69.7, 29369.0], [69.8, 29535.0], [69.9, 29535.0], [70.0, 29538.0], [70.1, 29538.0], [70.2, 29760.0], [70.3, 29760.0], [70.4, 29792.0], [70.5, 29792.0], [70.6, 29815.0], [70.7, 29815.0], [70.8, 29960.0], [70.9, 29960.0], [71.0, 29962.0], [71.1, 29962.0], [71.2, 30104.0], [71.3, 30104.0], [71.4, 30459.0], [71.5, 30459.0], [71.6, 30476.0], [71.7, 30476.0], [71.8, 30563.0], [71.9, 30563.0], [72.0, 30974.0], [72.1, 30974.0], [72.2, 31043.0], [72.3, 31043.0], [72.4, 31153.0], [72.5, 31153.0], [72.6, 31166.0], [72.7, 31166.0], [72.8, 31166.0], [72.9, 31260.0], [73.0, 31260.0], [73.1, 31535.0], [73.2, 31535.0], [73.3, 31653.0], [73.4, 31653.0], [73.5, 31690.0], [73.6, 31690.0], [73.7, 31901.0], [73.8, 31901.0], [73.9, 32261.0], [74.0, 32261.0], [74.1, 32647.0], [74.2, 32647.0], [74.3, 32866.0], [74.4, 32866.0], [74.5, 33042.0], [74.6, 33042.0], [74.7, 33048.0], [74.8, 33048.0], [74.9, 33086.0], [75.0, 33086.0], [75.1, 33227.0], [75.2, 33227.0], [75.3, 33276.0], [75.4, 33276.0], [75.5, 33773.0], [75.6, 33773.0], [75.7, 33978.0], [75.8, 33978.0], [75.9, 34007.0], [76.0, 34007.0], [76.1, 34260.0], [76.2, 34260.0], [76.3, 34301.0], [76.4, 34301.0], [76.5, 34369.0], [76.6, 34369.0], [76.7, 34478.0], [76.8, 34478.0], [76.9, 34868.0], [77.0, 34868.0], [77.1, 34914.0], [77.2, 34914.0], [77.3, 34914.0], [77.4, 35074.0], [77.5, 35074.0], [77.6, 35211.0], [77.7, 35211.0], [77.8, 35295.0], [77.9, 35295.0], [78.0, 35445.0], [78.1, 35445.0], [78.2, 35639.0], [78.3, 35639.0], [78.4, 35823.0], [78.5, 35823.0], [78.6, 35849.0], [78.7, 35849.0], [78.8, 36101.0], [78.9, 36101.0], [79.0, 36287.0], [79.1, 36287.0], [79.2, 36550.0], [79.3, 36550.0], [79.4, 36702.0], [79.5, 36702.0], [79.6, 36985.0], [79.7, 36985.0], [79.8, 37087.0], [79.9, 37087.0], [80.0, 37104.0], [80.1, 37104.0], [80.2, 37180.0], [80.3, 37180.0], [80.4, 37261.0], [80.5, 37261.0], [80.6, 37503.0], [80.7, 37503.0], [80.8, 37635.0], [80.9, 37635.0], [81.0, 37642.0], [81.1, 37642.0], [81.2, 37687.0], [81.3, 37687.0], [81.4, 37855.0], [81.5, 37855.0], [81.6, 37895.0], [81.7, 37895.0], [81.8, 38011.0], [81.9, 38011.0], [82.0, 38011.0], [82.1, 38014.0], [82.2, 38014.0], [82.3, 38084.0], [82.4, 38084.0], [82.5, 38161.0], [82.6, 38161.0], [82.7, 38186.0], [82.8, 38186.0], [82.9, 38875.0], [83.0, 38875.0], [83.1, 39669.0], [83.2, 39669.0], [83.3, 39844.0], [83.4, 39844.0], [83.5, 39868.0], [83.6, 39868.0], [83.7, 39982.0], [83.8, 39982.0], [83.9, 40112.0], [84.0, 40112.0], [84.1, 40501.0], [84.2, 40501.0], [84.3, 40669.0], [84.4, 40669.0], [84.5, 41253.0], [84.6, 41253.0], [84.7, 41619.0], [84.8, 41619.0], [84.9, 41837.0], [85.0, 41837.0], [85.1, 41868.0], [85.2, 41868.0], [85.3, 41907.0], [85.4, 41907.0], [85.5, 42339.0], [85.6, 42339.0], [85.7, 42672.0], [85.8, 42672.0], [85.9, 42983.0], [86.0, 42983.0], [86.1, 43030.0], [86.2, 43030.0], [86.3, 43298.0], [86.4, 43298.0], [86.5, 43298.0], [86.6, 43718.0], [86.7, 43718.0], [86.8, 44743.0], [86.9, 44743.0], [87.0, 44883.0], [87.1, 44883.0], [87.2, 44985.0], [87.3, 44985.0], [87.4, 45198.0], [87.5, 45198.0], [87.6, 45467.0], [87.7, 45467.0], [87.8, 45559.0], [87.9, 45559.0], [88.0, 45626.0], [88.1, 45626.0], [88.2, 45715.0], [88.3, 45715.0], [88.4, 45960.0], [88.5, 45960.0], [88.6, 46727.0], [88.7, 46727.0], [88.8, 47046.0], [88.9, 47046.0], [89.0, 47150.0], [89.1, 47150.0], [89.2, 47727.0], [89.3, 47727.0], [89.4, 48773.0], [89.5, 48773.0], [89.6, 49370.0], [89.7, 49370.0], [89.8, 49497.0], [89.9, 49497.0], [90.0, 49538.0], [90.1, 49538.0], [90.2, 49960.0], [90.3, 49960.0], [90.4, 50055.0], [90.5, 50055.0], [90.6, 50902.0], [90.7, 50902.0], [90.8, 51513.0], [90.9, 51513.0], [91.0, 51513.0], [91.1, 51620.0], [91.2, 51620.0], [91.3, 51796.0], [91.4, 51796.0], [91.5, 52785.0], [91.6, 52785.0], [91.7, 52892.0], [91.8, 52892.0], [91.9, 53304.0], [92.0, 53304.0], [92.1, 53834.0], [92.2, 53834.0], [92.3, 54035.0], [92.4, 54035.0], [92.5, 54711.0], [92.6, 54711.0], [92.7, 55023.0], [92.8, 55023.0], [92.9, 55244.0], [93.0, 55244.0], [93.1, 55934.0], [93.2, 55934.0], [93.3, 56481.0], [93.4, 56481.0], [93.5, 56815.0], [93.6, 56815.0], [93.7, 56949.0], [93.8, 56949.0], [93.9, 57382.0], [94.0, 57382.0], [94.1, 57689.0], [94.2, 57689.0], [94.3, 58372.0], [94.4, 58372.0], [94.5, 59930.0], [94.6, 59930.0], [94.7, 60116.0], [94.8, 60116.0], [94.9, 60117.0], [95.0, 60117.0], [95.1, 60117.0], [95.2, 60117.0], [95.3, 60117.0], [95.4, 60117.0], [95.5, 60117.0], [95.6, 60119.0], [95.7, 60119.0], [95.8, 60121.0], [95.9, 60121.0], [96.0, 60121.0], [96.1, 60121.0], [96.2, 60123.0], [96.3, 60123.0], [96.4, 60123.0], [96.5, 60123.0], [96.6, 60124.0], [96.7, 60124.0], [96.8, 60124.0], [96.9, 60124.0], [97.0, 60124.0], [97.1, 60124.0], [97.2, 60125.0], [97.3, 60125.0], [97.4, 60126.0], [97.5, 60126.0], [97.6, 60135.0], [97.7, 60135.0], [97.8, 60166.0], [97.9, 60166.0], [98.0, 60191.0], [98.1, 60191.0], [98.2, 60225.0], [98.3, 60225.0], [98.4, 60229.0], [98.5, 60229.0], [98.6, 60229.0], [98.7, 60229.0], [98.8, 60231.0], [98.9, 60231.0], [99.0, 60232.0], [99.1, 60232.0], [99.2, 60233.0], [99.3, 60233.0], [99.4, 60243.0], [99.5, 60243.0], [99.6, 60292.0], [99.7, 60292.0], [99.8, 60318.0], [99.9, 60318.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 225.0], [0.1, 225.0], [0.2, 225.0], [0.3, 225.0], [0.4, 225.0], [0.5, 226.0], [0.6, 226.0], [0.7, 226.0], [0.8, 226.0], [0.9, 226.0], [1.0, 226.0], [1.1, 226.0], [1.2, 226.0], [1.3, 226.0], [1.4, 226.0], [1.5, 226.0], [1.6, 226.0], [1.7, 226.0], [1.8, 226.0], [1.9, 226.0], [2.0, 226.0], [2.1, 226.0], [2.2, 226.0], [2.3, 226.0], [2.4, 226.0], [2.5, 227.0], [2.6, 227.0], [2.7, 227.0], [2.8, 227.0], [2.9, 227.0], [3.0, 227.0], [3.1, 227.0], [3.2, 227.0], [3.3, 227.0], [3.4, 227.0], [3.5, 227.0], [3.6, 227.0], [3.7, 227.0], [3.8, 227.0], [3.9, 227.0], [4.0, 227.0], [4.1, 227.0], [4.2, 227.0], [4.3, 227.0], [4.4, 227.0], [4.5, 227.0], [4.6, 227.0], [4.7, 227.0], [4.8, 227.0], [4.9, 227.0], [5.0, 227.0], [5.1, 227.0], [5.2, 227.0], [5.3, 227.0], [5.4, 227.0], [5.5, 227.0], [5.6, 227.0], [5.7, 228.0], [5.8, 228.0], [5.9, 228.0], [6.0, 228.0], [6.1, 228.0], [6.2, 228.0], [6.3, 228.0], [6.4, 228.0], [6.5, 228.0], [6.6, 228.0], [6.7, 228.0], [6.8, 228.0], [6.9, 228.0], [7.0, 228.0], [7.1, 228.0], [7.2, 228.0], [7.3, 228.0], [7.4, 228.0], [7.5, 228.0], [7.6, 228.0], [7.7, 228.0], [7.8, 228.0], [7.9, 228.0], [8.0, 228.0], [8.1, 228.0], [8.2, 228.0], [8.3, 228.0], [8.4, 228.0], [8.5, 228.0], [8.6, 228.0], [8.7, 228.0], [8.8, 228.0], [8.9, 228.0], [9.0, 228.0], [9.1, 228.0], [9.2, 228.0], [9.3, 228.0], [9.4, 228.0], [9.5, 228.0], [9.6, 228.0], [9.7, 228.0], [9.8, 228.0], [9.9, 228.0], [10.0, 228.0], [10.1, 228.0], [10.2, 228.0], [10.3, 228.0], [10.4, 229.0], [10.5, 229.0], [10.6, 229.0], [10.7, 229.0], [10.8, 229.0], [10.9, 229.0], [11.0, 229.0], [11.1, 229.0], [11.2, 229.0], [11.3, 229.0], [11.4, 229.0], [11.5, 229.0], [11.6, 229.0], [11.7, 229.0], [11.8, 229.0], [11.9, 229.0], [12.0, 229.0], [12.1, 229.0], [12.2, 229.0], [12.3, 229.0], [12.4, 229.0], [12.5, 229.0], [12.6, 229.0], [12.7, 229.0], [12.8, 229.0], [12.9, 229.0], [13.0, 229.0], [13.1, 229.0], [13.2, 229.0], [13.3, 229.0], [13.4, 229.0], [13.5, 229.0], [13.6, 229.0], [13.7, 229.0], [13.8, 229.0], [13.9, 229.0], [14.0, 229.0], [14.1, 229.0], [14.2, 230.0], [14.3, 230.0], [14.4, 230.0], [14.5, 230.0], [14.6, 230.0], [14.7, 230.0], [14.8, 230.0], [14.9, 230.0], [15.0, 230.0], [15.1, 230.0], [15.2, 230.0], [15.3, 230.0], [15.4, 230.0], [15.5, 230.0], [15.6, 230.0], [15.7, 230.0], [15.8, 230.0], [15.9, 230.0], [16.0, 230.0], [16.1, 230.0], [16.2, 230.0], [16.3, 230.0], [16.4, 230.0], [16.5, 230.0], [16.6, 230.0], [16.7, 230.0], [16.8, 230.0], [16.9, 230.0], [17.0, 230.0], [17.1, 230.0], [17.2, 230.0], [17.3, 230.0], [17.4, 230.0], [17.5, 230.0], [17.6, 230.0], [17.7, 230.0], [17.8, 230.0], [17.9, 231.0], [18.0, 231.0], [18.1, 231.0], [18.2, 231.0], [18.3, 231.0], [18.4, 231.0], [18.5, 231.0], [18.6, 231.0], [18.7, 231.0], [18.8, 231.0], [18.9, 231.0], [19.0, 231.0], [19.1, 231.0], [19.2, 231.0], [19.3, 231.0], [19.4, 231.0], [19.5, 231.0], [19.6, 231.0], [19.7, 231.0], [19.8, 231.0], [19.9, 231.0], [20.0, 231.0], [20.1, 231.0], [20.2, 231.0], [20.3, 231.0], [20.4, 231.0], [20.5, 231.0], [20.6, 231.0], [20.7, 231.0], [20.8, 231.0], [20.9, 231.0], [21.0, 231.0], [21.1, 231.0], [21.2, 231.0], [21.3, 231.0], [21.4, 231.0], [21.5, 232.0], [21.6, 232.0], [21.7, 232.0], [21.8, 232.0], [21.9, 232.0], [22.0, 232.0], [22.1, 232.0], [22.2, 232.0], [22.3, 232.0], [22.4, 232.0], [22.5, 232.0], [22.6, 232.0], [22.7, 232.0], [22.8, 232.0], [22.9, 232.0], [23.0, 232.0], [23.1, 232.0], [23.2, 232.0], [23.3, 232.0], [23.4, 232.0], [23.5, 233.0], [23.6, 233.0], [23.7, 233.0], [23.8, 233.0], [23.9, 233.0], [24.0, 233.0], [24.1, 233.0], [24.2, 233.0], [24.3, 233.0], [24.4, 233.0], [24.5, 233.0], [24.6, 233.0], [24.7, 233.0], [24.8, 233.0], [24.9, 233.0], [25.0, 233.0], [25.1, 233.0], [25.2, 234.0], [25.3, 234.0], [25.4, 234.0], [25.5, 234.0], [25.6, 234.0], [25.7, 234.0], [25.8, 234.0], [25.9, 234.0], [26.0, 234.0], [26.1, 234.0], [26.2, 234.0], [26.3, 234.0], [26.4, 234.0], [26.5, 234.0], [26.6, 234.0], [26.7, 234.0], [26.8, 234.0], [26.9, 234.0], [27.0, 235.0], [27.1, 235.0], [27.2, 235.0], [27.3, 235.0], [27.4, 235.0], [27.5, 235.0], [27.6, 235.0], [27.7, 235.0], [27.8, 235.0], [27.9, 235.0], [28.0, 235.0], [28.1, 235.0], [28.2, 235.0], [28.3, 235.0], [28.4, 235.0], [28.5, 235.0], [28.6, 235.0], [28.7, 235.0], [28.8, 235.0], [28.9, 235.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 236.0], [29.5, 236.0], [29.6, 236.0], [29.7, 236.0], [29.8, 236.0], [29.9, 236.0], [30.0, 236.0], [30.1, 236.0], [30.2, 236.0], [30.3, 236.0], [30.4, 236.0], [30.5, 236.0], [30.6, 236.0], [30.7, 236.0], [30.8, 236.0], [30.9, 236.0], [31.0, 236.0], [31.1, 236.0], [31.2, 236.0], [31.3, 236.0], [31.4, 236.0], [31.5, 236.0], [31.6, 236.0], [31.7, 236.0], [31.8, 236.0], [31.9, 236.0], [32.0, 236.0], [32.1, 236.0], [32.2, 236.0], [32.3, 236.0], [32.4, 236.0], [32.5, 236.0], [32.6, 236.0], [32.7, 236.0], [32.8, 236.0], [32.9, 236.0], [33.0, 236.0], [33.1, 236.0], [33.2, 237.0], [33.3, 237.0], [33.4, 237.0], [33.5, 237.0], [33.6, 237.0], [33.7, 237.0], [33.8, 237.0], [33.9, 237.0], [34.0, 237.0], [34.1, 237.0], [34.2, 237.0], [34.3, 237.0], [34.4, 237.0], [34.5, 237.0], [34.6, 237.0], [34.7, 237.0], [34.8, 237.0], [34.9, 237.0], [35.0, 237.0], [35.1, 237.0], [35.2, 237.0], [35.3, 237.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 237.0], [35.8, 237.0], [35.9, 237.0], [36.0, 237.0], [36.1, 237.0], [36.2, 237.0], [36.3, 237.0], [36.4, 237.0], [36.5, 237.0], [36.6, 237.0], [36.7, 237.0], [36.8, 237.0], [36.9, 237.0], [37.0, 237.0], [37.1, 237.0], [37.2, 237.0], [37.3, 237.0], [37.4, 237.0], [37.5, 237.0], [37.6, 237.0], [37.7, 237.0], [37.8, 237.0], [37.9, 237.0], [38.0, 237.0], [38.1, 238.0], [38.2, 238.0], [38.3, 238.0], [38.4, 238.0], [38.5, 238.0], [38.6, 238.0], [38.7, 238.0], [38.8, 238.0], [38.9, 238.0], [39.0, 238.0], [39.1, 238.0], [39.2, 238.0], [39.3, 238.0], [39.4, 238.0], [39.5, 238.0], [39.6, 238.0], [39.7, 238.0], [39.8, 238.0], [39.9, 238.0], [40.0, 238.0], [40.1, 238.0], [40.2, 238.0], [40.3, 238.0], [40.4, 238.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 238.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 238.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 238.0], [41.7, 238.0], [41.8, 238.0], [41.9, 238.0], [42.0, 238.0], [42.1, 238.0], [42.2, 238.0], [42.3, 238.0], [42.4, 238.0], [42.5, 238.0], [42.6, 238.0], [42.7, 238.0], [42.8, 238.0], [42.9, 238.0], [43.0, 238.0], [43.1, 238.0], [43.2, 238.0], [43.3, 238.0], [43.4, 238.0], [43.5, 238.0], [43.6, 238.0], [43.7, 238.0], [43.8, 238.0], [43.9, 238.0], [44.0, 238.0], [44.1, 238.0], [44.2, 239.0], [44.3, 239.0], [44.4, 239.0], [44.5, 239.0], [44.6, 239.0], [44.7, 239.0], [44.8, 239.0], [44.9, 239.0], [45.0, 239.0], [45.1, 239.0], [45.2, 239.0], [45.3, 239.0], [45.4, 239.0], [45.5, 239.0], [45.6, 239.0], [45.7, 239.0], [45.8, 239.0], [45.9, 239.0], [46.0, 239.0], [46.1, 239.0], [46.2, 239.0], [46.3, 239.0], [46.4, 239.0], [46.5, 239.0], [46.6, 239.0], [46.7, 239.0], [46.8, 239.0], [46.9, 239.0], [47.0, 239.0], [47.1, 239.0], [47.2, 239.0], [47.3, 239.0], [47.4, 239.0], [47.5, 239.0], [47.6, 239.0], [47.7, 239.0], [47.8, 239.0], [47.9, 239.0], [48.0, 240.0], [48.1, 240.0], [48.2, 240.0], [48.3, 240.0], [48.4, 240.0], [48.5, 240.0], [48.6, 240.0], [48.7, 240.0], [48.8, 240.0], [48.9, 240.0], [49.0, 240.0], [49.1, 240.0], [49.2, 240.0], [49.3, 240.0], [49.4, 240.0], [49.5, 240.0], [49.6, 240.0], [49.7, 240.0], [49.8, 240.0], [49.9, 240.0], [50.0, 240.0], [50.1, 240.0], [50.2, 240.0], [50.3, 240.0], [50.4, 240.0], [50.5, 240.0], [50.6, 240.0], [50.7, 240.0], [50.8, 240.0], [50.9, 240.0], [51.0, 240.0], [51.1, 240.0], [51.2, 240.0], [51.3, 240.0], [51.4, 240.0], [51.5, 240.0], [51.6, 240.0], [51.7, 240.0], [51.8, 240.0], [51.9, 240.0], [52.0, 240.0], [52.1, 240.0], [52.2, 240.0], [52.3, 240.0], [52.4, 240.0], [52.5, 240.0], [52.6, 240.0], [52.7, 240.0], [52.8, 240.0], [52.9, 240.0], [53.0, 240.0], [53.1, 240.0], [53.2, 240.0], [53.3, 240.0], [53.4, 240.0], [53.5, 240.0], [53.6, 240.0], [53.7, 240.0], [53.8, 240.0], [53.9, 241.0], [54.0, 241.0], [54.1, 241.0], [54.2, 241.0], [54.3, 241.0], [54.4, 241.0], [54.5, 241.0], [54.6, 241.0], [54.7, 241.0], [54.8, 241.0], [54.9, 241.0], [55.0, 241.0], [55.1, 241.0], [55.2, 241.0], [55.3, 241.0], [55.4, 241.0], [55.5, 241.0], [55.6, 241.0], [55.7, 241.0], [55.8, 241.0], [55.9, 241.0], [56.0, 241.0], [56.1, 241.0], [56.2, 241.0], [56.3, 241.0], [56.4, 241.0], [56.5, 241.0], [56.6, 241.0], [56.7, 241.0], [56.8, 241.0], [56.9, 241.0], [57.0, 241.0], [57.1, 241.0], [57.2, 241.0], [57.3, 241.0], [57.4, 241.0], [57.5, 241.0], [57.6, 241.0], [57.7, 242.0], [57.8, 242.0], [57.9, 242.0], [58.0, 242.0], [58.1, 242.0], [58.2, 242.0], [58.3, 242.0], [58.4, 242.0], [58.5, 242.0], [58.6, 242.0], [58.7, 242.0], [58.8, 242.0], [58.9, 242.0], [59.0, 242.0], [59.1, 242.0], [59.2, 242.0], [59.3, 242.0], [59.4, 242.0], [59.5, 242.0], [59.6, 242.0], [59.7, 242.0], [59.8, 242.0], [59.9, 242.0], [60.0, 242.0], [60.1, 242.0], [60.2, 242.0], [60.3, 242.0], [60.4, 242.0], [60.5, 242.0], [60.6, 242.0], [60.7, 242.0], [60.8, 242.0], [60.9, 242.0], [61.0, 242.0], [61.1, 242.0], [61.2, 243.0], [61.3, 243.0], [61.4, 243.0], [61.5, 243.0], [61.6, 243.0], [61.7, 243.0], [61.8, 243.0], [61.9, 243.0], [62.0, 243.0], [62.1, 243.0], [62.2, 243.0], [62.3, 243.0], [62.4, 243.0], [62.5, 243.0], [62.6, 244.0], [62.7, 244.0], [62.8, 244.0], [62.9, 244.0], [63.0, 244.0], [63.1, 244.0], [63.2, 244.0], [63.3, 244.0], [63.4, 244.0], [63.5, 244.0], [63.6, 244.0], [63.7, 244.0], [63.8, 244.0], [63.9, 244.0], [64.0, 244.0], [64.1, 244.0], [64.2, 244.0], [64.3, 244.0], [64.4, 244.0], [64.5, 244.0], [64.6, 244.0], [64.7, 244.0], [64.8, 244.0], [64.9, 244.0], [65.0, 244.0], [65.1, 244.0], [65.2, 244.0], [65.3, 244.0], [65.4, 244.0], [65.5, 244.0], [65.6, 244.0], [65.7, 244.0], [65.8, 244.0], [65.9, 244.0], [66.0, 245.0], [66.1, 245.0], [66.2, 245.0], [66.3, 245.0], [66.4, 245.0], [66.5, 245.0], [66.6, 245.0], [66.7, 245.0], [66.8, 245.0], [66.9, 245.0], [67.0, 245.0], [67.1, 245.0], [67.2, 245.0], [67.3, 246.0], [67.4, 246.0], [67.5, 246.0], [67.6, 246.0], [67.7, 246.0], [67.8, 246.0], [67.9, 246.0], [68.0, 246.0], [68.1, 246.0], [68.2, 246.0], [68.3, 246.0], [68.4, 246.0], [68.5, 246.0], [68.6, 246.0], [68.7, 246.0], [68.8, 246.0], [68.9, 246.0], [69.0, 246.0], [69.1, 247.0], [69.2, 247.0], [69.3, 247.0], [69.4, 247.0], [69.5, 247.0], [69.6, 247.0], [69.7, 247.0], [69.8, 247.0], [69.9, 247.0], [70.0, 247.0], [70.1, 247.0], [70.2, 247.0], [70.3, 248.0], [70.4, 248.0], [70.5, 248.0], [70.6, 248.0], [70.7, 248.0], [70.8, 248.0], [70.9, 248.0], [71.0, 248.0], [71.1, 248.0], [71.2, 248.0], [71.3, 248.0], [71.4, 248.0], [71.5, 248.0], [71.6, 248.0], [71.7, 248.0], [71.8, 248.0], [71.9, 249.0], [72.0, 249.0], [72.1, 249.0], [72.2, 249.0], [72.3, 249.0], [72.4, 249.0], [72.5, 249.0], [72.6, 249.0], [72.7, 249.0], [72.8, 249.0], [72.9, 249.0], [73.0, 249.0], [73.1, 249.0], [73.2, 249.0], [73.3, 249.0], [73.4, 249.0], [73.5, 249.0], [73.6, 249.0], [73.7, 249.0], [73.8, 249.0], [73.9, 250.0], [74.0, 250.0], [74.1, 250.0], [74.2, 250.0], [74.3, 251.0], [74.4, 251.0], [74.5, 251.0], [74.6, 251.0], [74.7, 251.0], [74.8, 251.0], [74.9, 251.0], [75.0, 251.0], [75.1, 251.0], [75.2, 251.0], [75.3, 251.0], [75.4, 251.0], [75.5, 251.0], [75.6, 251.0], [75.7, 251.0], [75.8, 252.0], [75.9, 252.0], [76.0, 252.0], [76.1, 252.0], [76.2, 252.0], [76.3, 252.0], [76.4, 252.0], [76.5, 252.0], [76.6, 253.0], [76.7, 253.0], [76.8, 253.0], [76.9, 253.0], [77.0, 253.0], [77.1, 253.0], [77.2, 253.0], [77.3, 253.0], [77.4, 253.0], [77.5, 253.0], [77.6, 254.0], [77.7, 254.0], [77.8, 254.0], [77.9, 254.0], [78.0, 254.0], [78.1, 254.0], [78.2, 254.0], [78.3, 254.0], [78.4, 254.0], [78.5, 254.0], [78.6, 254.0], [78.7, 254.0], [78.8, 254.0], [78.9, 254.0], [79.0, 254.0], [79.1, 254.0], [79.2, 254.0], [79.3, 254.0], [79.4, 255.0], [79.5, 255.0], [79.6, 255.0], [79.7, 255.0], [79.8, 255.0], [79.9, 255.0], [80.0, 255.0], [80.1, 255.0], [80.2, 255.0], [80.3, 255.0], [80.4, 255.0], [80.5, 255.0], [80.6, 255.0], [80.7, 255.0], [80.8, 256.0], [80.9, 256.0], [81.0, 256.0], [81.1, 256.0], [81.2, 256.0], [81.3, 256.0], [81.4, 256.0], [81.5, 256.0], [81.6, 256.0], [81.7, 256.0], [81.8, 257.0], [81.9, 257.0], [82.0, 257.0], [82.1, 257.0], [82.2, 257.0], [82.3, 257.0], [82.4, 257.0], [82.5, 257.0], [82.6, 258.0], [82.7, 258.0], [82.8, 258.0], [82.9, 258.0], [83.0, 258.0], [83.1, 258.0], [83.2, 258.0], [83.3, 258.0], [83.4, 258.0], [83.5, 259.0], [83.6, 259.0], [83.7, 259.0], [83.8, 259.0], [83.9, 260.0], [84.0, 260.0], [84.1, 260.0], [84.2, 260.0], [84.3, 260.0], [84.4, 260.0], [84.5, 260.0], [84.6, 260.0], [84.7, 261.0], [84.8, 261.0], [84.9, 261.0], [85.0, 261.0], [85.1, 262.0], [85.2, 262.0], [85.3, 263.0], [85.4, 263.0], [85.5, 263.0], [85.6, 263.0], [85.7, 263.0], [85.8, 263.0], [85.9, 263.0], [86.0, 263.0], [86.1, 263.0], [86.2, 263.0], [86.3, 264.0], [86.4, 264.0], [86.5, 264.0], [86.6, 264.0], [86.7, 264.0], [86.8, 264.0], [86.9, 265.0], [87.0, 265.0], [87.1, 265.0], [87.2, 265.0], [87.3, 266.0], [87.4, 266.0], [87.5, 266.0], [87.6, 266.0], [87.7, 267.0], [87.8, 267.0], [87.9, 267.0], [88.0, 267.0], [88.1, 268.0], [88.2, 268.0], [88.3, 268.0], [88.4, 268.0], [88.5, 269.0], [88.6, 269.0], [88.7, 269.0], [88.8, 269.0], [88.9, 269.0], [89.0, 269.0], [89.1, 270.0], [89.2, 270.0], [89.3, 270.0], [89.4, 270.0], [89.5, 270.0], [89.6, 270.0], [89.7, 270.0], [89.8, 270.0], [89.9, 270.0], [90.0, 270.0], [90.1, 271.0], [90.2, 271.0], [90.3, 271.0], [90.4, 271.0], [90.5, 272.0], [90.6, 272.0], [90.7, 273.0], [90.8, 273.0], [90.9, 273.0], [91.0, 273.0], [91.1, 273.0], [91.2, 273.0], [91.3, 274.0], [91.4, 274.0], [91.5, 274.0], [91.6, 274.0], [91.7, 274.0], [91.8, 276.0], [91.9, 276.0], [92.0, 276.0], [92.1, 276.0], [92.2, 276.0], [92.3, 276.0], [92.4, 277.0], [92.5, 277.0], [92.6, 277.0], [92.7, 277.0], [92.8, 278.0], [92.9, 278.0], [93.0, 278.0], [93.1, 278.0], [93.2, 278.0], [93.3, 278.0], [93.4, 279.0], [93.5, 279.0], [93.6, 280.0], [93.7, 280.0], [93.8, 281.0], [93.9, 281.0], [94.0, 282.0], [94.1, 282.0], [94.2, 282.0], [94.3, 282.0], [94.4, 284.0], [94.5, 284.0], [94.6, 286.0], [94.7, 286.0], [94.8, 287.0], [94.9, 287.0], [95.0, 288.0], [95.1, 288.0], [95.2, 288.0], [95.3, 288.0], [95.4, 289.0], [95.5, 289.0], [95.6, 289.0], [95.7, 289.0], [95.8, 290.0], [95.9, 290.0], [96.0, 291.0], [96.1, 291.0], [96.2, 291.0], [96.3, 291.0], [96.4, 294.0], [96.5, 294.0], [96.6, 294.0], [96.7, 294.0], [96.8, 295.0], [96.9, 295.0], [97.0, 298.0], [97.1, 298.0], [97.2, 299.0], [97.3, 299.0], [97.4, 300.0], [97.5, 300.0], [97.6, 300.0], [97.7, 300.0], [97.8, 301.0], [97.9, 301.0], [98.0, 304.0], [98.1, 304.0], [98.2, 309.0], [98.3, 309.0], [98.4, 315.0], [98.5, 315.0], [98.6, 316.0], [98.7, 316.0], [98.8, 322.0], [98.9, 322.0], [99.0, 333.0], [99.1, 333.0], [99.2, 347.0], [99.3, 347.0], [99.4, 350.0], [99.5, 350.0], [99.6, 379.0], [99.7, 379.0], [99.8, 392.0], [99.9, 392.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 481.0, "series": [{"data": [[33300.0, 2.0], [34500.0, 3.0], [35300.0, 1.0], [36500.0, 1.0], [37300.0, 2.0], [38100.0, 1.0], [36900.0, 1.0], [37700.0, 1.0], [40100.0, 1.0], [42500.0, 1.0], [42100.0, 2.0], [42900.0, 1.0], [43300.0, 1.0], [45700.0, 1.0], [46900.0, 1.0], [47300.0, 2.0], [49700.0, 2.0], [50100.0, 1.0], [51700.0, 1.0], [200.0, 5.0], [54900.0, 1.0], [56100.0, 1.0], [60100.0, 1.0], [60500.0, 2.0], [300.0, 108.0], [400.0, 9.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 5.0], [1500.0, 1.0], [2500.0, 1.0], [2800.0, 1.0], [3700.0, 1.0], [4200.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [5100.0, 1.0], [4900.0, 1.0], [5300.0, 2.0], [5200.0, 4.0], [5500.0, 4.0], [5600.0, 2.0], [5400.0, 4.0], [5800.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [6000.0, 2.0], [6300.0, 2.0], [6500.0, 1.0], [6600.0, 2.0], [6400.0, 1.0], [6800.0, 1.0], [6700.0, 2.0], [7200.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [8100.0, 2.0], [8300.0, 1.0], [8500.0, 2.0], [8200.0, 1.0], [8800.0, 3.0], [9200.0, 4.0], [8900.0, 1.0], [9100.0, 2.0], [9000.0, 1.0], [9600.0, 2.0], [9400.0, 1.0], [9700.0, 1.0], [10000.0, 1.0], [9900.0, 1.0], [10500.0, 1.0], [10400.0, 2.0], [10600.0, 1.0], [10700.0, 1.0], [10900.0, 4.0], [11700.0, 2.0], [11400.0, 1.0], [11600.0, 2.0], [11800.0, 1.0], [12200.0, 2.0], [11900.0, 1.0], [12300.0, 1.0], [12700.0, 1.0], [12400.0, 1.0], [13200.0, 2.0], [13300.0, 1.0], [13100.0, 2.0], [12900.0, 1.0], [12800.0, 1.0], [13600.0, 2.0], [13800.0, 3.0], [13700.0, 2.0], [14000.0, 2.0], [14100.0, 3.0], [14800.0, 1.0], [14600.0, 1.0], [14900.0, 1.0], [15200.0, 1.0], [15100.0, 2.0], [15000.0, 1.0], [15400.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [16200.0, 1.0], [15900.0, 2.0], [16100.0, 1.0], [16300.0, 1.0], [17000.0, 1.0], [16400.0, 2.0], [18200.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [17600.0, 1.0], [19000.0, 2.0], [19400.0, 1.0], [18600.0, 1.0], [20400.0, 3.0], [20800.0, 2.0], [21400.0, 1.0], [21200.0, 1.0], [22000.0, 2.0], [21800.0, 1.0], [22200.0, 1.0], [23200.0, 2.0], [23000.0, 1.0], [22800.0, 2.0], [22600.0, 1.0], [24000.0, 1.0], [24200.0, 1.0], [23600.0, 1.0], [23800.0, 2.0], [24400.0, 1.0], [25000.0, 2.0], [24800.0, 1.0], [25800.0, 2.0], [26200.0, 1.0], [27600.0, 3.0], [27400.0, 1.0], [28000.0, 1.0], [28600.0, 1.0], [29000.0, 1.0], [29600.0, 1.0], [30200.0, 1.0], [30600.0, 1.0], [30000.0, 2.0], [31400.0, 1.0], [31200.0, 2.0], [32800.0, 1.0], [34000.0, 1.0], [33200.0, 1.0], [36400.0, 1.0], [35600.0, 1.0], [36000.0, 2.0], [38400.0, 3.0], [37200.0, 1.0], [38000.0, 1.0], [40800.0, 1.0], [40000.0, 1.0], [42000.0, 1.0], [43200.0, 1.0], [45200.0, 1.0], [48000.0, 1.0], [49600.0, 1.0], [52000.0, 1.0], [54000.0, 1.0], [55200.0, 1.0], [57600.0, 1.0], [60400.0, 9.0], [33100.0, 1.0], [33500.0, 1.0], [34700.0, 1.0], [35500.0, 1.0], [36700.0, 1.0], [35100.0, 2.0], [37900.0, 3.0], [39900.0, 1.0], [40700.0, 1.0], [40300.0, 1.0], [39100.0, 1.0], [43900.0, 1.0], [43500.0, 1.0], [45100.0, 1.0], [45900.0, 1.0], [51100.0, 1.0], [51900.0, 1.0], [53100.0, 1.0], [53500.0, 1.0], [56700.0, 1.0], [57100.0, 1.0], [57900.0, 1.0], [60300.0, 15.0], [16500.0, 1.0], [17100.0, 1.0], [16900.0, 1.0], [18100.0, 2.0], [17900.0, 1.0], [18300.0, 2.0], [19100.0, 1.0], [18900.0, 1.0], [19300.0, 1.0], [19900.0, 2.0], [20100.0, 1.0], [19500.0, 2.0], [19700.0, 1.0], [21500.0, 2.0], [21300.0, 1.0], [21700.0, 2.0], [22100.0, 1.0], [21900.0, 2.0], [22300.0, 2.0], [23300.0, 1.0], [23500.0, 1.0], [22700.0, 1.0], [23900.0, 2.0], [24500.0, 1.0], [25100.0, 1.0], [25300.0, 1.0], [26100.0, 1.0], [28100.0, 2.0], [27900.0, 1.0], [28500.0, 1.0], [29500.0, 4.0], [29300.0, 1.0], [29900.0, 1.0], [30100.0, 1.0], [30300.0, 1.0], [29700.0, 2.0], [30700.0, 2.0], [31300.0, 1.0], [31500.0, 1.0], [31700.0, 1.0], [32500.0, 1.0], [31900.0, 2.0], [32100.0, 1.0], [34200.0, 2.0], [33400.0, 1.0], [35800.0, 1.0], [35400.0, 1.0], [38200.0, 2.0], [37400.0, 2.0], [40200.0, 1.0], [41800.0, 1.0], [41400.0, 1.0], [45000.0, 1.0], [45800.0, 2.0], [46200.0, 1.0], [45400.0, 1.0], [49000.0, 1.0], [50200.0, 1.0], [53000.0, 1.0], [54200.0, 1.0], [57000.0, 1.0], [55400.0, 1.0], [58600.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 117.0], [33700.0, 1.0], [36100.0, 1.0], [36500.0, 1.0], [34900.0, 1.0], [38100.0, 2.0], [36900.0, 1.0], [40500.0, 1.0], [40100.0, 1.0], [42900.0, 1.0], [44900.0, 1.0], [43700.0, 1.0], [45700.0, 1.0], [47700.0, 1.0], [50900.0, 1.0], [49300.0, 1.0], [51700.0, 1.0], [53300.0, 1.0], [57300.0, 1.0], [56900.0, 1.0], [60100.0, 17.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 4.0], [1100.0, 3.0], [1300.0, 1.0], [2200.0, 1.0], [2500.0, 1.0], [3500.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4700.0, 1.0], [4900.0, 1.0], [5100.0, 4.0], [5000.0, 5.0], [5200.0, 5.0], [5300.0, 2.0], [5500.0, 2.0], [5800.0, 3.0], [6100.0, 3.0], [6300.0, 1.0], [6500.0, 2.0], [6400.0, 3.0], [7000.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [7900.0, 3.0], [8000.0, 1.0], [8600.0, 4.0], [8300.0, 1.0], [8200.0, 1.0], [9200.0, 1.0], [9000.0, 1.0], [8900.0, 4.0], [8800.0, 2.0], [9300.0, 2.0], [9500.0, 1.0], [9700.0, 1.0], [9600.0, 1.0], [10200.0, 2.0], [10100.0, 1.0], [10600.0, 1.0], [10400.0, 1.0], [10700.0, 3.0], [10500.0, 1.0], [11100.0, 1.0], [11400.0, 2.0], [11300.0, 1.0], [11500.0, 1.0], [11600.0, 2.0], [12100.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12600.0, 1.0], [12500.0, 1.0], [12900.0, 4.0], [13000.0, 1.0], [13400.0, 2.0], [13600.0, 2.0], [13700.0, 1.0], [13800.0, 3.0], [13500.0, 3.0], [13900.0, 1.0], [14600.0, 1.0], [14800.0, 2.0], [14500.0, 1.0], [14400.0, 1.0], [15000.0, 1.0], [14900.0, 1.0], [15200.0, 1.0], [15700.0, 1.0], [15600.0, 3.0], [16200.0, 3.0], [15900.0, 2.0], [16000.0, 1.0], [16600.0, 1.0], [18000.0, 2.0], [17800.0, 2.0], [17600.0, 1.0], [18400.0, 1.0], [18800.0, 1.0], [19200.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [19600.0, 1.0], [20200.0, 2.0], [21400.0, 1.0], [20600.0, 2.0], [21200.0, 2.0], [21000.0, 1.0], [21800.0, 2.0], [21600.0, 1.0], [22000.0, 1.0], [22400.0, 1.0], [22800.0, 1.0], [23200.0, 1.0], [22600.0, 1.0], [23800.0, 1.0], [24000.0, 1.0], [24200.0, 1.0], [24800.0, 2.0], [25000.0, 1.0], [25600.0, 2.0], [27800.0, 2.0], [29200.0, 1.0], [30400.0, 2.0], [29800.0, 1.0], [31200.0, 1.0], [31000.0, 1.0], [31600.0, 2.0], [32600.0, 1.0], [32200.0, 1.0], [34000.0, 1.0], [32800.0, 1.0], [34800.0, 1.0], [33200.0, 2.0], [34400.0, 1.0], [35600.0, 1.0], [35200.0, 2.0], [38000.0, 3.0], [37600.0, 3.0], [38800.0, 1.0], [37200.0, 1.0], [39600.0, 1.0], [41600.0, 1.0], [41200.0, 1.0], [44800.0, 1.0], [43200.0, 1.0], [45600.0, 1.0], [50000.0, 1.0], [51600.0, 1.0], [52800.0, 1.0], [55200.0, 1.0], [54000.0, 1.0], [56800.0, 1.0], [56400.0, 1.0], [57600.0, 1.0], [34300.0, 2.0], [33900.0, 1.0], [36700.0, 1.0], [37100.0, 2.0], [37500.0, 1.0], [39900.0, 1.0], [42300.0, 1.0], [41900.0, 1.0], [44700.0, 1.0], [45500.0, 1.0], [45900.0, 1.0], [45100.0, 1.0], [46700.0, 1.0], [47100.0, 1.0], [48700.0, 1.0], [49900.0, 1.0], [49500.0, 1.0], [52700.0, 1.0], [51500.0, 1.0], [54700.0, 1.0], [55900.0, 1.0], [58300.0, 1.0], [59900.0, 1.0], [60300.0, 1.0], [16700.0, 1.0], [16900.0, 1.0], [17300.0, 1.0], [17700.0, 1.0], [18100.0, 2.0], [19100.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [18700.0, 1.0], [19700.0, 1.0], [19900.0, 1.0], [20100.0, 1.0], [21300.0, 1.0], [21500.0, 1.0], [21100.0, 1.0], [21700.0, 3.0], [22500.0, 2.0], [22100.0, 2.0], [22900.0, 2.0], [23100.0, 1.0], [23300.0, 1.0], [23500.0, 2.0], [23700.0, 2.0], [24300.0, 1.0], [24500.0, 1.0], [24700.0, 1.0], [25900.0, 2.0], [27300.0, 3.0], [27100.0, 1.0], [27700.0, 2.0], [28300.0, 2.0], [28700.0, 1.0], [29300.0, 4.0], [29500.0, 2.0], [29100.0, 1.0], [29700.0, 2.0], [29900.0, 2.0], [30100.0, 1.0], [30500.0, 1.0], [31100.0, 2.0], [31500.0, 1.0], [30900.0, 1.0], [31900.0, 1.0], [33000.0, 3.0], [34200.0, 1.0], [35000.0, 1.0], [35400.0, 1.0], [35800.0, 2.0], [36200.0, 1.0], [37000.0, 1.0], [37800.0, 2.0], [40600.0, 1.0], [39800.0, 2.0], [41800.0, 2.0], [43000.0, 1.0], [42600.0, 1.0], [45400.0, 1.0], [47000.0, 1.0], [49400.0, 1.0], [53800.0, 1.0], [55000.0, 1.0], [60200.0, 8.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 13.0], [200.0, 481.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 278.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 376.0, "series": [{"data": [[0.0, 376.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 329.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 278.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.6363636363636365, "minX": 1.68517428E12, "maxY": 24.20833333333332, "series": [{"data": [[1.685175E12, 20.570048309178745], [1.68517434E12, 4.357142857142858], [1.68517464E12, 10.616541353383452], [1.6851747E12, 14.592233009708735], [1.68517458E12, 10.0], [1.68517494E12, 20.0], [1.68517488E12, 19.35135135135135], [1.68517428E12, 1.6363636363636365], [1.68517482E12, 15.60227272727273], [1.68517512E12, 20.346590909090907], [1.68517452E12, 9.22857142857143], [1.6851744E12, 5.0], [1.68517446E12, 5.514285714285714], [1.68517506E12, 24.20833333333332], [1.68517476E12, 15.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517512E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 231.0, "minX": 1.0, "maxY": 33172.555555555555, "series": [{"data": [[2.0, 10671.333333333332], [3.0, 9011.75], [4.0, 14798.333333333334], [5.0, 17115.689655172413], [6.0, 18574.571428571428], [7.0, 16317.0], [8.0, 231.0], [9.0, 33172.555555555555], [10.0, 12596.974025974027], [11.0, 18797.0], [12.0, 23310.384615384613], [13.0, 11684.0], [14.0, 15262.916666666666], [15.0, 21172.373333333326], [1.0, 4988.0], [16.0, 21684.222222222223], [17.0, 30342.75], [18.0, 28460.6], [19.0, 32740.999999999996], [20.0, 22394.72549019608], [21.0, 11232.714285714284], [22.0, 10653.933333333334], [23.0, 30120.315789473683], [24.0, 17072.95238095238], [25.0, 25988.962264150938]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.226720647773284, 20040.232793522275]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 10437.666666666668], [9.0, 32931.22222222222], [10.0, 12352.727272727274], [11.0, 18542.8], [3.0, 8775.5], [12.0, 23068.30769230769], [13.0, 11454.0], [14.0, 15022.333333333334], [15.0, 20924.86666666668], [1.0, 4697.5], [4.0, 14537.333333333334], [16.0, 24116.375000000004], [17.0, 30094.249999999996], [18.0, 28201.4], [19.0, 32487.833333333332], [5.0, 17466.89285714286], [20.0, 22367.76237623762], [21.0, 10991.571428571428], [22.0, 10412.866666666667], [23.0, 29868.21052631579], [6.0, 18335.0], [24.0, 16831.28571428571], [25.0, 26240.096153846163], [7.0, 16077.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.241308793456042, 19996.775051124754]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 238.33333333333334], [3.0, 245.5], [4.0, 248.33333333333334], [5.0, 248.7666666666667], [6.0, 244.5], [7.0, 236.0], [8.0, 234.5], [9.0, 276.8888888888889], [10.0, 238.89473684210523], [11.0, 233.25], [12.0, 247.49999999999997], [13.0, 286.0], [14.0, 238.33333333333334], [15.0, 248.18666666666672], [1.0, 292.0], [16.0, 263.2], [17.0, 245.71428571428572], [18.0, 256.2], [19.0, 252.33333333333331], [20.0, 242.90196078431384], [21.0, 241.42857142857142], [22.0, 251.18749999999997], [23.0, 241.75], [24.0, 248.89473684210526], [25.0, 247.13207547169816]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.214574898785433, 245.85222672064785]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 292.71666666666664, "minX": 1.68517428E12, "maxY": 10065.266666666666, "series": [{"data": [[1.685175E12, 3112.116666666667], [1.68517434E12, 1062.8333333333333], [1.68517464E12, 2181.7833333333333], [1.6851747E12, 2530.5], [1.68517458E12, 1761.9], [1.68517494E12, 2449.9], [1.68517488E12, 1796.6666666666667], [1.68517428E12, 292.71666666666664], [1.68517482E12, 2236.9666666666667], [1.68517512E12, 3357.6], [1.68517452E12, 766.9666666666667], [1.6851744E12, 1027.3666666666666], [1.68517446E12, 879.7833333333333], [1.68517506E12, 2950.5333333333333], [1.68517476E12, 2532.133333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.685175E12, 10065.266666666666], [1.68517434E12, 1977.7333333333333], [1.68517464E12, 6193.416666666667], [1.6851747E12, 4822.35], [1.68517458E12, 5988.866666666667], [1.68517494E12, 6401.2], [1.68517488E12, 3228.5666666666666], [1.68517428E12, 554.0], [1.68517482E12, 3897.7833333333333], [1.68517512E12, 9880.9], [1.68517452E12, 1548.5333333333333], [1.6851744E12, 2253.4333333333334], [1.68517446E12, 1372.55], [1.68517506E12, 9729.033333333333], [1.68517476E12, 5121.633333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517512E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 237.55813953488374, "minX": 1.68517428E12, "maxY": 36268.36, "series": [{"data": [[1.685175E12, 11384.417910447766], [1.68517434E12, 13439.23076923077], [1.68517464E12, 12816.853658536585], [1.6851747E12, 18922.676470588238], [1.68517458E12, 14455.043478260872], [1.68517494E12, 24735.5], [1.68517488E12, 36268.36], [1.68517428E12, 5428.666666666667], [1.68517482E12, 26018.55555555556], [1.68517512E12, 23059.95588235294], [1.68517452E12, 28585.916666666668], [1.6851744E12, 18474.642857142862], [1.68517446E12, 18672.272727272724], [1.68517506E12, 24009.245283018867], [1.68517476E12, 21308.861111111106]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.685175E12, 13944.652173913038], [1.68517434E12, 13192.307692307693], [1.68517464E12, 11860.577777777782], [1.6851747E12, 18129.969696969696], [1.68517458E12, 15456.790697674416], [1.68517494E12, 23795.609756097558], [1.68517488E12, 35555.956521739135], [1.68517428E12, 5155.666666666667], [1.68517482E12, 24666.068965517243], [1.68517512E12, 24252.265625], [1.68517452E12, 30561.0], [1.6851744E12, 18217.71428571429], [1.68517446E12, 18432.90909090909], [1.68517506E12, 22594.946428571428], [1.68517476E12, 21228.942857142854]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.685175E12, 242.04225352112672], [1.68517434E12, 252.25000000000003], [1.68517464E12, 240.89361702127655], [1.6851747E12, 242.33333333333331], [1.68517458E12, 237.55813953488374], [1.68517494E12, 242.19512195121953], [1.68517488E12, 256.07692307692304], [1.68517428E12, 259.8], [1.68517482E12, 251.40625], [1.68517512E12, 248.9318181818182], [1.68517452E12, 269.84615384615387], [1.6851744E12, 250.71428571428572], [1.68517446E12, 239.76923076923077], [1.68517506E12, 243.4576271186441], [1.68517476E12, 252.50000000000006]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517512E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 237.30232558139534, "minX": 1.68517428E12, "maxY": 36268.08000000001, "series": [{"data": [[1.685175E12, 11383.970149253728], [1.68517434E12, 13438.846153846154], [1.68517464E12, 12816.634146341465], [1.6851747E12, 18922.14705882353], [1.68517458E12, 14454.565217391304], [1.68517494E12, 24735.18181818182], [1.68517488E12, 36268.08000000001], [1.68517428E12, 5425.333333333333], [1.68517482E12, 26018.296296296303], [1.68517512E12, 23059.485294117632], [1.68517452E12, 28585.416666666664], [1.6851744E12, 18474.214285714283], [1.68517446E12, 18671.727272727272], [1.68517506E12, 24008.77358490565], [1.68517476E12, 21308.305555555555]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.685175E12, 13944.623188405796], [1.68517434E12, 13192.153846153846], [1.68517464E12, 11860.466666666669], [1.6851747E12, 18129.84848484848], [1.68517458E12, 15456.581395348838], [1.68517494E12, 23795.512195121948], [1.68517488E12, 35555.86956521739], [1.68517428E12, 5155.333333333333], [1.68517482E12, 24665.896551724134], [1.68517512E12, 24252.109375000007], [1.68517452E12, 30560.699999999997], [1.6851744E12, 18217.57142857143], [1.68517446E12, 18432.727272727272], [1.68517506E12, 22594.607142857134], [1.68517476E12, 21228.742857142857]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.685175E12, 241.774647887324], [1.68517434E12, 251.9375], [1.68517464E12, 240.68085106382975], [1.6851747E12, 241.99999999999997], [1.68517458E12, 237.30232558139534], [1.68517494E12, 242.02439024390245], [1.68517488E12, 255.8461538461539], [1.68517428E12, 258.0], [1.68517482E12, 251.25000000000003], [1.68517512E12, 248.65909090909088], [1.68517452E12, 269.61538461538464], [1.6851744E12, 250.42857142857144], [1.68517446E12, 239.46153846153848], [1.68517506E12, 243.06779661016952], [1.68517476E12, 252.23529411764707]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517512E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68517428E12, "maxY": 146.33333333333334, "series": [{"data": [[1.685175E12, 118.62686567164181], [1.68517434E12, 119.07692307692308], [1.68517464E12, 117.90243902439023], [1.6851747E12, 117.23529411764707], [1.68517458E12, 115.93478260869566], [1.68517494E12, 116.68181818181816], [1.68517488E12, 120.44], [1.68517428E12, 146.33333333333334], [1.68517482E12, 117.4074074074074], [1.68517512E12, 117.91176470588233], [1.68517452E12, 125.75000000000001], [1.6851744E12, 120.92857142857143], [1.68517446E12, 117.36363636363637], [1.68517506E12, 116.54716981132077], [1.68517476E12, 122.1666666666667]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.685175E12, 0.0], [1.68517434E12, 0.0], [1.68517464E12, 0.0], [1.6851747E12, 0.0], [1.68517458E12, 0.0], [1.68517494E12, 0.0], [1.68517488E12, 0.0], [1.68517428E12, 0.0], [1.68517482E12, 0.0], [1.68517512E12, 0.0], [1.68517452E12, 0.0], [1.6851744E12, 0.0], [1.68517446E12, 0.0], [1.68517506E12, 0.0], [1.68517476E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.685175E12, 118.18309859154931], [1.68517434E12, 118.4375], [1.68517464E12, 117.68085106382982], [1.6851747E12, 116.94444444444444], [1.68517458E12, 116.0232558139535], [1.68517494E12, 116.95121951219512], [1.68517488E12, 116.84615384615385], [1.68517428E12, 135.4], [1.68517482E12, 119.8125], [1.68517512E12, 118.52272727272727], [1.68517452E12, 120.53846153846152], [1.6851744E12, 121.71428571428572], [1.68517446E12, 120.61538461538461], [1.68517506E12, 117.03389830508475], [1.68517476E12, 122.64705882352943]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517512E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 227.0, "minX": 1.68517428E12, "maxY": 59930.0, "series": [{"data": [[1.685175E12, 57689.0], [1.68517434E12, 18832.0], [1.68517464E12, 42339.0], [1.6851747E12, 36702.0], [1.68517458E12, 45626.0], [1.68517494E12, 59930.0], [1.68517488E12, 49497.0], [1.68517428E12, 6157.0], [1.68517482E12, 40112.0], [1.68517512E12, 57382.0], [1.68517452E12, 41619.0], [1.6851744E12, 23817.0], [1.68517446E12, 21878.0], [1.68517506E12, 58372.0], [1.68517476E12, 50055.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.685175E12, 52530.600000000006], [1.68517434E12, 16778.0], [1.68517464E12, 32302.399999999994], [1.6851747E12, 25974.0], [1.68517458E12, 44970.200000000004], [1.68517494E12, 45050.0], [1.68517488E12, 43030.0], [1.68517428E12, 6157.0], [1.68517482E12, 34904.8], [1.68517512E12, 30727.4], [1.68517452E12, 41094.600000000006], [1.6851744E12, 21946.2], [1.68517446E12, 21555.0], [1.68517506E12, 39072.10000000003], [1.68517476E12, 37503.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.685175E12, 57689.0], [1.68517434E12, 18832.0], [1.68517464E12, 42339.0], [1.6851747E12, 36702.0], [1.68517458E12, 45626.0], [1.68517494E12, 59930.0], [1.68517488E12, 49497.0], [1.68517428E12, 6157.0], [1.68517482E12, 40112.0], [1.68517512E12, 57382.0], [1.68517452E12, 41619.0], [1.6851744E12, 23817.0], [1.68517446E12, 21878.0], [1.68517506E12, 58372.0], [1.68517476E12, 50055.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.685175E12, 55865.0], [1.68517434E12, 18420.0], [1.68517464E12, 39924.09999999999], [1.6851747E12, 31760.5], [1.68517458E12, 45585.8], [1.68517494E12, 51425.349999999984], [1.68517488E12, 45837.5], [1.68517428E12, 6157.0], [1.68517482E12, 38705.5], [1.68517512E12, 52851.600000000006], [1.68517452E12, 41600.7], [1.6851744E12, 23433.6], [1.68517446E12, 21854.5], [1.68517506E12, 54474.4], [1.68517476E12, 44934.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.685175E12, 227.0], [1.68517434E12, 239.0], [1.68517464E12, 229.0], [1.6851747E12, 228.0], [1.68517458E12, 229.0], [1.68517494E12, 229.0], [1.68517488E12, 229.0], [1.68517428E12, 231.0], [1.68517482E12, 231.0], [1.68517512E12, 229.0], [1.68517452E12, 229.0], [1.6851744E12, 238.0], [1.68517446E12, 227.0], [1.68517506E12, 228.0], [1.68517476E12, 229.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.685175E12, 258.0], [1.68517434E12, 277.0], [1.68517464E12, 270.0], [1.6851747E12, 273.0], [1.68517458E12, 34369.0], [1.68517494E12, 281.0], [1.68517488E12, 291.0], [1.68517428E12, 298.0], [1.68517482E12, 304.0], [1.68517512E12, 5023.0], [1.68517452E12, 364.5], [1.6851744E12, 4173.0], [1.68517446E12, 276.0], [1.68517506E12, 264.5], [1.68517476E12, 5201.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517512E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 226.0, "minX": 1.0, "maxY": 36594.0, "series": [{"data": [[1.0, 282.0], [2.0, 265.0], [4.0, 301.0], [16.0, 36594.0], [8.0, 11474.0], [9.0, 19137.0], [5.0, 268.5], [10.0, 263.0], [3.0, 296.0], [6.0, 7999.0], [7.0, 261.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 226.5], [2.0, 227.0], [16.0, 227.5], [4.0, 228.0], [8.0, 226.0], [5.0, 227.0], [10.0, 260.5], [3.0, 226.5], [6.0, 228.0], [7.0, 237.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 226.0, "minX": 1.0, "maxY": 36593.5, "series": [{"data": [[1.0, 282.0], [2.0, 265.0], [4.0, 301.0], [16.0, 36593.5], [8.0, 11474.0], [9.0, 19137.0], [5.0, 268.5], [10.0, 261.0], [3.0, 296.0], [6.0, 7999.0], [7.0, 260.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 226.5], [2.0, 227.0], [16.0, 227.0], [4.0, 228.0], [8.0, 226.0], [5.0, 227.0], [10.0, 260.5], [3.0, 226.5], [6.0, 228.0], [7.0, 237.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.68517428E12, "maxY": 2.3333333333333335, "series": [{"data": [[1.685175E12, 2.3333333333333335], [1.68517434E12, 0.5], [1.68517464E12, 1.5166666666666666], [1.6851747E12, 1.2666666666666666], [1.68517458E12, 1.3833333333333333], [1.68517494E12, 1.35], [1.68517488E12, 0.9], [1.68517428E12, 0.16666666666666666], [1.68517482E12, 1.0833333333333333], [1.68517512E12, 1.4666666666666666], [1.68517452E12, 0.4166666666666667], [1.6851744E12, 0.48333333333333334], [1.68517446E12, 0.45], [1.68517506E12, 1.95], [1.68517476E12, 1.1166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517512E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68517428E12, "maxY": 1.4166666666666667, "series": [{"data": [[1.685175E12, 1.0166666666666666], [1.68517434E12, 0.48333333333333334], [1.68517464E12, 0.75], [1.6851747E12, 1.15], [1.68517458E12, 0.5166666666666667], [1.68517494E12, 1.0], [1.68517488E12, 0.8166666666666667], [1.68517428E12, 0.13333333333333333], [1.68517482E12, 1.0166666666666666], [1.68517512E12, 1.4166666666666667], [1.68517452E12, 0.3333333333333333], [1.6851744E12, 0.4666666666666667], [1.68517446E12, 0.4], [1.68517506E12, 1.1], [1.68517476E12, 1.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.685175E12, 0.06666666666666667], [1.68517512E12, 0.11666666666666667], [1.68517506E12, 0.1]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.685175E12, 1.1666666666666667], [1.68517464E12, 0.7833333333333333], [1.68517512E12, 0.1], [1.68517452E12, 0.05], [1.68517458E12, 0.9166666666666666], [1.68517494E12, 0.35], [1.68517506E12, 0.55]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.685175E12, 0.08333333333333333], [1.68517512E12, 0.16666666666666666], [1.68517494E12, 0.016666666666666666], [1.68517506E12, 0.16666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68517512E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68517428E12, "maxY": 0.9833333333333333, "series": [{"data": [[1.685175E12, 0.65], [1.68517434E12, 0.26666666666666666], [1.68517464E12, 0.4], [1.6851747E12, 0.6], [1.68517458E12, 0.21666666666666667], [1.68517494E12, 0.5166666666666667], [1.68517488E12, 0.43333333333333335], [1.68517428E12, 0.08333333333333333], [1.68517482E12, 0.5333333333333333], [1.68517512E12, 0.6833333333333333], [1.68517452E12, 0.18333333333333332], [1.6851744E12, 0.23333333333333334], [1.68517446E12, 0.21666666666666667], [1.68517506E12, 0.6833333333333333], [1.68517476E12, 0.5666666666666667]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.685175E12, 0.5333333333333333], [1.68517464E12, 0.38333333333333336], [1.68517512E12, 0.05], [1.68517452E12, 0.03333333333333333], [1.68517458E12, 0.5], [1.68517494E12, 0.16666666666666666], [1.68517506E12, 0.3]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.685175E12, 0.7833333333333333], [1.68517464E12, 0.4], [1.68517512E12, 0.3333333333333333], [1.68517452E12, 0.016666666666666666], [1.68517458E12, 0.4166666666666667], [1.68517494E12, 0.2], [1.68517506E12, 0.5166666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.685175E12, 0.13333333333333333], [1.68517434E12, 0.21666666666666667], [1.68517464E12, 0.08333333333333333], [1.6851747E12, 0.5666666666666667], [1.68517458E12, 0.2], [1.68517494E12, 0.5], [1.68517488E12, 0.4166666666666667], [1.68517428E12, 0.05], [1.68517482E12, 0.45], [1.68517512E12, 0.7666666666666667], [1.68517452E12, 0.16666666666666666], [1.6851744E12, 0.23333333333333334], [1.68517446E12, 0.18333333333333332], [1.68517506E12, 0.26666666666666666], [1.68517476E12, 0.6]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.685175E12, 0.9833333333333333], [1.68517464E12, 0.6], [1.68517512E12, 0.36666666666666664], [1.68517452E12, 0.03333333333333333], [1.68517458E12, 0.5666666666666667], [1.68517494E12, 0.23333333333333334], [1.68517506E12, 0.6166666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.685175E12, 0.36666666666666664], [1.68517434E12, 0.21666666666666667], [1.68517464E12, 0.35], [1.6851747E12, 0.55], [1.68517458E12, 0.3], [1.68517494E12, 0.48333333333333334], [1.68517488E12, 0.38333333333333336], [1.68517428E12, 0.05], [1.68517482E12, 0.48333333333333334], [1.68517512E12, 0.7333333333333333], [1.68517452E12, 0.15], [1.6851744E12, 0.23333333333333334], [1.68517446E12, 0.18333333333333332], [1.68517506E12, 0.4166666666666667], [1.68517476E12, 0.5833333333333334]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517512E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68517428E12, "maxY": 2.3, "series": [{"data": [[1.685175E12, 1.15], [1.68517434E12, 0.7], [1.68517464E12, 0.8333333333333334], [1.6851747E12, 1.7166666666666666], [1.68517458E12, 0.7166666666666667], [1.68517494E12, 1.5], [1.68517488E12, 1.2333333333333334], [1.68517428E12, 0.18333333333333332], [1.68517482E12, 1.4666666666666666], [1.68517512E12, 2.183333333333333], [1.68517452E12, 0.5], [1.6851744E12, 0.7], [1.68517446E12, 0.5833333333333334], [1.68517506E12, 1.3666666666666667], [1.68517476E12, 1.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.685175E12, 2.3], [1.68517464E12, 1.3833333333333333], [1.68517512E12, 0.75], [1.68517452E12, 0.08333333333333333], [1.68517458E12, 1.4833333333333334], [1.68517494E12, 0.6], [1.68517506E12, 1.4333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68517512E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

