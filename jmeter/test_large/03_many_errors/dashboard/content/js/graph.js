/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 112.0, "minX": 0.0, "maxY": 60579.0, "series": [{"data": [[0.0, 337.0], [0.1, 337.0], [0.2, 338.0], [0.3, 338.0], [0.4, 338.0], [0.5, 338.0], [0.6, 339.0], [0.7, 339.0], [0.8, 339.0], [0.9, 339.0], [1.0, 339.0], [1.1, 339.0], [1.2, 339.0], [1.3, 339.0], [1.4, 339.0], [1.5, 340.0], [1.6, 340.0], [1.7, 340.0], [1.8, 340.0], [1.9, 340.0], [2.0, 340.0], [2.1, 340.0], [2.2, 340.0], [2.3, 340.0], [2.4, 340.0], [2.5, 340.0], [2.6, 340.0], [2.7, 340.0], [2.8, 340.0], [2.9, 341.0], [3.0, 341.0], [3.1, 341.0], [3.2, 341.0], [3.3, 341.0], [3.4, 341.0], [3.5, 341.0], [3.6, 341.0], [3.7, 342.0], [3.8, 342.0], [3.9, 342.0], [4.0, 342.0], [4.1, 342.0], [4.2, 342.0], [4.3, 342.0], [4.4, 342.0], [4.5, 342.0], [4.6, 342.0], [4.7, 342.0], [4.8, 342.0], [4.9, 342.0], [5.0, 342.0], [5.1, 342.0], [5.2, 342.0], [5.3, 342.0], [5.4, 342.0], [5.5, 343.0], [5.6, 343.0], [5.7, 343.0], [5.8, 343.0], [5.9, 343.0], [6.0, 343.0], [6.1, 343.0], [6.2, 343.0], [6.3, 343.0], [6.4, 343.0], [6.5, 343.0], [6.6, 343.0], [6.7, 343.0], [6.8, 343.0], [6.9, 343.0], [7.0, 344.0], [7.1, 344.0], [7.2, 344.0], [7.3, 344.0], [7.4, 344.0], [7.5, 344.0], [7.6, 344.0], [7.7, 344.0], [7.8, 344.0], [7.9, 344.0], [8.0, 344.0], [8.1, 344.0], [8.2, 344.0], [8.3, 344.0], [8.4, 344.0], [8.5, 344.0], [8.6, 344.0], [8.7, 345.0], [8.8, 345.0], [8.9, 345.0], [9.0, 345.0], [9.1, 345.0], [9.2, 345.0], [9.3, 345.0], [9.4, 345.0], [9.5, 345.0], [9.6, 345.0], [9.7, 346.0], [9.8, 346.0], [9.9, 346.0], [10.0, 346.0], [10.1, 347.0], [10.2, 347.0], [10.3, 347.0], [10.4, 347.0], [10.5, 347.0], [10.6, 347.0], [10.7, 347.0], [10.8, 347.0], [10.9, 347.0], [11.0, 348.0], [11.1, 348.0], [11.2, 348.0], [11.3, 348.0], [11.4, 348.0], [11.5, 348.0], [11.6, 348.0], [11.7, 348.0], [11.8, 348.0], [11.9, 349.0], [12.0, 349.0], [12.1, 349.0], [12.2, 349.0], [12.3, 350.0], [12.4, 351.0], [12.5, 351.0], [12.6, 351.0], [12.7, 351.0], [12.8, 351.0], [12.9, 352.0], [13.0, 353.0], [13.1, 353.0], [13.2, 353.0], [13.3, 353.0], [13.4, 353.0], [13.5, 353.0], [13.6, 353.0], [13.7, 353.0], [13.8, 354.0], [13.9, 354.0], [14.0, 354.0], [14.1, 354.0], [14.2, 354.0], [14.3, 354.0], [14.4, 354.0], [14.5, 354.0], [14.6, 354.0], [14.7, 354.0], [14.8, 354.0], [14.9, 354.0], [15.0, 354.0], [15.1, 354.0], [15.2, 354.0], [15.3, 354.0], [15.4, 354.0], [15.5, 354.0], [15.6, 354.0], [15.7, 354.0], [15.8, 354.0], [15.9, 354.0], [16.0, 355.0], [16.1, 355.0], [16.2, 355.0], [16.3, 355.0], [16.4, 355.0], [16.5, 355.0], [16.6, 355.0], [16.7, 355.0], [16.8, 355.0], [16.9, 355.0], [17.0, 355.0], [17.1, 355.0], [17.2, 355.0], [17.3, 355.0], [17.4, 355.0], [17.5, 355.0], [17.6, 355.0], [17.7, 356.0], [17.8, 356.0], [17.9, 356.0], [18.0, 356.0], [18.1, 356.0], [18.2, 356.0], [18.3, 356.0], [18.4, 356.0], [18.5, 356.0], [18.6, 356.0], [18.7, 356.0], [18.8, 356.0], [18.9, 356.0], [19.0, 357.0], [19.1, 357.0], [19.2, 357.0], [19.3, 357.0], [19.4, 357.0], [19.5, 357.0], [19.6, 357.0], [19.7, 357.0], [19.8, 357.0], [19.9, 357.0], [20.0, 357.0], [20.1, 357.0], [20.2, 357.0], [20.3, 357.0], [20.4, 357.0], [20.5, 357.0], [20.6, 357.0], [20.7, 357.0], [20.8, 358.0], [20.9, 358.0], [21.0, 358.0], [21.1, 358.0], [21.2, 358.0], [21.3, 358.0], [21.4, 358.0], [21.5, 358.0], [21.6, 358.0], [21.7, 358.0], [21.8, 358.0], [21.9, 358.0], [22.0, 358.0], [22.1, 358.0], [22.2, 359.0], [22.3, 359.0], [22.4, 359.0], [22.5, 359.0], [22.6, 359.0], [22.7, 359.0], [22.8, 359.0], [22.9, 359.0], [23.0, 360.0], [23.1, 360.0], [23.2, 360.0], [23.3, 360.0], [23.4, 360.0], [23.5, 360.0], [23.6, 360.0], [23.7, 360.0], [23.8, 360.0], [23.9, 360.0], [24.0, 360.0], [24.1, 360.0], [24.2, 360.0], [24.3, 360.0], [24.4, 360.0], [24.5, 360.0], [24.6, 360.0], [24.7, 360.0], [24.8, 360.0], [24.9, 360.0], [25.0, 360.0], [25.1, 361.0], [25.2, 361.0], [25.3, 361.0], [25.4, 361.0], [25.5, 361.0], [25.6, 361.0], [25.7, 361.0], [25.8, 361.0], [25.9, 361.0], [26.0, 361.0], [26.1, 361.0], [26.2, 361.0], [26.3, 361.0], [26.4, 362.0], [26.5, 362.0], [26.6, 362.0], [26.7, 362.0], [26.8, 362.0], [26.9, 363.0], [27.0, 363.0], [27.1, 363.0], [27.2, 363.0], [27.3, 363.0], [27.4, 363.0], [27.5, 363.0], [27.6, 363.0], [27.7, 363.0], [27.8, 363.0], [27.9, 363.0], [28.0, 363.0], [28.1, 363.0], [28.2, 364.0], [28.3, 364.0], [28.4, 364.0], [28.5, 364.0], [28.6, 364.0], [28.7, 364.0], [28.8, 365.0], [28.9, 365.0], [29.0, 365.0], [29.1, 365.0], [29.2, 365.0], [29.3, 365.0], [29.4, 365.0], [29.5, 366.0], [29.6, 366.0], [29.7, 366.0], [29.8, 366.0], [29.9, 366.0], [30.0, 366.0], [30.1, 366.0], [30.2, 366.0], [30.3, 367.0], [30.4, 367.0], [30.5, 367.0], [30.6, 367.0], [30.7, 367.0], [30.8, 368.0], [30.9, 368.0], [31.0, 368.0], [31.1, 369.0], [31.2, 369.0], [31.3, 369.0], [31.4, 369.0], [31.5, 370.0], [31.6, 371.0], [31.7, 371.0], [31.8, 371.0], [31.9, 372.0], [32.0, 372.0], [32.1, 373.0], [32.2, 374.0], [32.3, 375.0], [32.4, 375.0], [32.5, 376.0], [32.6, 377.0], [32.7, 377.0], [32.8, 377.0], [32.9, 378.0], [33.0, 378.0], [33.1, 379.0], [33.2, 379.0], [33.3, 379.0], [33.4, 379.0], [33.5, 379.0], [33.6, 380.0], [33.7, 380.0], [33.8, 380.0], [33.9, 382.0], [34.0, 382.0], [34.1, 382.0], [34.2, 383.0], [34.3, 387.0], [34.4, 387.0], [34.5, 388.0], [34.6, 389.0], [34.7, 389.0], [34.8, 389.0], [34.9, 390.0], [35.0, 390.0], [35.1, 390.0], [35.2, 391.0], [35.3, 392.0], [35.4, 392.0], [35.5, 393.0], [35.6, 394.0], [35.7, 394.0], [35.8, 395.0], [35.9, 397.0], [36.0, 399.0], [36.1, 399.0], [36.2, 401.0], [36.3, 402.0], [36.4, 402.0], [36.5, 403.0], [36.6, 407.0], [36.7, 408.0], [36.8, 408.0], [36.9, 418.0], [37.0, 420.0], [37.1, 420.0], [37.2, 424.0], [37.3, 424.0], [37.4, 424.0], [37.5, 427.0], [37.6, 433.0], [37.7, 446.0], [37.8, 446.0], [37.9, 470.0], [38.0, 490.0], [38.1, 490.0], [38.2, 695.0], [38.3, 696.0], [38.4, 696.0], [38.5, 722.0], [38.6, 755.0], [38.7, 788.0], [38.8, 788.0], [38.9, 800.0], [39.0, 836.0], [39.1, 836.0], [39.2, 855.0], [39.3, 863.0], [39.4, 863.0], [39.5, 875.0], [39.6, 900.0], [39.7, 930.0], [39.8, 930.0], [39.9, 956.0], [40.0, 961.0], [40.1, 961.0], [40.2, 975.0], [40.3, 978.0], [40.4, 988.0], [40.5, 988.0], [40.6, 1005.0], [40.7, 1040.0], [40.8, 1040.0], [40.9, 1040.0], [41.0, 1042.0], [41.1, 1042.0], [41.2, 1057.0], [41.3, 1089.0], [41.4, 1097.0], [41.5, 1097.0], [41.6, 1101.0], [41.7, 1104.0], [41.8, 1104.0], [41.9, 1108.0], [42.0, 1114.0], [42.1, 1114.0], [42.2, 1124.0], [42.3, 1125.0], [42.4, 1130.0], [42.5, 1130.0], [42.6, 1146.0], [42.7, 1163.0], [42.8, 1163.0], [42.9, 1173.0], [43.0, 1174.0], [43.1, 1174.0], [43.2, 1181.0], [43.3, 1183.0], [43.4, 1186.0], [43.5, 1186.0], [43.6, 1188.0], [43.7, 1197.0], [43.8, 1197.0], [43.9, 1199.0], [44.0, 1207.0], [44.1, 1210.0], [44.2, 1210.0], [44.3, 1220.0], [44.4, 1225.0], [44.5, 1225.0], [44.6, 1233.0], [44.7, 1248.0], [44.8, 1248.0], [44.9, 1255.0], [45.0, 1262.0], [45.1, 1263.0], [45.2, 1263.0], [45.3, 1263.0], [45.4, 1266.0], [45.5, 1266.0], [45.6, 1278.0], [45.7, 1284.0], [45.8, 1284.0], [45.9, 1301.0], [46.0, 1304.0], [46.1, 1317.0], [46.2, 1317.0], [46.3, 1324.0], [46.4, 1325.0], [46.5, 1325.0], [46.6, 1334.0], [46.7, 1348.0], [46.8, 1359.0], [46.9, 1359.0], [47.0, 1371.0], [47.1, 1377.0], [47.2, 1377.0], [47.3, 1381.0], [47.4, 1385.0], [47.5, 1385.0], [47.6, 1388.0], [47.7, 1402.0], [47.8, 1403.0], [47.9, 1403.0], [48.0, 1410.0], [48.1, 1414.0], [48.2, 1414.0], [48.3, 1415.0], [48.4, 1424.0], [48.5, 1424.0], [48.6, 1428.0], [48.7, 1440.0], [48.8, 1477.0], [48.9, 1477.0], [49.0, 1479.0], [49.1, 1480.0], [49.2, 1480.0], [49.3, 1482.0], [49.4, 1486.0], [49.5, 1486.0], [49.6, 1535.0], [49.7, 1559.0], [49.8, 1569.0], [49.9, 1569.0], [50.0, 1574.0], [50.1, 1650.0], [50.2, 1650.0], [50.3, 1660.0], [50.4, 1661.0], [50.5, 1672.0], [50.6, 1672.0], [50.7, 1674.0], [50.8, 1702.0], [50.9, 1702.0], [51.0, 1725.0], [51.1, 1736.0], [51.2, 1736.0], [51.3, 1738.0], [51.4, 1738.0], [51.5, 1762.0], [51.6, 1762.0], [51.7, 1767.0], [51.8, 1776.0], [51.9, 1776.0], [52.0, 1786.0], [52.1, 1790.0], [52.2, 1790.0], [52.3, 1809.0], [52.4, 1819.0], [52.5, 1850.0], [52.6, 1850.0], [52.7, 1858.0], [52.8, 1860.0], [52.9, 1860.0], [53.0, 1869.0], [53.1, 1874.0], [53.2, 1874.0], [53.3, 1874.0], [53.4, 1877.0], [53.5, 1890.0], [53.6, 1890.0], [53.7, 2022.0], [53.8, 2032.0], [53.9, 2032.0], [54.0, 2078.0], [54.1, 2159.0], [54.2, 2169.0], [54.3, 2169.0], [54.4, 2206.0], [54.5, 2290.0], [54.6, 2290.0], [54.7, 2308.0], [54.8, 2320.0], [54.9, 2320.0], [55.0, 2421.0], [55.1, 2570.0], [55.2, 2642.0], [55.3, 2642.0], [55.4, 2645.0], [55.5, 2658.0], [55.6, 2658.0], [55.7, 2849.0], [55.8, 3086.0], [55.9, 3086.0], [56.0, 3208.0], [56.1, 3291.0], [56.2, 3371.0], [56.3, 3371.0], [56.4, 3561.0], [56.5, 3654.0], [56.6, 3654.0], [56.7, 3746.0], [56.8, 3871.0], [56.9, 3879.0], [57.0, 3879.0], [57.1, 3995.0], [57.2, 4175.0], [57.3, 4175.0], [57.4, 4251.0], [57.5, 4298.0], [57.6, 4298.0], [57.7, 4489.0], [57.8, 4629.0], [57.9, 4649.0], [58.0, 4649.0], [58.1, 4703.0], [58.2, 4713.0], [58.3, 4713.0], [58.4, 4760.0], [58.5, 4877.0], [58.6, 4877.0], [58.7, 4884.0], [58.8, 5000.0], [58.9, 5113.0], [59.0, 5113.0], [59.1, 5116.0], [59.2, 5189.0], [59.3, 5189.0], [59.4, 5266.0], [59.5, 5290.0], [59.6, 5290.0], [59.7, 5476.0], [59.8, 5627.0], [59.9, 5981.0], [60.0, 5981.0], [60.1, 6001.0], [60.2, 6103.0], [60.3, 6103.0], [60.4, 6347.0], [60.5, 6352.0], [60.6, 6467.0], [60.7, 6467.0], [60.8, 6468.0], [60.9, 6603.0], [61.0, 6603.0], [61.1, 6617.0], [61.2, 6677.0], [61.3, 6677.0], [61.4, 6793.0], [61.5, 6835.0], [61.6, 6849.0], [61.7, 6849.0], [61.8, 6852.0], [61.9, 6873.0], [62.0, 6873.0], [62.1, 6889.0], [62.2, 7147.0], [62.3, 7147.0], [62.4, 7243.0], [62.5, 7317.0], [62.6, 7353.0], [62.7, 7353.0], [62.8, 7488.0], [62.9, 7519.0], [63.0, 7519.0], [63.1, 7531.0], [63.2, 7536.0], [63.3, 7536.0], [63.4, 7588.0], [63.5, 7708.0], [63.6, 7761.0], [63.7, 7761.0], [63.8, 7771.0], [63.9, 7805.0], [64.0, 7805.0], [64.1, 7833.0], [64.2, 7992.0], [64.3, 8099.0], [64.4, 8099.0], [64.5, 8124.0], [64.6, 8174.0], [64.7, 8174.0], [64.8, 8203.0], [64.9, 8358.0], [65.0, 8358.0], [65.1, 8383.0], [65.2, 8396.0], [65.3, 8478.0], [65.4, 8478.0], [65.5, 8606.0], [65.6, 8819.0], [65.7, 8819.0], [65.8, 9275.0], [65.9, 9395.0], [66.0, 9395.0], [66.1, 9565.0], [66.2, 9814.0], [66.3, 10034.0], [66.4, 10034.0], [66.5, 10233.0], [66.6, 10264.0], [66.7, 10264.0], [66.8, 10426.0], [66.9, 10631.0], [67.0, 10671.0], [67.1, 10671.0], [67.2, 10785.0], [67.3, 10824.0], [67.4, 10824.0], [67.5, 10826.0], [67.6, 10921.0], [67.7, 10921.0], [67.8, 11350.0], [67.9, 11607.0], [68.0, 11769.0], [68.1, 11769.0], [68.2, 11854.0], [68.3, 11986.0], [68.4, 11986.0], [68.5, 12095.0], [68.6, 12205.0], [68.7, 12205.0], [68.8, 12841.0], [68.9, 12862.0], [69.0, 13082.0], [69.1, 13082.0], [69.2, 13245.0], [69.3, 13381.0], [69.4, 13381.0], [69.5, 13849.0], [69.6, 13993.0], [69.7, 13993.0], [69.8, 14262.0], [69.9, 14465.0], [70.0, 14469.0], [70.1, 14469.0], [70.2, 14619.0], [70.3, 14761.0], [70.4, 14761.0], [70.5, 15131.0], [70.6, 15275.0], [70.7, 15405.0], [70.8, 15405.0], [70.9, 15720.0], [71.0, 15800.0], [71.1, 15800.0], [71.2, 15930.0], [71.3, 15978.0], [71.4, 15978.0], [71.5, 16019.0], [71.6, 16066.0], [71.7, 16169.0], [71.8, 16169.0], [71.9, 16240.0], [72.0, 16488.0], [72.1, 16488.0], [72.2, 16532.0], [72.3, 16550.0], [72.4, 16550.0], [72.5, 17107.0], [72.6, 17124.0], [72.7, 17381.0], [72.8, 17381.0], [72.9, 17392.0], [73.0, 18080.0], [73.1, 18080.0], [73.2, 18494.0], [73.3, 18567.0], [73.4, 18580.0], [73.5, 18580.0], [73.6, 18653.0], [73.7, 18743.0], [73.8, 18743.0], [73.9, 18893.0], [74.0, 19049.0], [74.1, 19049.0], [74.2, 19268.0], [74.3, 19341.0], [74.4, 19602.0], [74.5, 19602.0], [74.6, 19877.0], [74.7, 20205.0], [74.8, 20205.0], [74.9, 20459.0], [75.0, 20462.0], [75.1, 20462.0], [75.2, 20574.0], [75.3, 20987.0], [75.4, 21047.0], [75.5, 21047.0], [75.6, 21128.0], [75.7, 21226.0], [75.8, 21226.0], [75.9, 21302.0], [76.0, 21347.0], [76.1, 21347.0], [76.2, 21433.0], [76.3, 21558.0], [76.4, 21701.0], [76.5, 21701.0], [76.6, 21709.0], [76.7, 22346.0], [76.8, 22346.0], [76.9, 22387.0], [77.0, 22506.0], [77.1, 22523.0], [77.2, 22523.0], [77.3, 23100.0], [77.4, 23293.0], [77.5, 23293.0], [77.6, 23420.0], [77.7, 23453.0], [77.8, 23453.0], [77.9, 23522.0], [78.0, 23563.0], [78.1, 23804.0], [78.2, 23804.0], [78.3, 24134.0], [78.4, 24325.0], [78.5, 24325.0], [78.6, 24852.0], [78.7, 25156.0], [78.8, 25156.0], [78.9, 25352.0], [79.0, 25380.0], [79.1, 25424.0], [79.2, 25424.0], [79.3, 25445.0], [79.4, 25516.0], [79.5, 25516.0], [79.6, 25760.0], [79.7, 25793.0], [79.8, 25793.0], [79.9, 25897.0], [80.0, 25961.0], [80.1, 26036.0], [80.2, 26036.0], [80.3, 26221.0], [80.4, 26472.0], [80.5, 26472.0], [80.6, 26794.0], [80.7, 27026.0], [80.8, 27218.0], [80.9, 27218.0], [81.0, 28157.0], [81.1, 28217.0], [81.2, 28217.0], [81.3, 28511.0], [81.4, 29480.0], [81.5, 29480.0], [81.6, 29562.0], [81.7, 29998.0], [81.8, 30256.0], [81.9, 30256.0], [82.0, 30340.0], [82.1, 30341.0], [82.2, 30341.0], [82.3, 30504.0], [82.4, 30634.0], [82.5, 30634.0], [82.6, 30804.0], [82.7, 31745.0], [82.8, 32546.0], [82.9, 32546.0], [83.0, 32816.0], [83.1, 33996.0], [83.2, 33996.0], [83.3, 34396.0], [83.4, 36088.0], [83.5, 36967.0], [83.6, 36967.0], [83.7, 38067.0], [83.8, 38474.0], [83.9, 38474.0], [84.0, 38590.0], [84.1, 38654.0], [84.2, 38654.0], [84.3, 38671.0], [84.4, 38797.0], [84.5, 39356.0], [84.6, 39356.0], [84.7, 39420.0], [84.8, 39526.0], [84.9, 39526.0], [85.0, 39639.0], [85.1, 40323.0], [85.2, 40323.0], [85.3, 40701.0], [85.4, 40737.0], [85.5, 41441.0], [85.6, 41441.0], [85.7, 41809.0], [85.8, 41927.0], [85.9, 41927.0], [86.0, 42071.0], [86.1, 42224.0], [86.2, 42224.0], [86.3, 42760.0], [86.4, 42829.0], [86.5, 43327.0], [86.6, 43327.0], [86.7, 43527.0], [86.8, 44315.0], [86.9, 44315.0], [87.0, 45099.0], [87.1, 45959.0], [87.2, 47272.0], [87.3, 47272.0], [87.4, 47579.0], [87.5, 49547.0], [87.6, 49547.0], [87.7, 55702.0], [87.8, 56110.0], [87.9, 56110.0], [88.0, 56471.0], [88.1, 59590.0], [88.2, 59768.0], [88.3, 59768.0], [88.4, 60345.0], [88.5, 60347.0], [88.6, 60347.0], [88.7, 60351.0], [88.8, 60351.0], [88.9, 60351.0], [89.0, 60353.0], [89.1, 60355.0], [89.2, 60359.0], [89.3, 60359.0], [89.4, 60360.0], [89.5, 60361.0], [89.6, 60361.0], [89.7, 60361.0], [89.8, 60362.0], [89.9, 60362.0], [90.0, 60362.0], [90.1, 60365.0], [90.2, 60365.0], [90.3, 60365.0], [90.4, 60366.0], [90.5, 60367.0], [90.6, 60367.0], [90.7, 60368.0], [90.8, 60369.0], [90.9, 60372.0], [91.0, 60372.0], [91.1, 60373.0], [91.2, 60375.0], [91.3, 60375.0], [91.4, 60377.0], [91.5, 60378.0], [91.6, 60378.0], [91.7, 60378.0], [91.8, 60382.0], [91.9, 60384.0], [92.0, 60384.0], [92.1, 60385.0], [92.2, 60385.0], [92.3, 60385.0], [92.4, 60388.0], [92.5, 60389.0], [92.6, 60389.0], [92.7, 60390.0], [92.8, 60396.0], [92.9, 60397.0], [93.0, 60397.0], [93.1, 60399.0], [93.2, 60399.0], [93.3, 60399.0], [93.4, 60403.0], [93.5, 60404.0], [93.6, 60404.0], [93.7, 60404.0], [93.8, 60404.0], [93.9, 60405.0], [94.0, 60405.0], [94.1, 60406.0], [94.2, 60412.0], [94.3, 60412.0], [94.4, 60416.0], [94.5, 60417.0], [94.6, 60421.0], [94.7, 60421.0], [94.8, 60425.0], [94.9, 60425.0], [95.0, 60425.0], [95.1, 60427.0], [95.2, 60428.0], [95.3, 60428.0], [95.4, 60428.0], [95.5, 60435.0], [95.6, 60436.0], [95.7, 60436.0], [95.8, 60438.0], [95.9, 60441.0], [96.0, 60441.0], [96.1, 60443.0], [96.2, 60447.0], [96.3, 60447.0], [96.4, 60451.0], [96.5, 60456.0], [96.6, 60456.0], [96.7, 60456.0], [96.8, 60457.0], [96.9, 60460.0], [97.0, 60460.0], [97.1, 60465.0], [97.2, 60466.0], [97.3, 60473.0], [97.4, 60473.0], [97.5, 60477.0], [97.6, 60479.0], [97.7, 60479.0], [97.8, 60480.0], [97.9, 60482.0], [98.0, 60482.0], [98.1, 60484.0], [98.2, 60485.0], [98.3, 60487.0], [98.4, 60487.0], [98.5, 60488.0], [98.6, 60493.0], [98.7, 60493.0], [98.8, 60493.0], [98.9, 60497.0], [99.0, 60497.0], [99.1, 60506.0], [99.2, 60512.0], [99.3, 60516.0], [99.4, 60516.0], [99.5, 60519.0], [99.6, 60551.0], [99.7, 60551.0], [99.8, 60578.0], [99.9, 60579.0], [100.0, 60579.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 112.0], [0.1, 112.0], [0.2, 112.0], [0.3, 112.0], [0.4, 112.0], [0.5, 113.0], [0.6, 113.0], [0.7, 113.0], [0.8, 113.0], [0.9, 113.0], [1.0, 113.0], [1.1, 113.0], [1.2, 113.0], [1.3, 114.0], [1.4, 114.0], [1.5, 114.0], [1.6, 114.0], [1.7, 114.0], [1.8, 114.0], [1.9, 114.0], [2.0, 114.0], [2.1, 114.0], [2.2, 114.0], [2.3, 114.0], [2.4, 114.0], [2.5, 114.0], [2.6, 114.0], [2.7, 114.0], [2.8, 114.0], [2.9, 114.0], [3.0, 114.0], [3.1, 114.0], [3.2, 114.0], [3.3, 114.0], [3.4, 114.0], [3.5, 114.0], [3.6, 114.0], [3.7, 114.0], [3.8, 114.0], [3.9, 114.0], [4.0, 114.0], [4.1, 114.0], [4.2, 114.0], [4.3, 114.0], [4.4, 114.0], [4.5, 114.0], [4.6, 114.0], [4.7, 114.0], [4.8, 114.0], [4.9, 114.0], [5.0, 114.0], [5.1, 114.0], [5.2, 114.0], [5.3, 114.0], [5.4, 114.0], [5.5, 114.0], [5.6, 115.0], [5.7, 115.0], [5.8, 115.0], [5.9, 115.0], [6.0, 115.0], [6.1, 115.0], [6.2, 115.0], [6.3, 115.0], [6.4, 115.0], [6.5, 115.0], [6.6, 115.0], [6.7, 115.0], [6.8, 115.0], [6.9, 115.0], [7.0, 115.0], [7.1, 115.0], [7.2, 115.0], [7.3, 115.0], [7.4, 115.0], [7.5, 115.0], [7.6, 115.0], [7.7, 115.0], [7.8, 115.0], [7.9, 115.0], [8.0, 115.0], [8.1, 115.0], [8.2, 115.0], [8.3, 115.0], [8.4, 115.0], [8.5, 115.0], [8.6, 115.0], [8.7, 115.0], [8.8, 115.0], [8.9, 115.0], [9.0, 115.0], [9.1, 115.0], [9.2, 115.0], [9.3, 115.0], [9.4, 115.0], [9.5, 115.0], [9.6, 115.0], [9.7, 115.0], [9.8, 115.0], [9.9, 115.0], [10.0, 115.0], [10.1, 115.0], [10.2, 115.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 116.0], [11.1, 116.0], [11.2, 116.0], [11.3, 116.0], [11.4, 116.0], [11.5, 116.0], [11.6, 116.0], [11.7, 116.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 116.0], [13.0, 117.0], [13.1, 117.0], [13.2, 117.0], [13.3, 117.0], [13.4, 117.0], [13.5, 117.0], [13.6, 117.0], [13.7, 117.0], [13.8, 117.0], [13.9, 117.0], [14.0, 117.0], [14.1, 117.0], [14.2, 117.0], [14.3, 117.0], [14.4, 117.0], [14.5, 117.0], [14.6, 117.0], [14.7, 117.0], [14.8, 117.0], [14.9, 117.0], [15.0, 117.0], [15.1, 118.0], [15.2, 118.0], [15.3, 118.0], [15.4, 118.0], [15.5, 118.0], [15.6, 118.0], [15.7, 118.0], [15.8, 118.0], [15.9, 118.0], [16.0, 118.0], [16.1, 118.0], [16.2, 118.0], [16.3, 118.0], [16.4, 118.0], [16.5, 118.0], [16.6, 118.0], [16.7, 118.0], [16.8, 118.0], [16.9, 118.0], [17.0, 118.0], [17.1, 118.0], [17.2, 118.0], [17.3, 118.0], [17.4, 119.0], [17.5, 119.0], [17.6, 119.0], [17.7, 119.0], [17.8, 119.0], [17.9, 119.0], [18.0, 119.0], [18.1, 119.0], [18.2, 119.0], [18.3, 119.0], [18.4, 119.0], [18.5, 119.0], [18.6, 119.0], [18.7, 119.0], [18.8, 119.0], [18.9, 119.0], [19.0, 119.0], [19.1, 119.0], [19.2, 119.0], [19.3, 119.0], [19.4, 119.0], [19.5, 119.0], [19.6, 119.0], [19.7, 119.0], [19.8, 119.0], [19.9, 119.0], [20.0, 119.0], [20.1, 119.0], [20.2, 119.0], [20.3, 119.0], [20.4, 119.0], [20.5, 119.0], [20.6, 119.0], [20.7, 119.0], [20.8, 119.0], [20.9, 119.0], [21.0, 119.0], [21.1, 119.0], [21.2, 119.0], [21.3, 119.0], [21.4, 119.0], [21.5, 119.0], [21.6, 119.0], [21.7, 119.0], [21.8, 119.0], [21.9, 119.0], [22.0, 120.0], [22.1, 120.0], [22.2, 120.0], [22.3, 120.0], [22.4, 120.0], [22.5, 120.0], [22.6, 120.0], [22.7, 120.0], [22.8, 120.0], [22.9, 120.0], [23.0, 120.0], [23.1, 120.0], [23.2, 120.0], [23.3, 120.0], [23.4, 120.0], [23.5, 120.0], [23.6, 120.0], [23.7, 120.0], [23.8, 120.0], [23.9, 120.0], [24.0, 120.0], [24.1, 120.0], [24.2, 120.0], [24.3, 120.0], [24.4, 120.0], [24.5, 120.0], [24.6, 120.0], [24.7, 120.0], [24.8, 120.0], [24.9, 120.0], [25.0, 120.0], [25.1, 120.0], [25.2, 120.0], [25.3, 120.0], [25.4, 120.0], [25.5, 120.0], [25.6, 120.0], [25.7, 120.0], [25.8, 120.0], [25.9, 120.0], [26.0, 120.0], [26.1, 120.0], [26.2, 120.0], [26.3, 120.0], [26.4, 120.0], [26.5, 120.0], [26.6, 120.0], [26.7, 121.0], [26.8, 121.0], [26.9, 121.0], [27.0, 121.0], [27.1, 121.0], [27.2, 121.0], [27.3, 121.0], [27.4, 121.0], [27.5, 121.0], [27.6, 121.0], [27.7, 121.0], [27.8, 121.0], [27.9, 121.0], [28.0, 121.0], [28.1, 121.0], [28.2, 121.0], [28.3, 121.0], [28.4, 121.0], [28.5, 121.0], [28.6, 121.0], [28.7, 121.0], [28.8, 121.0], [28.9, 121.0], [29.0, 121.0], [29.1, 121.0], [29.2, 121.0], [29.3, 121.0], [29.4, 121.0], [29.5, 121.0], [29.6, 121.0], [29.7, 121.0], [29.8, 121.0], [29.9, 121.0], [30.0, 121.0], [30.1, 121.0], [30.2, 121.0], [30.3, 121.0], [30.4, 121.0], [30.5, 121.0], [30.6, 121.0], [30.7, 121.0], [30.8, 121.0], [30.9, 121.0], [31.0, 121.0], [31.1, 122.0], [31.2, 122.0], [31.3, 122.0], [31.4, 122.0], [31.5, 122.0], [31.6, 122.0], [31.7, 122.0], [31.8, 122.0], [31.9, 122.0], [32.0, 122.0], [32.1, 122.0], [32.2, 122.0], [32.3, 122.0], [32.4, 122.0], [32.5, 122.0], [32.6, 122.0], [32.7, 122.0], [32.8, 122.0], [32.9, 122.0], [33.0, 122.0], [33.1, 122.0], [33.2, 122.0], [33.3, 122.0], [33.4, 122.0], [33.5, 122.0], [33.6, 123.0], [33.7, 123.0], [33.8, 123.0], [33.9, 123.0], [34.0, 123.0], [34.1, 123.0], [34.2, 123.0], [34.3, 123.0], [34.4, 123.0], [34.5, 123.0], [34.6, 124.0], [34.7, 124.0], [34.8, 124.0], [34.9, 124.0], [35.0, 124.0], [35.1, 124.0], [35.2, 124.0], [35.3, 124.0], [35.4, 124.0], [35.5, 124.0], [35.6, 124.0], [35.7, 124.0], [35.8, 125.0], [35.9, 125.0], [36.0, 125.0], [36.1, 125.0], [36.2, 125.0], [36.3, 125.0], [36.4, 125.0], [36.5, 125.0], [36.6, 125.0], [36.7, 125.0], [36.8, 125.0], [36.9, 125.0], [37.0, 126.0], [37.1, 126.0], [37.2, 126.0], [37.3, 126.0], [37.4, 126.0], [37.5, 126.0], [37.6, 126.0], [37.7, 128.0], [37.8, 128.0], [37.9, 129.0], [38.0, 131.0], [38.1, 131.0], [38.2, 139.0], [38.3, 263.0], [38.4, 263.0], [38.5, 438.0], [38.6, 487.0], [38.7, 521.0], [38.8, 521.0], [38.9, 536.0], [39.0, 552.0], [39.1, 552.0], [39.2, 584.0], [39.3, 611.0], [39.4, 611.0], [39.5, 615.0], [39.6, 622.0], [39.7, 638.0], [39.8, 638.0], [39.9, 667.0], [40.0, 670.0], [40.1, 670.0], [40.2, 690.0], [40.3, 709.0], [40.4, 754.0], [40.5, 754.0], [40.6, 756.0], [40.7, 773.0], [40.8, 773.0], [40.9, 800.0], [41.0, 812.0], [41.1, 812.0], [41.2, 814.0], [41.3, 815.0], [41.4, 850.0], [41.5, 850.0], [41.6, 854.0], [41.7, 873.0], [41.8, 873.0], [41.9, 873.0], [42.0, 873.0], [42.1, 873.0], [42.2, 876.0], [42.3, 878.0], [42.4, 892.0], [42.5, 892.0], [42.6, 892.0], [42.7, 899.0], [42.8, 899.0], [42.9, 910.0], [43.0, 917.0], [43.1, 917.0], [43.2, 921.0], [43.3, 944.0], [43.4, 948.0], [43.5, 948.0], [43.6, 948.0], [43.7, 948.0], [43.8, 948.0], [43.9, 950.0], [44.0, 951.0], [44.1, 959.0], [44.2, 959.0], [44.3, 972.0], [44.4, 974.0], [44.5, 974.0], [44.6, 985.0], [44.7, 988.0], [44.8, 988.0], [44.9, 992.0], [45.0, 996.0], [45.1, 1023.0], [45.2, 1023.0], [45.3, 1024.0], [45.4, 1030.0], [45.5, 1030.0], [45.6, 1030.0], [45.7, 1033.0], [45.8, 1033.0], [45.9, 1033.0], [46.0, 1037.0], [46.1, 1042.0], [46.2, 1042.0], [46.3, 1052.0], [46.4, 1071.0], [46.5, 1071.0], [46.6, 1071.0], [46.7, 1078.0], [46.8, 1095.0], [46.9, 1095.0], [47.0, 1100.0], [47.1, 1108.0], [47.2, 1108.0], [47.3, 1115.0], [47.4, 1135.0], [47.5, 1135.0], [47.6, 1140.0], [47.7, 1156.0], [47.8, 1161.0], [47.9, 1161.0], [48.0, 1168.0], [48.1, 1171.0], [48.2, 1171.0], [48.3, 1182.0], [48.4, 1188.0], [48.5, 1188.0], [48.6, 1200.0], [48.7, 1203.0], [48.8, 1208.0], [48.9, 1208.0], [49.0, 1243.0], [49.1, 1248.0], [49.2, 1248.0], [49.3, 1250.0], [49.4, 1252.0], [49.5, 1252.0], [49.6, 1282.0], [49.7, 1297.0], [49.8, 1306.0], [49.9, 1306.0], [50.0, 1345.0], [50.1, 1349.0], [50.2, 1349.0], [50.3, 1373.0], [50.4, 1379.0], [50.5, 1424.0], [50.6, 1424.0], [50.7, 1425.0], [50.8, 1436.0], [50.9, 1436.0], [51.0, 1437.0], [51.1, 1476.0], [51.2, 1476.0], [51.3, 1484.0], [51.4, 1497.0], [51.5, 1505.0], [51.6, 1505.0], [51.7, 1522.0], [51.8, 1529.0], [51.9, 1529.0], [52.0, 1531.0], [52.1, 1531.0], [52.2, 1531.0], [52.3, 1545.0], [52.4, 1550.0], [52.5, 1583.0], [52.6, 1583.0], [52.7, 1599.0], [52.8, 1624.0], [52.9, 1624.0], [53.0, 1626.0], [53.1, 1634.0], [53.2, 1634.0], [53.3, 1641.0], [53.4, 1646.0], [53.5, 1650.0], [53.6, 1650.0], [53.7, 1656.0], [53.8, 1793.0], [53.9, 1793.0], [54.0, 1830.0], [54.1, 1921.0], [54.2, 1935.0], [54.3, 1935.0], [54.4, 1955.0], [54.5, 2019.0], [54.6, 2019.0], [54.7, 2081.0], [54.8, 2092.0], [54.9, 2092.0], [55.0, 2183.0], [55.1, 2308.0], [55.2, 2327.0], [55.3, 2327.0], [55.4, 2365.0], [55.5, 2419.0], [55.6, 2419.0], [55.7, 2615.0], [55.8, 2841.0], [55.9, 2841.0], [56.0, 2935.0], [56.1, 2951.0], [56.2, 3106.0], [56.3, 3106.0], [56.4, 3272.0], [56.5, 3391.0], [56.6, 3391.0], [56.7, 3510.0], [56.8, 3572.0], [56.9, 3639.0], [57.0, 3639.0], [57.1, 3767.0], [57.2, 3907.0], [57.3, 3907.0], [57.4, 3963.0], [57.5, 3969.0], [57.6, 3969.0], [57.7, 4260.0], [57.8, 4343.0], [57.9, 4374.0], [58.0, 4374.0], [58.1, 4399.0], [58.2, 4476.0], [58.3, 4476.0], [58.4, 4505.0], [58.5, 4617.0], [58.6, 4617.0], [58.7, 4619.0], [58.8, 4712.0], [58.9, 4850.0], [59.0, 4850.0], [59.1, 4852.0], [59.2, 4946.0], [59.3, 4946.0], [59.4, 5023.0], [59.5, 5024.0], [59.6, 5024.0], [59.7, 5228.0], [59.8, 5394.0], [59.9, 5689.0], [60.0, 5689.0], [60.1, 5730.0], [60.2, 5859.0], [60.3, 5859.0], [60.4, 6008.0], [60.5, 6104.0], [60.6, 6215.0], [60.7, 6215.0], [60.8, 6239.0], [60.9, 6328.0], [61.0, 6328.0], [61.1, 6362.0], [61.2, 6375.0], [61.3, 6375.0], [61.4, 6484.0], [61.5, 6597.0], [61.6, 6609.0], [61.7, 6609.0], [61.8, 6620.0], [61.9, 6641.0], [62.0, 6641.0], [62.1, 6660.0], [62.2, 6873.0], [62.3, 6873.0], [62.4, 6989.0], [62.5, 7081.0], [62.6, 7111.0], [62.7, 7111.0], [62.8, 7225.0], [62.9, 7242.0], [63.0, 7242.0], [63.1, 7251.0], [63.2, 7252.0], [63.3, 7252.0], [63.4, 7263.0], [63.5, 7331.0], [63.6, 7489.0], [63.7, 7489.0], [63.8, 7493.0], [63.9, 7542.0], [64.0, 7542.0], [64.1, 7544.0], [64.2, 7752.0], [64.3, 7819.0], [64.4, 7819.0], [64.5, 7891.0], [64.6, 7935.0], [64.7, 7935.0], [64.8, 7946.0], [64.9, 7961.0], [65.0, 7961.0], [65.1, 8125.0], [65.2, 8128.0], [65.3, 8221.0], [65.4, 8221.0], [65.5, 8364.0], [65.6, 8588.0], [65.7, 8588.0], [65.8, 9025.0], [65.9, 9155.0], [66.0, 9155.0], [66.1, 9319.0], [66.2, 9584.0], [66.3, 9794.0], [66.4, 9794.0], [66.5, 9984.0], [66.6, 10031.0], [66.7, 10031.0], [66.8, 10184.0], [66.9, 10398.0], [67.0, 10429.0], [67.1, 10429.0], [67.2, 10541.0], [67.3, 10578.0], [67.4, 10578.0], [67.5, 10586.0], [67.6, 10685.0], [67.7, 10685.0], [67.8, 11112.0], [67.9, 11363.0], [68.0, 11534.0], [68.1, 11534.0], [68.2, 11627.0], [68.3, 11739.0], [68.4, 11739.0], [68.5, 11853.0], [68.6, 11960.0], [68.7, 11960.0], [68.8, 12560.0], [68.9, 12623.0], [69.0, 12774.0], [69.1, 12774.0], [69.2, 12991.0], [69.3, 13101.0], [69.4, 13101.0], [69.5, 13598.0], [69.6, 13745.0], [69.7, 13745.0], [69.8, 14025.0], [69.9, 14228.0], [70.0, 14235.0], [70.1, 14235.0], [70.2, 14381.0], [70.3, 14500.0], [70.4, 14500.0], [70.5, 14898.0], [70.6, 15008.0], [70.7, 15152.0], [70.8, 15152.0], [70.9, 15484.0], [71.0, 15557.0], [71.1, 15557.0], [71.2, 15688.0], [71.3, 15731.0], [71.4, 15731.0], [71.5, 15780.0], [71.6, 15835.0], [71.7, 15864.0], [71.8, 15864.0], [71.9, 15994.0], [72.0, 16187.0], [72.1, 16187.0], [72.2, 16275.0], [72.3, 16294.0], [72.4, 16294.0], [72.5, 16848.0], [72.6, 16874.0], [72.7, 17109.0], [72.8, 17109.0], [72.9, 17151.0], [73.0, 17835.0], [73.1, 17835.0], [73.2, 18255.0], [73.3, 18317.0], [73.4, 18332.0], [73.5, 18332.0], [73.6, 18425.0], [73.7, 18503.0], [73.8, 18503.0], [73.9, 18633.0], [74.0, 18817.0], [74.1, 18817.0], [74.2, 19016.0], [74.3, 19106.0], [74.4, 19362.0], [74.5, 19362.0], [74.6, 19645.0], [74.7, 19921.0], [74.8, 19921.0], [74.9, 20205.0], [75.0, 20230.0], [75.1, 20230.0], [75.2, 20333.0], [75.3, 20747.0], [75.4, 20807.0], [75.5, 20807.0], [75.6, 20900.0], [75.7, 20993.0], [75.8, 20993.0], [75.9, 21016.0], [76.0, 21029.0], [76.1, 21029.0], [76.2, 21175.0], [76.3, 21294.0], [76.4, 21454.0], [76.5, 21454.0], [76.6, 21456.0], [76.7, 22103.0], [76.8, 22103.0], [76.9, 22148.0], [77.0, 22243.0], [77.1, 22266.0], [77.2, 22266.0], [77.3, 22860.0], [77.4, 23052.0], [77.5, 23052.0], [77.6, 23186.0], [77.7, 23220.0], [77.8, 23220.0], [77.9, 23272.0], [78.0, 23308.0], [78.1, 23517.0], [78.2, 23517.0], [78.3, 23892.0], [78.4, 24024.0], [78.5, 24024.0], [78.6, 24619.0], [78.7, 24926.0], [78.8, 24926.0], [78.9, 25122.0], [79.0, 25128.0], [79.1, 25167.0], [79.2, 25167.0], [79.3, 25189.0], [79.4, 25230.0], [79.5, 25230.0], [79.6, 25519.0], [79.7, 25553.0], [79.8, 25553.0], [79.9, 25646.0], [80.0, 25721.0], [80.1, 25795.0], [80.2, 25795.0], [80.3, 25981.0], [80.4, 26216.0], [80.5, 26216.0], [80.6, 26567.0], [80.7, 26791.0], [80.8, 26922.0], [80.9, 26922.0], [81.0, 27875.0], [81.1, 27926.0], [81.2, 27926.0], [81.3, 28275.0], [81.4, 29242.0], [81.5, 29242.0], [81.6, 29318.0], [81.7, 29762.0], [81.8, 29948.0], [81.9, 29948.0], [82.0, 30005.0], [82.1, 30104.0], [82.2, 30104.0], [82.3, 30265.0], [82.4, 30380.0], [82.5, 30380.0], [82.6, 30580.0], [82.7, 31503.0], [82.8, 32315.0], [82.9, 32315.0], [83.0, 32567.0], [83.1, 33721.0], [83.2, 33721.0], [83.3, 34133.0], [83.4, 35852.0], [83.5, 36726.0], [83.6, 36726.0], [83.7, 37833.0], [83.8, 38185.0], [83.9, 38185.0], [84.0, 38244.0], [84.1, 38314.0], [84.2, 38314.0], [84.3, 38419.0], [84.4, 38554.0], [84.5, 39105.0], [84.6, 39105.0], [84.7, 39159.0], [84.8, 39246.0], [84.9, 39246.0], [85.0, 39391.0], [85.1, 40075.0], [85.2, 40075.0], [85.3, 40472.0], [85.4, 40507.0], [85.5, 41214.0], [85.6, 41214.0], [85.7, 41565.0], [85.8, 41686.0], [85.9, 41686.0], [86.0, 41842.0], [86.1, 41998.0], [86.2, 41998.0], [86.3, 42534.0], [86.4, 42575.0], [86.5, 43087.0], [86.6, 43087.0], [86.7, 43283.0], [86.8, 44047.0], [86.9, 44047.0], [87.0, 44857.0], [87.1, 45722.0], [87.2, 46995.0], [87.3, 46995.0], [87.4, 47338.0], [87.5, 49308.0], [87.6, 49308.0], [87.7, 55447.0], [87.8, 55830.0], [87.9, 55830.0], [88.0, 56232.0], [88.1, 59269.0], [88.2, 59487.0], [88.3, 59487.0], [88.4, 60115.0], [88.5, 60116.0], [88.6, 60116.0], [88.7, 60117.0], [88.8, 60118.0], [88.9, 60118.0], [89.0, 60118.0], [89.1, 60118.0], [89.2, 60119.0], [89.3, 60119.0], [89.4, 60119.0], [89.5, 60119.0], [89.6, 60119.0], [89.7, 60120.0], [89.8, 60120.0], [89.9, 60120.0], [90.0, 60121.0], [90.1, 60121.0], [90.2, 60121.0], [90.3, 60121.0], [90.4, 60122.0], [90.5, 60122.0], [90.6, 60122.0], [90.7, 60122.0], [90.8, 60122.0], [90.9, 60122.0], [91.0, 60122.0], [91.1, 60123.0], [91.2, 60123.0], [91.3, 60123.0], [91.4, 60123.0], [91.5, 60123.0], [91.6, 60123.0], [91.7, 60123.0], [91.8, 60123.0], [91.9, 60123.0], [92.0, 60123.0], [92.1, 60123.0], [92.2, 60124.0], [92.3, 60124.0], [92.4, 60124.0], [92.5, 60124.0], [92.6, 60124.0], [92.7, 60124.0], [92.8, 60124.0], [92.9, 60124.0], [93.0, 60124.0], [93.1, 60124.0], [93.2, 60124.0], [93.3, 60124.0], [93.4, 60124.0], [93.5, 60125.0], [93.6, 60125.0], [93.7, 60125.0], [93.8, 60125.0], [93.9, 60125.0], [94.0, 60125.0], [94.1, 60127.0], [94.2, 60127.0], [94.3, 60127.0], [94.4, 60128.0], [94.5, 60128.0], [94.6, 60141.0], [94.7, 60141.0], [94.8, 60142.0], [94.9, 60143.0], [95.0, 60143.0], [95.1, 60149.0], [95.2, 60151.0], [95.3, 60151.0], [95.4, 60153.0], [95.5, 60158.0], [95.6, 60159.0], [95.7, 60159.0], [95.8, 60165.0], [95.9, 60168.0], [96.0, 60168.0], [96.1, 60170.0], [96.2, 60173.0], [96.3, 60173.0], [96.4, 60173.0], [96.5, 60178.0], [96.6, 60185.0], [96.7, 60185.0], [96.8, 60194.0], [96.9, 60201.0], [97.0, 60201.0], [97.1, 60203.0], [97.2, 60212.0], [97.3, 60223.0], [97.4, 60223.0], [97.5, 60226.0], [97.6, 60227.0], [97.7, 60227.0], [97.8, 60229.0], [97.9, 60229.0], [98.0, 60229.0], [98.1, 60229.0], [98.2, 60230.0], [98.3, 60233.0], [98.4, 60233.0], [98.5, 60236.0], [98.6, 60240.0], [98.7, 60240.0], [98.8, 60241.0], [98.9, 60242.0], [99.0, 60242.0], [99.1, 60243.0], [99.2, 60244.0], [99.3, 60247.0], [99.4, 60247.0], [99.5, 60271.0], [99.6, 60280.0], [99.7, 60280.0], [99.8, 60297.0], [99.9, 60354.0], [100.0, 60354.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 223.0], [0.1, 223.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 224.0], [0.9, 224.0], [1.0, 224.0], [1.1, 224.0], [1.2, 224.0], [1.3, 224.0], [1.4, 224.0], [1.5, 224.0], [1.6, 224.0], [1.7, 224.0], [1.8, 224.0], [1.9, 225.0], [2.0, 225.0], [2.1, 225.0], [2.2, 225.0], [2.3, 225.0], [2.4, 225.0], [2.5, 225.0], [2.6, 225.0], [2.7, 225.0], [2.8, 225.0], [2.9, 225.0], [3.0, 225.0], [3.1, 225.0], [3.2, 225.0], [3.3, 225.0], [3.4, 225.0], [3.5, 225.0], [3.6, 225.0], [3.7, 225.0], [3.8, 225.0], [3.9, 225.0], [4.0, 225.0], [4.1, 225.0], [4.2, 225.0], [4.3, 225.0], [4.4, 225.0], [4.5, 225.0], [4.6, 225.0], [4.7, 225.0], [4.8, 225.0], [4.9, 226.0], [5.0, 226.0], [5.1, 226.0], [5.2, 226.0], [5.3, 226.0], [5.4, 226.0], [5.5, 226.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 226.0], [6.0, 226.0], [6.1, 226.0], [6.2, 226.0], [6.3, 226.0], [6.4, 226.0], [6.5, 226.0], [6.6, 226.0], [6.7, 226.0], [6.8, 226.0], [6.9, 226.0], [7.0, 226.0], [7.1, 226.0], [7.2, 226.0], [7.3, 226.0], [7.4, 226.0], [7.5, 226.0], [7.6, 226.0], [7.7, 226.0], [7.8, 226.0], [7.9, 226.0], [8.0, 226.0], [8.1, 226.0], [8.2, 226.0], [8.3, 226.0], [8.4, 226.0], [8.5, 226.0], [8.6, 226.0], [8.7, 226.0], [8.8, 226.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 227.0], [9.6, 227.0], [9.7, 227.0], [9.8, 227.0], [9.9, 227.0], [10.0, 227.0], [10.1, 227.0], [10.2, 227.0], [10.3, 227.0], [10.4, 227.0], [10.5, 227.0], [10.6, 227.0], [10.7, 227.0], [10.8, 227.0], [10.9, 227.0], [11.0, 227.0], [11.1, 227.0], [11.2, 227.0], [11.3, 227.0], [11.4, 227.0], [11.5, 227.0], [11.6, 227.0], [11.7, 227.0], [11.8, 227.0], [11.9, 227.0], [12.0, 227.0], [12.1, 227.0], [12.2, 227.0], [12.3, 227.0], [12.4, 227.0], [12.5, 227.0], [12.6, 227.0], [12.7, 228.0], [12.8, 228.0], [12.9, 228.0], [13.0, 228.0], [13.1, 228.0], [13.2, 228.0], [13.3, 228.0], [13.4, 228.0], [13.5, 228.0], [13.6, 228.0], [13.7, 228.0], [13.8, 228.0], [13.9, 228.0], [14.0, 228.0], [14.1, 228.0], [14.2, 228.0], [14.3, 228.0], [14.4, 228.0], [14.5, 228.0], [14.6, 228.0], [14.7, 228.0], [14.8, 228.0], [14.9, 228.0], [15.0, 228.0], [15.1, 228.0], [15.2, 228.0], [15.3, 228.0], [15.4, 228.0], [15.5, 228.0], [15.6, 228.0], [15.7, 228.0], [15.8, 229.0], [15.9, 229.0], [16.0, 229.0], [16.1, 229.0], [16.2, 229.0], [16.3, 229.0], [16.4, 229.0], [16.5, 229.0], [16.6, 229.0], [16.7, 229.0], [16.8, 229.0], [16.9, 229.0], [17.0, 229.0], [17.1, 229.0], [17.2, 229.0], [17.3, 229.0], [17.4, 229.0], [17.5, 229.0], [17.6, 229.0], [17.7, 229.0], [17.8, 229.0], [17.9, 229.0], [18.0, 229.0], [18.1, 229.0], [18.2, 229.0], [18.3, 229.0], [18.4, 229.0], [18.5, 230.0], [18.6, 230.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 230.0], [19.2, 230.0], [19.3, 230.0], [19.4, 231.0], [19.5, 231.0], [19.6, 231.0], [19.7, 231.0], [19.8, 231.0], [19.9, 231.0], [20.0, 231.0], [20.1, 231.0], [20.2, 231.0], [20.3, 231.0], [20.4, 231.0], [20.5, 231.0], [20.6, 231.0], [20.7, 232.0], [20.8, 232.0], [20.9, 232.0], [21.0, 232.0], [21.1, 232.0], [21.2, 232.0], [21.3, 232.0], [21.4, 232.0], [21.5, 232.0], [21.6, 232.0], [21.7, 232.0], [21.8, 232.0], [21.9, 232.0], [22.0, 232.0], [22.1, 232.0], [22.2, 232.0], [22.3, 232.0], [22.4, 232.0], [22.5, 232.0], [22.6, 232.0], [22.7, 232.0], [22.8, 233.0], [22.9, 233.0], [23.0, 233.0], [23.1, 233.0], [23.2, 233.0], [23.3, 233.0], [23.4, 233.0], [23.5, 233.0], [23.6, 233.0], [23.7, 233.0], [23.8, 233.0], [23.9, 233.0], [24.0, 233.0], [24.1, 233.0], [24.2, 233.0], [24.3, 233.0], [24.4, 233.0], [24.5, 233.0], [24.6, 233.0], [24.7, 233.0], [24.8, 233.0], [24.9, 234.0], [25.0, 234.0], [25.1, 234.0], [25.2, 234.0], [25.3, 234.0], [25.4, 234.0], [25.5, 234.0], [25.6, 234.0], [25.7, 234.0], [25.8, 234.0], [25.9, 234.0], [26.0, 234.0], [26.1, 234.0], [26.2, 234.0], [26.3, 234.0], [26.4, 234.0], [26.5, 234.0], [26.6, 234.0], [26.7, 234.0], [26.8, 234.0], [26.9, 234.0], [27.0, 234.0], [27.1, 234.0], [27.2, 234.0], [27.3, 234.0], [27.4, 234.0], [27.5, 234.0], [27.6, 235.0], [27.7, 235.0], [27.8, 235.0], [27.9, 235.0], [28.0, 235.0], [28.1, 235.0], [28.2, 235.0], [28.3, 235.0], [28.4, 235.0], [28.5, 235.0], [28.6, 235.0], [28.7, 235.0], [28.8, 235.0], [28.9, 235.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 235.0], [29.5, 235.0], [29.6, 235.0], [29.7, 235.0], [29.8, 235.0], [29.9, 235.0], [30.0, 235.0], [30.1, 235.0], [30.2, 235.0], [30.3, 235.0], [30.4, 235.0], [30.5, 235.0], [30.6, 235.0], [30.7, 235.0], [30.8, 235.0], [30.9, 235.0], [31.0, 235.0], [31.1, 235.0], [31.2, 235.0], [31.3, 235.0], [31.4, 235.0], [31.5, 235.0], [31.6, 235.0], [31.7, 235.0], [31.8, 235.0], [31.9, 235.0], [32.0, 235.0], [32.1, 236.0], [32.2, 236.0], [32.3, 236.0], [32.4, 236.0], [32.5, 236.0], [32.6, 236.0], [32.7, 236.0], [32.8, 236.0], [32.9, 236.0], [33.0, 236.0], [33.1, 236.0], [33.2, 236.0], [33.3, 236.0], [33.4, 236.0], [33.5, 236.0], [33.6, 236.0], [33.7, 236.0], [33.8, 236.0], [33.9, 236.0], [34.0, 236.0], [34.1, 236.0], [34.2, 236.0], [34.3, 236.0], [34.4, 236.0], [34.5, 236.0], [34.6, 236.0], [34.7, 236.0], [34.8, 236.0], [34.9, 236.0], [35.0, 236.0], [35.1, 236.0], [35.2, 236.0], [35.3, 236.0], [35.4, 236.0], [35.5, 236.0], [35.6, 236.0], [35.7, 236.0], [35.8, 236.0], [35.9, 236.0], [36.0, 236.0], [36.1, 236.0], [36.2, 236.0], [36.3, 236.0], [36.4, 236.0], [36.5, 236.0], [36.6, 236.0], [36.7, 236.0], [36.8, 236.0], [36.9, 236.0], [37.0, 236.0], [37.1, 236.0], [37.2, 236.0], [37.3, 236.0], [37.4, 236.0], [37.5, 236.0], [37.6, 236.0], [37.7, 236.0], [37.8, 236.0], [37.9, 237.0], [38.0, 237.0], [38.1, 237.0], [38.2, 237.0], [38.3, 237.0], [38.4, 237.0], [38.5, 237.0], [38.6, 237.0], [38.7, 237.0], [38.8, 237.0], [38.9, 237.0], [39.0, 237.0], [39.1, 237.0], [39.2, 237.0], [39.3, 237.0], [39.4, 237.0], [39.5, 237.0], [39.6, 237.0], [39.7, 237.0], [39.8, 237.0], [39.9, 237.0], [40.0, 237.0], [40.1, 237.0], [40.2, 237.0], [40.3, 237.0], [40.4, 237.0], [40.5, 237.0], [40.6, 237.0], [40.7, 237.0], [40.8, 237.0], [40.9, 237.0], [41.0, 237.0], [41.1, 237.0], [41.2, 237.0], [41.3, 237.0], [41.4, 237.0], [41.5, 237.0], [41.6, 237.0], [41.7, 237.0], [41.8, 237.0], [41.9, 237.0], [42.0, 237.0], [42.1, 237.0], [42.2, 237.0], [42.3, 237.0], [42.4, 237.0], [42.5, 237.0], [42.6, 238.0], [42.7, 238.0], [42.8, 238.0], [42.9, 238.0], [43.0, 238.0], [43.1, 238.0], [43.2, 238.0], [43.3, 238.0], [43.4, 238.0], [43.5, 238.0], [43.6, 238.0], [43.7, 238.0], [43.8, 238.0], [43.9, 238.0], [44.0, 238.0], [44.1, 238.0], [44.2, 238.0], [44.3, 238.0], [44.4, 238.0], [44.5, 238.0], [44.6, 238.0], [44.7, 238.0], [44.8, 238.0], [44.9, 238.0], [45.0, 238.0], [45.1, 239.0], [45.2, 239.0], [45.3, 239.0], [45.4, 239.0], [45.5, 239.0], [45.6, 239.0], [45.7, 239.0], [45.8, 239.0], [45.9, 239.0], [46.0, 239.0], [46.1, 239.0], [46.2, 239.0], [46.3, 239.0], [46.4, 239.0], [46.5, 239.0], [46.6, 239.0], [46.7, 239.0], [46.8, 239.0], [46.9, 239.0], [47.0, 239.0], [47.1, 239.0], [47.2, 239.0], [47.3, 239.0], [47.4, 239.0], [47.5, 239.0], [47.6, 239.0], [47.7, 239.0], [47.8, 239.0], [47.9, 239.0], [48.0, 240.0], [48.1, 240.0], [48.2, 240.0], [48.3, 240.0], [48.4, 240.0], [48.5, 240.0], [48.6, 240.0], [48.7, 240.0], [48.8, 240.0], [48.9, 240.0], [49.0, 240.0], [49.1, 240.0], [49.2, 240.0], [49.3, 240.0], [49.4, 240.0], [49.5, 240.0], [49.6, 240.0], [49.7, 240.0], [49.8, 240.0], [49.9, 240.0], [50.0, 240.0], [50.1, 240.0], [50.2, 240.0], [50.3, 240.0], [50.4, 240.0], [50.5, 240.0], [50.6, 240.0], [50.7, 240.0], [50.8, 240.0], [50.9, 240.0], [51.0, 240.0], [51.1, 240.0], [51.2, 240.0], [51.3, 240.0], [51.4, 240.0], [51.5, 240.0], [51.6, 240.0], [51.7, 240.0], [51.8, 240.0], [51.9, 240.0], [52.0, 240.0], [52.1, 240.0], [52.2, 240.0], [52.3, 240.0], [52.4, 241.0], [52.5, 241.0], [52.6, 241.0], [52.7, 241.0], [52.8, 241.0], [52.9, 241.0], [53.0, 241.0], [53.1, 241.0], [53.2, 241.0], [53.3, 241.0], [53.4, 241.0], [53.5, 241.0], [53.6, 241.0], [53.7, 241.0], [53.8, 241.0], [53.9, 241.0], [54.0, 241.0], [54.1, 241.0], [54.2, 241.0], [54.3, 241.0], [54.4, 241.0], [54.5, 241.0], [54.6, 241.0], [54.7, 242.0], [54.8, 242.0], [54.9, 242.0], [55.0, 242.0], [55.1, 242.0], [55.2, 242.0], [55.3, 242.0], [55.4, 242.0], [55.5, 242.0], [55.6, 242.0], [55.7, 242.0], [55.8, 242.0], [55.9, 242.0], [56.0, 242.0], [56.1, 242.0], [56.2, 242.0], [56.3, 242.0], [56.4, 242.0], [56.5, 242.0], [56.6, 242.0], [56.7, 242.0], [56.8, 242.0], [56.9, 242.0], [57.0, 242.0], [57.1, 243.0], [57.2, 243.0], [57.3, 243.0], [57.4, 243.0], [57.5, 243.0], [57.6, 243.0], [57.7, 243.0], [57.8, 243.0], [57.9, 243.0], [58.0, 243.0], [58.1, 243.0], [58.2, 243.0], [58.3, 243.0], [58.4, 243.0], [58.5, 243.0], [58.6, 243.0], [58.7, 243.0], [58.8, 243.0], [58.9, 243.0], [59.0, 243.0], [59.1, 243.0], [59.2, 243.0], [59.3, 243.0], [59.4, 243.0], [59.5, 244.0], [59.6, 244.0], [59.7, 244.0], [59.8, 244.0], [59.9, 244.0], [60.0, 244.0], [60.1, 244.0], [60.2, 244.0], [60.3, 244.0], [60.4, 244.0], [60.5, 244.0], [60.6, 244.0], [60.7, 244.0], [60.8, 244.0], [60.9, 245.0], [61.0, 245.0], [61.1, 245.0], [61.2, 245.0], [61.3, 245.0], [61.4, 245.0], [61.5, 245.0], [61.6, 245.0], [61.7, 245.0], [61.8, 245.0], [61.9, 245.0], [62.0, 245.0], [62.1, 245.0], [62.2, 245.0], [62.3, 245.0], [62.4, 245.0], [62.5, 245.0], [62.6, 245.0], [62.7, 245.0], [62.8, 246.0], [62.9, 246.0], [63.0, 246.0], [63.1, 246.0], [63.2, 246.0], [63.3, 246.0], [63.4, 246.0], [63.5, 246.0], [63.6, 246.0], [63.7, 246.0], [63.8, 247.0], [63.9, 247.0], [64.0, 247.0], [64.1, 247.0], [64.2, 247.0], [64.3, 247.0], [64.4, 247.0], [64.5, 247.0], [64.6, 247.0], [64.7, 247.0], [64.8, 248.0], [64.9, 248.0], [65.0, 248.0], [65.1, 248.0], [65.2, 248.0], [65.3, 248.0], [65.4, 248.0], [65.5, 248.0], [65.6, 248.0], [65.7, 248.0], [65.8, 248.0], [65.9, 248.0], [66.0, 248.0], [66.1, 248.0], [66.2, 248.0], [66.3, 248.0], [66.4, 248.0], [66.5, 249.0], [66.6, 249.0], [66.7, 249.0], [66.8, 249.0], [66.9, 249.0], [67.0, 250.0], [67.1, 250.0], [67.2, 250.0], [67.3, 250.0], [67.4, 250.0], [67.5, 250.0], [67.6, 250.0], [67.7, 250.0], [67.8, 250.0], [67.9, 250.0], [68.0, 250.0], [68.1, 250.0], [68.2, 251.0], [68.3, 251.0], [68.4, 251.0], [68.5, 251.0], [68.6, 251.0], [68.7, 251.0], [68.8, 251.0], [68.9, 251.0], [69.0, 251.0], [69.1, 251.0], [69.2, 251.0], [69.3, 251.0], [69.4, 251.0], [69.5, 251.0], [69.6, 252.0], [69.7, 252.0], [69.8, 252.0], [69.9, 252.0], [70.0, 252.0], [70.1, 252.0], [70.2, 252.0], [70.3, 252.0], [70.4, 252.0], [70.5, 252.0], [70.6, 253.0], [70.7, 253.0], [70.8, 253.0], [70.9, 253.0], [71.0, 254.0], [71.1, 254.0], [71.2, 254.0], [71.3, 254.0], [71.4, 254.0], [71.5, 254.0], [71.6, 254.0], [71.7, 254.0], [71.8, 254.0], [71.9, 254.0], [72.0, 254.0], [72.1, 254.0], [72.2, 254.0], [72.3, 254.0], [72.4, 254.0], [72.5, 254.0], [72.6, 254.0], [72.7, 255.0], [72.8, 255.0], [72.9, 255.0], [73.0, 255.0], [73.1, 255.0], [73.2, 255.0], [73.3, 255.0], [73.4, 255.0], [73.5, 255.0], [73.6, 255.0], [73.7, 256.0], [73.8, 256.0], [73.9, 256.0], [74.0, 256.0], [74.1, 256.0], [74.2, 256.0], [74.3, 256.0], [74.4, 256.0], [74.5, 256.0], [74.6, 256.0], [74.7, 257.0], [74.8, 257.0], [74.9, 257.0], [75.0, 257.0], [75.1, 257.0], [75.2, 257.0], [75.3, 257.0], [75.4, 257.0], [75.5, 257.0], [75.6, 257.0], [75.7, 257.0], [75.8, 257.0], [75.9, 258.0], [76.0, 258.0], [76.1, 258.0], [76.2, 258.0], [76.3, 258.0], [76.4, 258.0], [76.5, 258.0], [76.6, 258.0], [76.7, 258.0], [76.8, 258.0], [76.9, 259.0], [77.0, 259.0], [77.1, 260.0], [77.2, 260.0], [77.3, 260.0], [77.4, 261.0], [77.5, 261.0], [77.6, 261.0], [77.7, 261.0], [77.8, 261.0], [77.9, 261.0], [78.0, 261.0], [78.1, 261.0], [78.2, 261.0], [78.3, 262.0], [78.4, 262.0], [78.5, 262.0], [78.6, 262.0], [78.7, 262.0], [78.8, 262.0], [78.9, 263.0], [79.0, 263.0], [79.1, 263.0], [79.2, 263.0], [79.3, 263.0], [79.4, 264.0], [79.5, 264.0], [79.6, 264.0], [79.7, 264.0], [79.8, 264.0], [79.9, 264.0], [80.0, 265.0], [80.1, 265.0], [80.2, 265.0], [80.3, 265.0], [80.4, 265.0], [80.5, 265.0], [80.6, 266.0], [80.7, 266.0], [80.8, 266.0], [80.9, 266.0], [81.0, 266.0], [81.1, 266.0], [81.2, 266.0], [81.3, 267.0], [81.4, 267.0], [81.5, 267.0], [81.6, 267.0], [81.7, 268.0], [81.8, 268.0], [81.9, 268.0], [82.0, 268.0], [82.1, 268.0], [82.2, 268.0], [82.3, 268.0], [82.4, 268.0], [82.5, 268.0], [82.6, 269.0], [82.7, 269.0], [82.8, 270.0], [82.9, 270.0], [83.0, 270.0], [83.1, 270.0], [83.2, 270.0], [83.3, 271.0], [83.4, 271.0], [83.5, 271.0], [83.6, 271.0], [83.7, 271.0], [83.8, 271.0], [83.9, 271.0], [84.0, 272.0], [84.1, 272.0], [84.2, 272.0], [84.3, 273.0], [84.4, 273.0], [84.5, 274.0], [84.6, 274.0], [84.7, 275.0], [84.8, 275.0], [84.9, 275.0], [85.0, 275.0], [85.1, 275.0], [85.2, 275.0], [85.3, 275.0], [85.4, 276.0], [85.5, 276.0], [85.6, 276.0], [85.7, 277.0], [85.8, 277.0], [85.9, 277.0], [86.0, 277.0], [86.1, 277.0], [86.2, 277.0], [86.3, 277.0], [86.4, 277.0], [86.5, 278.0], [86.6, 278.0], [86.7, 278.0], [86.8, 279.0], [86.9, 279.0], [87.0, 279.0], [87.1, 279.0], [87.2, 280.0], [87.3, 280.0], [87.4, 280.0], [87.5, 280.0], [87.6, 280.0], [87.7, 280.0], [87.8, 280.0], [87.9, 280.0], [88.0, 280.0], [88.1, 280.0], [88.2, 280.0], [88.3, 280.0], [88.4, 280.0], [88.5, 280.0], [88.6, 280.0], [88.7, 280.0], [88.8, 281.0], [88.9, 281.0], [89.0, 281.0], [89.1, 281.0], [89.2, 281.0], [89.3, 281.0], [89.4, 282.0], [89.5, 282.0], [89.6, 282.0], [89.7, 282.0], [89.8, 282.0], [89.9, 282.0], [90.0, 284.0], [90.1, 285.0], [90.2, 285.0], [90.3, 285.0], [90.4, 286.0], [90.5, 286.0], [90.6, 286.0], [90.7, 286.0], [90.8, 286.0], [90.9, 286.0], [91.0, 286.0], [91.1, 287.0], [91.2, 287.0], [91.3, 287.0], [91.4, 288.0], [91.5, 288.0], [91.6, 288.0], [91.7, 289.0], [91.8, 289.0], [91.9, 290.0], [92.0, 290.0], [92.1, 291.0], [92.2, 292.0], [92.3, 292.0], [92.4, 292.0], [92.5, 293.0], [92.6, 293.0], [92.7, 296.0], [92.8, 298.0], [92.9, 299.0], [93.0, 299.0], [93.1, 299.0], [93.2, 300.0], [93.3, 300.0], [93.4, 301.0], [93.5, 301.0], [93.6, 301.0], [93.7, 301.0], [93.8, 302.0], [93.9, 304.0], [94.0, 304.0], [94.1, 304.0], [94.2, 304.0], [94.3, 304.0], [94.4, 305.0], [94.5, 305.0], [94.6, 305.0], [94.7, 305.0], [94.8, 305.0], [94.9, 305.0], [95.0, 305.0], [95.1, 307.0], [95.2, 307.0], [95.3, 307.0], [95.4, 308.0], [95.5, 308.0], [95.6, 308.0], [95.7, 308.0], [95.8, 309.0], [95.9, 310.0], [96.0, 310.0], [96.1, 314.0], [96.2, 315.0], [96.3, 315.0], [96.4, 317.0], [96.5, 318.0], [96.6, 321.0], [96.7, 321.0], [96.8, 321.0], [96.9, 323.0], [97.0, 323.0], [97.1, 324.0], [97.2, 325.0], [97.3, 328.0], [97.4, 328.0], [97.5, 332.0], [97.6, 334.0], [97.7, 334.0], [97.8, 335.0], [97.9, 335.0], [98.0, 335.0], [98.1, 339.0], [98.2, 340.0], [98.3, 342.0], [98.4, 342.0], [98.5, 344.0], [98.6, 344.0], [98.7, 344.0], [98.8, 352.0], [98.9, 353.0], [99.0, 353.0], [99.1, 391.0], [99.2, 403.0], [99.3, 412.0], [99.4, 412.0], [99.5, 445.0], [99.6, 486.0], [99.7, 486.0], [99.8, 582.0], [99.9, 1295.0], [100.0, 1295.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 655.0, "series": [{"data": [[36900.0, 1.0], [38500.0, 1.0], [39300.0, 1.0], [43300.0, 1.0], [55700.0, 1.0], [56100.0, 1.0], [59700.0, 1.0], [60500.0, 7.0], [300.0, 254.0], [400.0, 14.0], [600.0, 2.0], [700.0, 3.0], [800.0, 5.0], [900.0, 7.0], [1000.0, 7.0], [1100.0, 17.0], [1200.0, 13.0], [1300.0, 13.0], [1400.0, 13.0], [1500.0, 4.0], [1600.0, 5.0], [1700.0, 10.0], [1800.0, 10.0], [2000.0, 3.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 3.0], [2800.0, 1.0], [3000.0, 1.0], [3200.0, 2.0], [3300.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4200.0, 2.0], [4100.0, 1.0], [4400.0, 1.0], [4600.0, 2.0], [4700.0, 3.0], [4800.0, 2.0], [5100.0, 3.0], [5000.0, 1.0], [5200.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6300.0, 2.0], [6600.0, 3.0], [6400.0, 2.0], [6800.0, 5.0], [6700.0, 1.0], [7100.0, 1.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [7500.0, 4.0], [7900.0, 1.0], [7800.0, 2.0], [7700.0, 3.0], [8100.0, 2.0], [8000.0, 1.0], [8400.0, 1.0], [8600.0, 1.0], [8300.0, 3.0], [8200.0, 1.0], [9200.0, 1.0], [8800.0, 1.0], [9300.0, 1.0], [9500.0, 1.0], [10200.0, 2.0], [9800.0, 1.0], [10000.0, 1.0], [10600.0, 2.0], [10700.0, 1.0], [10400.0, 1.0], [10800.0, 2.0], [10900.0, 1.0], [11600.0, 1.0], [11700.0, 1.0], [11300.0, 1.0], [11900.0, 1.0], [11800.0, 1.0], [12200.0, 1.0], [12000.0, 1.0], [13200.0, 1.0], [12800.0, 2.0], [13000.0, 1.0], [13300.0, 1.0], [13800.0, 1.0], [14200.0, 1.0], [13900.0, 1.0], [14400.0, 2.0], [14600.0, 1.0], [14700.0, 1.0], [15100.0, 1.0], [15200.0, 1.0], [15700.0, 1.0], [15400.0, 1.0], [15800.0, 1.0], [16000.0, 2.0], [15900.0, 2.0], [16100.0, 1.0], [16200.0, 1.0], [16400.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [18600.0, 1.0], [19200.0, 1.0], [19000.0, 1.0], [18800.0, 1.0], [20400.0, 2.0], [19800.0, 1.0], [20200.0, 1.0], [19600.0, 1.0], [21000.0, 1.0], [21200.0, 1.0], [21400.0, 1.0], [23400.0, 2.0], [23200.0, 1.0], [23800.0, 1.0], [25400.0, 2.0], [24800.0, 1.0], [26000.0, 1.0], [26200.0, 1.0], [25800.0, 1.0], [26400.0, 1.0], [27200.0, 1.0], [27000.0, 1.0], [28200.0, 1.0], [29400.0, 1.0], [30600.0, 1.0], [30200.0, 1.0], [30800.0, 1.0], [32800.0, 1.0], [36000.0, 1.0], [38400.0, 1.0], [38000.0, 1.0], [39600.0, 1.0], [42000.0, 1.0], [42800.0, 1.0], [47200.0, 1.0], [56400.0, 1.0], [60400.0, 40.0], [33900.0, 1.0], [34300.0, 1.0], [38700.0, 1.0], [40700.0, 2.0], [40300.0, 1.0], [39500.0, 1.0], [42700.0, 1.0], [41900.0, 1.0], [43500.0, 1.0], [44300.0, 1.0], [45900.0, 1.0], [47500.0, 1.0], [49500.0, 1.0], [60300.0, 35.0], [59500.0, 1.0], [17300.0, 2.0], [17100.0, 2.0], [16500.0, 2.0], [19300.0, 1.0], [18500.0, 2.0], [18700.0, 1.0], [20500.0, 1.0], [20900.0, 1.0], [21100.0, 1.0], [21300.0, 2.0], [21500.0, 1.0], [21700.0, 2.0], [22500.0, 2.0], [22300.0, 2.0], [23100.0, 1.0], [23500.0, 2.0], [24300.0, 1.0], [24100.0, 1.0], [25100.0, 1.0], [25300.0, 2.0], [25500.0, 1.0], [25700.0, 2.0], [25900.0, 1.0], [26700.0, 1.0], [28100.0, 1.0], [28500.0, 1.0], [29500.0, 1.0], [30300.0, 2.0], [29900.0, 1.0], [30500.0, 1.0], [31700.0, 1.0], [32500.0, 1.0], [38600.0, 2.0], [39400.0, 1.0], [41400.0, 1.0], [42200.0, 1.0], [41800.0, 1.0], [45000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 269.0], [33700.0, 1.0], [34100.0, 1.0], [38500.0, 1.0], [38100.0, 1.0], [39300.0, 1.0], [40500.0, 1.0], [42500.0, 2.0], [45700.0, 1.0], [46900.0, 1.0], [47300.0, 1.0], [49300.0, 1.0], [200.0, 1.0], [60100.0, 60.0], [400.0, 2.0], [500.0, 4.0], [600.0, 7.0], [700.0, 4.0], [800.0, 14.0], [900.0, 16.0], [1000.0, 13.0], [1100.0, 11.0], [1200.0, 9.0], [1300.0, 5.0], [1400.0, 7.0], [1500.0, 9.0], [1600.0, 7.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 1.0], [2300.0, 3.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 2.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [3900.0, 3.0], [4200.0, 1.0], [4300.0, 3.0], [4400.0, 1.0], [4500.0, 1.0], [4600.0, 2.0], [4800.0, 2.0], [4700.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 3.0], [6200.0, 2.0], [6600.0, 4.0], [6500.0, 1.0], [6400.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7200.0, 5.0], [7400.0, 2.0], [7300.0, 1.0], [7500.0, 2.0], [7700.0, 1.0], [7800.0, 2.0], [7900.0, 3.0], [8100.0, 2.0], [8200.0, 1.0], [8300.0, 1.0], [8500.0, 1.0], [9100.0, 1.0], [9000.0, 1.0], [9500.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [9900.0, 1.0], [10000.0, 1.0], [10100.0, 1.0], [10400.0, 1.0], [10500.0, 3.0], [10600.0, 1.0], [10300.0, 1.0], [11100.0, 1.0], [11300.0, 1.0], [11700.0, 1.0], [11600.0, 1.0], [11500.0, 1.0], [11900.0, 1.0], [11800.0, 1.0], [12500.0, 1.0], [12600.0, 1.0], [12700.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13500.0, 1.0], [13700.0, 1.0], [14200.0, 2.0], [14000.0, 1.0], [14300.0, 1.0], [14800.0, 1.0], [14500.0, 1.0], [15100.0, 1.0], [15000.0, 1.0], [15700.0, 2.0], [15600.0, 1.0], [15400.0, 1.0], [15800.0, 2.0], [15500.0, 1.0], [16100.0, 1.0], [16200.0, 2.0], [15900.0, 1.0], [16800.0, 2.0], [18400.0, 1.0], [17800.0, 1.0], [18200.0, 1.0], [19000.0, 1.0], [18800.0, 1.0], [18600.0, 1.0], [20200.0, 2.0], [19600.0, 1.0], [21400.0, 2.0], [20800.0, 1.0], [21000.0, 2.0], [21200.0, 1.0], [22200.0, 2.0], [23200.0, 2.0], [22800.0, 1.0], [23000.0, 1.0], [24000.0, 1.0], [23800.0, 1.0], [24600.0, 1.0], [25200.0, 1.0], [25600.0, 1.0], [26200.0, 1.0], [27800.0, 1.0], [28200.0, 1.0], [29200.0, 1.0], [30000.0, 1.0], [30200.0, 1.0], [38400.0, 1.0], [40000.0, 1.0], [40400.0, 1.0], [39200.0, 1.0], [41200.0, 1.0], [41600.0, 1.0], [44800.0, 1.0], [43200.0, 1.0], [44000.0, 1.0], [59200.0, 1.0], [36700.0, 1.0], [38300.0, 1.0], [39100.0, 2.0], [41900.0, 1.0], [41500.0, 1.0], [60300.0, 1.0], [17100.0, 2.0], [18300.0, 2.0], [19100.0, 1.0], [18500.0, 1.0], [19300.0, 1.0], [20300.0, 1.0], [19900.0, 1.0], [20700.0, 1.0], [20900.0, 2.0], [21100.0, 1.0], [22100.0, 2.0], [23100.0, 1.0], [23300.0, 1.0], [23500.0, 1.0], [25500.0, 2.0], [24900.0, 1.0], [25100.0, 4.0], [25700.0, 2.0], [25900.0, 1.0], [26500.0, 1.0], [26900.0, 1.0], [26700.0, 1.0], [27900.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [30300.0, 1.0], [29900.0, 1.0], [30100.0, 1.0], [30500.0, 1.0], [31500.0, 1.0], [32300.0, 1.0], [32500.0, 1.0], [35800.0, 1.0], [38200.0, 1.0], [37800.0, 1.0], [41800.0, 1.0], [43000.0, 1.0], [56200.0, 1.0], [55400.0, 1.0], [55800.0, 1.0], [59400.0, 1.0], [60200.0, 21.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 42.0], [1200.0, 1.0], [200.0, 655.0], [400.0, 4.0], [500.0, 1.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 809.0, "series": [{"data": [[0.0, 440.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 155.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 809.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5000000000000004, "minX": 1.68512742E12, "maxY": 24.922235722964732, "series": [{"data": [[1.68512814E12, 21.147540983606564], [1.68512748E12, 4.729729729729729], [1.68512778E12, 11.216494845360826], [1.68512808E12, 20.0], [1.68512742E12, 2.5000000000000004], [1.68512772E12, 10.0], [1.68512802E12, 19.923611111111118], [1.68512832E12, 8.07142857142857], [1.68512766E12, 9.686274509803917], [1.68512796E12, 16.215686274509803], [1.68512826E12, 23.949999999999996], [1.6851276E12, 7.278688524590163], [1.6851279E12, 15.0], [1.6851282E12, 24.922235722964732], [1.68512754E12, 5.0], [1.68512784E12, 14.906666666666668]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512832E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 236.0, "minX": 1.0, "maxY": 60456.0, "series": [{"data": [[2.0, 33204.5], [3.0, 27559.0], [4.0, 26718.5], [5.0, 21471.931034482757], [6.0, 60456.0], [7.0, 60375.0], [8.0, 17781.5], [9.0, 4124.777777777777], [10.0, 14469.961538461537], [11.0, 36673.0], [12.0, 27083.571428571428], [13.0, 24173.555555555555], [14.0, 33827.0], [15.0, 32352.680851063833], [16.0, 60417.00000000001], [1.0, 60362.0], [17.0, 41756.666666666664], [18.0, 60448.0], [19.0, 26922.2], [20.0, 17854.21014492752], [21.0, 45417.0], [22.0, 19115.166666666668], [23.0, 14053.1], [24.0, 21633.75], [25.0, 3003.877622377624]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[19.081081081081056, 13750.544807965858]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 32945.0], [3.0, 27321.666666666668], [4.0, 26467.75], [5.0, 21227.137931034482], [6.0, 60151.0], [7.0, 60118.0], [8.0, 17527.785714285714], [9.0, 3886.3888888888887], [10.0, 14225.987179487174], [11.0, 36408.5], [12.0, 26833.0], [13.0, 23916.555555555555], [14.0, 33593.0], [15.0, 32102.8085106383], [16.0, 60165.71428571428], [1.0, 60123.0], [17.0, 41478.333333333336], [18.0, 60200.333333333336], [19.0, 26664.0], [20.0, 17590.797101449276], [21.0, 45173.5], [22.0, 18858.0], [23.0, 13784.300000000001], [24.0, 21379.458333333336], [25.0, 2755.216783216784]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[19.081081081081056, 13498.815078236132]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 243.0], [3.0, 238.33333333333334], [4.0, 247.25], [5.0, 250.65517241379317], [6.0, 251.0], [7.0, 236.0], [8.0, 237.64285714285717], [9.0, 241.88888888888886], [10.0, 245.67948717948715], [11.0, 255.5], [12.0, 245.5], [13.0, 252.0], [14.0, 255.66666666666666], [15.0, 252.9787234042553], [1.0, 292.0], [16.0, 243.00000000000003], [17.0, 263.6666666666667], [18.0, 246.0], [19.0, 268.4], [20.0, 269.6231884057972], [21.0, 264.5], [22.0, 237.16666666666669], [23.0, 236.6], [24.0, 241.0], [25.0, 247.67247386759576]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[19.083926031294478, 251.72972972973008]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 208.2, "minX": 1.68512742E12, "maxY": 40791.6, "series": [{"data": [[1.68512814E12, 1901.5333333333333], [1.68512748E12, 879.7833333333333], [1.68512778E12, 2457.116666666667], [1.68512808E12, 2838.2], [1.68512742E12, 329.0], [1.68512772E12, 1628.4333333333334], [1.68512802E12, 2246.1666666666665], [1.68512832E12, 208.2], [1.68512766E12, 1934.9166666666667], [1.68512796E12, 935.6333333333333], [1.68512826E12, 1225.6666666666667], [1.6851276E12, 1075.3166666666666], [1.6851279E12, 1431.3833333333334], [1.6851282E12, 8305.333333333334], [1.68512754E12, 1100.75], [1.68512784E12, 1760.3833333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68512814E12, 4763.25], [1.68512748E12, 1541.2], [1.68512778E12, 4943.883333333333], [1.68512808E12, 10436.483333333334], [1.68512742E12, 360.73333333333335], [1.68512772E12, 4178.25], [1.68512802E12, 7550.433333333333], [1.68512832E12, 2515.5], [1.68512766E12, 7511.533333333334], [1.68512796E12, 2019.2166666666667], [1.68512826E12, 6290.616666666667], [1.6851276E12, 2323.6833333333334], [1.6851279E12, 2845.633333333333], [1.6851282E12, 40791.6], [1.68512754E12, 2407.0666666666666], [1.68512784E12, 3828.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512832E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 241.98113207547166, "minX": 1.68512742E12, "maxY": 60407.2, "series": [{"data": [[1.68512814E12, 11164.864864864867], [1.68512748E12, 17451.384615384617], [1.68512778E12, 15420.766666666663], [1.68512808E12, 17011.934210526324], [1.68512742E12, 9419.666666666666], [1.68512772E12, 21651.307692307695], [1.68512802E12, 23918.086956521733], [1.68512832E12, 60407.2], [1.68512766E12, 7226.857142857141], [1.68512796E12, 50133.294117647056], [1.68512826E12, 18756.76923076923], [1.6851276E12, 13515.68181818182], [1.6851279E12, 31430.875], [1.6851282E12, 4521.810035842295], [1.68512754E12, 21117.692307692305], [1.68512784E12, 25977.333333333332]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512814E12, 13639.485714285714], [1.68512748E12, 17238.363636363636], [1.68512778E12, 15237.53125], [1.68512808E12, 16388.958904109582], [1.68512742E12, 9160.333333333334], [1.68512772E12, 20164.769230769227], [1.68512802E12, 22815.14583333333], [1.68512832E12, 60176.55555555556], [1.68512766E12, 6716.392156862744], [1.68512796E12, 56086.4], [1.68512826E12, 5625.46511627907], [1.6851276E12, 16188.333333333334], [1.6851279E12, 29588.8], [1.6851282E12, 4384.150735294117], [1.68512754E12, 20360.999999999993], [1.68512784E12, 26165.260869565216]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512814E12, 265.67999999999995], [1.68512748E12, 247.9230769230769], [1.68512778E12, 251.85714285714283], [1.68512808E12, 273.14754098360646], [1.68512742E12, 248.83333333333331], [1.68512772E12, 245.4230769230769], [1.68512802E12, 258.44000000000005], [1.68512766E12, 241.98113207547166], [1.68512796E12, 251.42105263157893], [1.68512826E12, 243.078947368421], [1.6851276E12, 247.71428571428572], [1.6851279E12, 256.2631578947368], [1.6851282E12, 247.7499999999998], [1.68512754E12, 243.13333333333335], [1.68512784E12, 249.64]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512832E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 241.69811320754712, "minX": 1.68512742E12, "maxY": 60406.80000000001, "series": [{"data": [[1.68512814E12, 11163.648648648646], [1.68512748E12, 17450.76923076923], [1.68512778E12, 15420.399999999998], [1.68512808E12, 17011.36842105263], [1.68512742E12, 9416.0], [1.68512772E12, 21650.34615384615], [1.68512802E12, 23916.391304347828], [1.68512832E12, 60406.80000000001], [1.68512766E12, 7226.469387755101], [1.68512796E12, 50132.882352941175], [1.68512826E12, 18756.53846153846], [1.6851276E12, 13515.272727272732], [1.6851279E12, 31430.437499999996], [1.6851282E12, 4521.387096774193], [1.68512754E12, 21117.307692307695], [1.68512784E12, 25976.629629629628]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512814E12, 13639.42857142857], [1.68512748E12, 17238.18181818182], [1.68512778E12, 15237.499999999998], [1.68512808E12, 16388.904109589042], [1.68512742E12, 9160.0], [1.68512772E12, 20164.19230769231], [1.68512802E12, 22815.104166666668], [1.68512832E12, 60176.333333333336], [1.68512766E12, 6716.235294117647], [1.68512796E12, 56086.133333333324], [1.68512826E12, 5625.395348837209], [1.6851276E12, 16188.27777777778], [1.6851279E12, 29588.650000000005], [1.6851282E12, 4384.073529411763], [1.68512754E12, 20360.866666666665], [1.68512784E12, 26164.78260869565]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512814E12, 264.92], [1.68512748E12, 247.46153846153848], [1.68512778E12, 251.48571428571432], [1.68512808E12, 272.5409836065575], [1.68512742E12, 247.16666666666666], [1.68512772E12, 245.15384615384616], [1.68512802E12, 256.9200000000001], [1.68512766E12, 241.69811320754712], [1.68512796E12, 250.78947368421052], [1.68512826E12, 242.92105263157893], [1.6851276E12, 247.42857142857142], [1.6851279E12, 256.2105263157895], [1.6851282E12, 247.40441176470588], [1.68512754E12, 242.8], [1.68512784E12, 249.31999999999996]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512832E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68512742E12, "maxY": 130.0, "series": [{"data": [[1.68512814E12, 118.72972972972973], [1.68512748E12, 119.23076923076921], [1.68512778E12, 117.66666666666667], [1.68512808E12, 119.86842105263158], [1.68512742E12, 130.0], [1.68512772E12, 121.61538461538461], [1.68512802E12, 118.36956521739133], [1.68512832E12, 115.2], [1.68512766E12, 116.89795918367348], [1.68512796E12, 121.47058823529412], [1.68512826E12, 116.69230769230768], [1.6851276E12, 118.5], [1.6851279E12, 119.0], [1.6851282E12, 116.57706093189961], [1.68512754E12, 117.69230769230768], [1.68512784E12, 118.48148148148147]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68512814E12, 0.0], [1.68512748E12, 0.0], [1.68512778E12, 0.0], [1.68512808E12, 0.0], [1.68512742E12, 0.0], [1.68512772E12, 0.0], [1.68512802E12, 0.0], [1.68512832E12, 0.0], [1.68512766E12, 0.0], [1.68512796E12, 0.0], [1.68512826E12, 0.0], [1.6851276E12, 0.0], [1.6851279E12, 0.0], [1.6851282E12, 0.0], [1.68512754E12, 0.0], [1.68512784E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68512814E12, 116.53999999999999], [1.68512748E12, 119.23076923076923], [1.68512778E12, 118.4], [1.68512808E12, 121.83606557377048], [1.68512742E12, 124.0], [1.68512772E12, 119.46153846153845], [1.68512802E12, 117.24000000000001], [1.68512766E12, 118.09433962264151], [1.68512796E12, 118.42105263157895], [1.68512826E12, 116.52631578947364], [1.6851276E12, 117.9047619047619], [1.6851279E12, 122.99999999999999], [1.6851282E12, 116.62499999999999], [1.68512754E12, 118.40000000000002], [1.68512784E12, 117.11999999999999]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512832E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 228.0, "minX": 1.68512742E12, "maxY": 59487.0, "series": [{"data": [[1.68512814E12, 46995.0], [1.68512748E12, 25981.0], [1.68512778E12, 26922.0], [1.68512808E12, 445.0], [1.68512742E12, 11363.0], [1.68512772E12, 47338.0], [1.68512802E12, 334.0], [1.68512766E12, 42534.0], [1.68512796E12, 59487.0], [1.68512826E12, 39246.0], [1.6851276E12, 30005.0], [1.6851279E12, 56232.0], [1.6851282E12, 1295.0], [1.68512754E12, 25553.0], [1.68512784E12, 41686.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68512814E12, 324.20000000000005], [1.68512748E12, 24909.5], [1.68512778E12, 21483.800000000003], [1.68512808E12, 343.20000000000005], [1.68512742E12, 11363.0], [1.68512772E12, 43026.00000000001], [1.68512802E12, 292.9], [1.68512766E12, 39067.5], [1.68512796E12, 58237.299999999996], [1.68512826E12, 38915.2], [1.6851276E12, 28692.2], [1.6851279E12, 44047.0], [1.6851282E12, 305.0], [1.68512754E12, 24755.400000000005], [1.68512784E12, 39202.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68512814E12, 46995.0], [1.68512748E12, 25981.0], [1.68512778E12, 26922.0], [1.68512808E12, 445.0], [1.68512742E12, 11363.0], [1.68512772E12, 47338.0], [1.68512802E12, 334.0], [1.68512766E12, 42534.0], [1.68512796E12, 59487.0], [1.68512826E12, 39246.0], [1.6851276E12, 30005.0], [1.6851279E12, 56232.0], [1.6851282E12, 1295.0], [1.68512754E12, 25553.0], [1.68512784E12, 41686.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68512814E12, 27001.79999999996], [1.68512748E12, 25934.5], [1.68512778E12, 25149.0], [1.68512808E12, 401.79999999999995], [1.68512742E12, 11363.0], [1.68512772E12, 45635.5], [1.68512802E12, 319.7], [1.68512766E12, 41808.0], [1.68512796E12, 59454.3], [1.68512826E12, 39246.0], [1.6851276E12, 29798.899999999998], [1.6851279E12, 55447.0], [1.6851282E12, 329.0999999999999], [1.68512754E12, 25352.8], [1.68512784E12, 41088.899999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68512814E12, 228.0], [1.68512748E12, 228.0], [1.68512778E12, 230.0], [1.68512808E12, 228.0], [1.68512742E12, 234.0], [1.68512772E12, 230.0], [1.68512802E12, 228.0], [1.68512766E12, 230.0], [1.68512796E12, 228.0], [1.68512826E12, 240.0], [1.6851276E12, 231.0], [1.6851279E12, 229.0], [1.6851282E12, 229.0], [1.68512754E12, 228.0], [1.68512784E12, 229.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68512814E12, 268.0], [1.68512748E12, 279.0], [1.68512778E12, 286.0], [1.68512808E12, 263.0], [1.68512742E12, 244.0], [1.68512772E12, 301.0], [1.68512802E12, 249.5], [1.68512766E12, 263.5], [1.68512796E12, 248.5], [1.68512826E12, 271.0], [1.6851276E12, 342.0], [1.6851279E12, 6660.0], [1.6851282E12, 252.0], [1.68512754E12, 5128.0], [1.68512784E12, 306.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512826E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 121.0, "minX": 1.0, "maxY": 7599.0, "series": [{"data": [[2.0, 263.0], [8.0, 249.0], [9.0, 262.0], [10.0, 278.0], [11.0, 248.0], [3.0, 257.0], [12.0, 259.5], [13.0, 241.0], [14.0, 268.0], [15.0, 282.0], [1.0, 267.0], [4.0, 294.0], [16.0, 245.0], [17.0, 270.5], [18.0, 269.5], [5.0, 254.0], [20.0, 289.0], [6.0, 251.0], [7.0, 261.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 235.0], [8.0, 234.0], [9.0, 227.0], [10.0, 233.0], [11.0, 227.0], [3.0, 235.0], [12.0, 121.0], [13.0, 237.5], [14.0, 232.0], [15.0, 236.0], [1.0, 1379.0], [4.0, 235.0], [16.0, 234.0], [17.0, 236.0], [18.0, 7599.0], [5.0, 236.0], [20.0, 6362.0], [6.0, 237.0], [7.0, 229.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 121.0, "minX": 1.0, "maxY": 7599.0, "series": [{"data": [[2.0, 261.0], [8.0, 249.0], [9.0, 261.0], [10.0, 278.0], [11.0, 248.0], [3.0, 257.0], [12.0, 258.5], [13.0, 240.5], [14.0, 268.0], [15.0, 282.0], [1.0, 266.0], [4.0, 293.5], [16.0, 245.0], [17.0, 270.5], [18.0, 269.5], [5.0, 251.0], [20.0, 288.0], [6.0, 250.0], [7.0, 261.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 235.0], [8.0, 234.0], [9.0, 227.0], [10.0, 233.0], [11.0, 227.0], [3.0, 235.0], [12.0, 121.0], [13.0, 237.5], [14.0, 232.0], [15.0, 236.0], [1.0, 1379.0], [4.0, 235.0], [16.0, 234.0], [17.0, 236.0], [18.0, 7599.0], [5.0, 236.0], [20.0, 6362.0], [6.0, 237.0], [7.0, 229.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.68512742E12, "maxY": 8.85, "series": [{"data": [[1.68512814E12, 1.4], [1.68512748E12, 0.4166666666666667], [1.68512778E12, 1.2333333333333334], [1.68512808E12, 2.283333333333333], [1.68512742E12, 0.2], [1.68512772E12, 0.8333333333333334], [1.68512802E12, 1.6], [1.68512766E12, 1.85], [1.68512796E12, 0.6166666666666667], [1.68512826E12, 1.5666666666666667], [1.6851276E12, 0.6333333333333333], [1.6851279E12, 0.65], [1.6851282E12, 8.85], [1.68512754E12, 0.4666666666666667], [1.68512784E12, 0.8333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512826E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68512742E12, "maxY": 5.866666666666666, "series": [{"data": [[1.68512814E12, 0.6833333333333333], [1.68512748E12, 0.4], [1.68512778E12, 1.1166666666666667], [1.68512808E12, 1.0166666666666666], [1.68512742E12, 0.15], [1.68512772E12, 0.6833333333333333], [1.68512802E12, 0.8333333333333334], [1.68512766E12, 0.5], [1.68512796E12, 0.36666666666666664], [1.68512826E12, 0.21666666666666667], [1.6851276E12, 0.4166666666666667], [1.6851279E12, 0.65], [1.6851282E12, 1.6166666666666667], [1.68512754E12, 0.5], [1.68512784E12, 0.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68512814E12, 0.4], [1.68512796E12, 0.016666666666666666], [1.68512826E12, 0.08333333333333333], [1.68512808E12, 0.95], [1.6851282E12, 1.2833333333333334], [1.68512802E12, 0.5333333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68512766E12, 1.2333333333333334], [1.68512814E12, 0.2833333333333333], [1.68512826E12, 1.05], [1.6851276E12, 0.23333333333333334], [1.68512772E12, 0.18333333333333332], [1.6851282E12, 5.866666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68512814E12, 0.05], [1.68512796E12, 0.18333333333333332], [1.68512808E12, 0.26666666666666666], [1.6851282E12, 0.3], [1.68512802E12, 0.26666666666666666], [1.68512832E12, 0.3]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68512832E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68512742E12, "maxY": 4.65, "series": [{"data": [[1.68512814E12, 0.65], [1.68512748E12, 0.21666666666666667], [1.68512778E12, 0.5833333333333334], [1.68512808E12, 1.0166666666666666], [1.68512742E12, 0.1], [1.68512772E12, 0.35], [1.68512802E12, 0.8333333333333334], [1.68512766E12, 0.31666666666666665], [1.68512796E12, 0.31666666666666665], [1.68512826E12, 0.16666666666666666], [1.6851276E12, 0.21666666666666667], [1.6851279E12, 0.31666666666666665], [1.6851282E12, 1.6166666666666667], [1.68512754E12, 0.25], [1.68512784E12, 0.4166666666666667]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68512766E12, 0.5666666666666667], [1.68512814E12, 0.18333333333333332], [1.68512826E12, 0.4666666666666667], [1.6851276E12, 0.13333333333333333], [1.68512772E12, 0.08333333333333333], [1.6851282E12, 2.9166666666666665]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68512766E12, 0.6666666666666666], [1.68512814E12, 0.55], [1.68512796E12, 0.2], [1.68512826E12, 0.6666666666666666], [1.6851276E12, 0.1], [1.68512808E12, 1.2166666666666666], [1.68512772E12, 0.1], [1.6851282E12, 4.533333333333333], [1.68512802E12, 0.8], [1.68512832E12, 0.3]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68512766E12, 0.06666666666666667], [1.68512814E12, 0.03333333333333333], [1.68512748E12, 0.21666666666666667], [1.68512796E12, 0.05], [1.68512778E12, 0.5], [1.68512826E12, 0.03333333333333333], [1.6851276E12, 0.2], [1.68512742E12, 0.05], [1.6851279E12, 0.26666666666666666], [1.68512772E12, 0.25], [1.68512754E12, 0.21666666666666667], [1.68512784E12, 0.45]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68512766E12, 0.75], [1.68512814E12, 0.5833333333333334], [1.68512796E12, 0.23333333333333334], [1.68512826E12, 0.6166666666666667], [1.6851276E12, 0.16666666666666666], [1.68512808E12, 1.2666666666666666], [1.68512772E12, 0.18333333333333332], [1.6851282E12, 4.65], [1.68512802E12, 0.7666666666666667], [1.68512832E12, 0.16666666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68512766E12, 0.18333333333333332], [1.68512814E12, 0.03333333333333333], [1.68512748E12, 0.18333333333333332], [1.68512796E12, 0.05], [1.68512778E12, 0.5333333333333333], [1.68512826E12, 0.05], [1.6851276E12, 0.2], [1.68512742E12, 0.05], [1.6851279E12, 0.3333333333333333], [1.68512772E12, 0.3333333333333333], [1.68512754E12, 0.25], [1.68512784E12, 0.38333333333333336]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512832E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.68512742E12, "maxY": 12.1, "series": [{"data": [[1.68512814E12, 0.7166666666666667], [1.68512748E12, 0.6166666666666667], [1.68512778E12, 1.6166666666666667], [1.68512808E12, 1.0166666666666666], [1.68512742E12, 0.2], [1.68512772E12, 0.9333333333333333], [1.68512802E12, 0.8333333333333334], [1.68512766E12, 0.5666666666666667], [1.68512796E12, 0.4166666666666667], [1.68512826E12, 0.25], [1.6851276E12, 0.6166666666666667], [1.6851279E12, 0.9166666666666666], [1.6851282E12, 1.6166666666666667], [1.68512754E12, 0.7166666666666667], [1.68512784E12, 1.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68512766E12, 1.9833333333333334], [1.68512814E12, 1.3166666666666667], [1.68512796E12, 0.43333333333333335], [1.68512826E12, 1.75], [1.6851276E12, 0.4], [1.68512808E12, 2.4833333333333334], [1.68512772E12, 0.36666666666666664], [1.6851282E12, 12.1], [1.68512802E12, 1.5666666666666667], [1.68512832E12, 0.4666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68512832E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

