/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 123.0, "minX": 0.0, "maxY": 60539.0, "series": [{"data": [[0.0, 251.0], [0.1, 251.0], [0.2, 251.0], [0.3, 251.0], [0.4, 252.0], [0.5, 264.0], [0.6, 264.0], [0.7, 264.0], [0.8, 282.0], [0.9, 311.0], [1.0, 370.0], [1.1, 370.0], [1.2, 371.0], [1.3, 371.0], [1.4, 372.0], [1.5, 372.0], [1.6, 373.0], [1.7, 373.0], [1.8, 373.0], [1.9, 374.0], [2.0, 375.0], [2.1, 375.0], [2.2, 375.0], [2.3, 377.0], [2.4, 377.0], [2.5, 377.0], [2.6, 378.0], [2.7, 378.0], [2.8, 378.0], [2.9, 378.0], [3.0, 378.0], [3.1, 378.0], [3.2, 378.0], [3.3, 378.0], [3.4, 379.0], [3.5, 379.0], [3.6, 380.0], [3.7, 380.0], [3.8, 380.0], [3.9, 380.0], [4.0, 380.0], [4.1, 380.0], [4.2, 381.0], [4.3, 381.0], [4.4, 381.0], [4.5, 382.0], [4.6, 382.0], [4.7, 382.0], [4.8, 383.0], [4.9, 383.0], [5.0, 383.0], [5.1, 383.0], [5.2, 384.0], [5.3, 384.0], [5.4, 384.0], [5.5, 384.0], [5.6, 384.0], [5.7, 384.0], [5.8, 384.0], [5.9, 384.0], [6.0, 385.0], [6.1, 385.0], [6.2, 385.0], [6.3, 385.0], [6.4, 385.0], [6.5, 385.0], [6.6, 385.0], [6.7, 386.0], [6.8, 386.0], [6.9, 387.0], [7.0, 387.0], [7.1, 387.0], [7.2, 387.0], [7.3, 387.0], [7.4, 388.0], [7.5, 388.0], [7.6, 389.0], [7.7, 389.0], [7.8, 389.0], [7.9, 389.0], [8.0, 390.0], [8.1, 390.0], [8.2, 390.0], [8.3, 390.0], [8.4, 390.0], [8.5, 391.0], [8.6, 391.0], [8.7, 391.0], [8.8, 391.0], [8.9, 392.0], [9.0, 392.0], [9.1, 392.0], [9.2, 392.0], [9.3, 393.0], [9.4, 393.0], [9.5, 394.0], [9.6, 394.0], [9.7, 394.0], [9.8, 394.0], [9.9, 394.0], [10.0, 394.0], [10.1, 395.0], [10.2, 395.0], [10.3, 395.0], [10.4, 395.0], [10.5, 395.0], [10.6, 395.0], [10.7, 395.0], [10.8, 396.0], [10.9, 396.0], [11.0, 396.0], [11.1, 397.0], [11.2, 397.0], [11.3, 398.0], [11.4, 398.0], [11.5, 398.0], [11.6, 398.0], [11.7, 398.0], [11.8, 399.0], [11.9, 399.0], [12.0, 399.0], [12.1, 399.0], [12.2, 400.0], [12.3, 400.0], [12.4, 400.0], [12.5, 400.0], [12.6, 401.0], [12.7, 401.0], [12.8, 401.0], [12.9, 401.0], [13.0, 401.0], [13.1, 401.0], [13.2, 401.0], [13.3, 402.0], [13.4, 402.0], [13.5, 402.0], [13.6, 402.0], [13.7, 402.0], [13.8, 402.0], [13.9, 403.0], [14.0, 404.0], [14.1, 404.0], [14.2, 404.0], [14.3, 404.0], [14.4, 405.0], [14.5, 406.0], [14.6, 408.0], [14.7, 408.0], [14.8, 409.0], [14.9, 409.0], [15.0, 410.0], [15.1, 410.0], [15.2, 411.0], [15.3, 413.0], [15.4, 413.0], [15.5, 413.0], [15.6, 414.0], [15.7, 415.0], [15.8, 416.0], [15.9, 418.0], [16.0, 418.0], [16.1, 420.0], [16.2, 421.0], [16.3, 424.0], [16.4, 425.0], [16.5, 425.0], [16.6, 433.0], [16.7, 434.0], [16.8, 435.0], [16.9, 436.0], [17.0, 439.0], [17.1, 439.0], [17.2, 455.0], [17.3, 459.0], [17.4, 464.0], [17.5, 563.0], [17.6, 563.0], [17.7, 1062.0], [17.8, 1087.0], [17.9, 1092.0], [18.0, 1169.0], [18.1, 1394.0], [18.2, 1394.0], [18.3, 1526.0], [18.4, 1581.0], [18.5, 1821.0], [18.6, 2086.0], [18.7, 2086.0], [18.8, 3139.0], [18.9, 3377.0], [19.0, 3785.0], [19.1, 4233.0], [19.2, 4378.0], [19.3, 4378.0], [19.4, 4403.0], [19.5, 4487.0], [19.6, 4552.0], [19.7, 4608.0], [19.8, 4608.0], [19.9, 4700.0], [20.0, 4874.0], [20.1, 4918.0], [20.2, 4930.0], [20.3, 4938.0], [20.4, 4938.0], [20.5, 4981.0], [20.6, 5001.0], [20.7, 5010.0], [20.8, 5026.0], [20.9, 5026.0], [21.0, 5036.0], [21.1, 5055.0], [21.2, 5207.0], [21.3, 5329.0], [21.4, 5389.0], [21.5, 5389.0], [21.6, 5392.0], [21.7, 5408.0], [21.8, 5409.0], [21.9, 5415.0], [22.0, 5415.0], [22.1, 5417.0], [22.2, 5431.0], [22.3, 5435.0], [22.4, 5437.0], [22.5, 5437.0], [22.6, 5437.0], [22.7, 5445.0], [22.8, 5459.0], [22.9, 5459.0], [23.0, 5462.0], [23.1, 5462.0], [23.2, 5493.0], [23.3, 5499.0], [23.4, 5507.0], [23.5, 5510.0], [23.6, 5518.0], [23.7, 5518.0], [23.8, 5533.0], [23.9, 5538.0], [24.0, 5547.0], [24.1, 5547.0], [24.2, 5547.0], [24.3, 5548.0], [24.4, 5552.0], [24.5, 5564.0], [24.6, 5564.0], [24.7, 5602.0], [24.8, 5602.0], [24.9, 5639.0], [25.0, 5671.0], [25.1, 5680.0], [25.2, 5777.0], [25.3, 5777.0], [25.4, 5807.0], [25.5, 5859.0], [25.6, 5923.0], [25.7, 5956.0], [25.8, 5957.0], [25.9, 5957.0], [26.0, 5969.0], [26.1, 6029.0], [26.2, 6082.0], [26.3, 6191.0], [26.4, 6191.0], [26.5, 6203.0], [26.6, 6205.0], [26.7, 6243.0], [26.8, 6298.0], [26.9, 6313.0], [27.0, 6313.0], [27.1, 6323.0], [27.2, 6363.0], [27.3, 6369.0], [27.4, 6413.0], [27.5, 6413.0], [27.6, 6445.0], [27.7, 6447.0], [27.8, 6448.0], [27.9, 6495.0], [28.0, 6593.0], [28.1, 6593.0], [28.2, 6733.0], [28.3, 6790.0], [28.4, 6943.0], [28.5, 6995.0], [28.6, 6995.0], [28.7, 7057.0], [28.8, 7069.0], [28.9, 7079.0], [29.0, 7094.0], [29.1, 7187.0], [29.2, 7187.0], [29.3, 7370.0], [29.4, 7376.0], [29.5, 7419.0], [29.6, 7451.0], [29.7, 7451.0], [29.8, 7482.0], [29.9, 7496.0], [30.0, 7503.0], [30.1, 7519.0], [30.2, 7581.0], [30.3, 7581.0], [30.4, 7605.0], [30.5, 7626.0], [30.6, 7681.0], [30.7, 7697.0], [30.8, 7697.0], [30.9, 7731.0], [31.0, 7737.0], [31.1, 7788.0], [31.2, 7801.0], [31.3, 7840.0], [31.4, 7840.0], [31.5, 7918.0], [31.6, 7999.0], [31.7, 8058.0], [31.8, 8114.0], [31.9, 8114.0], [32.0, 8323.0], [32.1, 8367.0], [32.2, 8406.0], [32.3, 8473.0], [32.4, 8506.0], [32.5, 8506.0], [32.6, 8625.0], [32.7, 8662.0], [32.8, 8693.0], [32.9, 8713.0], [33.0, 8713.0], [33.1, 8773.0], [33.2, 8882.0], [33.3, 8906.0], [33.4, 8920.0], [33.5, 8966.0], [33.6, 8966.0], [33.7, 9062.0], [33.8, 9076.0], [33.9, 9104.0], [34.0, 9169.0], [34.1, 9169.0], [34.2, 9215.0], [34.3, 9247.0], [34.4, 9271.0], [34.5, 9273.0], [34.6, 9289.0], [34.7, 9289.0], [34.8, 9290.0], [34.9, 9391.0], [35.0, 9489.0], [35.1, 9559.0], [35.2, 9559.0], [35.3, 9594.0], [35.4, 9682.0], [35.5, 9693.0], [35.6, 9797.0], [35.7, 9836.0], [35.8, 9836.0], [35.9, 9957.0], [36.0, 9975.0], [36.1, 9997.0], [36.2, 10052.0], [36.3, 10052.0], [36.4, 10072.0], [36.5, 10125.0], [36.6, 10160.0], [36.7, 10230.0], [36.8, 10310.0], [36.9, 10310.0], [37.0, 10322.0], [37.1, 10333.0], [37.2, 10403.0], [37.3, 10454.0], [37.4, 10454.0], [37.5, 10515.0], [37.6, 10530.0], [37.7, 10559.0], [37.8, 10759.0], [37.9, 10780.0], [38.0, 10780.0], [38.1, 10821.0], [38.2, 10930.0], [38.3, 10932.0], [38.4, 11003.0], [38.5, 11003.0], [38.6, 11025.0], [38.7, 11092.0], [38.8, 11093.0], [38.9, 11116.0], [39.0, 11145.0], [39.1, 11145.0], [39.2, 11151.0], [39.3, 11164.0], [39.4, 11251.0], [39.5, 11481.0], [39.6, 11481.0], [39.7, 11501.0], [39.8, 11558.0], [39.9, 11618.0], [40.0, 11640.0], [40.1, 11679.0], [40.2, 11679.0], [40.3, 11697.0], [40.4, 11720.0], [40.5, 11761.0], [40.6, 11790.0], [40.7, 11790.0], [40.8, 11791.0], [40.9, 11801.0], [41.0, 11839.0], [41.1, 11865.0], [41.2, 11894.0], [41.3, 11894.0], [41.4, 11936.0], [41.5, 11947.0], [41.6, 12003.0], [41.7, 12097.0], [41.8, 12097.0], [41.9, 12168.0], [42.0, 12224.0], [42.1, 12393.0], [42.2, 12469.0], [42.3, 12533.0], [42.4, 12533.0], [42.5, 12551.0], [42.6, 12607.0], [42.7, 12722.0], [42.8, 12731.0], [42.9, 12731.0], [43.0, 12768.0], [43.1, 12784.0], [43.2, 12848.0], [43.3, 12848.0], [43.4, 12978.0], [43.5, 12978.0], [43.6, 12996.0], [43.7, 13103.0], [43.8, 13126.0], [43.9, 13150.0], [44.0, 13150.0], [44.1, 13267.0], [44.2, 13469.0], [44.3, 13475.0], [44.4, 13478.0], [44.5, 13495.0], [44.6, 13495.0], [44.7, 13626.0], [44.8, 13654.0], [44.9, 13667.0], [45.0, 13680.0], [45.1, 13680.0], [45.2, 13696.0], [45.3, 13794.0], [45.4, 13816.0], [45.5, 13862.0], [45.6, 13891.0], [45.7, 13891.0], [45.8, 13930.0], [45.9, 13963.0], [46.0, 14039.0], [46.1, 14056.0], [46.2, 14056.0], [46.3, 14115.0], [46.4, 14143.0], [46.5, 14250.0], [46.6, 14260.0], [46.7, 14313.0], [46.8, 14313.0], [46.9, 14352.0], [47.0, 14367.0], [47.1, 14447.0], [47.2, 14520.0], [47.3, 14520.0], [47.4, 14540.0], [47.5, 14547.0], [47.6, 14556.0], [47.7, 14563.0], [47.8, 14666.0], [47.9, 14666.0], [48.0, 14757.0], [48.1, 14848.0], [48.2, 14899.0], [48.3, 14901.0], [48.4, 14901.0], [48.5, 14943.0], [48.6, 14957.0], [48.7, 14968.0], [48.8, 15054.0], [48.9, 15062.0], [49.0, 15062.0], [49.1, 15092.0], [49.2, 15147.0], [49.3, 15179.0], [49.4, 15219.0], [49.5, 15219.0], [49.6, 15235.0], [49.7, 15238.0], [49.8, 15239.0], [49.9, 15248.0], [50.0, 15368.0], [50.1, 15368.0], [50.2, 15414.0], [50.3, 15486.0], [50.4, 15649.0], [50.5, 15667.0], [50.6, 15667.0], [50.7, 15756.0], [50.8, 15817.0], [50.9, 15955.0], [51.0, 16067.0], [51.1, 16067.0], [51.2, 16073.0], [51.3, 16089.0], [51.4, 16270.0], [51.5, 16408.0], [51.6, 16409.0], [51.7, 16409.0], [51.8, 16412.0], [51.9, 16446.0], [52.0, 16719.0], [52.1, 16840.0], [52.2, 16840.0], [52.3, 16931.0], [52.4, 17026.0], [52.5, 17078.0], [52.6, 17152.0], [52.7, 17282.0], [52.8, 17282.0], [52.9, 17288.0], [53.0, 17318.0], [53.1, 17360.0], [53.2, 17416.0], [53.3, 17416.0], [53.4, 17423.0], [53.5, 17441.0], [53.6, 17474.0], [53.7, 17539.0], [53.8, 17702.0], [53.9, 17702.0], [54.0, 17789.0], [54.1, 17795.0], [54.2, 17862.0], [54.3, 17951.0], [54.4, 17951.0], [54.5, 18087.0], [54.6, 18192.0], [54.7, 18333.0], [54.8, 18404.0], [54.9, 18422.0], [55.0, 18422.0], [55.1, 18457.0], [55.2, 18696.0], [55.3, 18845.0], [55.4, 18872.0], [55.5, 18872.0], [55.6, 18955.0], [55.7, 19100.0], [55.8, 19116.0], [55.9, 19173.0], [56.0, 19225.0], [56.1, 19225.0], [56.2, 19226.0], [56.3, 19321.0], [56.4, 19349.0], [56.5, 19369.0], [56.6, 19369.0], [56.7, 19380.0], [56.8, 19447.0], [56.9, 19464.0], [57.0, 19503.0], [57.1, 19512.0], [57.2, 19512.0], [57.3, 19533.0], [57.4, 19584.0], [57.5, 19588.0], [57.6, 19621.0], [57.7, 19621.0], [57.8, 19657.0], [57.9, 19685.0], [58.0, 19699.0], [58.1, 19809.0], [58.2, 19848.0], [58.3, 19848.0], [58.4, 19908.0], [58.5, 19962.0], [58.6, 20038.0], [58.7, 20141.0], [58.8, 20141.0], [58.9, 20175.0], [59.0, 20176.0], [59.1, 20208.0], [59.2, 20261.0], [59.3, 20287.0], [59.4, 20287.0], [59.5, 20319.0], [59.6, 20386.0], [59.7, 20403.0], [59.8, 20407.0], [59.9, 20407.0], [60.0, 20425.0], [60.1, 20537.0], [60.2, 20657.0], [60.3, 20706.0], [60.4, 20807.0], [60.5, 20807.0], [60.6, 20825.0], [60.7, 20866.0], [60.8, 20880.0], [60.9, 20886.0], [61.0, 20886.0], [61.1, 20940.0], [61.2, 20989.0], [61.3, 21019.0], [61.4, 21105.0], [61.5, 21131.0], [61.6, 21131.0], [61.7, 21183.0], [61.8, 21187.0], [61.9, 21254.0], [62.0, 21282.0], [62.1, 21282.0], [62.2, 21287.0], [62.3, 21305.0], [62.4, 21337.0], [62.5, 21368.0], [62.6, 21488.0], [62.7, 21488.0], [62.8, 21521.0], [62.9, 21628.0], [63.0, 21704.0], [63.1, 21751.0], [63.2, 21751.0], [63.3, 21775.0], [63.4, 21793.0], [63.5, 21840.0], [63.6, 22003.0], [63.7, 22063.0], [63.8, 22063.0], [63.9, 22188.0], [64.0, 22248.0], [64.1, 22254.0], [64.2, 22361.0], [64.3, 22361.0], [64.4, 22409.0], [64.5, 22538.0], [64.6, 22589.0], [64.7, 22641.0], [64.8, 22768.0], [64.9, 22768.0], [65.0, 22850.0], [65.1, 22851.0], [65.2, 22922.0], [65.3, 22969.0], [65.4, 22969.0], [65.5, 23040.0], [65.6, 23096.0], [65.7, 23167.0], [65.8, 23178.0], [65.9, 23299.0], [66.0, 23299.0], [66.1, 23370.0], [66.2, 23374.0], [66.3, 23492.0], [66.4, 23599.0], [66.5, 23599.0], [66.6, 23622.0], [66.7, 23672.0], [66.8, 23703.0], [66.9, 23781.0], [67.0, 23783.0], [67.1, 23783.0], [67.2, 23829.0], [67.3, 23838.0], [67.4, 23896.0], [67.5, 24035.0], [67.6, 24035.0], [67.7, 24098.0], [67.8, 24128.0], [67.9, 24187.0], [68.0, 24274.0], [68.1, 24360.0], [68.2, 24360.0], [68.3, 24367.0], [68.4, 24400.0], [68.5, 24421.0], [68.6, 24501.0], [68.7, 24501.0], [68.8, 24551.0], [68.9, 24554.0], [69.0, 24560.0], [69.1, 24577.0], [69.2, 24629.0], [69.3, 24629.0], [69.4, 24772.0], [69.5, 24815.0], [69.6, 24820.0], [69.7, 24831.0], [69.8, 24831.0], [69.9, 25088.0], [70.0, 25129.0], [70.1, 25129.0], [70.2, 25155.0], [70.3, 25157.0], [70.4, 25157.0], [70.5, 25195.0], [70.6, 25213.0], [70.7, 25332.0], [70.8, 25375.0], [70.9, 25375.0], [71.0, 25406.0], [71.1, 25415.0], [71.2, 25492.0], [71.3, 25548.0], [71.4, 25562.0], [71.5, 25562.0], [71.6, 25577.0], [71.7, 25593.0], [71.8, 25607.0], [71.9, 25628.0], [72.0, 25628.0], [72.1, 25714.0], [72.2, 25735.0], [72.3, 25760.0], [72.4, 25813.0], [72.5, 25887.0], [72.6, 25887.0], [72.7, 25936.0], [72.8, 25940.0], [72.9, 26025.0], [73.0, 26055.0], [73.1, 26055.0], [73.2, 26135.0], [73.3, 26182.0], [73.4, 26212.0], [73.5, 26237.0], [73.6, 26536.0], [73.7, 26536.0], [73.8, 26602.0], [73.9, 26610.0], [74.0, 26643.0], [74.1, 26868.0], [74.2, 26868.0], [74.3, 26975.0], [74.4, 27255.0], [74.5, 27259.0], [74.6, 27307.0], [74.7, 27432.0], [74.8, 27432.0], [74.9, 27612.0], [75.0, 27660.0], [75.1, 27862.0], [75.2, 27913.0], [75.3, 27913.0], [75.4, 27958.0], [75.5, 27963.0], [75.6, 28205.0], [75.7, 28542.0], [75.8, 28570.0], [75.9, 28570.0], [76.0, 28574.0], [76.1, 28597.0], [76.2, 28649.0], [76.3, 28651.0], [76.4, 28651.0], [76.5, 28693.0], [76.6, 28700.0], [76.7, 28736.0], [76.8, 28752.0], [76.9, 28796.0], [77.0, 28796.0], [77.1, 28927.0], [77.2, 28990.0], [77.3, 29113.0], [77.4, 29133.0], [77.5, 29133.0], [77.6, 29396.0], [77.7, 29439.0], [77.8, 29441.0], [77.9, 29651.0], [78.0, 29712.0], [78.1, 29712.0], [78.2, 29729.0], [78.3, 29756.0], [78.4, 29808.0], [78.5, 29868.0], [78.6, 29868.0], [78.7, 29980.0], [78.8, 30042.0], [78.9, 30200.0], [79.0, 30273.0], [79.1, 30442.0], [79.2, 30442.0], [79.3, 30479.0], [79.4, 30688.0], [79.5, 31017.0], [79.6, 31164.0], [79.7, 31164.0], [79.8, 31453.0], [79.9, 31474.0], [80.0, 31618.0], [80.1, 31647.0], [80.2, 31815.0], [80.3, 31815.0], [80.4, 31860.0], [80.5, 31948.0], [80.6, 31980.0], [80.7, 31994.0], [80.8, 31994.0], [80.9, 32004.0], [81.0, 32151.0], [81.1, 32383.0], [81.2, 32521.0], [81.3, 32617.0], [81.4, 32617.0], [81.5, 32747.0], [81.6, 33258.0], [81.7, 33277.0], [81.8, 33322.0], [81.9, 33322.0], [82.0, 33401.0], [82.1, 33475.0], [82.2, 33557.0], [82.3, 33592.0], [82.4, 33692.0], [82.5, 33692.0], [82.6, 34039.0], [82.7, 34156.0], [82.8, 34270.0], [82.9, 34363.0], [83.0, 34363.0], [83.1, 34423.0], [83.2, 34447.0], [83.3, 34500.0], [83.4, 34525.0], [83.5, 34733.0], [83.6, 34733.0], [83.7, 34748.0], [83.8, 34851.0], [83.9, 34949.0], [84.0, 35003.0], [84.1, 35003.0], [84.2, 35047.0], [84.3, 35052.0], [84.4, 35263.0], [84.5, 35380.0], [84.6, 35505.0], [84.7, 35505.0], [84.8, 35529.0], [84.9, 35554.0], [85.0, 35712.0], [85.1, 35767.0], [85.2, 35767.0], [85.3, 35960.0], [85.4, 36387.0], [85.5, 36509.0], [85.6, 36695.0], [85.7, 36728.0], [85.8, 36728.0], [85.9, 36790.0], [86.0, 36811.0], [86.1, 36924.0], [86.2, 37043.0], [86.3, 37043.0], [86.4, 37498.0], [86.5, 37995.0], [86.6, 38230.0], [86.7, 38898.0], [86.8, 38900.0], [86.9, 38900.0], [87.0, 39023.0], [87.1, 39144.0], [87.2, 39350.0], [87.3, 39385.0], [87.4, 39385.0], [87.5, 39480.0], [87.6, 39734.0], [87.7, 40642.0], [87.8, 40657.0], [87.9, 40843.0], [88.0, 40843.0], [88.1, 41096.0], [88.2, 41269.0], [88.3, 41448.0], [88.4, 41665.0], [88.5, 41665.0], [88.6, 42014.0], [88.7, 42666.0], [88.8, 43168.0], [88.9, 43204.0], [89.0, 43271.0], [89.1, 43271.0], [89.2, 43280.0], [89.3, 43703.0], [89.4, 43920.0], [89.5, 44439.0], [89.6, 44439.0], [89.7, 44465.0], [89.8, 44549.0], [89.9, 44674.0], [90.0, 45287.0], [90.1, 45310.0], [90.2, 45310.0], [90.3, 46243.0], [90.4, 46463.0], [90.5, 46792.0], [90.6, 47172.0], [90.7, 47172.0], [90.8, 47597.0], [90.9, 47663.0], [91.0, 47887.0], [91.1, 48483.0], [91.2, 48555.0], [91.3, 48555.0], [91.4, 48909.0], [91.5, 48922.0], [91.6, 48971.0], [91.7, 49104.0], [91.8, 49104.0], [91.9, 49135.0], [92.0, 49220.0], [92.1, 49500.0], [92.2, 49542.0], [92.3, 49790.0], [92.4, 49790.0], [92.5, 49918.0], [92.6, 49950.0], [92.7, 50217.0], [92.8, 50305.0], [92.9, 50305.0], [93.0, 50357.0], [93.1, 50890.0], [93.2, 50910.0], [93.3, 51172.0], [93.4, 51355.0], [93.5, 51355.0], [93.6, 51447.0], [93.7, 51453.0], [93.8, 51482.0], [93.9, 51853.0], [94.0, 51853.0], [94.1, 52219.0], [94.2, 52281.0], [94.3, 52457.0], [94.4, 52704.0], [94.5, 52734.0], [94.6, 52734.0], [94.7, 52935.0], [94.8, 52977.0], [94.9, 53229.0], [95.0, 53729.0], [95.1, 53729.0], [95.2, 53838.0], [95.3, 53980.0], [95.4, 54007.0], [95.5, 54048.0], [95.6, 54384.0], [95.7, 54384.0], [95.8, 55255.0], [95.9, 55482.0], [96.0, 55561.0], [96.1, 55742.0], [96.2, 55742.0], [96.3, 55937.0], [96.4, 56017.0], [96.5, 56328.0], [96.6, 56769.0], [96.7, 56908.0], [96.8, 56908.0], [96.9, 57050.0], [97.0, 57257.0], [97.1, 58167.0], [97.2, 58962.0], [97.3, 58962.0], [97.4, 60382.0], [97.5, 60392.0], [97.6, 60398.0], [97.7, 60402.0], [97.8, 60402.0], [97.9, 60402.0], [98.0, 60407.0], [98.1, 60410.0], [98.2, 60412.0], [98.3, 60412.0], [98.4, 60412.0], [98.5, 60413.0], [98.6, 60413.0], [98.7, 60414.0], [98.8, 60416.0], [98.9, 60417.0], [99.0, 60417.0], [99.1, 60421.0], [99.2, 60436.0], [99.3, 60446.0], [99.4, 60461.0], [99.5, 60461.0], [99.6, 60467.0], [99.7, 60525.0], [99.8, 60526.0], [99.9, 60539.0], [100.0, 60539.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 123.0], [0.1, 123.0], [0.2, 124.0], [0.3, 124.0], [0.4, 125.0], [0.5, 125.0], [0.6, 125.0], [0.7, 125.0], [0.8, 125.0], [0.9, 125.0], [1.0, 125.0], [1.1, 125.0], [1.2, 125.0], [1.3, 125.0], [1.4, 125.0], [1.5, 125.0], [1.6, 125.0], [1.7, 126.0], [1.8, 126.0], [1.9, 126.0], [2.0, 126.0], [2.1, 126.0], [2.2, 126.0], [2.3, 126.0], [2.4, 126.0], [2.5, 126.0], [2.6, 126.0], [2.7, 126.0], [2.8, 127.0], [2.9, 127.0], [3.0, 127.0], [3.1, 127.0], [3.2, 127.0], [3.3, 127.0], [3.4, 127.0], [3.5, 127.0], [3.6, 127.0], [3.7, 127.0], [3.8, 127.0], [3.9, 127.0], [4.0, 127.0], [4.1, 128.0], [4.2, 128.0], [4.3, 128.0], [4.4, 128.0], [4.5, 128.0], [4.6, 128.0], [4.7, 128.0], [4.8, 128.0], [4.9, 128.0], [5.0, 128.0], [5.1, 128.0], [5.2, 129.0], [5.3, 129.0], [5.4, 129.0], [5.5, 129.0], [5.6, 129.0], [5.7, 129.0], [5.8, 129.0], [5.9, 129.0], [6.0, 129.0], [6.1, 130.0], [6.2, 130.0], [6.3, 130.0], [6.4, 130.0], [6.5, 130.0], [6.6, 130.0], [6.7, 130.0], [6.8, 130.0], [6.9, 130.0], [7.0, 130.0], [7.1, 130.0], [7.2, 130.0], [7.3, 130.0], [7.4, 130.0], [7.5, 130.0], [7.6, 130.0], [7.7, 131.0], [7.8, 131.0], [7.9, 131.0], [8.0, 131.0], [8.1, 131.0], [8.2, 131.0], [8.3, 131.0], [8.4, 131.0], [8.5, 131.0], [8.6, 131.0], [8.7, 132.0], [8.8, 132.0], [8.9, 132.0], [9.0, 132.0], [9.1, 132.0], [9.2, 132.0], [9.3, 132.0], [9.4, 132.0], [9.5, 132.0], [9.6, 132.0], [9.7, 132.0], [9.8, 132.0], [9.9, 132.0], [10.0, 132.0], [10.1, 132.0], [10.2, 132.0], [10.3, 133.0], [10.4, 133.0], [10.5, 133.0], [10.6, 133.0], [10.7, 133.0], [10.8, 133.0], [10.9, 133.0], [11.0, 133.0], [11.1, 133.0], [11.2, 133.0], [11.3, 133.0], [11.4, 133.0], [11.5, 133.0], [11.6, 133.0], [11.7, 133.0], [11.8, 133.0], [11.9, 133.0], [12.0, 133.0], [12.1, 133.0], [12.2, 134.0], [12.3, 134.0], [12.4, 134.0], [12.5, 134.0], [12.6, 134.0], [12.7, 134.0], [12.8, 134.0], [12.9, 134.0], [13.0, 134.0], [13.1, 134.0], [13.2, 134.0], [13.3, 134.0], [13.4, 134.0], [13.5, 134.0], [13.6, 134.0], [13.7, 134.0], [13.8, 135.0], [13.9, 135.0], [14.0, 135.0], [14.1, 135.0], [14.2, 135.0], [14.3, 136.0], [14.4, 136.0], [14.5, 136.0], [14.6, 136.0], [14.7, 136.0], [14.8, 136.0], [14.9, 136.0], [15.0, 137.0], [15.1, 137.0], [15.2, 137.0], [15.3, 137.0], [15.4, 138.0], [15.5, 138.0], [15.6, 138.0], [15.7, 139.0], [15.8, 139.0], [15.9, 139.0], [16.0, 139.0], [16.1, 139.0], [16.2, 140.0], [16.3, 140.0], [16.4, 141.0], [16.5, 153.0], [16.6, 293.0], [16.7, 795.0], [16.8, 795.0], [16.9, 815.0], [17.0, 826.0], [17.1, 904.0], [17.2, 1125.0], [17.3, 1125.0], [17.4, 1139.0], [17.5, 1277.0], [17.6, 1573.0], [17.7, 1824.0], [17.8, 2884.0], [17.9, 2884.0], [18.0, 3090.0], [18.1, 3499.0], [18.2, 3924.0], [18.3, 3964.0], [18.4, 3964.0], [18.5, 4075.0], [18.6, 4130.0], [18.7, 4196.0], [18.8, 4279.0], [18.9, 4279.0], [19.0, 4357.0], [19.1, 4401.0], [19.2, 4596.0], [19.3, 4605.0], [19.4, 4605.0], [19.5, 4665.0], [19.6, 4683.0], [19.7, 4708.0], [19.8, 4725.0], [19.9, 4725.0], [20.0, 4743.0], [20.1, 4744.0], [20.2, 4763.0], [20.3, 4769.0], [20.4, 5040.0], [20.5, 5040.0], [20.6, 5080.0], [20.7, 5124.0], [20.8, 5124.0], [20.9, 5143.0], [21.0, 5143.0], [21.1, 5153.0], [21.2, 5153.0], [21.3, 5173.0], [21.4, 5173.0], [21.5, 5173.0], [21.6, 5179.0], [21.7, 5179.0], [21.8, 5186.0], [21.9, 5186.0], [22.0, 5186.0], [22.1, 5193.0], [22.2, 5202.0], [22.3, 5202.0], [22.4, 5228.0], [22.5, 5237.0], [22.6, 5237.0], [22.7, 5240.0], [22.8, 5246.0], [22.9, 5251.0], [23.0, 5258.0], [23.1, 5258.0], [23.2, 5259.0], [23.3, 5281.0], [23.4, 5287.0], [23.5, 5288.0], [23.6, 5288.0], [23.7, 5289.0], [23.8, 5304.0], [23.9, 5338.0], [24.0, 5378.0], [24.1, 5378.0], [24.2, 5382.0], [24.3, 5417.0], [24.4, 5495.0], [24.5, 5552.0], [24.6, 5607.0], [24.7, 5607.0], [24.8, 5642.0], [24.9, 5656.0], [25.0, 5668.0], [25.1, 5705.0], [25.2, 5705.0], [25.3, 5768.0], [25.4, 5821.0], [25.5, 5904.0], [25.6, 5945.0], [25.7, 5945.0], [25.8, 5946.0], [25.9, 5978.0], [26.0, 6023.0], [26.1, 6040.0], [26.2, 6040.0], [26.3, 6063.0], [26.4, 6109.0], [26.5, 6113.0], [26.6, 6116.0], [26.7, 6148.0], [26.8, 6148.0], [26.9, 6179.0], [27.0, 6187.0], [27.1, 6246.0], [27.2, 6335.0], [27.3, 6335.0], [27.4, 6481.0], [27.5, 6535.0], [27.6, 6688.0], [27.7, 6715.0], [27.8, 6715.0], [27.9, 6804.0], [28.0, 6809.0], [28.1, 6828.0], [28.2, 6843.0], [28.3, 6843.0], [28.4, 6913.0], [28.5, 7106.0], [28.6, 7117.0], [28.7, 7125.0], [28.8, 7125.0], [28.9, 7198.0], [29.0, 7227.0], [29.1, 7244.0], [29.2, 7246.0], [29.3, 7259.0], [29.4, 7259.0], [29.5, 7307.0], [29.6, 7321.0], [29.7, 7350.0], [29.8, 7406.0], [29.9, 7406.0], [30.0, 7443.0], [30.1, 7465.0], [30.2, 7474.0], [30.3, 7521.0], [30.4, 7521.0], [30.5, 7537.0], [30.6, 7571.0], [30.7, 7622.0], [30.8, 7732.0], [30.9, 7732.0], [31.0, 7779.0], [31.1, 7850.0], [31.2, 8070.0], [31.3, 8101.0], [31.4, 8144.0], [31.5, 8144.0], [31.6, 8222.0], [31.7, 8236.0], [31.8, 8292.0], [31.9, 8373.0], [32.0, 8373.0], [32.1, 8393.0], [32.2, 8410.0], [32.3, 8459.0], [32.4, 8486.0], [32.5, 8486.0], [32.6, 8613.0], [32.7, 8634.0], [32.8, 8642.0], [32.9, 8704.0], [33.0, 8704.0], [33.1, 8800.0], [33.2, 8810.0], [33.3, 8843.0], [33.4, 8918.0], [33.5, 8942.0], [33.6, 8942.0], [33.7, 8951.0], [33.8, 8968.0], [33.9, 9019.0], [34.0, 9021.0], [34.1, 9021.0], [34.2, 9035.0], [34.3, 9135.0], [34.4, 9226.0], [34.5, 9338.0], [34.6, 9338.0], [34.7, 9429.0], [34.8, 9437.0], [34.9, 9521.0], [35.0, 9566.0], [35.1, 9566.0], [35.2, 9677.0], [35.3, 9681.0], [35.4, 9710.0], [35.5, 9791.0], [35.6, 9815.0], [35.7, 9815.0], [35.8, 9840.0], [35.9, 9897.0], [36.0, 9955.0], [36.1, 10032.0], [36.2, 10032.0], [36.3, 10062.0], [36.4, 10074.0], [36.5, 10118.0], [36.6, 10150.0], [36.7, 10150.0], [36.8, 10250.0], [36.9, 10270.0], [37.0, 10303.0], [37.1, 10497.0], [37.2, 10497.0], [37.3, 10526.0], [37.4, 10560.0], [37.5, 10663.0], [37.6, 10671.0], [37.7, 10671.0], [37.8, 10750.0], [37.9, 10764.0], [38.0, 10826.0], [38.1, 10837.0], [38.2, 10847.0], [38.3, 10847.0], [38.4, 10851.0], [38.5, 10893.0], [38.6, 10899.0], [38.7, 10994.0], [38.8, 10994.0], [38.9, 11208.0], [39.0, 11221.0], [39.1, 11285.0], [39.2, 11298.0], [39.3, 11298.0], [39.4, 11377.0], [39.5, 11395.0], [39.6, 11441.0], [39.7, 11457.0], [39.8, 11457.0], [39.9, 11502.0], [40.0, 11523.0], [40.1, 11537.0], [40.2, 11537.0], [40.3, 11578.0], [40.4, 11578.0], [40.5, 11590.0], [40.6, 11644.0], [40.7, 11674.0], [40.8, 11686.0], [40.9, 11686.0], [41.0, 11749.0], [41.1, 11764.0], [41.2, 11858.0], [41.3, 11957.0], [41.4, 11957.0], [41.5, 12132.0], [41.6, 12209.0], [41.7, 12280.0], [41.8, 12295.0], [41.9, 12295.0], [42.0, 12356.0], [42.1, 12417.0], [42.2, 12473.0], [42.3, 12505.0], [42.4, 12522.0], [42.5, 12522.0], [42.6, 12581.0], [42.7, 12591.0], [42.8, 12732.0], [42.9, 12738.0], [43.0, 12738.0], [43.1, 12841.0], [43.2, 12876.0], [43.3, 12891.0], [43.4, 13009.0], [43.5, 13009.0], [43.6, 13115.0], [43.7, 13208.0], [43.8, 13215.0], [43.9, 13231.0], [44.0, 13231.0], [44.1, 13373.0], [44.2, 13393.0], [44.3, 13401.0], [44.4, 13414.0], [44.5, 13418.0], [44.6, 13418.0], [44.7, 13529.0], [44.8, 13549.0], [44.9, 13600.0], [45.0, 13640.0], [45.1, 13640.0], [45.2, 13675.0], [45.3, 13714.0], [45.4, 13786.0], [45.5, 13801.0], [45.6, 13801.0], [45.7, 13857.0], [45.8, 13874.0], [45.9, 13982.0], [46.0, 13994.0], [46.1, 13994.0], [46.2, 14065.0], [46.3, 14081.0], [46.4, 14089.0], [46.5, 14191.0], [46.6, 14191.0], [46.7, 14266.0], [46.8, 14276.0], [46.9, 14282.0], [47.0, 14301.0], [47.1, 14302.0], [47.2, 14302.0], [47.3, 14416.0], [47.4, 14462.0], [47.5, 14499.0], [47.6, 14602.0], [47.7, 14602.0], [47.8, 14646.0], [47.9, 14666.0], [48.0, 14707.0], [48.1, 14713.0], [48.2, 14713.0], [48.3, 14800.0], [48.4, 14801.0], [48.5, 14836.0], [48.6, 14853.0], [48.7, 14853.0], [48.8, 14884.0], [48.9, 14916.0], [49.0, 14950.0], [49.1, 14975.0], [49.2, 14986.0], [49.3, 14986.0], [49.4, 14987.0], [49.5, 15110.0], [49.6, 15157.0], [49.7, 15222.0], [49.8, 15222.0], [49.9, 15384.0], [50.0, 15408.0], [50.1, 15472.0], [50.2, 15562.0], [50.3, 15562.0], [50.4, 15700.0], [50.5, 15771.0], [50.6, 15819.0], [50.7, 15832.0], [50.8, 15832.0], [50.9, 16015.0], [51.0, 16089.0], [51.1, 16140.0], [51.2, 16157.0], [51.3, 16165.0], [51.4, 16165.0], [51.5, 16424.0], [51.6, 16576.0], [51.7, 16671.0], [51.8, 16769.0], [51.9, 16769.0], [52.0, 16818.0], [52.1, 16891.0], [52.2, 16990.0], [52.3, 17009.0], [52.4, 17009.0], [52.5, 17013.0], [52.6, 17066.0], [52.7, 17129.0], [52.8, 17160.0], [52.9, 17160.0], [53.0, 17179.0], [53.1, 17212.0], [53.2, 17236.0], [53.3, 17439.0], [53.4, 17524.0], [53.5, 17524.0], [53.6, 17525.0], [53.7, 17607.0], [53.8, 17687.0], [53.9, 17815.0], [54.0, 17815.0], [54.1, 17931.0], [54.2, 18078.0], [54.3, 18137.0], [54.4, 18148.0], [54.5, 18148.0], [54.6, 18180.0], [54.7, 18450.0], [54.8, 18573.0], [54.9, 18613.0], [55.0, 18613.0], [55.1, 18683.0], [55.2, 18848.0], [55.3, 18866.0], [55.4, 18912.0], [55.5, 18912.0], [55.6, 18964.0], [55.7, 18973.0], [55.8, 19068.0], [55.9, 19098.0], [56.0, 19098.0], [56.1, 19098.0], [56.2, 19124.0], [56.3, 19180.0], [56.4, 19188.0], [56.5, 19209.0], [56.6, 19209.0], [56.7, 19246.0], [56.8, 19274.0], [56.9, 19324.0], [57.0, 19337.0], [57.1, 19337.0], [57.2, 19366.0], [57.3, 19399.0], [57.4, 19425.0], [57.5, 19435.0], [57.6, 19435.0], [57.7, 19553.0], [57.8, 19584.0], [57.9, 19610.0], [58.0, 19700.0], [58.1, 19787.0], [58.2, 19787.0], [58.3, 19882.0], [58.4, 19890.0], [58.5, 19897.0], [58.6, 19914.0], [58.7, 19914.0], [58.8, 19997.0], [58.9, 20007.0], [59.0, 20030.0], [59.1, 20126.0], [59.2, 20126.0], [59.3, 20144.0], [59.4, 20150.0], [59.5, 20162.0], [59.6, 20270.0], [59.7, 20270.0], [59.8, 20393.0], [59.9, 20427.0], [60.0, 20530.0], [60.1, 20572.0], [60.2, 20581.0], [60.3, 20581.0], [60.4, 20619.0], [60.5, 20632.0], [60.6, 20691.0], [60.7, 20726.0], [60.8, 20726.0], [60.9, 20744.0], [61.0, 20852.0], [61.1, 20870.0], [61.2, 20925.0], [61.3, 20925.0], [61.4, 20928.0], [61.5, 20933.0], [61.6, 20994.0], [61.7, 21016.0], [61.8, 21016.0], [61.9, 21018.0], [62.0, 21075.0], [62.1, 21104.0], [62.2, 21230.0], [62.3, 21272.0], [62.4, 21272.0], [62.5, 21363.0], [62.6, 21441.0], [62.7, 21485.0], [62.8, 21488.0], [62.9, 21488.0], [63.0, 21515.0], [63.1, 21580.0], [63.2, 21734.0], [63.3, 21778.0], [63.4, 21778.0], [63.5, 21939.0], [63.6, 21984.0], [63.7, 21985.0], [63.8, 22108.0], [63.9, 22108.0], [64.0, 22153.0], [64.1, 22256.0], [64.2, 22327.0], [64.3, 22389.0], [64.4, 22389.0], [64.5, 22488.0], [64.6, 22591.0], [64.7, 22597.0], [64.8, 22656.0], [64.9, 22713.0], [65.0, 22713.0], [65.1, 22788.0], [65.2, 22826.0], [65.3, 22849.0], [65.4, 22903.0], [65.5, 22903.0], [65.6, 23048.0], [65.7, 23108.0], [65.8, 23108.0], [65.9, 23234.0], [66.0, 23234.0], [66.1, 23328.0], [66.2, 23349.0], [66.3, 23414.0], [66.4, 23444.0], [66.5, 23444.0], [66.6, 23511.0], [66.7, 23526.0], [66.8, 23566.0], [66.9, 23570.0], [67.0, 23642.0], [67.1, 23642.0], [67.2, 23785.0], [67.3, 23808.0], [67.4, 23861.0], [67.5, 23921.0], [67.6, 23921.0], [67.7, 23991.0], [67.8, 24105.0], [67.9, 24106.0], [68.0, 24140.0], [68.1, 24140.0], [68.2, 24149.0], [68.3, 24202.0], [68.4, 24233.0], [68.5, 24272.0], [68.6, 24272.0], [68.7, 24297.0], [68.8, 24299.0], [68.9, 24370.0], [69.0, 24522.0], [69.1, 24522.0], [69.2, 24522.0], [69.3, 24554.0], [69.4, 24560.0], [69.5, 24794.0], [69.6, 24843.0], [69.7, 24843.0], [69.8, 24867.0], [69.9, 24877.0], [70.0, 24878.0], [70.1, 24894.0], [70.2, 24894.0], [70.3, 24912.0], [70.4, 25042.0], [70.5, 25115.0], [70.6, 25133.0], [70.7, 25133.0], [70.8, 25159.0], [70.9, 25227.0], [71.0, 25257.0], [71.1, 25270.0], [71.2, 25294.0], [71.3, 25294.0], [71.4, 25322.0], [71.5, 25358.0], [71.6, 25374.0], [71.7, 25402.0], [71.8, 25402.0], [71.9, 25416.0], [72.0, 25472.0], [72.1, 25503.0], [72.2, 25625.0], [72.3, 25625.0], [72.4, 25656.0], [72.5, 25682.0], [72.6, 25739.0], [72.7, 25796.0], [72.8, 25796.0], [72.9, 25872.0], [73.0, 25920.0], [73.1, 25921.0], [73.2, 25949.0], [73.3, 25949.0], [73.4, 26266.0], [73.5, 26320.0], [73.6, 26355.0], [73.7, 26390.0], [73.8, 26598.0], [73.9, 26598.0], [74.0, 26718.0], [74.1, 26912.0], [74.2, 26919.0], [74.3, 27008.0], [74.4, 27008.0], [74.5, 27178.0], [74.6, 27364.0], [74.7, 27405.0], [74.8, 27610.0], [74.9, 27610.0], [75.0, 27662.0], [75.1, 27698.0], [75.2, 27711.0], [75.3, 27923.0], [75.4, 27923.0], [75.5, 28281.0], [75.6, 28288.0], [75.7, 28299.0], [75.8, 28314.0], [75.9, 28325.0], [76.0, 28325.0], [76.1, 28395.0], [76.2, 28424.0], [76.3, 28434.0], [76.4, 28470.0], [76.5, 28470.0], [76.6, 28480.0], [76.7, 28508.0], [76.8, 28673.0], [76.9, 28727.0], [77.0, 28727.0], [77.1, 28809.0], [77.2, 28855.0], [77.3, 29122.0], [77.4, 29136.0], [77.5, 29136.0], [77.6, 29184.0], [77.7, 29393.0], [77.8, 29433.0], [77.9, 29474.0], [78.0, 29476.0], [78.1, 29476.0], [78.2, 29546.0], [78.3, 29614.0], [78.4, 29676.0], [78.5, 29791.0], [78.6, 29791.0], [78.7, 29938.0], [78.8, 30013.0], [78.9, 30180.0], [79.0, 30230.0], [79.1, 30230.0], [79.2, 30439.0], [79.3, 30721.0], [79.4, 30832.0], [79.5, 31177.0], [79.6, 31177.0], [79.7, 31206.0], [79.8, 31323.0], [79.9, 31390.0], [80.0, 31564.0], [80.1, 31569.0], [80.2, 31569.0], [80.3, 31675.0], [80.4, 31680.0], [80.5, 31727.0], [80.6, 31733.0], [80.7, 31733.0], [80.8, 31873.0], [80.9, 32129.0], [81.0, 32245.0], [81.1, 32351.0], [81.2, 32351.0], [81.3, 32487.0], [81.4, 33008.0], [81.5, 33021.0], [81.6, 33072.0], [81.7, 33072.0], [81.8, 33142.0], [81.9, 33224.0], [82.0, 33275.0], [82.1, 33296.0], [82.2, 33296.0], [82.3, 33423.0], [82.4, 33701.0], [82.5, 33885.0], [82.6, 34007.0], [82.7, 34102.0], [82.8, 34102.0], [82.9, 34148.0], [83.0, 34181.0], [83.1, 34197.0], [83.2, 34216.0], [83.3, 34216.0], [83.4, 34459.0], [83.5, 34483.0], [83.6, 34586.0], [83.7, 34690.0], [83.8, 34690.0], [83.9, 34739.0], [84.0, 34755.0], [84.1, 34789.0], [84.2, 34999.0], [84.3, 34999.0], [84.4, 35123.0], [84.5, 35243.0], [84.6, 35262.0], [84.7, 35294.0], [84.8, 35458.0], [84.9, 35458.0], [85.0, 35503.0], [85.1, 35707.0], [85.2, 36134.0], [85.3, 36238.0], [85.4, 36238.0], [85.5, 36414.0], [85.6, 36431.0], [85.7, 36528.0], [85.8, 36539.0], [85.9, 36539.0], [86.0, 36655.0], [86.1, 36775.0], [86.2, 37170.0], [86.3, 37728.0], [86.4, 37728.0], [86.5, 37961.0], [86.6, 38640.0], [86.7, 38649.0], [86.8, 38735.0], [86.9, 38844.0], [87.0, 38844.0], [87.1, 39088.0], [87.2, 39129.0], [87.3, 39195.0], [87.4, 39463.0], [87.5, 39463.0], [87.6, 40267.0], [87.7, 40380.0], [87.8, 40579.0], [87.9, 40841.0], [88.0, 40841.0], [88.1, 41010.0], [88.2, 41174.0], [88.3, 41399.0], [88.4, 41740.0], [88.5, 41740.0], [88.6, 42356.0], [88.7, 42910.0], [88.8, 42912.0], [88.9, 42999.0], [89.0, 43027.0], [89.1, 43027.0], [89.2, 43451.0], [89.3, 43666.0], [89.4, 44184.0], [89.5, 44194.0], [89.6, 44194.0], [89.7, 44249.0], [89.8, 44377.0], [89.9, 44975.0], [90.0, 45048.0], [90.1, 45048.0], [90.2, 45976.0], [90.3, 46189.0], [90.4, 46539.0], [90.5, 46900.0], [90.6, 46900.0], [90.7, 47345.0], [90.8, 47404.0], [90.9, 47631.0], [91.0, 48232.0], [91.1, 48232.0], [91.2, 48294.0], [91.3, 48641.0], [91.4, 48659.0], [91.5, 48714.0], [91.6, 48832.0], [91.7, 48832.0], [91.8, 48888.0], [91.9, 48948.0], [92.0, 49242.0], [92.1, 49261.0], [92.2, 49261.0], [92.3, 49528.0], [92.4, 49652.0], [92.5, 49690.0], [92.6, 49951.0], [92.7, 49951.0], [92.8, 50044.0], [92.9, 50096.0], [93.0, 50611.0], [93.1, 50648.0], [93.2, 50648.0], [93.3, 50917.0], [93.4, 51031.0], [93.5, 51175.0], [93.6, 51191.0], [93.7, 51228.0], [93.8, 51228.0], [93.9, 51535.0], [94.0, 51950.0], [94.1, 52025.0], [94.2, 52161.0], [94.3, 52161.0], [94.4, 52446.0], [94.5, 52478.0], [94.6, 52655.0], [94.7, 52730.0], [94.8, 52730.0], [94.9, 52947.0], [95.0, 53445.0], [95.1, 53573.0], [95.2, 53725.0], [95.3, 53725.0], [95.4, 53735.0], [95.5, 53799.0], [95.6, 54135.0], [95.7, 54982.0], [95.8, 55225.0], [95.9, 55225.0], [96.0, 55302.0], [96.1, 55438.0], [96.2, 55612.0], [96.3, 55755.0], [96.4, 55755.0], [96.5, 56038.0], [96.6, 56515.0], [96.7, 56645.0], [96.8, 56760.0], [96.9, 56760.0], [97.0, 56996.0], [97.1, 57904.0], [97.2, 58698.0], [97.3, 60126.0], [97.4, 60126.0], [97.5, 60129.0], [97.6, 60129.0], [97.7, 60129.0], [97.8, 60133.0], [97.9, 60134.0], [98.0, 60134.0], [98.1, 60135.0], [98.2, 60135.0], [98.3, 60135.0], [98.4, 60135.0], [98.5, 60135.0], [98.6, 60135.0], [98.7, 60135.0], [98.8, 60135.0], [98.9, 60137.0], [99.0, 60137.0], [99.1, 60137.0], [99.2, 60138.0], [99.3, 60139.0], [99.4, 60139.0], [99.5, 60139.0], [99.6, 60139.0], [99.7, 60259.0], [99.8, 60259.0], [99.9, 60264.0], [100.0, 60264.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 245.0], [0.1, 245.0], [0.2, 245.0], [0.3, 246.0], [0.4, 246.0], [0.5, 246.0], [0.6, 246.0], [0.7, 246.0], [0.8, 246.0], [0.9, 246.0], [1.0, 246.0], [1.1, 246.0], [1.2, 247.0], [1.3, 247.0], [1.4, 247.0], [1.5, 247.0], [1.6, 247.0], [1.7, 247.0], [1.8, 247.0], [1.9, 248.0], [2.0, 248.0], [2.1, 248.0], [2.2, 248.0], [2.3, 248.0], [2.4, 248.0], [2.5, 248.0], [2.6, 248.0], [2.7, 248.0], [2.8, 248.0], [2.9, 248.0], [3.0, 249.0], [3.1, 249.0], [3.2, 249.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 249.0], [4.5, 249.0], [4.6, 249.0], [4.7, 250.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 251.0], [6.9, 251.0], [7.0, 251.0], [7.1, 251.0], [7.2, 251.0], [7.3, 251.0], [7.4, 251.0], [7.5, 251.0], [7.6, 251.0], [7.7, 251.0], [7.8, 251.0], [7.9, 251.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 252.0], [10.2, 252.0], [10.3, 252.0], [10.4, 252.0], [10.5, 252.0], [10.6, 252.0], [10.7, 252.0], [10.8, 252.0], [10.9, 252.0], [11.0, 252.0], [11.1, 252.0], [11.2, 252.0], [11.3, 252.0], [11.4, 252.0], [11.5, 252.0], [11.6, 252.0], [11.7, 252.0], [11.8, 252.0], [11.9, 252.0], [12.0, 252.0], [12.1, 252.0], [12.2, 252.0], [12.3, 252.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 253.0], [13.1, 253.0], [13.2, 253.0], [13.3, 253.0], [13.4, 253.0], [13.5, 253.0], [13.6, 253.0], [13.7, 253.0], [13.8, 253.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 254.0], [16.2, 254.0], [16.3, 254.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 254.0], [16.9, 254.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 254.0], [17.4, 254.0], [17.5, 254.0], [17.6, 254.0], [17.7, 254.0], [17.8, 254.0], [17.9, 254.0], [18.0, 254.0], [18.1, 254.0], [18.2, 254.0], [18.3, 254.0], [18.4, 254.0], [18.5, 254.0], [18.6, 254.0], [18.7, 254.0], [18.8, 254.0], [18.9, 254.0], [19.0, 254.0], [19.1, 254.0], [19.2, 254.0], [19.3, 254.0], [19.4, 255.0], [19.5, 255.0], [19.6, 255.0], [19.7, 255.0], [19.8, 255.0], [19.9, 255.0], [20.0, 255.0], [20.1, 255.0], [20.2, 255.0], [20.3, 255.0], [20.4, 255.0], [20.5, 255.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 255.0], [21.1, 255.0], [21.2, 255.0], [21.3, 255.0], [21.4, 255.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 255.0], [22.7, 255.0], [22.8, 255.0], [22.9, 255.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 256.0], [24.9, 256.0], [25.0, 256.0], [25.1, 256.0], [25.2, 256.0], [25.3, 256.0], [25.4, 256.0], [25.5, 256.0], [25.6, 256.0], [25.7, 256.0], [25.8, 256.0], [25.9, 256.0], [26.0, 256.0], [26.1, 256.0], [26.2, 257.0], [26.3, 257.0], [26.4, 257.0], [26.5, 257.0], [26.6, 257.0], [26.7, 257.0], [26.8, 257.0], [26.9, 257.0], [27.0, 257.0], [27.1, 257.0], [27.2, 257.0], [27.3, 257.0], [27.4, 257.0], [27.5, 257.0], [27.6, 257.0], [27.7, 257.0], [27.8, 257.0], [27.9, 257.0], [28.0, 257.0], [28.1, 257.0], [28.2, 257.0], [28.3, 257.0], [28.4, 257.0], [28.5, 257.0], [28.6, 257.0], [28.7, 257.0], [28.8, 257.0], [28.9, 257.0], [29.0, 257.0], [29.1, 257.0], [29.2, 257.0], [29.3, 257.0], [29.4, 257.0], [29.5, 257.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 258.0], [30.4, 258.0], [30.5, 258.0], [30.6, 258.0], [30.7, 258.0], [30.8, 258.0], [30.9, 258.0], [31.0, 258.0], [31.1, 258.0], [31.2, 258.0], [31.3, 258.0], [31.4, 258.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 258.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 258.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 259.0], [34.0, 259.0], [34.1, 259.0], [34.2, 259.0], [34.3, 259.0], [34.4, 259.0], [34.5, 259.0], [34.6, 259.0], [34.7, 259.0], [34.8, 259.0], [34.9, 259.0], [35.0, 259.0], [35.1, 259.0], [35.2, 259.0], [35.3, 259.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 260.0], [36.3, 260.0], [36.4, 260.0], [36.5, 260.0], [36.6, 260.0], [36.7, 260.0], [36.8, 260.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 260.0], [38.3, 260.0], [38.4, 260.0], [38.5, 260.0], [38.6, 260.0], [38.7, 260.0], [38.8, 260.0], [38.9, 260.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 261.0], [40.4, 261.0], [40.5, 261.0], [40.6, 261.0], [40.7, 261.0], [40.8, 261.0], [40.9, 261.0], [41.0, 261.0], [41.1, 261.0], [41.2, 261.0], [41.3, 261.0], [41.4, 261.0], [41.5, 261.0], [41.6, 261.0], [41.7, 261.0], [41.8, 261.0], [41.9, 261.0], [42.0, 261.0], [42.1, 261.0], [42.2, 261.0], [42.3, 261.0], [42.4, 261.0], [42.5, 261.0], [42.6, 261.0], [42.7, 261.0], [42.8, 261.0], [42.9, 261.0], [43.0, 262.0], [43.1, 262.0], [43.2, 262.0], [43.3, 262.0], [43.4, 262.0], [43.5, 262.0], [43.6, 262.0], [43.7, 262.0], [43.8, 262.0], [43.9, 262.0], [44.0, 262.0], [44.1, 262.0], [44.2, 262.0], [44.3, 262.0], [44.4, 262.0], [44.5, 262.0], [44.6, 262.0], [44.7, 262.0], [44.8, 262.0], [44.9, 262.0], [45.0, 262.0], [45.1, 262.0], [45.2, 262.0], [45.3, 262.0], [45.4, 262.0], [45.5, 262.0], [45.6, 262.0], [45.7, 262.0], [45.8, 262.0], [45.9, 262.0], [46.0, 262.0], [46.1, 262.0], [46.2, 262.0], [46.3, 262.0], [46.4, 262.0], [46.5, 262.0], [46.6, 262.0], [46.7, 262.0], [46.8, 262.0], [46.9, 262.0], [47.0, 262.0], [47.1, 262.0], [47.2, 262.0], [47.3, 262.0], [47.4, 262.0], [47.5, 262.0], [47.6, 262.0], [47.7, 262.0], [47.8, 262.0], [47.9, 262.0], [48.0, 262.0], [48.1, 262.0], [48.2, 262.0], [48.3, 262.0], [48.4, 262.0], [48.5, 262.0], [48.6, 262.0], [48.7, 263.0], [48.8, 263.0], [48.9, 263.0], [49.0, 263.0], [49.1, 263.0], [49.2, 263.0], [49.3, 263.0], [49.4, 263.0], [49.5, 263.0], [49.6, 263.0], [49.7, 263.0], [49.8, 263.0], [49.9, 263.0], [50.0, 263.0], [50.1, 263.0], [50.2, 263.0], [50.3, 263.0], [50.4, 263.0], [50.5, 263.0], [50.6, 263.0], [50.7, 263.0], [50.8, 263.0], [50.9, 263.0], [51.0, 263.0], [51.1, 263.0], [51.2, 263.0], [51.3, 263.0], [51.4, 263.0], [51.5, 263.0], [51.6, 263.0], [51.7, 263.0], [51.8, 263.0], [51.9, 263.0], [52.0, 263.0], [52.1, 263.0], [52.2, 263.0], [52.3, 263.0], [52.4, 263.0], [52.5, 263.0], [52.6, 263.0], [52.7, 263.0], [52.8, 263.0], [52.9, 264.0], [53.0, 264.0], [53.1, 264.0], [53.2, 264.0], [53.3, 264.0], [53.4, 264.0], [53.5, 264.0], [53.6, 264.0], [53.7, 264.0], [53.8, 264.0], [53.9, 264.0], [54.0, 264.0], [54.1, 264.0], [54.2, 264.0], [54.3, 264.0], [54.4, 264.0], [54.5, 264.0], [54.6, 264.0], [54.7, 264.0], [54.8, 264.0], [54.9, 264.0], [55.0, 264.0], [55.1, 264.0], [55.2, 264.0], [55.3, 264.0], [55.4, 264.0], [55.5, 264.0], [55.6, 264.0], [55.7, 264.0], [55.8, 264.0], [55.9, 264.0], [56.0, 264.0], [56.1, 264.0], [56.2, 264.0], [56.3, 264.0], [56.4, 264.0], [56.5, 265.0], [56.6, 265.0], [56.7, 265.0], [56.8, 265.0], [56.9, 265.0], [57.0, 265.0], [57.1, 265.0], [57.2, 265.0], [57.3, 265.0], [57.4, 265.0], [57.5, 265.0], [57.6, 265.0], [57.7, 265.0], [57.8, 265.0], [57.9, 265.0], [58.0, 265.0], [58.1, 265.0], [58.2, 265.0], [58.3, 265.0], [58.4, 265.0], [58.5, 265.0], [58.6, 265.0], [58.7, 265.0], [58.8, 265.0], [58.9, 265.0], [59.0, 266.0], [59.1, 266.0], [59.2, 266.0], [59.3, 266.0], [59.4, 266.0], [59.5, 266.0], [59.6, 266.0], [59.7, 266.0], [59.8, 266.0], [59.9, 266.0], [60.0, 266.0], [60.1, 266.0], [60.2, 266.0], [60.3, 266.0], [60.4, 266.0], [60.5, 266.0], [60.6, 266.0], [60.7, 266.0], [60.8, 266.0], [60.9, 266.0], [61.0, 266.0], [61.1, 266.0], [61.2, 266.0], [61.3, 266.0], [61.4, 266.0], [61.5, 266.0], [61.6, 266.0], [61.7, 266.0], [61.8, 266.0], [61.9, 266.0], [62.0, 266.0], [62.1, 266.0], [62.2, 267.0], [62.3, 267.0], [62.4, 267.0], [62.5, 267.0], [62.6, 267.0], [62.7, 267.0], [62.8, 267.0], [62.9, 267.0], [63.0, 267.0], [63.1, 267.0], [63.2, 267.0], [63.3, 267.0], [63.4, 267.0], [63.5, 267.0], [63.6, 267.0], [63.7, 267.0], [63.8, 267.0], [63.9, 267.0], [64.0, 267.0], [64.1, 267.0], [64.2, 267.0], [64.3, 267.0], [64.4, 267.0], [64.5, 267.0], [64.6, 267.0], [64.7, 267.0], [64.8, 267.0], [64.9, 267.0], [65.0, 267.0], [65.1, 268.0], [65.2, 268.0], [65.3, 268.0], [65.4, 268.0], [65.5, 268.0], [65.6, 268.0], [65.7, 268.0], [65.8, 268.0], [65.9, 268.0], [66.0, 268.0], [66.1, 268.0], [66.2, 268.0], [66.3, 268.0], [66.4, 268.0], [66.5, 268.0], [66.6, 268.0], [66.7, 269.0], [66.8, 269.0], [66.9, 269.0], [67.0, 269.0], [67.1, 269.0], [67.2, 269.0], [67.3, 269.0], [67.4, 269.0], [67.5, 269.0], [67.6, 269.0], [67.7, 269.0], [67.8, 269.0], [67.9, 269.0], [68.0, 269.0], [68.1, 269.0], [68.2, 269.0], [68.3, 269.0], [68.4, 269.0], [68.5, 269.0], [68.6, 269.0], [68.7, 269.0], [68.8, 269.0], [68.9, 269.0], [69.0, 270.0], [69.1, 270.0], [69.2, 270.0], [69.3, 270.0], [69.4, 270.0], [69.5, 270.0], [69.6, 270.0], [69.7, 270.0], [69.8, 270.0], [69.9, 270.0], [70.0, 270.0], [70.1, 270.0], [70.2, 271.0], [70.3, 271.0], [70.4, 271.0], [70.5, 271.0], [70.6, 271.0], [70.7, 271.0], [70.8, 271.0], [70.9, 271.0], [71.0, 271.0], [71.1, 271.0], [71.2, 271.0], [71.3, 271.0], [71.4, 271.0], [71.5, 271.0], [71.6, 272.0], [71.7, 272.0], [71.8, 272.0], [71.9, 272.0], [72.0, 272.0], [72.1, 272.0], [72.2, 272.0], [72.3, 272.0], [72.4, 272.0], [72.5, 272.0], [72.6, 272.0], [72.7, 272.0], [72.8, 272.0], [72.9, 272.0], [73.0, 272.0], [73.1, 272.0], [73.2, 272.0], [73.3, 272.0], [73.4, 272.0], [73.5, 273.0], [73.6, 273.0], [73.7, 273.0], [73.8, 273.0], [73.9, 273.0], [74.0, 273.0], [74.1, 273.0], [74.2, 273.0], [74.3, 273.0], [74.4, 273.0], [74.5, 273.0], [74.6, 273.0], [74.7, 273.0], [74.8, 273.0], [74.9, 274.0], [75.0, 274.0], [75.1, 274.0], [75.2, 274.0], [75.3, 274.0], [75.4, 274.0], [75.5, 274.0], [75.6, 274.0], [75.7, 274.0], [75.8, 274.0], [75.9, 274.0], [76.0, 275.0], [76.1, 275.0], [76.2, 275.0], [76.3, 275.0], [76.4, 275.0], [76.5, 275.0], [76.6, 275.0], [76.7, 275.0], [76.8, 275.0], [76.9, 275.0], [77.0, 275.0], [77.1, 276.0], [77.2, 276.0], [77.3, 276.0], [77.4, 276.0], [77.5, 276.0], [77.6, 276.0], [77.7, 276.0], [77.8, 277.0], [77.9, 277.0], [78.0, 277.0], [78.1, 277.0], [78.2, 277.0], [78.3, 277.0], [78.4, 278.0], [78.5, 278.0], [78.6, 278.0], [78.7, 278.0], [78.8, 278.0], [78.9, 278.0], [79.0, 278.0], [79.1, 278.0], [79.2, 278.0], [79.3, 278.0], [79.4, 278.0], [79.5, 279.0], [79.6, 279.0], [79.7, 279.0], [79.8, 279.0], [79.9, 279.0], [80.0, 279.0], [80.1, 279.0], [80.2, 279.0], [80.3, 279.0], [80.4, 279.0], [80.5, 280.0], [80.6, 280.0], [80.7, 280.0], [80.8, 280.0], [80.9, 280.0], [81.0, 280.0], [81.1, 280.0], [81.2, 280.0], [81.3, 280.0], [81.4, 280.0], [81.5, 280.0], [81.6, 281.0], [81.7, 281.0], [81.8, 281.0], [81.9, 281.0], [82.0, 281.0], [82.1, 282.0], [82.2, 282.0], [82.3, 282.0], [82.4, 282.0], [82.5, 282.0], [82.6, 282.0], [82.7, 282.0], [82.8, 282.0], [82.9, 283.0], [83.0, 283.0], [83.1, 283.0], [83.2, 283.0], [83.3, 283.0], [83.4, 284.0], [83.5, 284.0], [83.6, 284.0], [83.7, 284.0], [83.8, 284.0], [83.9, 284.0], [84.0, 284.0], [84.1, 284.0], [84.2, 285.0], [84.3, 285.0], [84.4, 285.0], [84.5, 285.0], [84.6, 285.0], [84.7, 285.0], [84.8, 285.0], [84.9, 286.0], [85.0, 286.0], [85.1, 286.0], [85.2, 286.0], [85.3, 286.0], [85.4, 286.0], [85.5, 286.0], [85.6, 287.0], [85.7, 287.0], [85.8, 287.0], [85.9, 287.0], [86.0, 287.0], [86.1, 287.0], [86.2, 287.0], [86.3, 287.0], [86.4, 287.0], [86.5, 287.0], [86.6, 288.0], [86.7, 288.0], [86.8, 288.0], [86.9, 288.0], [87.0, 288.0], [87.1, 288.0], [87.2, 289.0], [87.3, 290.0], [87.4, 290.0], [87.5, 290.0], [87.6, 290.0], [87.7, 290.0], [87.8, 291.0], [87.9, 291.0], [88.0, 291.0], [88.1, 292.0], [88.2, 294.0], [88.3, 294.0], [88.4, 294.0], [88.5, 294.0], [88.6, 294.0], [88.7, 294.0], [88.8, 294.0], [88.9, 294.0], [89.0, 295.0], [89.1, 295.0], [89.2, 295.0], [89.3, 295.0], [89.4, 295.0], [89.5, 296.0], [89.6, 296.0], [89.7, 296.0], [89.8, 296.0], [89.9, 296.0], [90.0, 296.0], [90.1, 297.0], [90.2, 297.0], [90.3, 297.0], [90.4, 297.0], [90.5, 298.0], [90.6, 298.0], [90.7, 298.0], [90.8, 299.0], [90.9, 299.0], [91.0, 300.0], [91.1, 300.0], [91.2, 300.0], [91.3, 300.0], [91.4, 301.0], [91.5, 301.0], [91.6, 302.0], [91.7, 303.0], [91.8, 303.0], [91.9, 303.0], [92.0, 303.0], [92.1, 303.0], [92.2, 303.0], [92.3, 304.0], [92.4, 304.0], [92.5, 304.0], [92.6, 304.0], [92.7, 304.0], [92.8, 305.0], [92.9, 305.0], [93.0, 305.0], [93.1, 305.0], [93.2, 305.0], [93.3, 308.0], [93.4, 309.0], [93.5, 309.0], [93.6, 309.0], [93.7, 310.0], [93.8, 310.0], [93.9, 310.0], [94.0, 310.0], [94.1, 311.0], [94.2, 311.0], [94.3, 311.0], [94.4, 311.0], [94.5, 312.0], [94.6, 312.0], [94.7, 312.0], [94.8, 316.0], [94.9, 317.0], [95.0, 317.0], [95.1, 317.0], [95.2, 318.0], [95.3, 320.0], [95.4, 320.0], [95.5, 322.0], [95.6, 322.0], [95.7, 322.0], [95.8, 323.0], [95.9, 324.0], [96.0, 324.0], [96.1, 324.0], [96.2, 324.0], [96.3, 325.0], [96.4, 325.0], [96.5, 326.0], [96.6, 327.0], [96.7, 328.0], [96.8, 328.0], [96.9, 329.0], [97.0, 332.0], [97.1, 332.0], [97.2, 332.0], [97.3, 332.0], [97.4, 333.0], [97.5, 334.0], [97.6, 335.0], [97.7, 336.0], [97.8, 338.0], [97.9, 338.0], [98.0, 338.0], [98.1, 344.0], [98.2, 344.0], [98.3, 350.0], [98.4, 350.0], [98.5, 352.0], [98.6, 354.0], [98.7, 354.0], [98.8, 357.0], [98.9, 361.0], [99.0, 361.0], [99.1, 368.0], [99.2, 370.0], [99.3, 375.0], [99.4, 395.0], [99.5, 395.0], [99.6, 437.0], [99.7, 456.0], [99.8, 1267.0], [99.9, 1283.0], [100.0, 1283.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 744.0, "series": [{"data": [[34500.0, 2.0], [33300.0, 1.0], [34100.0, 1.0], [36500.0, 1.0], [34900.0, 1.0], [35300.0, 1.0], [35700.0, 2.0], [38900.0, 1.0], [36900.0, 1.0], [39700.0, 1.0], [39300.0, 2.0], [44500.0, 1.0], [43700.0, 1.0], [45300.0, 1.0], [48900.0, 3.0], [48500.0, 1.0], [49700.0, 1.0], [50900.0, 1.0], [51300.0, 1.0], [52900.0, 2.0], [200.0, 7.0], [53700.0, 1.0], [55700.0, 1.0], [56900.0, 1.0], [58900.0, 1.0], [58100.0, 1.0], [60500.0, 3.0], [300.0, 92.0], [400.0, 44.0], [500.0, 1.0], [1000.0, 3.0], [1100.0, 1.0], [1300.0, 1.0], [1500.0, 2.0], [1800.0, 1.0], [2000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3700.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4600.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [4900.0, 4.0], [5000.0, 5.0], [5300.0, 3.0], [5200.0, 1.0], [5400.0, 14.0], [5500.0, 11.0], [5600.0, 4.0], [5700.0, 1.0], [5800.0, 2.0], [6000.0, 2.0], [5900.0, 4.0], [6100.0, 1.0], [6200.0, 4.0], [6300.0, 4.0], [6400.0, 5.0], [6500.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [7100.0, 1.0], [7000.0, 4.0], [7400.0, 4.0], [7300.0, 2.0], [7600.0, 4.0], [7500.0, 3.0], [7800.0, 2.0], [7900.0, 2.0], [7700.0, 3.0], [8100.0, 1.0], [8000.0, 1.0], [8400.0, 2.0], [8700.0, 2.0], [8300.0, 2.0], [8600.0, 3.0], [8500.0, 1.0], [8900.0, 3.0], [9000.0, 2.0], [9200.0, 6.0], [9100.0, 2.0], [8800.0, 1.0], [9500.0, 2.0], [9600.0, 2.0], [9700.0, 1.0], [9400.0, 1.0], [9300.0, 1.0], [9800.0, 1.0], [10100.0, 2.0], [10000.0, 2.0], [9900.0, 3.0], [10200.0, 1.0], [10700.0, 2.0], [10500.0, 3.0], [10300.0, 3.0], [10400.0, 2.0], [11100.0, 4.0], [11000.0, 4.0], [10800.0, 1.0], [10900.0, 2.0], [11200.0, 1.0], [11700.0, 4.0], [11600.0, 4.0], [11500.0, 2.0], [11400.0, 1.0], [12000.0, 2.0], [11900.0, 2.0], [12200.0, 1.0], [11800.0, 4.0], [12100.0, 1.0], [12500.0, 2.0], [12700.0, 4.0], [12600.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [12800.0, 2.0], [13200.0, 1.0], [12900.0, 2.0], [13100.0, 3.0], [13400.0, 4.0], [13800.0, 3.0], [13600.0, 5.0], [13700.0, 1.0], [14100.0, 2.0], [14000.0, 2.0], [14300.0, 3.0], [13900.0, 2.0], [14200.0, 2.0], [14600.0, 1.0], [14800.0, 2.0], [14400.0, 1.0], [14500.0, 5.0], [14700.0, 1.0], [15200.0, 5.0], [15000.0, 3.0], [15100.0, 2.0], [14900.0, 4.0], [15300.0, 1.0], [15600.0, 2.0], [15400.0, 2.0], [15700.0, 1.0], [15800.0, 1.0], [16000.0, 3.0], [15900.0, 1.0], [16200.0, 1.0], [16800.0, 1.0], [16400.0, 4.0], [17000.0, 2.0], [17400.0, 4.0], [17200.0, 2.0], [18400.0, 3.0], [17800.0, 1.0], [18000.0, 1.0], [19400.0, 2.0], [18800.0, 2.0], [19200.0, 2.0], [18600.0, 1.0], [19600.0, 4.0], [20200.0, 3.0], [19800.0, 2.0], [20400.0, 3.0], [20000.0, 1.0], [21200.0, 3.0], [21400.0, 1.0], [20800.0, 5.0], [21000.0, 1.0], [20600.0, 1.0], [22400.0, 1.0], [22000.0, 2.0], [22200.0, 2.0], [21600.0, 1.0], [21800.0, 1.0], [23000.0, 2.0], [23400.0, 1.0], [23200.0, 1.0], [22800.0, 2.0], [22600.0, 1.0], [24400.0, 2.0], [23600.0, 2.0], [23800.0, 3.0], [24000.0, 2.0], [24200.0, 1.0], [25400.0, 3.0], [24800.0, 3.0], [24600.0, 1.0], [25200.0, 1.0], [25000.0, 1.0], [26000.0, 2.0], [26600.0, 3.0], [25600.0, 2.0], [26200.0, 2.0], [25800.0, 2.0], [27400.0, 1.0], [27600.0, 2.0], [26800.0, 1.0], [27200.0, 2.0], [28600.0, 3.0], [27800.0, 1.0], [28200.0, 1.0], [29400.0, 2.0], [29600.0, 1.0], [30400.0, 2.0], [30000.0, 1.0], [30200.0, 2.0], [29800.0, 2.0], [30600.0, 1.0], [31600.0, 2.0], [31000.0, 1.0], [31400.0, 2.0], [31800.0, 2.0], [32600.0, 1.0], [32000.0, 1.0], [34400.0, 2.0], [33600.0, 1.0], [33200.0, 2.0], [34800.0, 1.0], [34000.0, 1.0], [35200.0, 1.0], [36800.0, 1.0], [38800.0, 1.0], [40800.0, 1.0], [41200.0, 1.0], [42000.0, 1.0], [41600.0, 1.0], [43200.0, 3.0], [44400.0, 2.0], [45200.0, 1.0], [46400.0, 1.0], [48400.0, 1.0], [47600.0, 1.0], [50800.0, 1.0], [49200.0, 1.0], [52400.0, 1.0], [53200.0, 1.0], [55200.0, 1.0], [54000.0, 2.0], [57200.0, 1.0], [56000.0, 1.0], [60400.0, 16.0], [33500.0, 2.0], [34700.0, 2.0], [34300.0, 1.0], [35900.0, 1.0], [35500.0, 3.0], [36700.0, 2.0], [36300.0, 1.0], [37900.0, 1.0], [39100.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [46700.0, 1.0], [47100.0, 1.0], [47500.0, 1.0], [49100.0, 2.0], [49900.0, 2.0], [50300.0, 2.0], [49500.0, 2.0], [51100.0, 1.0], [52700.0, 2.0], [54300.0, 1.0], [53900.0, 1.0], [55900.0, 1.0], [55500.0, 1.0], [56700.0, 1.0], [56300.0, 1.0], [60300.0, 3.0], [17100.0, 1.0], [16900.0, 1.0], [17300.0, 2.0], [16700.0, 1.0], [17700.0, 3.0], [18100.0, 1.0], [17500.0, 1.0], [17900.0, 1.0], [18300.0, 1.0], [19300.0, 4.0], [19100.0, 3.0], [18900.0, 1.0], [20100.0, 3.0], [19500.0, 5.0], [19900.0, 2.0], [20300.0, 2.0], [20900.0, 2.0], [21100.0, 4.0], [20700.0, 1.0], [21300.0, 3.0], [20500.0, 1.0], [21500.0, 1.0], [21700.0, 4.0], [22100.0, 1.0], [22300.0, 1.0], [22500.0, 2.0], [23500.0, 1.0], [23100.0, 2.0], [23300.0, 2.0], [22900.0, 2.0], [22700.0, 1.0], [24100.0, 2.0], [24500.0, 5.0], [24300.0, 2.0], [23700.0, 3.0], [25500.0, 4.0], [25100.0, 5.0], [25300.0, 2.0], [24700.0, 1.0], [26100.0, 2.0], [25700.0, 3.0], [25900.0, 2.0], [26500.0, 1.0], [26900.0, 1.0], [27300.0, 1.0], [27900.0, 3.0], [28500.0, 4.0], [29300.0, 1.0], [28700.0, 4.0], [28900.0, 2.0], [29100.0, 2.0], [29700.0, 3.0], [29900.0, 1.0], [31100.0, 1.0], [32300.0, 1.0], [32700.0, 1.0], [31900.0, 3.0], [32500.0, 1.0], [32100.0, 1.0], [33400.0, 2.0], [34200.0, 1.0], [35000.0, 3.0], [36600.0, 1.0], [37400.0, 1.0], [38200.0, 1.0], [37000.0, 1.0], [39000.0, 1.0], [39400.0, 1.0], [40600.0, 2.0], [41400.0, 1.0], [41000.0, 1.0], [42600.0, 1.0], [44600.0, 1.0], [46200.0, 1.0], [47800.0, 1.0], [50200.0, 1.0], [51400.0, 3.0], [52200.0, 2.0], [51800.0, 1.0], [53800.0, 1.0], [55400.0, 1.0], [57000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 134.0], [34100.0, 4.0], [34500.0, 1.0], [33700.0, 1.0], [35700.0, 1.0], [36500.0, 2.0], [34900.0, 1.0], [36100.0, 1.0], [37700.0, 1.0], [40500.0, 1.0], [42900.0, 3.0], [41700.0, 1.0], [41300.0, 1.0], [44100.0, 2.0], [44900.0, 1.0], [46500.0, 1.0], [46900.0, 1.0], [46100.0, 1.0], [47300.0, 1.0], [48900.0, 1.0], [50900.0, 1.0], [52100.0, 1.0], [52900.0, 1.0], [200.0, 1.0], [54900.0, 1.0], [53700.0, 3.0], [54100.0, 1.0], [55300.0, 1.0], [56900.0, 1.0], [56500.0, 1.0], [55700.0, 1.0], [60100.0, 19.0], [700.0, 1.0], [800.0, 2.0], [900.0, 1.0], [1100.0, 2.0], [1200.0, 1.0], [1500.0, 1.0], [1800.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3400.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [4300.0, 1.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [4700.0, 6.0], [5000.0, 2.0], [5100.0, 12.0], [5200.0, 13.0], [5300.0, 4.0], [5600.0, 4.0], [5400.0, 2.0], [5500.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [5900.0, 4.0], [6100.0, 6.0], [6000.0, 3.0], [6200.0, 1.0], [6300.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6400.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [6800.0, 4.0], [7100.0, 4.0], [7300.0, 3.0], [7200.0, 4.0], [7400.0, 4.0], [7500.0, 3.0], [7600.0, 1.0], [7800.0, 1.0], [7700.0, 2.0], [8100.0, 2.0], [8000.0, 1.0], [8600.0, 3.0], [8200.0, 3.0], [8400.0, 3.0], [8700.0, 1.0], [8300.0, 2.0], [8800.0, 3.0], [8900.0, 4.0], [9000.0, 3.0], [9200.0, 1.0], [9100.0, 1.0], [9500.0, 2.0], [9400.0, 2.0], [9700.0, 2.0], [9300.0, 1.0], [9600.0, 2.0], [9800.0, 3.0], [10200.0, 2.0], [10000.0, 3.0], [10100.0, 2.0], [9900.0, 1.0], [10700.0, 2.0], [10400.0, 1.0], [10500.0, 2.0], [10600.0, 2.0], [10300.0, 1.0], [10800.0, 6.0], [10900.0, 1.0], [11200.0, 4.0], [11700.0, 2.0], [11500.0, 6.0], [11400.0, 2.0], [11600.0, 3.0], [11300.0, 2.0], [12200.0, 3.0], [11900.0, 1.0], [12100.0, 1.0], [11800.0, 1.0], [12500.0, 4.0], [12400.0, 2.0], [12700.0, 2.0], [12300.0, 1.0], [13200.0, 3.0], [13000.0, 1.0], [13300.0, 2.0], [12800.0, 3.0], [13100.0, 1.0], [13800.0, 3.0], [13600.0, 3.0], [13400.0, 3.0], [13700.0, 2.0], [13500.0, 2.0], [14000.0, 3.0], [14100.0, 1.0], [14200.0, 3.0], [13900.0, 2.0], [14300.0, 2.0], [14400.0, 3.0], [14600.0, 3.0], [14800.0, 5.0], [14700.0, 2.0], [15300.0, 1.0], [14900.0, 5.0], [15200.0, 1.0], [15100.0, 2.0], [15700.0, 2.0], [15800.0, 2.0], [15400.0, 2.0], [15500.0, 1.0], [16000.0, 2.0], [16100.0, 3.0], [16800.0, 2.0], [17400.0, 1.0], [16600.0, 1.0], [17000.0, 3.0], [17200.0, 2.0], [16400.0, 1.0], [17600.0, 2.0], [17800.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [19000.0, 3.0], [19400.0, 2.0], [19200.0, 3.0], [18600.0, 2.0], [18800.0, 2.0], [19800.0, 3.0], [20000.0, 2.0], [20400.0, 1.0], [20200.0, 1.0], [19600.0, 1.0], [21000.0, 3.0], [20800.0, 2.0], [21200.0, 2.0], [21400.0, 3.0], [20600.0, 3.0], [22400.0, 1.0], [22200.0, 1.0], [23200.0, 1.0], [22800.0, 2.0], [23000.0, 1.0], [23400.0, 2.0], [22600.0, 1.0], [23600.0, 1.0], [24200.0, 5.0], [23800.0, 2.0], [25200.0, 4.0], [24800.0, 5.0], [25000.0, 1.0], [25400.0, 3.0], [25800.0, 1.0], [25600.0, 3.0], [26200.0, 1.0], [27600.0, 3.0], [27400.0, 1.0], [27000.0, 1.0], [28200.0, 3.0], [28400.0, 4.0], [28600.0, 1.0], [29400.0, 3.0], [28800.0, 2.0], [29600.0, 2.0], [30200.0, 1.0], [30400.0, 1.0], [30000.0, 1.0], [30800.0, 1.0], [31600.0, 2.0], [31200.0, 1.0], [32400.0, 1.0], [32200.0, 1.0], [31800.0, 1.0], [34000.0, 1.0], [33200.0, 3.0], [34400.0, 2.0], [35200.0, 3.0], [36400.0, 2.0], [38800.0, 1.0], [40800.0, 1.0], [43600.0, 1.0], [47600.0, 1.0], [48800.0, 2.0], [49600.0, 2.0], [50000.0, 2.0], [49200.0, 2.0], [51200.0, 1.0], [52400.0, 2.0], [52000.0, 1.0], [55200.0, 1.0], [55600.0, 1.0], [56000.0, 1.0], [33100.0, 1.0], [34700.0, 3.0], [35100.0, 1.0], [36700.0, 1.0], [35500.0, 1.0], [38700.0, 1.0], [37100.0, 1.0], [37900.0, 1.0], [39100.0, 2.0], [40300.0, 1.0], [41100.0, 1.0], [42300.0, 1.0], [44300.0, 1.0], [45900.0, 1.0], [48700.0, 1.0], [49500.0, 1.0], [51100.0, 2.0], [49900.0, 1.0], [51500.0, 1.0], [51900.0, 1.0], [52700.0, 1.0], [53500.0, 1.0], [56700.0, 1.0], [57900.0, 1.0], [16500.0, 1.0], [17100.0, 3.0], [16700.0, 1.0], [16900.0, 1.0], [18100.0, 3.0], [17900.0, 1.0], [17500.0, 2.0], [19300.0, 4.0], [19100.0, 3.0], [18500.0, 1.0], [18900.0, 3.0], [19500.0, 2.0], [20100.0, 4.0], [19700.0, 2.0], [19900.0, 2.0], [20300.0, 1.0], [20700.0, 2.0], [20900.0, 4.0], [20500.0, 3.0], [21500.0, 2.0], [21300.0, 1.0], [21100.0, 1.0], [22100.0, 2.0], [21700.0, 2.0], [21900.0, 3.0], [22500.0, 2.0], [22300.0, 2.0], [23300.0, 2.0], [23500.0, 4.0], [22700.0, 2.0], [23100.0, 2.0], [22900.0, 1.0], [24100.0, 4.0], [23900.0, 2.0], [24500.0, 4.0], [24300.0, 1.0], [23700.0, 1.0], [25100.0, 3.0], [25300.0, 3.0], [24900.0, 1.0], [24700.0, 1.0], [25500.0, 1.0], [25700.0, 2.0], [26300.0, 3.0], [25900.0, 3.0], [26500.0, 1.0], [26700.0, 1.0], [26900.0, 2.0], [27100.0, 1.0], [27300.0, 1.0], [28500.0, 1.0], [28300.0, 3.0], [27900.0, 1.0], [27700.0, 1.0], [29100.0, 3.0], [29300.0, 1.0], [28700.0, 1.0], [29500.0, 1.0], [29700.0, 1.0], [29900.0, 1.0], [30700.0, 1.0], [30100.0, 1.0], [31300.0, 2.0], [31500.0, 2.0], [31700.0, 2.0], [31100.0, 1.0], [32100.0, 1.0], [32300.0, 1.0], [33400.0, 1.0], [34200.0, 1.0], [34600.0, 1.0], [33000.0, 3.0], [33800.0, 1.0], [36200.0, 1.0], [35400.0, 1.0], [36600.0, 1.0], [38600.0, 2.0], [39400.0, 1.0], [40200.0, 1.0], [39000.0, 1.0], [41000.0, 1.0], [43000.0, 1.0], [45000.0, 1.0], [44200.0, 1.0], [43400.0, 1.0], [48200.0, 2.0], [47400.0, 1.0], [48600.0, 2.0], [51000.0, 1.0], [50600.0, 2.0], [52600.0, 1.0], [53400.0, 1.0], [55400.0, 1.0], [56600.0, 1.0], [58600.0, 1.0], [60200.0, 3.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 70.0], [1200.0, 2.0], [200.0, 744.0], [400.0, 2.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 667.0, "series": [{"data": [[0.0, 667.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 634.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 324.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.875, "minX": 1.68545082E12, "maxY": 25.0, "series": [{"data": [[1.68545172E12, 23.237037037037037], [1.68545106E12, 10.0], [1.68545136E12, 17.167701863354026], [1.68545142E12, 20.0], [1.68545202E12, 8.465753424657535], [1.68545082E12, 3.0], [1.68545214E12, 2.875], [1.68545112E12, 10.0], [1.68545208E12, 4.931818181818182], [1.68545118E12, 12.473684210526319], [1.68545178E12, 20.297297297297302], [1.68545148E12, 20.0], [1.68545154E12, 22.459016393442624], [1.6854519E12, 14.028985507246379], [1.68545088E12, 5.0], [1.68545184E12, 16.521739130434774], [1.68545094E12, 5.0], [1.68545124E12, 15.0], [1.68545196E12, 10.195876288659793], [1.6854513E12, 15.0], [1.6854516E12, 25.0], [1.68545166E12, 25.0], [1.685451E12, 8.194029850746269]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545214E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 258.6666666666667, "minX": 1.0, "maxY": 35767.0, "series": [{"data": [[2.0, 13129.0], [3.0, 19349.0], [4.0, 13264.0], [5.0, 16309.266666666666], [6.0, 24471.444444444445], [7.0, 35767.0], [8.0, 21518.666666666668], [9.0, 18974.41176470588], [10.0, 12986.24369747899], [11.0, 13327.499999999998], [12.0, 11630.5], [13.0, 12782.388888888889], [14.0, 9777.916666666666], [15.0, 14405.00558659218], [1.0, 10411.0], [16.0, 13824.499999999998], [17.0, 24313.3125], [18.0, 16801.909090909092], [19.0, 19117.69230769231], [20.0, 20055.825174825164], [21.0, 25534.999999999996], [22.0, 20477.272727272724], [23.0, 26015.384615384617], [24.0, 29514.23076923077], [25.0, 35359.17021276596]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[15.991442542787302, 19011.903422982916]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 12867.333333333332], [3.0, 19098.0], [4.0, 13004.0], [5.0, 16041.333333333332], [6.0, 24203.77777777778], [7.0, 35503.0], [8.0, 21258.666666666668], [9.0, 18703.470588235294], [10.0, 12818.271186440676], [11.0, 13057.0], [12.0, 12987.857142857143], [13.0, 13254.941176470587], [14.0, 10371.909090909092], [15.0, 14219.34269662922], [1.0, 10098.5], [16.0, 13563.555555555555], [17.0, 24043.0], [18.0, 18179.4], [19.0, 20421.166666666664], [20.0, 19922.84507042254], [21.0, 25260.15], [22.0, 20207.666666666668], [23.0, 25738.076923076922], [24.0, 29240.53846153846], [25.0, 35449.107526881715]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[15.988875154511721, 18948.46847960443]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 258.6666666666667], [3.0, 262.0], [4.0, 271.2], [5.0, 266.38297872340416], [6.0, 273.42857142857144], [7.0, 361.0], [8.0, 267.0], [9.0, 263.1764705882353], [10.0, 274.83333333333337], [11.0, 261.61904761904765], [12.0, 283.44444444444446], [13.0, 267.17647058823525], [14.0, 264.66666666666663], [15.0, 266.3910614525139], [1.0, 316.0], [16.0, 264.11111111111114], [17.0, 260.81249999999994], [18.0, 284.2727272727273], [19.0, 275.33333333333337], [20.0, 270.1655172413791], [21.0, 265.1], [22.0, 275.96969696969694], [23.0, 274.7], [24.0, 279.64285714285717], [25.0, 287.3684210526316]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[15.987775061124697, 271.9144254278725]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 185.5, "minX": 1.68545082E12, "maxY": 9862.133333333333, "series": [{"data": [[1.68545172E12, 2443.5333333333333], [1.68545106E12, 1502.2], [1.68545136E12, 4070.733333333333], [1.68545142E12, 3815.9333333333334], [1.68545202E12, 1762.8333333333333], [1.68545082E12, 695.1], [1.68545214E12, 185.5], [1.68545112E12, 1671.8333333333333], [1.68545208E12, 1027.3666666666666], [1.68545118E12, 2992.9666666666667], [1.68545178E12, 2404.883333333333], [1.68545148E12, 3082.1], [1.68545154E12, 3043.366666666667], [1.6854519E12, 3228.866666666667], [1.68545088E12, 1174.1333333333334], [1.68545184E12, 2257.4166666666665], [1.68545094E12, 807.2166666666667], [1.68545124E12, 3465.7], [1.68545196E12, 2385.366666666667], [1.6854513E12, 3313.45], [1.6854516E12, 2201.5], [1.68545166E12, 2665.4166666666665], [1.685451E12, 1208.4333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68545172E12, 5838.3], [1.68545106E12, 4941.583333333333], [1.68545136E12, 7647.883333333333], [1.68545142E12, 7828.316666666667], [1.68545202E12, 4185.316666666667], [1.68545082E12, 811.0166666666667], [1.68545214E12, 689.5833333333334], [1.68545112E12, 5036.533333333334], [1.68545208E12, 1753.3166666666666], [1.68545118E12, 6998.35], [1.68545178E12, 7551.983333333334], [1.68545148E12, 6008.816666666667], [1.68545154E12, 5769.016666666666], [1.6854519E12, 5917.8], [1.68545088E12, 2437.5666666666666], [1.68545184E12, 5501.933333333333], [1.68545094E12, 1379.0666666666666], [1.68545124E12, 9862.133333333333], [1.68545196E12, 4817.15], [1.6854513E12, 7964.416666666667], [1.6854516E12, 3941.1666666666665], [1.68545166E12, 7551.866666666667], [1.685451E12, 3180.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545214E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 260.4545454545455, "minX": 1.68545082E12, "maxY": 38360.29032258065, "series": [{"data": [[1.68545172E12, 32379.89795918369], [1.68545106E12, 10338.833333333334], [1.68545136E12, 13915.359999999999], [1.68545142E12, 19453.685185185182], [1.68545202E12, 19482.840000000004], [1.68545082E12, 9655.428571428572], [1.68545214E12, 20214.666666666668], [1.68545112E12, 14207.454545454546], [1.68545208E12, 13551.5], [1.68545118E12, 10759.585365853658], [1.68545178E12, 17544.22], [1.68545148E12, 25550.999999999996], [1.68545154E12, 23574.35897435898], [1.6854519E12, 14760.619999999997], [1.68545088E12, 16459.625], [1.68545184E12, 29727.358974358976], [1.68545094E12, 19211.545454545452], [1.68545124E12, 11342.863636363634], [1.68545196E12, 16941.593749999996], [1.6854513E12, 11996.555555555553], [1.6854516E12, 38360.29032258065], [1.68545166E12, 29042.954545454548], [1.685451E12, 16064.869565217392]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545172E12, 33101.977272727265], [1.68545106E12, 7563.25641025641], [1.68545136E12, 13692.056603773583], [1.68545142E12, 19602.250000000004], [1.68545202E12, 19196.307692307695], [1.68545082E12, 9379.142857142857], [1.68545214E12, 19918.0], [1.68545112E12, 15501.828571428576], [1.68545208E12, 12343.42857142857], [1.68545118E12, 10701.790697674416], [1.68545178E12, 18462.080000000005], [1.68545148E12, 24448.976190476187], [1.68545154E12, 23447.641025641024], [1.6854519E12, 16170.340909090908], [1.68545088E12, 16192.000000000002], [1.68545184E12, 30274.205128205132], [1.68545094E12, 18944.0], [1.68545124E12, 11390.06153846154], [1.68545196E12, 16775.727272727276], [1.6854513E12, 11040.259259259261], [1.6854516E12, 37419.63333333333], [1.68545166E12, 29027.875000000004], [1.685451E12, 18142.3]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545172E12, 275.97619047619054], [1.68545106E12, 268.4], [1.68545136E12, 271.8793103448275], [1.68545142E12, 275.26923076923066], [1.68545202E12, 271.68181818181813], [1.68545082E12, 273.83333333333337], [1.68545112E12, 289.79411764705884], [1.68545208E12, 261.9285714285715], [1.68545118E12, 267.81632653061234], [1.68545178E12, 265.3125], [1.68545148E12, 269.61904761904765], [1.68545154E12, 273.8181818181819], [1.6854519E12, 268.50000000000006], [1.68545088E12, 270.31249999999994], [1.68545184E12, 266.16216216216213], [1.68545094E12, 260.4545454545455], [1.68545124E12, 262.7343750000001], [1.68545196E12, 268.84375], [1.6854513E12, 266.98181818181826], [1.6854516E12, 276.33333333333337], [1.68545166E12, 296.41666666666674], [1.685451E12, 272.12499999999994]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545214E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 260.18181818181813, "minX": 1.68545082E12, "maxY": 38359.387096774204, "series": [{"data": [[1.68545172E12, 32378.67346938776], [1.68545106E12, 10338.547619047618], [1.68545136E12, 13914.560000000003], [1.68545142E12, 19453.000000000007], [1.68545202E12, 19482.2], [1.68545082E12, 9653.571428571428], [1.68545214E12, 20214.666666666668], [1.68545112E12, 14206.909090909088], [1.68545208E12, 13550.750000000002], [1.68545118E12, 10758.853658536585], [1.68545178E12, 17543.640000000007], [1.68545148E12, 25549.534883720928], [1.68545154E12, 23572.641025641024], [1.6854519E12, 14759.62], [1.68545088E12, 16458.9375], [1.68545184E12, 29726.820512820515], [1.68545094E12, 19211.272727272724], [1.68545124E12, 11341.924242424242], [1.68545196E12, 16940.968750000004], [1.6854513E12, 11996.203703703706], [1.6854516E12, 38359.387096774204], [1.68545166E12, 29042.068181818187], [1.685451E12, 16064.347826086956]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545172E12, 33101.8409090909], [1.68545106E12, 7563.153846153848], [1.68545136E12, 13691.660377358488], [1.68545142E12, 19601.86538461539], [1.68545202E12, 19196.03846153846], [1.68545082E12, 9378.714285714286], [1.68545214E12, 19918.0], [1.68545112E12, 15501.657142857144], [1.68545208E12, 12343.285714285714], [1.68545118E12, 10701.558139534887], [1.68545178E12, 18461.920000000002], [1.68545148E12, 24448.642857142848], [1.68545154E12, 23446.51282051282], [1.6854519E12, 16169.931818181818], [1.68545088E12, 16191.625], [1.68545184E12, 30273.94871794871], [1.68545094E12, 18944.0], [1.68545124E12, 11389.692307692305], [1.68545196E12, 16775.545454545452], [1.6854513E12, 11039.851851851856], [1.6854516E12, 37419.3], [1.68545166E12, 29027.8125], [1.685451E12, 18142.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545172E12, 274.90476190476176], [1.68545106E12, 268.1749999999999], [1.68545136E12, 271.63793103448273], [1.68545142E12, 274.28846153846155], [1.68545202E12, 271.09090909090907], [1.68545082E12, 272.83333333333337], [1.68545112E12, 289.55882352941177], [1.68545208E12, 261.4285714285714], [1.68545118E12, 267.32653061224494], [1.68545178E12, 265.0833333333333], [1.68545148E12, 269.2142857142858], [1.68545154E12, 272.99999999999994], [1.6854519E12, 267.7272727272727], [1.68545088E12, 270.12499999999994], [1.68545184E12, 266.08108108108115], [1.68545094E12, 260.18181818181813], [1.68545124E12, 262.32812499999994], [1.68545196E12, 268.5312500000001], [1.6854513E12, 266.72727272727275], [1.6854516E12, 275.73333333333323], [1.68545166E12, 295.43750000000006], [1.685451E12, 271.8333333333333]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545214E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545082E12, "maxY": 160.39393939393943, "series": [{"data": [[1.68545172E12, 128.0204081632653], [1.68545106E12, 128.83333333333334], [1.68545136E12, 127.80000000000001], [1.68545142E12, 129.98148148148144], [1.68545202E12, 130.84000000000003], [1.68545082E12, 141.57142857142858], [1.68545214E12, 127.33333333333333], [1.68545112E12, 160.39393939393943], [1.68545208E12, 134.6875], [1.68545118E12, 129.7560975609756], [1.68545178E12, 128.96000000000004], [1.68545148E12, 129.1627906976744], [1.68545154E12, 127.69230769230766], [1.6854519E12, 128.76000000000002], [1.68545088E12, 129.3125], [1.68545184E12, 128.56410256410248], [1.68545094E12, 132.72727272727272], [1.68545124E12, 128.10606060606062], [1.68545196E12, 129.84375], [1.6854513E12, 128.7592592592593], [1.6854516E12, 129.8709677419355], [1.68545166E12, 130.99999999999997], [1.685451E12, 132.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545172E12, 0.0], [1.68545106E12, 0.0], [1.68545136E12, 0.0], [1.68545142E12, 0.0], [1.68545202E12, 0.0], [1.68545082E12, 0.0], [1.68545214E12, 0.0], [1.68545112E12, 0.0], [1.68545208E12, 0.0], [1.68545118E12, 0.0], [1.68545178E12, 0.0], [1.68545148E12, 0.0], [1.68545154E12, 0.0], [1.6854519E12, 0.0], [1.68545088E12, 0.0], [1.68545184E12, 0.0], [1.68545094E12, 0.0], [1.68545124E12, 0.0], [1.68545196E12, 0.0], [1.6854513E12, 0.0], [1.6854516E12, 0.0], [1.68545166E12, 0.0], [1.685451E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545172E12, 128.1190476190476], [1.68545106E12, 130.42499999999998], [1.68545136E12, 128.98275862068965], [1.68545142E12, 128.6538461538462], [1.68545202E12, 135.59090909090907], [1.68545082E12, 137.33333333333334], [1.68545112E12, 157.52941176470588], [1.68545208E12, 128.71428571428572], [1.68545118E12, 129.61224489795921], [1.68545178E12, 129.6875], [1.68545148E12, 129.35714285714286], [1.68545154E12, 129.11363636363635], [1.6854519E12, 127.43181818181817], [1.68545088E12, 131.25000000000003], [1.68545184E12, 129.24324324324328], [1.68545094E12, 129.36363636363637], [1.68545124E12, 127.96875000000003], [1.68545196E12, 129.81249999999997], [1.6854513E12, 128.80000000000004], [1.6854516E12, 130.06666666666666], [1.68545166E12, 129.56249999999991], [1.685451E12, 131.16666666666663]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545214E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 247.0, "minX": 1.68545082E12, "maxY": 58698.0, "series": [{"data": [[1.68545172E12, 57904.0], [1.68545106E12, 31323.0], [1.68545136E12, 28673.0], [1.68545142E12, 36238.0], [1.68545202E12, 36655.0], [1.68545082E12, 12522.0], [1.68545214E12, 22389.0], [1.68545112E12, 38735.0], [1.68545208E12, 22256.0], [1.68545118E12, 23570.0], [1.68545178E12, 56760.0], [1.68545148E12, 53445.0], [1.68545154E12, 47345.0], [1.6854519E12, 28325.0], [1.68545088E12, 21016.0], [1.68545184E12, 56996.0], [1.68545094E12, 22153.0], [1.68545124E12, 39463.0], [1.68545196E12, 33885.0], [1.6854513E12, 28480.0], [1.6854516E12, 55438.0], [1.68545166E12, 58698.0], [1.685451E12, 34216.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68545172E12, 53588.2], [1.68545106E12, 29329.0], [1.68545136E12, 19885.399999999998], [1.68545142E12, 28352.5], [1.68545202E12, 33414.700000000004], [1.68545082E12, 12280.0], [1.68545214E12, 22389.0], [1.68545112E12, 35428.6], [1.68545208E12, 21192.100000000002], [1.68545118E12, 16858.200000000004], [1.68545178E12, 48604.000000000015], [1.68545148E12, 42325.0], [1.68545154E12, 34316.200000000004], [1.6854519E12, 24848.100000000002], [1.68545088E12, 19788.9], [1.68545184E12, 53157.6], [1.68545094E12, 21159.2], [1.68545124E12, 25949.0], [1.68545196E12, 26497.6], [1.6854513E12, 22842.1], [1.6854516E12, 51224.3], [1.68545166E12, 32575.8], [1.685451E12, 33495.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68545172E12, 57904.0], [1.68545106E12, 31323.0], [1.68545136E12, 28423.99999999999], [1.68545142E12, 36135.950000000004], [1.68545202E12, 36655.0], [1.68545082E12, 12522.0], [1.68545214E12, 22389.0], [1.68545112E12, 38735.0], [1.68545208E12, 22256.0], [1.68545118E12, 23570.0], [1.68545178E12, 56760.0], [1.68545148E12, 53445.0], [1.68545154E12, 47345.0], [1.6854519E12, 28325.0], [1.68545088E12, 21016.0], [1.68545184E12, 56996.0], [1.68545094E12, 22153.0], [1.68545124E12, 39463.0], [1.68545196E12, 33885.0], [1.6854513E12, 28480.0], [1.6854516E12, 55438.0], [1.68545166E12, 58698.0], [1.685451E12, 34216.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68545172E12, 55295.99999999999], [1.68545106E12, 30860.75], [1.68545136E12, 24105.4], [1.68545142E12, 30804.25], [1.68545202E12, 35482.75], [1.68545082E12, 12522.0], [1.68545214E12, 22389.0], [1.68545112E12, 38666.2], [1.68545208E12, 22134.05], [1.68545118E12, 21798.6], [1.68545178E12, 55426.0], [1.68545148E12, 48081.75], [1.68545154E12, 36505.2], [1.6854519E12, 25839.1], [1.68545088E12, 20375.1], [1.68545184E12, 56133.4], [1.68545094E12, 22014.55], [1.68545124E12, 32487.0], [1.68545196E12, 31813.6], [1.6854513E12, 26982.09999999999], [1.6854516E12, 52932.4], [1.68545166E12, 37891.1], [1.685451E12, 34185.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68545172E12, 253.0], [1.68545106E12, 250.0], [1.68545136E12, 248.0], [1.68545142E12, 250.0], [1.68545202E12, 251.0], [1.68545082E12, 253.0], [1.68545214E12, 15157.0], [1.68545112E12, 250.0], [1.68545208E12, 251.0], [1.68545118E12, 251.0], [1.68545178E12, 250.0], [1.68545148E12, 249.0], [1.68545154E12, 247.0], [1.6854519E12, 248.0], [1.68545088E12, 251.0], [1.68545184E12, 250.0], [1.68545094E12, 251.0], [1.68545124E12, 249.0], [1.68545196E12, 248.0], [1.6854513E12, 250.0], [1.6854516E12, 250.0], [1.68545166E12, 248.0], [1.685451E12, 254.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68545172E12, 318.5], [1.68545106E12, 346.0], [1.68545136E12, 324.0], [1.68545142E12, 2419.0], [1.68545202E12, 5194.0], [1.68545082E12, 269.0], [1.68545214E12, 20619.0], [1.68545112E12, 17439.0], [1.68545208E12, 2473.5], [1.68545118E12, 322.0], [1.68545178E12, 5186.0], [1.68545148E12, 2744.5], [1.68545154E12, 304.0], [1.6854519E12, 2765.5], [1.68545088E12, 5602.5], [1.68545184E12, 5607.0], [1.68545094E12, 5977.5], [1.68545124E12, 4744.0], [1.68545196E12, 5143.0], [1.6854513E12, 328.0], [1.6854516E12, 2860.0], [1.68545166E12, 276.0], [1.685451E12, 3538.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545214E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 134.5, "minX": 1.0, "maxY": 24027.0, "series": [{"data": [[1.0, 301.0], [4.0, 5153.0], [2.0, 329.5], [8.0, 7828.5], [9.0, 302.5], [5.0, 4777.0], [10.0, 24027.0], [3.0, 303.0], [6.0, 5246.0], [12.0, 11820.5], [7.0, 13785.5], [14.0, 272.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 247.0], [2.0, 247.5], [1.0, 250.0], [8.0, 253.0], [9.0, 1958.0], [5.0, 134.5], [3.0, 247.0], [6.0, 257.0], [12.0, 195.0], [7.0, 252.0], [14.0, 1277.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 134.5, "minX": 1.0, "maxY": 24027.0, "series": [{"data": [[1.0, 298.0], [4.0, 5149.0], [2.0, 326.5], [8.0, 7828.0], [9.0, 301.0], [5.0, 4776.0], [10.0, 24027.0], [3.0, 300.0], [6.0, 5246.0], [12.0, 11818.5], [7.0, 13785.5], [14.0, 272.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 247.0], [2.0, 247.0], [1.0, 250.0], [8.0, 253.0], [9.0, 1958.0], [5.0, 134.5], [3.0, 247.0], [6.0, 257.0], [12.0, 194.5], [7.0, 252.0], [14.0, 1276.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.68545082E12, "maxY": 2.033333333333333, "series": [{"data": [[1.68545172E12, 1.35], [1.68545106E12, 1.3666666666666667], [1.68545136E12, 1.95], [1.68545142E12, 1.7], [1.68545202E12, 0.7166666666666667], [1.68545082E12, 0.38333333333333336], [1.68545112E12, 1.2], [1.68545208E12, 0.5], [1.68545118E12, 1.5833333333333333], [1.68545178E12, 1.5833333333333333], [1.68545148E12, 1.4], [1.68545154E12, 1.4833333333333334], [1.6854519E12, 1.45], [1.68545088E12, 0.48333333333333334], [1.68545184E12, 1.2], [1.68545094E12, 0.43333333333333335], [1.68545124E12, 2.033333333333333], [1.68545196E12, 1.0333333333333334], [1.6854513E12, 1.9166666666666667], [1.6854516E12, 1.05], [1.68545166E12, 1.5833333333333333], [1.685451E12, 0.7166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545208E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68545082E12, "maxY": 1.85, "series": [{"data": [[1.68545172E12, 0.9666666666666667], [1.68545106E12, 0.4], [1.68545136E12, 1.85], [1.68545142E12, 1.7333333333333334], [1.68545202E12, 0.8], [1.68545082E12, 0.31666666666666665], [1.68545214E12, 0.08333333333333333], [1.68545112E12, 0.5833333333333334], [1.68545208E12, 0.4666666666666667], [1.68545118E12, 1.2833333333333334], [1.68545178E12, 0.85], [1.68545148E12, 1.4], [1.68545154E12, 1.3833333333333333], [1.6854519E12, 1.4666666666666666], [1.68545088E12, 0.5333333333333333], [1.68545184E12, 0.9166666666666666], [1.68545094E12, 0.36666666666666664], [1.68545124E12, 1.3166666666666667], [1.68545196E12, 1.0833333333333333], [1.6854513E12, 1.3666666666666667], [1.6854516E12, 1.0], [1.68545166E12, 1.0833333333333333], [1.685451E12, 0.4666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68545166E12, 0.2833333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68545172E12, 0.4], [1.68545106E12, 0.9166666666666666], [1.68545184E12, 0.31666666666666665], [1.68545124E12, 0.8333333333333334], [1.6854513E12, 0.45], [1.68545112E12, 0.5666666666666667], [1.68545118E12, 0.25], [1.68545178E12, 0.75], [1.685451E12, 0.26666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68545172E12, 0.06666666666666667], [1.68545184E12, 0.03333333333333333], [1.68545166E12, 0.23333333333333334], [1.68545178E12, 0.03333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545214E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68545082E12, "maxY": 0.9666666666666667, "series": [{"data": [[1.68545172E12, 0.5333333333333333], [1.68545106E12, 0.21666666666666667], [1.68545136E12, 0.9666666666666667], [1.68545142E12, 0.8666666666666667], [1.68545202E12, 0.36666666666666664], [1.68545082E12, 0.2], [1.68545112E12, 0.23333333333333334], [1.68545208E12, 0.23333333333333334], [1.68545118E12, 0.6833333333333333], [1.68545178E12, 0.4], [1.68545148E12, 0.7], [1.68545154E12, 0.7333333333333333], [1.6854519E12, 0.7333333333333333], [1.68545088E12, 0.26666666666666666], [1.68545184E12, 0.43333333333333335], [1.68545094E12, 0.18333333333333332], [1.68545124E12, 0.6333333333333333], [1.68545196E12, 0.5333333333333333], [1.6854513E12, 0.7], [1.6854516E12, 0.5], [1.68545166E12, 0.8], [1.685451E12, 0.23333333333333334]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68545172E12, 0.16666666666666666], [1.68545106E12, 0.45], [1.68545184E12, 0.18333333333333332], [1.68545124E12, 0.43333333333333335], [1.6854513E12, 0.21666666666666667], [1.68545112E12, 0.3333333333333333], [1.68545118E12, 0.13333333333333333], [1.68545178E12, 0.4], [1.685451E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68545172E12, 0.3], [1.68545106E12, 0.4666666666666667], [1.68545184E12, 0.16666666666666666], [1.68545124E12, 0.4], [1.6854513E12, 0.23333333333333334], [1.68545112E12, 0.23333333333333334], [1.68545118E12, 0.11666666666666667], [1.68545166E12, 0.5166666666666667], [1.68545178E12, 0.38333333333333336], [1.685451E12, 0.1]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68545172E12, 0.5], [1.68545106E12, 0.06666666666666667], [1.68545136E12, 0.8333333333333334], [1.68545142E12, 0.9], [1.68545202E12, 0.4166666666666667], [1.68545082E12, 0.11666666666666667], [1.68545214E12, 0.05], [1.68545112E12, 0.1], [1.68545208E12, 0.26666666666666666], [1.68545118E12, 0.5], [1.68545178E12, 0.26666666666666666], [1.68545148E12, 0.7166666666666667], [1.68545154E12, 0.65], [1.6854519E12, 0.8333333333333334], [1.68545088E12, 0.26666666666666666], [1.68545184E12, 0.21666666666666667], [1.68545094E12, 0.18333333333333332], [1.68545124E12, 0.4], [1.68545196E12, 0.5333333333333333], [1.6854513E12, 0.5], [1.6854516E12, 0.5166666666666667], [1.68545166E12, 0.21666666666666667], [1.685451E12, 0.23333333333333334]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545172E12, 0.31666666666666665], [1.68545106E12, 0.6333333333333333], [1.68545184E12, 0.43333333333333335], [1.68545124E12, 0.7], [1.6854513E12, 0.4], [1.68545112E12, 0.45], [1.68545118E12, 0.18333333333333332], [1.68545166E12, 0.5166666666666667], [1.68545178E12, 0.5666666666666667], [1.685451E12, 0.15]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68545172E12, 0.43333333333333335], [1.68545106E12, 0.18333333333333332], [1.68545136E12, 0.8833333333333333], [1.68545142E12, 0.8666666666666667], [1.68545202E12, 0.43333333333333335], [1.68545082E12, 0.11666666666666667], [1.68545214E12, 0.08333333333333333], [1.68545112E12, 0.35], [1.68545208E12, 0.23333333333333334], [1.68545118E12, 0.6], [1.68545178E12, 0.45], [1.68545148E12, 0.7], [1.68545154E12, 0.65], [1.6854519E12, 0.7333333333333333], [1.68545088E12, 0.26666666666666666], [1.68545184E12, 0.48333333333333334], [1.68545094E12, 0.18333333333333332], [1.68545124E12, 0.6833333333333333], [1.68545196E12, 0.55], [1.6854513E12, 0.6666666666666666], [1.6854516E12, 0.5], [1.68545166E12, 0.2833333333333333], [1.685451E12, 0.23333333333333334]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545214E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.68545082E12, "maxY": 2.683333333333333, "series": [{"data": [[1.68545172E12, 1.4666666666666666], [1.68545106E12, 0.4666666666666667], [1.68545136E12, 2.683333333333333], [1.68545142E12, 2.6333333333333333], [1.68545202E12, 1.2166666666666666], [1.68545082E12, 0.43333333333333335], [1.68545214E12, 0.13333333333333333], [1.68545112E12, 0.6833333333333333], [1.68545208E12, 0.7333333333333333], [1.68545118E12, 1.7833333333333334], [1.68545178E12, 1.1166666666666667], [1.68545148E12, 2.1166666666666667], [1.68545154E12, 2.033333333333333], [1.6854519E12, 2.3], [1.68545088E12, 0.8], [1.68545184E12, 1.1333333333333333], [1.68545094E12, 0.55], [1.68545124E12, 1.7166666666666666], [1.68545196E12, 1.6166666666666667], [1.6854513E12, 1.8666666666666667], [1.6854516E12, 1.5166666666666666], [1.68545166E12, 1.3], [1.685451E12, 0.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545172E12, 0.7833333333333333], [1.68545106E12, 1.55], [1.68545184E12, 0.7833333333333333], [1.68545124E12, 1.5333333333333334], [1.6854513E12, 0.85], [1.68545112E12, 1.0166666666666666], [1.68545118E12, 0.43333333333333335], [1.68545166E12, 1.0333333333333334], [1.68545178E12, 1.35], [1.685451E12, 0.4166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545214E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

