/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 111.0, "minX": 0.0, "maxY": 52972.0, "series": [{"data": [[0.0, 229.0], [0.1, 229.0], [0.2, 232.0], [0.3, 232.0], [0.4, 236.0], [0.5, 247.0], [0.6, 247.0], [0.7, 334.0], [0.8, 336.0], [0.9, 336.0], [1.0, 336.0], [1.1, 336.0], [1.2, 337.0], [1.3, 337.0], [1.4, 337.0], [1.5, 338.0], [1.6, 339.0], [1.7, 339.0], [1.8, 339.0], [1.9, 339.0], [2.0, 339.0], [2.1, 339.0], [2.2, 339.0], [2.3, 339.0], [2.4, 340.0], [2.5, 340.0], [2.6, 340.0], [2.7, 340.0], [2.8, 340.0], [2.9, 340.0], [3.0, 340.0], [3.1, 340.0], [3.2, 341.0], [3.3, 341.0], [3.4, 341.0], [3.5, 341.0], [3.6, 341.0], [3.7, 341.0], [3.8, 342.0], [3.9, 342.0], [4.0, 342.0], [4.1, 342.0], [4.2, 342.0], [4.3, 342.0], [4.4, 342.0], [4.5, 344.0], [4.6, 344.0], [4.7, 344.0], [4.8, 344.0], [4.9, 344.0], [5.0, 344.0], [5.1, 345.0], [5.2, 345.0], [5.3, 345.0], [5.4, 345.0], [5.5, 345.0], [5.6, 345.0], [5.7, 345.0], [5.8, 345.0], [5.9, 346.0], [6.0, 347.0], [6.1, 347.0], [6.2, 348.0], [6.3, 348.0], [6.4, 348.0], [6.5, 350.0], [6.6, 350.0], [6.7, 350.0], [6.8, 350.0], [6.9, 350.0], [7.0, 351.0], [7.1, 351.0], [7.2, 351.0], [7.3, 351.0], [7.4, 351.0], [7.5, 352.0], [7.6, 352.0], [7.7, 352.0], [7.8, 352.0], [7.9, 353.0], [8.0, 353.0], [8.1, 353.0], [8.2, 353.0], [8.3, 353.0], [8.4, 353.0], [8.5, 353.0], [8.6, 354.0], [8.7, 354.0], [8.8, 354.0], [8.9, 354.0], [9.0, 355.0], [9.1, 355.0], [9.2, 355.0], [9.3, 355.0], [9.4, 355.0], [9.5, 355.0], [9.6, 355.0], [9.7, 356.0], [9.8, 356.0], [9.9, 356.0], [10.0, 357.0], [10.1, 357.0], [10.2, 357.0], [10.3, 358.0], [10.4, 358.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 358.0], [10.9, 358.0], [11.0, 358.0], [11.1, 359.0], [11.2, 359.0], [11.3, 359.0], [11.4, 359.0], [11.5, 359.0], [11.6, 359.0], [11.7, 359.0], [11.8, 359.0], [11.9, 359.0], [12.0, 359.0], [12.1, 359.0], [12.2, 360.0], [12.3, 360.0], [12.4, 360.0], [12.5, 360.0], [12.6, 360.0], [12.7, 362.0], [12.8, 362.0], [12.9, 362.0], [13.0, 363.0], [13.1, 363.0], [13.2, 363.0], [13.3, 363.0], [13.4, 363.0], [13.5, 364.0], [13.6, 365.0], [13.7, 365.0], [13.8, 365.0], [13.9, 366.0], [14.0, 366.0], [14.1, 366.0], [14.2, 368.0], [14.3, 368.0], [14.4, 368.0], [14.5, 368.0], [14.6, 369.0], [14.7, 371.0], [14.8, 371.0], [14.9, 371.0], [15.0, 372.0], [15.1, 372.0], [15.2, 372.0], [15.3, 372.0], [15.4, 372.0], [15.5, 372.0], [15.6, 372.0], [15.7, 373.0], [15.8, 374.0], [15.9, 374.0], [16.0, 374.0], [16.1, 374.0], [16.2, 374.0], [16.3, 375.0], [16.4, 375.0], [16.5, 376.0], [16.6, 377.0], [16.7, 377.0], [16.8, 378.0], [16.9, 380.0], [17.0, 380.0], [17.1, 381.0], [17.2, 383.0], [17.3, 383.0], [17.4, 384.0], [17.5, 384.0], [17.6, 385.0], [17.7, 386.0], [17.8, 386.0], [17.9, 387.0], [18.0, 389.0], [18.1, 389.0], [18.2, 390.0], [18.3, 394.0], [18.4, 394.0], [18.5, 399.0], [18.6, 399.0], [18.7, 407.0], [18.8, 407.0], [18.9, 407.0], [19.0, 408.0], [19.1, 410.0], [19.2, 410.0], [19.3, 414.0], [19.4, 414.0], [19.5, 416.0], [19.6, 434.0], [19.7, 434.0], [19.8, 435.0], [19.9, 448.0], [20.0, 448.0], [20.1, 466.0], [20.2, 497.0], [20.3, 497.0], [20.4, 3949.0], [20.5, 3949.0], [20.6, 4389.0], [20.7, 4883.0], [20.8, 4883.0], [20.9, 5089.0], [21.0, 5297.0], [21.1, 5297.0], [21.2, 5315.0], [21.3, 5326.0], [21.4, 5326.0], [21.5, 5341.0], [21.6, 5341.0], [21.7, 5361.0], [21.8, 5374.0], [21.9, 5374.0], [22.0, 5376.0], [22.1, 5376.0], [22.2, 5376.0], [22.3, 5376.0], [22.4, 5381.0], [22.5, 5381.0], [22.6, 5392.0], [22.7, 5392.0], [22.8, 5392.0], [22.9, 5395.0], [23.0, 5395.0], [23.1, 5422.0], [23.2, 5426.0], [23.3, 5426.0], [23.4, 5453.0], [23.5, 5453.0], [23.6, 5479.0], [23.7, 5511.0], [23.8, 5511.0], [23.9, 5555.0], [24.0, 5567.0], [24.1, 5567.0], [24.2, 5622.0], [24.3, 5665.0], [24.4, 5665.0], [24.5, 5673.0], [24.6, 5673.0], [24.7, 5689.0], [24.8, 5719.0], [24.9, 5719.0], [25.0, 5725.0], [25.1, 5777.0], [25.2, 5777.0], [25.3, 5795.0], [25.4, 5836.0], [25.5, 5836.0], [25.6, 5929.0], [25.7, 5929.0], [25.8, 5949.0], [25.9, 5951.0], [26.0, 5951.0], [26.1, 5957.0], [26.2, 5970.0], [26.3, 5970.0], [26.4, 6008.0], [26.5, 6036.0], [26.6, 6036.0], [26.7, 6184.0], [26.8, 6184.0], [26.9, 6212.0], [27.0, 6261.0], [27.1, 6261.0], [27.2, 6379.0], [27.3, 6490.0], [27.4, 6490.0], [27.5, 6634.0], [27.6, 6634.0], [27.7, 6664.0], [27.8, 6725.0], [27.9, 6725.0], [28.0, 6728.0], [28.1, 6787.0], [28.2, 6787.0], [28.3, 6817.0], [28.4, 6847.0], [28.5, 6847.0], [28.6, 6942.0], [28.7, 6942.0], [28.8, 7051.0], [28.9, 7063.0], [29.0, 7063.0], [29.1, 7102.0], [29.2, 7109.0], [29.3, 7109.0], [29.4, 7203.0], [29.5, 7207.0], [29.6, 7207.0], [29.7, 7220.0], [29.8, 7220.0], [29.9, 7369.0], [30.0, 7426.0], [30.1, 7426.0], [30.2, 7557.0], [30.3, 7726.0], [30.4, 7726.0], [30.5, 7770.0], [30.6, 7774.0], [30.7, 7774.0], [30.8, 7968.0], [30.9, 7968.0], [31.0, 8004.0], [31.1, 8038.0], [31.2, 8038.0], [31.3, 8303.0], [31.4, 8390.0], [31.5, 8390.0], [31.6, 8445.0], [31.7, 8445.0], [31.8, 8568.0], [31.9, 8609.0], [32.0, 8609.0], [32.1, 8673.0], [32.2, 8733.0], [32.3, 8733.0], [32.4, 8741.0], [32.5, 8767.0], [32.6, 8767.0], [32.7, 8837.0], [32.8, 8837.0], [32.9, 8861.0], [33.0, 8867.0], [33.1, 8867.0], [33.2, 8923.0], [33.3, 8929.0], [33.4, 8929.0], [33.5, 8931.0], [33.6, 8986.0], [33.7, 8986.0], [33.8, 9049.0], [33.9, 9049.0], [34.0, 9137.0], [34.1, 9175.0], [34.2, 9175.0], [34.3, 9280.0], [34.4, 9322.0], [34.5, 9322.0], [34.6, 9323.0], [34.7, 9323.0], [34.8, 9337.0], [34.9, 9439.0], [35.0, 9439.0], [35.1, 9553.0], [35.2, 9623.0], [35.3, 9623.0], [35.4, 9635.0], [35.5, 9640.0], [35.6, 9640.0], [35.7, 9728.0], [35.8, 9728.0], [35.9, 9767.0], [36.0, 9794.0], [36.1, 9794.0], [36.2, 9818.0], [36.3, 9844.0], [36.4, 9844.0], [36.5, 9861.0], [36.6, 9917.0], [36.7, 9917.0], [36.8, 9924.0], [36.9, 9924.0], [37.0, 9936.0], [37.1, 9966.0], [37.2, 9966.0], [37.3, 10037.0], [37.4, 10041.0], [37.5, 10041.0], [37.6, 10043.0], [37.7, 10130.0], [37.8, 10130.0], [37.9, 10189.0], [38.0, 10189.0], [38.1, 10199.0], [38.2, 10224.0], [38.3, 10224.0], [38.4, 10245.0], [38.5, 10301.0], [38.6, 10301.0], [38.7, 10304.0], [38.8, 10304.0], [38.9, 10468.0], [39.0, 10562.0], [39.1, 10562.0], [39.2, 10709.0], [39.3, 10852.0], [39.4, 10852.0], [39.5, 10907.0], [39.6, 10921.0], [39.7, 10921.0], [39.8, 10956.0], [39.9, 10956.0], [40.0, 11157.0], [40.1, 11185.0], [40.2, 11185.0], [40.3, 11194.0], [40.4, 11266.0], [40.5, 11266.0], [40.6, 11419.0], [40.7, 11420.0], [40.8, 11420.0], [40.9, 11460.0], [41.0, 11460.0], [41.1, 11525.0], [41.2, 11532.0], [41.3, 11532.0], [41.4, 11557.0], [41.5, 11648.0], [41.6, 11648.0], [41.7, 11689.0], [41.8, 11781.0], [41.9, 11781.0], [42.0, 11849.0], [42.1, 11849.0], [42.2, 11906.0], [42.3, 12125.0], [42.4, 12125.0], [42.5, 12171.0], [42.6, 12177.0], [42.7, 12177.0], [42.8, 12185.0], [42.9, 12185.0], [43.0, 12187.0], [43.1, 12205.0], [43.2, 12205.0], [43.3, 12219.0], [43.4, 12283.0], [43.5, 12283.0], [43.6, 12295.0], [43.7, 12306.0], [43.8, 12306.0], [43.9, 12315.0], [44.0, 12315.0], [44.1, 12321.0], [44.2, 12339.0], [44.3, 12339.0], [44.4, 12464.0], [44.5, 12641.0], [44.6, 12641.0], [44.7, 12673.0], [44.8, 12694.0], [44.9, 12694.0], [45.0, 12763.0], [45.1, 12763.0], [45.2, 12812.0], [45.3, 13060.0], [45.4, 13060.0], [45.5, 13106.0], [45.6, 13189.0], [45.7, 13189.0], [45.8, 13239.0], [45.9, 13330.0], [46.0, 13330.0], [46.1, 13411.0], [46.2, 13411.0], [46.3, 13416.0], [46.4, 13443.0], [46.5, 13443.0], [46.6, 13487.0], [46.7, 13603.0], [46.8, 13603.0], [46.9, 13612.0], [47.0, 13612.0], [47.1, 13640.0], [47.2, 13729.0], [47.3, 13729.0], [47.4, 13846.0], [47.5, 13851.0], [47.6, 13851.0], [47.7, 13876.0], [47.8, 13887.0], [47.9, 13887.0], [48.0, 14106.0], [48.1, 14106.0], [48.2, 14106.0], [48.3, 14108.0], [48.4, 14108.0], [48.5, 14197.0], [48.6, 14210.0], [48.7, 14210.0], [48.8, 14213.0], [48.9, 14325.0], [49.0, 14325.0], [49.1, 14387.0], [49.2, 14387.0], [49.3, 14505.0], [49.4, 14649.0], [49.5, 14649.0], [49.6, 14659.0], [49.7, 14709.0], [49.8, 14709.0], [49.9, 14740.0], [50.0, 14807.0], [50.1, 14807.0], [50.2, 14866.0], [50.3, 14866.0], [50.4, 14868.0], [50.5, 14883.0], [50.6, 14883.0], [50.7, 14932.0], [50.8, 14938.0], [50.9, 14938.0], [51.0, 14948.0], [51.1, 14948.0], [51.2, 14961.0], [51.3, 15023.0], [51.4, 15023.0], [51.5, 15049.0], [51.6, 15064.0], [51.7, 15064.0], [51.8, 15080.0], [51.9, 15082.0], [52.0, 15082.0], [52.1, 15132.0], [52.2, 15132.0], [52.3, 15150.0], [52.4, 15168.0], [52.5, 15168.0], [52.6, 15289.0], [52.7, 15325.0], [52.8, 15325.0], [52.9, 15490.0], [53.0, 15508.0], [53.1, 15508.0], [53.2, 15544.0], [53.3, 15544.0], [53.4, 15587.0], [53.5, 15598.0], [53.6, 15598.0], [53.7, 15631.0], [53.8, 15677.0], [53.9, 15677.0], [54.0, 15679.0], [54.1, 15679.0], [54.2, 15777.0], [54.3, 15789.0], [54.4, 15789.0], [54.5, 15811.0], [54.6, 15928.0], [54.7, 15928.0], [54.8, 15953.0], [54.9, 15963.0], [55.0, 15963.0], [55.1, 16009.0], [55.2, 16009.0], [55.3, 16051.0], [55.4, 16068.0], [55.5, 16068.0], [55.6, 16076.0], [55.7, 16086.0], [55.8, 16086.0], [55.9, 16092.0], [56.0, 16129.0], [56.1, 16129.0], [56.2, 16286.0], [56.3, 16286.0], [56.4, 16288.0], [56.5, 16313.0], [56.6, 16313.0], [56.7, 16366.0], [56.8, 16398.0], [56.9, 16398.0], [57.0, 16453.0], [57.1, 16538.0], [57.2, 16538.0], [57.3, 16545.0], [57.4, 16545.0], [57.5, 16569.0], [57.6, 16603.0], [57.7, 16603.0], [57.8, 16614.0], [57.9, 16629.0], [58.0, 16629.0], [58.1, 16682.0], [58.2, 16682.0], [58.3, 16710.0], [58.4, 16746.0], [58.5, 16746.0], [58.6, 16825.0], [58.7, 16934.0], [58.8, 16934.0], [58.9, 16968.0], [59.0, 17111.0], [59.1, 17111.0], [59.2, 17161.0], [59.3, 17161.0], [59.4, 17179.0], [59.5, 17216.0], [59.6, 17216.0], [59.7, 17245.0], [59.8, 17249.0], [59.9, 17249.0], [60.0, 17261.0], [60.1, 17266.0], [60.2, 17266.0], [60.3, 17280.0], [60.4, 17280.0], [60.5, 17308.0], [60.6, 17312.0], [60.7, 17312.0], [60.8, 17323.0], [60.9, 17341.0], [61.0, 17341.0], [61.1, 17390.0], [61.2, 17412.0], [61.3, 17412.0], [61.4, 17536.0], [61.5, 17536.0], [61.6, 17547.0], [61.7, 17650.0], [61.8, 17650.0], [61.9, 17804.0], [62.0, 17852.0], [62.1, 17852.0], [62.2, 17859.0], [62.3, 17859.0], [62.4, 17888.0], [62.5, 17892.0], [62.6, 17892.0], [62.7, 17927.0], [62.8, 18012.0], [62.9, 18012.0], [63.0, 18019.0], [63.1, 18145.0], [63.2, 18145.0], [63.3, 18156.0], [63.4, 18156.0], [63.5, 18276.0], [63.6, 18292.0], [63.7, 18292.0], [63.8, 18368.0], [63.9, 18441.0], [64.0, 18441.0], [64.1, 18604.0], [64.2, 18764.0], [64.3, 18764.0], [64.4, 18864.0], [64.5, 18864.0], [64.6, 18944.0], [64.7, 18946.0], [64.8, 18946.0], [64.9, 18956.0], [65.0, 18991.0], [65.1, 18991.0], [65.2, 19004.0], [65.3, 19023.0], [65.4, 19023.0], [65.5, 19066.0], [65.6, 19066.0], [65.7, 19072.0], [65.8, 19134.0], [65.9, 19134.0], [66.0, 19238.0], [66.1, 19255.0], [66.2, 19255.0], [66.3, 19305.0], [66.4, 19305.0], [66.5, 19344.0], [66.6, 19411.0], [66.7, 19411.0], [66.8, 19443.0], [66.9, 19461.0], [67.0, 19461.0], [67.1, 19491.0], [67.2, 19516.0], [67.3, 19516.0], [67.4, 19557.0], [67.5, 19557.0], [67.6, 19630.0], [67.7, 19691.0], [67.8, 19691.0], [67.9, 19841.0], [68.0, 19876.0], [68.1, 19876.0], [68.2, 19899.0], [68.3, 19918.0], [68.4, 19918.0], [68.5, 19932.0], [68.6, 19932.0], [68.7, 19949.0], [68.8, 19966.0], [68.9, 19966.0], [69.0, 20036.0], [69.1, 20049.0], [69.2, 20049.0], [69.3, 20105.0], [69.4, 20105.0], [69.5, 20147.0], [69.6, 20147.0], [69.7, 20147.0], [69.8, 20190.0], [69.9, 20210.0], [70.0, 20210.0], [70.1, 20390.0], [70.2, 20426.0], [70.3, 20426.0], [70.4, 20426.0], [70.5, 20426.0], [70.6, 20475.0], [70.7, 20559.0], [70.8, 20559.0], [70.9, 20722.0], [71.0, 20910.0], [71.1, 20910.0], [71.2, 21074.0], [71.3, 21083.0], [71.4, 21083.0], [71.5, 21225.0], [71.6, 21225.0], [71.7, 21291.0], [71.8, 21299.0], [71.9, 21299.0], [72.0, 21342.0], [72.1, 21349.0], [72.2, 21349.0], [72.3, 21382.0], [72.4, 21495.0], [72.5, 21495.0], [72.6, 21546.0], [72.7, 21546.0], [72.8, 21566.0], [72.9, 21667.0], [73.0, 21667.0], [73.1, 21722.0], [73.2, 21770.0], [73.3, 21770.0], [73.4, 21892.0], [73.5, 21892.0], [73.6, 21965.0], [73.7, 22034.0], [73.8, 22034.0], [73.9, 22091.0], [74.0, 22094.0], [74.1, 22094.0], [74.2, 22115.0], [74.3, 22123.0], [74.4, 22123.0], [74.5, 22124.0], [74.6, 22124.0], [74.7, 22201.0], [74.8, 22317.0], [74.9, 22317.0], [75.0, 22350.0], [75.1, 22357.0], [75.2, 22357.0], [75.3, 22407.0], [75.4, 22588.0], [75.5, 22588.0], [75.6, 22602.0], [75.7, 22602.0], [75.8, 22621.0], [75.9, 22666.0], [76.0, 22666.0], [76.1, 22674.0], [76.2, 22680.0], [76.3, 22680.0], [76.4, 22744.0], [76.5, 22943.0], [76.6, 22943.0], [76.7, 22950.0], [76.8, 22950.0], [76.9, 22958.0], [77.0, 22997.0], [77.1, 22997.0], [77.2, 23037.0], [77.3, 23061.0], [77.4, 23061.0], [77.5, 23089.0], [77.6, 23089.0], [77.7, 23098.0], [77.8, 23114.0], [77.9, 23114.0], [78.0, 23123.0], [78.1, 23171.0], [78.2, 23171.0], [78.3, 23172.0], [78.4, 23320.0], [78.5, 23320.0], [78.6, 23405.0], [78.7, 23405.0], [78.8, 23418.0], [78.9, 23530.0], [79.0, 23530.0], [79.1, 23595.0], [79.2, 23601.0], [79.3, 23601.0], [79.4, 23640.0], [79.5, 23678.0], [79.6, 23678.0], [79.7, 23685.0], [79.8, 23685.0], [79.9, 23761.0], [80.0, 23776.0], [80.1, 23776.0], [80.2, 23778.0], [80.3, 23893.0], [80.4, 23893.0], [80.5, 23970.0], [80.6, 24045.0], [80.7, 24045.0], [80.8, 24081.0], [80.9, 24081.0], [81.0, 24224.0], [81.1, 24239.0], [81.2, 24239.0], [81.3, 24399.0], [81.4, 24546.0], [81.5, 24546.0], [81.6, 24619.0], [81.7, 24619.0], [81.8, 24662.0], [81.9, 24790.0], [82.0, 24790.0], [82.1, 24876.0], [82.2, 24942.0], [82.3, 24942.0], [82.4, 24970.0], [82.5, 25053.0], [82.6, 25053.0], [82.7, 25156.0], [82.8, 25156.0], [82.9, 25173.0], [83.0, 25216.0], [83.1, 25216.0], [83.2, 25525.0], [83.3, 25602.0], [83.4, 25602.0], [83.5, 25630.0], [83.6, 25807.0], [83.7, 25807.0], [83.8, 25979.0], [83.9, 25979.0], [84.0, 26081.0], [84.1, 26156.0], [84.2, 26156.0], [84.3, 26313.0], [84.4, 26407.0], [84.5, 26407.0], [84.6, 26641.0], [84.7, 26641.0], [84.8, 26750.0], [84.9, 26760.0], [85.0, 26760.0], [85.1, 26783.0], [85.2, 26990.0], [85.3, 26990.0], [85.4, 27089.0], [85.5, 27136.0], [85.6, 27136.0], [85.7, 27198.0], [85.8, 27198.0], [85.9, 27258.0], [86.0, 27516.0], [86.1, 27516.0], [86.2, 27867.0], [86.3, 28023.0], [86.4, 28023.0], [86.5, 28408.0], [86.6, 28483.0], [86.7, 28483.0], [86.8, 28556.0], [86.9, 28556.0], [87.0, 29049.0], [87.1, 29212.0], [87.2, 29212.0], [87.3, 29244.0], [87.4, 29261.0], [87.5, 29261.0], [87.6, 29316.0], [87.7, 29459.0], [87.8, 29459.0], [87.9, 29469.0], [88.0, 29469.0], [88.1, 29506.0], [88.2, 29643.0], [88.3, 29643.0], [88.4, 29736.0], [88.5, 29861.0], [88.6, 29861.0], [88.7, 30001.0], [88.8, 30001.0], [88.9, 30113.0], [89.0, 30142.0], [89.1, 30142.0], [89.2, 30282.0], [89.3, 30282.0], [89.4, 30282.0], [89.5, 30307.0], [89.6, 30360.0], [89.7, 30360.0], [89.8, 30364.0], [89.9, 30364.0], [90.0, 30368.0], [90.1, 30385.0], [90.2, 30385.0], [90.3, 30391.0], [90.4, 30427.0], [90.5, 30427.0], [90.6, 30506.0], [90.7, 30523.0], [90.8, 30523.0], [90.9, 30547.0], [91.0, 30547.0], [91.1, 30583.0], [91.2, 30761.0], [91.3, 30761.0], [91.4, 30906.0], [91.5, 31062.0], [91.6, 31062.0], [91.7, 31190.0], [91.8, 31247.0], [91.9, 31247.0], [92.0, 31366.0], [92.1, 31366.0], [92.2, 31635.0], [92.3, 31729.0], [92.4, 31729.0], [92.5, 31793.0], [92.6, 31889.0], [92.7, 31889.0], [92.8, 32028.0], [92.9, 32028.0], [93.0, 32030.0], [93.1, 32135.0], [93.2, 32135.0], [93.3, 32661.0], [93.4, 33066.0], [93.5, 33066.0], [93.6, 33172.0], [93.7, 33279.0], [93.8, 33279.0], [93.9, 33609.0], [94.0, 33609.0], [94.1, 33664.0], [94.2, 33747.0], [94.3, 33747.0], [94.4, 33824.0], [94.5, 34131.0], [94.6, 34131.0], [94.7, 34401.0], [94.8, 34414.0], [94.9, 34414.0], [95.0, 34426.0], [95.1, 34426.0], [95.2, 34502.0], [95.3, 34651.0], [95.4, 34651.0], [95.5, 34757.0], [95.6, 34895.0], [95.7, 34895.0], [95.8, 35465.0], [95.9, 35491.0], [96.0, 35491.0], [96.1, 35608.0], [96.2, 35608.0], [96.3, 35904.0], [96.4, 36054.0], [96.5, 36054.0], [96.6, 36061.0], [96.7, 36160.0], [96.8, 36160.0], [96.9, 36698.0], [97.0, 36698.0], [97.1, 36915.0], [97.2, 37176.0], [97.3, 37176.0], [97.4, 37600.0], [97.5, 37858.0], [97.6, 37858.0], [97.7, 38030.0], [97.8, 38387.0], [97.9, 38387.0], [98.0, 38607.0], [98.1, 38607.0], [98.2, 38630.0], [98.3, 40057.0], [98.4, 40057.0], [98.5, 40415.0], [98.6, 41264.0], [98.7, 41264.0], [98.8, 43912.0], [98.9, 47171.0], [99.0, 47171.0], [99.1, 47208.0], [99.2, 47208.0], [99.3, 48439.0], [99.4, 48792.0], [99.5, 48792.0], [99.6, 51332.0], [99.7, 51423.0], [99.8, 51423.0], [99.9, 52972.0], [100.0, 52972.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 111.0], [0.1, 111.0], [0.2, 112.0], [0.3, 112.0], [0.4, 112.0], [0.5, 112.0], [0.6, 112.0], [0.7, 113.0], [0.8, 113.0], [0.9, 113.0], [1.0, 113.0], [1.1, 113.0], [1.2, 113.0], [1.3, 113.0], [1.4, 113.0], [1.5, 113.0], [1.6, 113.0], [1.7, 113.0], [1.8, 114.0], [1.9, 114.0], [2.0, 114.0], [2.1, 114.0], [2.2, 114.0], [2.3, 114.0], [2.4, 114.0], [2.5, 114.0], [2.6, 114.0], [2.7, 114.0], [2.8, 114.0], [2.9, 114.0], [3.0, 114.0], [3.1, 114.0], [3.2, 114.0], [3.3, 114.0], [3.4, 115.0], [3.5, 115.0], [3.6, 115.0], [3.7, 115.0], [3.8, 115.0], [3.9, 115.0], [4.0, 115.0], [4.1, 115.0], [4.2, 115.0], [4.3, 115.0], [4.4, 115.0], [4.5, 115.0], [4.6, 115.0], [4.7, 116.0], [4.8, 116.0], [4.9, 116.0], [5.0, 116.0], [5.1, 116.0], [5.2, 116.0], [5.3, 116.0], [5.4, 116.0], [5.5, 116.0], [5.6, 116.0], [5.7, 116.0], [5.8, 116.0], [5.9, 116.0], [6.0, 116.0], [6.1, 116.0], [6.2, 116.0], [6.3, 116.0], [6.4, 117.0], [6.5, 117.0], [6.6, 117.0], [6.7, 117.0], [6.8, 117.0], [6.9, 117.0], [7.0, 117.0], [7.1, 117.0], [7.2, 117.0], [7.3, 117.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 117.0], [7.8, 117.0], [7.9, 117.0], [8.0, 118.0], [8.1, 118.0], [8.2, 118.0], [8.3, 118.0], [8.4, 118.0], [8.5, 118.0], [8.6, 118.0], [8.7, 118.0], [8.8, 119.0], [8.9, 119.0], [9.0, 119.0], [9.1, 119.0], [9.2, 119.0], [9.3, 119.0], [9.4, 119.0], [9.5, 119.0], [9.6, 119.0], [9.7, 119.0], [9.8, 119.0], [9.9, 119.0], [10.0, 119.0], [10.1, 119.0], [10.2, 119.0], [10.3, 119.0], [10.4, 119.0], [10.5, 119.0], [10.6, 119.0], [10.7, 119.0], [10.8, 119.0], [10.9, 119.0], [11.0, 119.0], [11.1, 119.0], [11.2, 119.0], [11.3, 119.0], [11.4, 119.0], [11.5, 119.0], [11.6, 120.0], [11.7, 120.0], [11.8, 120.0], [11.9, 120.0], [12.0, 120.0], [12.1, 120.0], [12.2, 120.0], [12.3, 120.0], [12.4, 120.0], [12.5, 120.0], [12.6, 120.0], [12.7, 120.0], [12.8, 120.0], [12.9, 120.0], [13.0, 120.0], [13.1, 120.0], [13.2, 120.0], [13.3, 120.0], [13.4, 120.0], [13.5, 120.0], [13.6, 120.0], [13.7, 120.0], [13.8, 120.0], [13.9, 120.0], [14.0, 120.0], [14.1, 120.0], [14.2, 120.0], [14.3, 120.0], [14.4, 120.0], [14.5, 121.0], [14.6, 121.0], [14.7, 121.0], [14.8, 121.0], [14.9, 121.0], [15.0, 121.0], [15.1, 121.0], [15.2, 121.0], [15.3, 121.0], [15.4, 121.0], [15.5, 121.0], [15.6, 121.0], [15.7, 121.0], [15.8, 121.0], [15.9, 121.0], [16.0, 121.0], [16.1, 121.0], [16.2, 121.0], [16.3, 121.0], [16.4, 122.0], [16.5, 122.0], [16.6, 122.0], [16.7, 122.0], [16.8, 122.0], [16.9, 122.0], [17.0, 123.0], [17.1, 123.0], [17.2, 123.0], [17.3, 123.0], [17.4, 123.0], [17.5, 123.0], [17.6, 123.0], [17.7, 123.0], [17.8, 123.0], [17.9, 123.0], [18.0, 124.0], [18.1, 124.0], [18.2, 124.0], [18.3, 125.0], [18.4, 125.0], [18.5, 125.0], [18.6, 125.0], [18.7, 125.0], [18.8, 126.0], [18.9, 128.0], [19.0, 128.0], [19.1, 129.0], [19.2, 129.0], [19.3, 130.0], [19.4, 131.0], [19.5, 131.0], [19.6, 133.0], [19.7, 136.0], [19.8, 136.0], [19.9, 3699.0], [20.0, 4159.0], [20.1, 4159.0], [20.2, 4655.0], [20.3, 4655.0], [20.4, 4852.0], [20.5, 5060.0], [20.6, 5060.0], [20.7, 5062.0], [20.8, 5077.0], [20.9, 5077.0], [21.0, 5087.0], [21.1, 5087.0], [21.2, 5088.0], [21.3, 5093.0], [21.4, 5093.0], [21.5, 5104.0], [21.6, 5136.0], [21.7, 5136.0], [21.8, 5138.0], [21.9, 5138.0], [22.0, 5147.0], [22.1, 5151.0], [22.2, 5151.0], [22.3, 5159.0], [22.4, 5161.0], [22.5, 5161.0], [22.6, 5168.0], [22.7, 5169.0], [22.8, 5169.0], [22.9, 5195.0], [23.0, 5195.0], [23.1, 5241.0], [23.2, 5243.0], [23.3, 5243.0], [23.4, 5272.0], [23.5, 5339.0], [23.6, 5339.0], [23.7, 5382.0], [23.8, 5382.0], [23.9, 5413.0], [24.0, 5434.0], [24.1, 5434.0], [24.2, 5461.0], [24.3, 5483.0], [24.4, 5483.0], [24.5, 5490.0], [24.6, 5490.0], [24.7, 5551.0], [24.8, 5569.0], [24.9, 5569.0], [25.0, 5603.0], [25.1, 5677.0], [25.2, 5677.0], [25.3, 5709.0], [25.4, 5711.0], [25.5, 5711.0], [25.6, 5730.0], [25.7, 5730.0], [25.8, 5731.0], [25.9, 5778.0], [26.0, 5778.0], [26.1, 5779.0], [26.2, 5941.0], [26.3, 5941.0], [26.4, 5974.0], [26.5, 5974.0], [26.6, 6009.0], [26.7, 6139.0], [26.8, 6139.0], [26.9, 6229.0], [27.0, 6396.0], [27.1, 6396.0], [27.2, 6422.0], [27.3, 6422.0], [27.4, 6461.0], [27.5, 6488.0], [27.6, 6488.0], [27.7, 6560.0], [27.8, 6588.0], [27.9, 6588.0], [28.0, 6613.0], [28.1, 6705.0], [28.2, 6705.0], [28.3, 6809.0], [28.4, 6809.0], [28.5, 6830.0], [28.6, 6861.0], [28.7, 6861.0], [28.8, 6861.0], [28.9, 6951.0], [29.0, 6951.0], [29.1, 6956.0], [29.2, 6956.0], [29.3, 6980.0], [29.4, 7132.0], [29.5, 7132.0], [29.6, 7202.0], [29.7, 7332.0], [29.8, 7332.0], [29.9, 7495.0], [30.0, 7508.0], [30.1, 7508.0], [30.2, 7545.0], [30.3, 7545.0], [30.4, 7721.0], [30.5, 7742.0], [30.6, 7742.0], [30.7, 7779.0], [30.8, 8074.0], [30.9, 8074.0], [31.0, 8144.0], [31.1, 8144.0], [31.2, 8209.0], [31.3, 8324.0], [31.4, 8324.0], [31.5, 8370.0], [31.6, 8413.0], [31.7, 8413.0], [31.8, 8483.0], [31.9, 8483.0], [32.0, 8502.0], [32.1, 8533.0], [32.2, 8533.0], [32.3, 8607.0], [32.4, 8631.0], [32.5, 8631.0], [32.6, 8636.0], [32.7, 8650.0], [32.8, 8650.0], [32.9, 8693.0], [33.0, 8693.0], [33.1, 8696.0], [33.2, 8758.0], [33.3, 8758.0], [33.4, 8771.0], [33.5, 8888.0], [33.6, 8888.0], [33.7, 8940.0], [33.8, 8940.0], [33.9, 9054.0], [34.0, 9070.0], [34.1, 9070.0], [34.2, 9098.0], [34.3, 9099.0], [34.4, 9099.0], [34.5, 9210.0], [34.6, 9210.0], [34.7, 9288.0], [34.8, 9312.0], [34.9, 9312.0], [35.0, 9356.0], [35.1, 9395.0], [35.2, 9395.0], [35.3, 9412.0], [35.4, 9488.0], [35.5, 9488.0], [35.6, 9535.0], [35.7, 9535.0], [35.8, 9590.0], [35.9, 9613.0], [36.0, 9613.0], [36.1, 9623.0], [36.2, 9685.0], [36.3, 9685.0], [36.4, 9693.0], [36.5, 9693.0], [36.6, 9697.0], [36.7, 9699.0], [36.8, 9699.0], [36.9, 9805.0], [37.0, 9805.0], [37.1, 9805.0], [37.2, 9806.0], [37.3, 9806.0], [37.4, 9901.0], [37.5, 9938.0], [37.6, 9938.0], [37.7, 9950.0], [37.8, 9981.0], [37.9, 9981.0], [38.0, 10017.0], [38.1, 10065.0], [38.2, 10065.0], [38.3, 10070.0], [38.4, 10070.0], [38.5, 10071.0], [38.6, 10327.0], [38.7, 10327.0], [38.8, 10438.0], [38.9, 10622.0], [39.0, 10622.0], [39.1, 10678.0], [39.2, 10678.0], [39.3, 10685.0], [39.4, 10709.0], [39.5, 10709.0], [39.6, 10852.0], [39.7, 10929.0], [39.8, 10929.0], [39.9, 10967.0], [40.0, 10974.0], [40.1, 10974.0], [40.2, 11181.0], [40.3, 11181.0], [40.4, 11191.0], [40.5, 11218.0], [40.6, 11218.0], [40.7, 11291.0], [40.8, 11299.0], [40.9, 11299.0], [41.0, 11320.0], [41.1, 11320.0], [41.2, 11415.0], [41.3, 11464.0], [41.4, 11464.0], [41.5, 11544.0], [41.6, 11613.0], [41.7, 11613.0], [41.8, 11649.0], [41.9, 11649.0], [42.0, 11839.0], [42.1, 11899.0], [42.2, 11899.0], [42.3, 11938.0], [42.4, 11948.0], [42.5, 11948.0], [42.6, 11949.0], [42.7, 11961.0], [42.8, 11961.0], [42.9, 11976.0], [43.0, 11976.0], [43.1, 12057.0], [43.2, 12064.0], [43.3, 12064.0], [43.4, 12065.0], [43.5, 12087.0], [43.6, 12087.0], [43.7, 12087.0], [43.8, 12087.0], [43.9, 12096.0], [44.0, 12204.0], [44.1, 12204.0], [44.2, 12383.0], [44.3, 12446.0], [44.4, 12446.0], [44.5, 12464.0], [44.6, 12464.0], [44.7, 12514.0], [44.8, 12543.0], [44.9, 12543.0], [45.0, 12831.0], [45.1, 12870.0], [45.2, 12870.0], [45.3, 12959.0], [45.4, 13001.0], [45.5, 13001.0], [45.6, 13105.0], [45.7, 13105.0], [45.8, 13153.0], [45.9, 13166.0], [46.0, 13166.0], [46.1, 13201.0], [46.2, 13258.0], [46.3, 13258.0], [46.4, 13368.0], [46.5, 13368.0], [46.6, 13385.0], [46.7, 13404.0], [46.8, 13404.0], [46.9, 13501.0], [47.0, 13620.0], [47.1, 13620.0], [47.2, 13629.0], [47.3, 13629.0], [47.4, 13650.0], [47.5, 13652.0], [47.6, 13652.0], [47.7, 13866.0], [47.8, 13869.0], [47.9, 13869.0], [48.0, 13880.0], [48.1, 13959.0], [48.2, 13959.0], [48.3, 13972.0], [48.4, 13972.0], [48.5, 13976.0], [48.6, 14090.0], [48.7, 14090.0], [48.8, 14152.0], [48.9, 14263.0], [49.0, 14263.0], [49.1, 14407.0], [49.2, 14407.0], [49.3, 14425.0], [49.4, 14474.0], [49.5, 14474.0], [49.6, 14514.0], [49.7, 14570.0], [49.8, 14570.0], [49.9, 14625.0], [50.0, 14627.0], [50.1, 14627.0], [50.2, 14631.0], [50.3, 14631.0], [50.4, 14691.0], [50.5, 14694.0], [50.6, 14694.0], [50.7, 14712.0], [50.8, 14730.0], [50.9, 14730.0], [51.0, 14786.0], [51.1, 14786.0], [51.2, 14790.0], [51.3, 14805.0], [51.4, 14805.0], [51.5, 14828.0], [51.6, 14844.0], [51.7, 14844.0], [51.8, 14895.0], [51.9, 14895.0], [52.0, 14897.0], [52.1, 14933.0], [52.2, 14933.0], [52.3, 15048.0], [52.4, 15086.0], [52.5, 15086.0], [52.6, 15263.0], [52.7, 15270.0], [52.8, 15270.0], [52.9, 15317.0], [53.0, 15317.0], [53.1, 15358.0], [53.2, 15364.0], [53.3, 15364.0], [53.4, 15401.0], [53.5, 15434.0], [53.6, 15434.0], [53.7, 15442.0], [53.8, 15442.0], [53.9, 15542.0], [54.0, 15552.0], [54.1, 15552.0], [54.2, 15575.0], [54.3, 15678.0], [54.4, 15678.0], [54.5, 15689.0], [54.6, 15689.0], [54.7, 15731.0], [54.8, 15755.0], [54.9, 15755.0], [55.0, 15784.0], [55.1, 15802.0], [55.2, 15802.0], [55.3, 15844.0], [55.4, 15859.0], [55.5, 15859.0], [55.6, 15862.0], [55.7, 15862.0], [55.8, 15888.0], [55.9, 16044.0], [56.0, 16044.0], [56.1, 16047.0], [56.2, 16077.0], [56.3, 16077.0], [56.4, 16127.0], [56.5, 16127.0], [56.6, 16169.0], [56.7, 16204.0], [56.8, 16204.0], [56.9, 16273.0], [57.0, 16301.0], [57.1, 16301.0], [57.2, 16314.0], [57.3, 16314.0], [57.4, 16372.0], [57.5, 16379.0], [57.6, 16379.0], [57.7, 16382.0], [57.8, 16436.0], [57.9, 16436.0], [58.0, 16484.0], [58.1, 16486.0], [58.2, 16486.0], [58.3, 16585.0], [58.4, 16585.0], [58.5, 16706.0], [58.6, 16728.0], [58.7, 16728.0], [58.8, 16870.0], [58.9, 16899.0], [59.0, 16899.0], [59.1, 16909.0], [59.2, 16909.0], [59.3, 16968.0], [59.4, 16991.0], [59.5, 16991.0], [59.6, 16996.0], [59.7, 17022.0], [59.8, 17022.0], [59.9, 17036.0], [60.0, 17042.0], [60.1, 17042.0], [60.2, 17061.0], [60.3, 17061.0], [60.4, 17073.0], [60.5, 17093.0], [60.6, 17093.0], [60.7, 17102.0], [60.8, 17143.0], [60.9, 17143.0], [61.0, 17177.0], [61.1, 17177.0], [61.2, 17306.0], [61.3, 17308.0], [61.4, 17308.0], [61.5, 17420.0], [61.6, 17546.0], [61.7, 17546.0], [61.8, 17612.0], [61.9, 17612.0], [62.0, 17614.0], [62.1, 17623.0], [62.2, 17623.0], [62.3, 17648.0], [62.4, 17650.0], [62.5, 17650.0], [62.6, 17777.0], [62.7, 17784.0], [62.8, 17784.0], [62.9, 17894.0], [63.0, 17894.0], [63.1, 17907.0], [63.2, 18044.0], [63.3, 18044.0], [63.4, 18063.0], [63.5, 18137.0], [63.6, 18137.0], [63.7, 18189.0], [63.8, 18189.0], [63.9, 18373.0], [64.0, 18521.0], [64.1, 18521.0], [64.2, 18626.0], [64.3, 18702.0], [64.4, 18702.0], [64.5, 18719.0], [64.6, 18719.0], [64.7, 18725.0], [64.8, 18740.0], [64.9, 18740.0], [65.0, 18755.0], [65.1, 18790.0], [65.2, 18790.0], [65.3, 18791.0], [65.4, 18842.0], [65.5, 18842.0], [65.6, 18877.0], [65.7, 18877.0], [65.8, 18985.0], [65.9, 19011.0], [66.0, 19011.0], [66.1, 19079.0], [66.2, 19106.0], [66.3, 19106.0], [66.4, 19176.0], [66.5, 19176.0], [66.6, 19204.0], [66.7, 19218.0], [66.8, 19218.0], [66.9, 19246.0], [67.0, 19276.0], [67.1, 19276.0], [67.2, 19323.0], [67.3, 19323.0], [67.4, 19394.0], [67.5, 19467.0], [67.6, 19467.0], [67.7, 19595.0], [67.8, 19647.0], [67.9, 19647.0], [68.0, 19654.0], [68.1, 19674.0], [68.2, 19674.0], [68.3, 19681.0], [68.4, 19681.0], [68.5, 19716.0], [68.6, 19717.0], [68.7, 19717.0], [68.8, 19780.0], [68.9, 19812.0], [69.0, 19812.0], [69.1, 19865.0], [69.2, 19865.0], [69.3, 19881.0], [69.4, 19915.0], [69.5, 19915.0], [69.6, 19938.0], [69.7, 19978.0], [69.8, 19978.0], [69.9, 20166.0], [70.0, 20166.0], [70.1, 20194.0], [70.2, 20197.0], [70.3, 20197.0], [70.4, 20226.0], [70.5, 20332.0], [70.6, 20332.0], [70.7, 20494.0], [70.8, 20670.0], [70.9, 20670.0], [71.0, 20827.0], [71.1, 20827.0], [71.2, 20832.0], [71.3, 20996.0], [71.4, 20996.0], [71.5, 21049.0], [71.6, 21071.0], [71.7, 21071.0], [71.8, 21089.0], [71.9, 21089.0], [72.0, 21108.0], [72.1, 21156.0], [72.2, 21156.0], [72.3, 21263.0], [72.4, 21312.0], [72.5, 21312.0], [72.6, 21338.0], [72.7, 21392.0], [72.8, 21392.0], [72.9, 21485.0], [73.0, 21485.0], [73.1, 21528.0], [73.2, 21666.0], [73.3, 21666.0], [73.4, 21739.0], [73.5, 21805.0], [73.6, 21805.0], [73.7, 21837.0], [73.8, 21837.0], [73.9, 21840.0], [74.0, 21863.0], [74.1, 21863.0], [74.2, 21869.0], [74.3, 21882.0], [74.4, 21882.0], [74.5, 21973.0], [74.6, 21973.0], [74.7, 22074.0], [74.8, 22104.0], [74.9, 22104.0], [75.0, 22131.0], [75.1, 22157.0], [75.2, 22157.0], [75.3, 22280.0], [75.4, 22360.0], [75.5, 22360.0], [75.6, 22366.0], [75.7, 22366.0], [75.8, 22428.0], [75.9, 22443.0], [76.0, 22443.0], [76.1, 22450.0], [76.2, 22495.0], [76.3, 22495.0], [76.4, 22646.0], [76.5, 22646.0], [76.6, 22724.0], [76.7, 22725.0], [76.8, 22725.0], [76.9, 22745.0], [77.0, 22787.0], [77.1, 22787.0], [77.2, 22828.0], [77.3, 22828.0], [77.4, 22843.0], [77.5, 22862.0], [77.6, 22862.0], [77.7, 22863.0], [77.8, 22879.0], [77.9, 22879.0], [78.0, 22916.0], [78.1, 22940.0], [78.2, 22940.0], [78.3, 23096.0], [78.4, 23096.0], [78.5, 23142.0], [78.6, 23193.0], [78.7, 23193.0], [78.8, 23303.0], [78.9, 23369.0], [79.0, 23369.0], [79.1, 23371.0], [79.2, 23371.0], [79.3, 23414.0], [79.4, 23445.0], [79.5, 23445.0], [79.6, 23450.0], [79.7, 23522.0], [79.8, 23522.0], [79.9, 23527.0], [80.0, 23527.0], [80.1, 23553.0], [80.2, 23657.0], [80.3, 23657.0], [80.4, 23705.0], [80.5, 23721.0], [80.6, 23721.0], [80.7, 23841.0], [80.8, 23990.0], [80.9, 23990.0], [81.0, 23995.0], [81.1, 23995.0], [81.2, 24164.0], [81.3, 24309.0], [81.4, 24309.0], [81.5, 24384.0], [81.6, 24440.0], [81.7, 24440.0], [81.8, 24551.0], [81.9, 24551.0], [82.0, 24633.0], [82.1, 24704.0], [82.2, 24704.0], [82.3, 24740.0], [82.4, 24826.0], [82.5, 24826.0], [82.6, 24927.0], [82.7, 24939.0], [82.8, 24939.0], [82.9, 24992.0], [83.0, 24992.0], [83.1, 25292.0], [83.2, 25320.0], [83.3, 25320.0], [83.4, 25363.0], [83.5, 25572.0], [83.6, 25572.0], [83.7, 25747.0], [83.8, 25747.0], [83.9, 25856.0], [84.0, 25886.0], [84.1, 25886.0], [84.2, 26073.0], [84.3, 26182.0], [84.4, 26182.0], [84.5, 26413.0], [84.6, 26413.0], [84.7, 26518.0], [84.8, 26523.0], [84.9, 26523.0], [85.0, 26526.0], [85.1, 26752.0], [85.2, 26752.0], [85.3, 26825.0], [85.4, 26908.0], [85.5, 26908.0], [85.6, 26960.0], [85.7, 26960.0], [85.8, 26997.0], [85.9, 27275.0], [86.0, 27275.0], [86.1, 27642.0], [86.2, 27794.0], [86.3, 27794.0], [86.4, 28152.0], [86.5, 28152.0], [86.6, 28254.0], [86.7, 28322.0], [86.8, 28322.0], [86.9, 28821.0], [87.0, 28985.0], [87.1, 28985.0], [87.2, 28988.0], [87.3, 28988.0], [87.4, 29023.0], [87.5, 29072.0], [87.6, 29072.0], [87.7, 29215.0], [87.8, 29224.0], [87.9, 29224.0], [88.0, 29267.0], [88.1, 29407.0], [88.2, 29407.0], [88.3, 29510.0], [88.4, 29510.0], [88.5, 29619.0], [88.6, 29755.0], [88.7, 29755.0], [88.8, 29892.0], [88.9, 29904.0], [89.0, 29904.0], [89.1, 29940.0], [89.2, 29940.0], [89.3, 30047.0], [89.4, 30049.0], [89.5, 30049.0], [89.6, 30067.0], [89.7, 30106.0], [89.8, 30106.0], [89.9, 30123.0], [90.0, 30123.0], [90.1, 30135.0], [90.2, 30147.0], [90.3, 30147.0], [90.4, 30152.0], [90.5, 30240.0], [90.6, 30240.0], [90.7, 30254.0], [90.8, 30282.0], [90.9, 30282.0], [91.0, 30292.0], [91.1, 30292.0], [91.2, 30512.0], [91.3, 30632.0], [91.4, 30632.0], [91.5, 30647.0], [91.6, 30957.0], [91.7, 30957.0], [91.8, 31021.0], [91.9, 31021.0], [92.0, 31128.0], [92.1, 31406.0], [92.2, 31406.0], [92.3, 31491.0], [92.4, 31557.0], [92.5, 31557.0], [92.6, 31632.0], [92.7, 31788.0], [92.8, 31788.0], [92.9, 31799.0], [93.0, 31799.0], [93.1, 31844.0], [93.2, 32424.0], [93.3, 32424.0], [93.4, 32830.0], [93.5, 32948.0], [93.6, 32948.0], [93.7, 33013.0], [93.8, 33013.0], [93.9, 33360.0], [94.0, 33416.0], [94.1, 33416.0], [94.2, 33510.0], [94.3, 33540.0], [94.4, 33540.0], [94.5, 33898.0], [94.6, 33898.0], [94.7, 34101.0], [94.8, 34162.0], [94.9, 34162.0], [95.0, 34204.0], [95.1, 34209.0], [95.2, 34209.0], [95.3, 34408.0], [95.4, 34528.0], [95.5, 34528.0], [95.6, 34644.0], [95.7, 34644.0], [95.8, 35225.0], [95.9, 35250.0], [96.0, 35250.0], [96.1, 35375.0], [96.2, 35618.0], [96.3, 35618.0], [96.4, 35672.0], [96.5, 35672.0], [96.6, 35806.0], [96.7, 35921.0], [96.8, 35921.0], [96.9, 36466.0], [97.0, 36669.0], [97.1, 36669.0], [97.2, 36923.0], [97.3, 36923.0], [97.4, 37377.0], [97.5, 37632.0], [97.6, 37632.0], [97.7, 37759.0], [97.8, 38152.0], [97.9, 38152.0], [98.0, 38275.0], [98.1, 38374.0], [98.2, 38374.0], [98.3, 39800.0], [98.4, 39800.0], [98.5, 40173.0], [98.6, 41020.0], [98.7, 41020.0], [98.8, 43675.0], [98.9, 46942.0], [99.0, 46942.0], [99.1, 46961.0], [99.2, 46961.0], [99.3, 48094.0], [99.4, 48517.0], [99.5, 48517.0], [99.6, 51096.0], [99.7, 51195.0], [99.8, 51195.0], [99.9, 52728.0], [100.0, 52728.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 220.0], [0.1, 220.0], [0.2, 221.0], [0.3, 221.0], [0.4, 221.0], [0.5, 221.0], [0.6, 221.0], [0.7, 222.0], [0.8, 222.0], [0.9, 222.0], [1.0, 222.0], [1.1, 222.0], [1.2, 222.0], [1.3, 222.0], [1.4, 222.0], [1.5, 222.0], [1.6, 222.0], [1.7, 222.0], [1.8, 223.0], [1.9, 223.0], [2.0, 223.0], [2.1, 223.0], [2.2, 223.0], [2.3, 223.0], [2.4, 223.0], [2.5, 223.0], [2.6, 223.0], [2.7, 224.0], [2.8, 224.0], [2.9, 224.0], [3.0, 224.0], [3.1, 224.0], [3.2, 224.0], [3.3, 224.0], [3.4, 224.0], [3.5, 224.0], [3.6, 224.0], [3.7, 224.0], [3.8, 224.0], [3.9, 224.0], [4.0, 224.0], [4.1, 224.0], [4.2, 224.0], [4.3, 224.0], [4.4, 224.0], [4.5, 224.0], [4.6, 224.0], [4.7, 224.0], [4.8, 224.0], [4.9, 224.0], [5.0, 224.0], [5.1, 224.0], [5.2, 224.0], [5.3, 224.0], [5.4, 224.0], [5.5, 224.0], [5.6, 224.0], [5.7, 224.0], [5.8, 224.0], [5.9, 224.0], [6.0, 224.0], [6.1, 224.0], [6.2, 225.0], [6.3, 225.0], [6.4, 225.0], [6.5, 225.0], [6.6, 225.0], [6.7, 225.0], [6.8, 225.0], [6.9, 225.0], [7.0, 225.0], [7.1, 225.0], [7.2, 225.0], [7.3, 225.0], [7.4, 225.0], [7.5, 225.0], [7.6, 225.0], [7.7, 225.0], [7.8, 225.0], [7.9, 225.0], [8.0, 225.0], [8.1, 225.0], [8.2, 225.0], [8.3, 225.0], [8.4, 225.0], [8.5, 225.0], [8.6, 225.0], [8.7, 225.0], [8.8, 225.0], [8.9, 226.0], [9.0, 226.0], [9.1, 226.0], [9.2, 226.0], [9.3, 226.0], [9.4, 226.0], [9.5, 226.0], [9.6, 226.0], [9.7, 226.0], [9.8, 226.0], [9.9, 226.0], [10.0, 226.0], [10.1, 226.0], [10.2, 226.0], [10.3, 226.0], [10.4, 226.0], [10.5, 226.0], [10.6, 226.0], [10.7, 226.0], [10.8, 226.0], [10.9, 226.0], [11.0, 226.0], [11.1, 226.0], [11.2, 226.0], [11.3, 226.0], [11.4, 226.0], [11.5, 226.0], [11.6, 226.0], [11.7, 226.0], [11.8, 226.0], [11.9, 226.0], [12.0, 226.0], [12.1, 226.0], [12.2, 226.0], [12.3, 226.0], [12.4, 227.0], [12.5, 227.0], [12.6, 227.0], [12.7, 227.0], [12.8, 227.0], [12.9, 227.0], [13.0, 227.0], [13.1, 227.0], [13.2, 227.0], [13.3, 227.0], [13.4, 227.0], [13.5, 227.0], [13.6, 227.0], [13.7, 227.0], [13.8, 227.0], [13.9, 227.0], [14.0, 227.0], [14.1, 227.0], [14.2, 227.0], [14.3, 227.0], [14.4, 227.0], [14.5, 227.0], [14.6, 227.0], [14.7, 227.0], [14.8, 227.0], [14.9, 227.0], [15.0, 227.0], [15.1, 227.0], [15.2, 228.0], [15.3, 228.0], [15.4, 228.0], [15.5, 228.0], [15.6, 228.0], [15.7, 228.0], [15.8, 228.0], [15.9, 228.0], [16.0, 228.0], [16.1, 228.0], [16.2, 228.0], [16.3, 228.0], [16.4, 228.0], [16.5, 228.0], [16.6, 228.0], [16.7, 228.0], [16.8, 228.0], [16.9, 228.0], [17.0, 228.0], [17.1, 228.0], [17.2, 228.0], [17.3, 228.0], [17.4, 228.0], [17.5, 228.0], [17.6, 228.0], [17.7, 228.0], [17.8, 228.0], [17.9, 228.0], [18.0, 228.0], [18.1, 228.0], [18.2, 228.0], [18.3, 228.0], [18.4, 228.0], [18.5, 228.0], [18.6, 228.0], [18.7, 228.0], [18.8, 228.0], [18.9, 228.0], [19.0, 229.0], [19.1, 229.0], [19.2, 229.0], [19.3, 229.0], [19.4, 229.0], [19.5, 229.0], [19.6, 229.0], [19.7, 229.0], [19.8, 229.0], [19.9, 229.0], [20.0, 229.0], [20.1, 229.0], [20.2, 229.0], [20.3, 229.0], [20.4, 229.0], [20.5, 229.0], [20.6, 229.0], [20.7, 229.0], [20.8, 229.0], [20.9, 229.0], [21.0, 229.0], [21.1, 229.0], [21.2, 229.0], [21.3, 229.0], [21.4, 229.0], [21.5, 229.0], [21.6, 229.0], [21.7, 229.0], [21.8, 229.0], [21.9, 229.0], [22.0, 229.0], [22.1, 229.0], [22.2, 229.0], [22.3, 229.0], [22.4, 229.0], [22.5, 229.0], [22.6, 229.0], [22.7, 229.0], [22.8, 229.0], [22.9, 229.0], [23.0, 229.0], [23.1, 229.0], [23.2, 230.0], [23.3, 230.0], [23.4, 230.0], [23.5, 230.0], [23.6, 230.0], [23.7, 230.0], [23.8, 230.0], [23.9, 230.0], [24.0, 230.0], [24.1, 230.0], [24.2, 230.0], [24.3, 230.0], [24.4, 230.0], [24.5, 230.0], [24.6, 230.0], [24.7, 230.0], [24.8, 230.0], [24.9, 230.0], [25.0, 230.0], [25.1, 230.0], [25.2, 230.0], [25.3, 231.0], [25.4, 231.0], [25.5, 231.0], [25.6, 231.0], [25.7, 231.0], [25.8, 231.0], [25.9, 231.0], [26.0, 231.0], [26.1, 231.0], [26.2, 231.0], [26.3, 231.0], [26.4, 231.0], [26.5, 231.0], [26.6, 231.0], [26.7, 231.0], [26.8, 231.0], [26.9, 231.0], [27.0, 231.0], [27.1, 231.0], [27.2, 231.0], [27.3, 231.0], [27.4, 231.0], [27.5, 232.0], [27.6, 232.0], [27.7, 232.0], [27.8, 232.0], [27.9, 232.0], [28.0, 232.0], [28.1, 232.0], [28.2, 232.0], [28.3, 232.0], [28.4, 232.0], [28.5, 232.0], [28.6, 232.0], [28.7, 232.0], [28.8, 232.0], [28.9, 232.0], [29.0, 232.0], [29.1, 232.0], [29.2, 232.0], [29.3, 232.0], [29.4, 232.0], [29.5, 232.0], [29.6, 232.0], [29.7, 232.0], [29.8, 232.0], [29.9, 232.0], [30.0, 232.0], [30.1, 232.0], [30.2, 232.0], [30.3, 233.0], [30.4, 233.0], [30.5, 233.0], [30.6, 233.0], [30.7, 233.0], [30.8, 233.0], [30.9, 233.0], [31.0, 233.0], [31.1, 233.0], [31.2, 233.0], [31.3, 233.0], [31.4, 233.0], [31.5, 233.0], [31.6, 233.0], [31.7, 233.0], [31.8, 233.0], [31.9, 233.0], [32.0, 233.0], [32.1, 233.0], [32.2, 233.0], [32.3, 233.0], [32.4, 233.0], [32.5, 233.0], [32.6, 233.0], [32.7, 233.0], [32.8, 233.0], [32.9, 233.0], [33.0, 233.0], [33.1, 233.0], [33.2, 233.0], [33.3, 233.0], [33.4, 233.0], [33.5, 234.0], [33.6, 234.0], [33.7, 234.0], [33.8, 234.0], [33.9, 234.0], [34.0, 234.0], [34.1, 234.0], [34.2, 234.0], [34.3, 234.0], [34.4, 234.0], [34.5, 234.0], [34.6, 234.0], [34.7, 234.0], [34.8, 234.0], [34.9, 234.0], [35.0, 234.0], [35.1, 234.0], [35.2, 234.0], [35.3, 234.0], [35.4, 234.0], [35.5, 234.0], [35.6, 234.0], [35.7, 234.0], [35.8, 234.0], [35.9, 235.0], [36.0, 235.0], [36.1, 235.0], [36.2, 235.0], [36.3, 235.0], [36.4, 235.0], [36.5, 235.0], [36.6, 235.0], [36.7, 235.0], [36.8, 235.0], [36.9, 235.0], [37.0, 235.0], [37.1, 235.0], [37.2, 235.0], [37.3, 235.0], [37.4, 235.0], [37.5, 235.0], [37.6, 235.0], [37.7, 235.0], [37.8, 235.0], [37.9, 235.0], [38.0, 235.0], [38.1, 235.0], [38.2, 235.0], [38.3, 235.0], [38.4, 235.0], [38.5, 235.0], [38.6, 235.0], [38.7, 235.0], [38.8, 235.0], [38.9, 235.0], [39.0, 235.0], [39.1, 235.0], [39.2, 235.0], [39.3, 235.0], [39.4, 235.0], [39.5, 235.0], [39.6, 235.0], [39.7, 235.0], [39.8, 235.0], [39.9, 235.0], [40.0, 235.0], [40.1, 235.0], [40.2, 235.0], [40.3, 235.0], [40.4, 235.0], [40.5, 235.0], [40.6, 235.0], [40.7, 236.0], [40.8, 236.0], [40.9, 236.0], [41.0, 236.0], [41.1, 236.0], [41.2, 236.0], [41.3, 236.0], [41.4, 236.0], [41.5, 236.0], [41.6, 236.0], [41.7, 236.0], [41.8, 236.0], [41.9, 236.0], [42.0, 236.0], [42.1, 236.0], [42.2, 236.0], [42.3, 236.0], [42.4, 236.0], [42.5, 236.0], [42.6, 236.0], [42.7, 236.0], [42.8, 236.0], [42.9, 236.0], [43.0, 236.0], [43.1, 236.0], [43.2, 236.0], [43.3, 236.0], [43.4, 236.0], [43.5, 236.0], [43.6, 236.0], [43.7, 236.0], [43.8, 236.0], [43.9, 236.0], [44.0, 236.0], [44.1, 236.0], [44.2, 236.0], [44.3, 236.0], [44.4, 236.0], [44.5, 236.0], [44.6, 236.0], [44.7, 236.0], [44.8, 236.0], [44.9, 236.0], [45.0, 236.0], [45.1, 236.0], [45.2, 237.0], [45.3, 237.0], [45.4, 237.0], [45.5, 237.0], [45.6, 237.0], [45.7, 237.0], [45.8, 237.0], [45.9, 237.0], [46.0, 237.0], [46.1, 237.0], [46.2, 237.0], [46.3, 237.0], [46.4, 237.0], [46.5, 237.0], [46.6, 237.0], [46.7, 237.0], [46.8, 237.0], [46.9, 237.0], [47.0, 237.0], [47.1, 237.0], [47.2, 237.0], [47.3, 237.0], [47.4, 237.0], [47.5, 237.0], [47.6, 237.0], [47.7, 237.0], [47.8, 237.0], [47.9, 237.0], [48.0, 237.0], [48.1, 237.0], [48.2, 237.0], [48.3, 237.0], [48.4, 237.0], [48.5, 237.0], [48.6, 237.0], [48.7, 237.0], [48.8, 237.0], [48.9, 237.0], [49.0, 237.0], [49.1, 237.0], [49.2, 237.0], [49.3, 237.0], [49.4, 237.0], [49.5, 237.0], [49.6, 237.0], [49.7, 237.0], [49.8, 237.0], [49.9, 238.0], [50.0, 238.0], [50.1, 238.0], [50.2, 238.0], [50.3, 238.0], [50.4, 238.0], [50.5, 238.0], [50.6, 238.0], [50.7, 238.0], [50.8, 238.0], [50.9, 238.0], [51.0, 238.0], [51.1, 238.0], [51.2, 238.0], [51.3, 238.0], [51.4, 238.0], [51.5, 238.0], [51.6, 238.0], [51.7, 238.0], [51.8, 238.0], [51.9, 238.0], [52.0, 238.0], [52.1, 238.0], [52.2, 238.0], [52.3, 238.0], [52.4, 238.0], [52.5, 238.0], [52.6, 238.0], [52.7, 238.0], [52.8, 238.0], [52.9, 238.0], [53.0, 238.0], [53.1, 238.0], [53.2, 238.0], [53.3, 238.0], [53.4, 238.0], [53.5, 238.0], [53.6, 238.0], [53.7, 238.0], [53.8, 238.0], [53.9, 238.0], [54.0, 238.0], [54.1, 238.0], [54.2, 238.0], [54.3, 238.0], [54.4, 238.0], [54.5, 238.0], [54.6, 238.0], [54.7, 238.0], [54.8, 238.0], [54.9, 238.0], [55.0, 238.0], [55.1, 238.0], [55.2, 238.0], [55.3, 238.0], [55.4, 238.0], [55.5, 238.0], [55.6, 239.0], [55.7, 239.0], [55.8, 239.0], [55.9, 239.0], [56.0, 239.0], [56.1, 239.0], [56.2, 239.0], [56.3, 239.0], [56.4, 239.0], [56.5, 239.0], [56.6, 239.0], [56.7, 239.0], [56.8, 239.0], [56.9, 239.0], [57.0, 239.0], [57.1, 239.0], [57.2, 239.0], [57.3, 239.0], [57.4, 239.0], [57.5, 239.0], [57.6, 239.0], [57.7, 239.0], [57.8, 239.0], [57.9, 239.0], [58.0, 239.0], [58.1, 239.0], [58.2, 239.0], [58.3, 239.0], [58.4, 239.0], [58.5, 239.0], [58.6, 239.0], [58.7, 239.0], [58.8, 239.0], [58.9, 239.0], [59.0, 239.0], [59.1, 239.0], [59.2, 239.0], [59.3, 239.0], [59.4, 239.0], [59.5, 240.0], [59.6, 240.0], [59.7, 240.0], [59.8, 240.0], [59.9, 240.0], [60.0, 240.0], [60.1, 240.0], [60.2, 240.0], [60.3, 240.0], [60.4, 240.0], [60.5, 240.0], [60.6, 240.0], [60.7, 240.0], [60.8, 240.0], [60.9, 240.0], [61.0, 240.0], [61.1, 240.0], [61.2, 240.0], [61.3, 240.0], [61.4, 240.0], [61.5, 240.0], [61.6, 240.0], [61.7, 240.0], [61.8, 240.0], [61.9, 240.0], [62.0, 240.0], [62.1, 240.0], [62.2, 240.0], [62.3, 240.0], [62.4, 240.0], [62.5, 240.0], [62.6, 240.0], [62.7, 240.0], [62.8, 241.0], [62.9, 241.0], [63.0, 241.0], [63.1, 241.0], [63.2, 241.0], [63.3, 241.0], [63.4, 241.0], [63.5, 241.0], [63.6, 241.0], [63.7, 241.0], [63.8, 241.0], [63.9, 241.0], [64.0, 241.0], [64.1, 241.0], [64.2, 241.0], [64.3, 241.0], [64.4, 241.0], [64.5, 241.0], [64.6, 241.0], [64.7, 242.0], [64.8, 242.0], [64.9, 242.0], [65.0, 242.0], [65.1, 242.0], [65.2, 242.0], [65.3, 242.0], [65.4, 242.0], [65.5, 242.0], [65.6, 242.0], [65.7, 242.0], [65.8, 242.0], [65.9, 242.0], [66.0, 242.0], [66.1, 242.0], [66.2, 242.0], [66.3, 242.0], [66.4, 242.0], [66.5, 242.0], [66.6, 242.0], [66.7, 242.0], [66.8, 242.0], [66.9, 242.0], [67.0, 242.0], [67.1, 242.0], [67.2, 242.0], [67.3, 242.0], [67.4, 242.0], [67.5, 242.0], [67.6, 242.0], [67.7, 243.0], [67.8, 243.0], [67.9, 243.0], [68.0, 243.0], [68.1, 243.0], [68.2, 243.0], [68.3, 243.0], [68.4, 243.0], [68.5, 243.0], [68.6, 243.0], [68.7, 243.0], [68.8, 243.0], [68.9, 243.0], [69.0, 243.0], [69.1, 243.0], [69.2, 243.0], [69.3, 243.0], [69.4, 243.0], [69.5, 243.0], [69.6, 244.0], [69.7, 244.0], [69.8, 244.0], [69.9, 244.0], [70.0, 244.0], [70.1, 244.0], [70.2, 244.0], [70.3, 244.0], [70.4, 244.0], [70.5, 244.0], [70.6, 244.0], [70.7, 244.0], [70.8, 244.0], [70.9, 244.0], [71.0, 244.0], [71.1, 244.0], [71.2, 244.0], [71.3, 244.0], [71.4, 244.0], [71.5, 245.0], [71.6, 245.0], [71.7, 245.0], [71.8, 245.0], [71.9, 245.0], [72.0, 246.0], [72.1, 246.0], [72.2, 246.0], [72.3, 246.0], [72.4, 246.0], [72.5, 246.0], [72.6, 246.0], [72.7, 246.0], [72.8, 246.0], [72.9, 247.0], [73.0, 247.0], [73.1, 247.0], [73.2, 247.0], [73.3, 247.0], [73.4, 247.0], [73.5, 247.0], [73.6, 247.0], [73.7, 247.0], [73.8, 247.0], [73.9, 248.0], [74.0, 248.0], [74.1, 248.0], [74.2, 248.0], [74.3, 248.0], [74.4, 248.0], [74.5, 249.0], [74.6, 249.0], [74.7, 249.0], [74.8, 249.0], [74.9, 249.0], [75.0, 249.0], [75.1, 249.0], [75.2, 249.0], [75.3, 249.0], [75.4, 249.0], [75.5, 249.0], [75.6, 249.0], [75.7, 249.0], [75.8, 249.0], [75.9, 249.0], [76.0, 249.0], [76.1, 249.0], [76.2, 250.0], [76.3, 250.0], [76.4, 250.0], [76.5, 250.0], [76.6, 250.0], [76.7, 250.0], [76.8, 250.0], [76.9, 250.0], [77.0, 250.0], [77.1, 250.0], [77.2, 250.0], [77.3, 250.0], [77.4, 250.0], [77.5, 250.0], [77.6, 250.0], [77.7, 251.0], [77.8, 251.0], [77.9, 251.0], [78.0, 251.0], [78.1, 251.0], [78.2, 251.0], [78.3, 251.0], [78.4, 251.0], [78.5, 251.0], [78.6, 252.0], [78.7, 252.0], [78.8, 252.0], [78.9, 252.0], [79.0, 252.0], [79.1, 252.0], [79.2, 252.0], [79.3, 252.0], [79.4, 252.0], [79.5, 252.0], [79.6, 252.0], [79.7, 253.0], [79.8, 253.0], [79.9, 253.0], [80.0, 253.0], [80.1, 253.0], [80.2, 253.0], [80.3, 253.0], [80.4, 253.0], [80.5, 253.0], [80.6, 253.0], [80.7, 253.0], [80.8, 254.0], [80.9, 254.0], [81.0, 254.0], [81.1, 254.0], [81.2, 254.0], [81.3, 255.0], [81.4, 255.0], [81.5, 255.0], [81.6, 255.0], [81.7, 255.0], [81.8, 256.0], [81.9, 256.0], [82.0, 256.0], [82.1, 256.0], [82.2, 256.0], [82.3, 256.0], [82.4, 256.0], [82.5, 256.0], [82.6, 256.0], [82.7, 256.0], [82.8, 256.0], [82.9, 256.0], [83.0, 256.0], [83.1, 256.0], [83.2, 256.0], [83.3, 256.0], [83.4, 256.0], [83.5, 256.0], [83.6, 257.0], [83.7, 257.0], [83.8, 257.0], [83.9, 257.0], [84.0, 257.0], [84.1, 257.0], [84.2, 257.0], [84.3, 257.0], [84.4, 258.0], [84.5, 258.0], [84.6, 258.0], [84.7, 258.0], [84.8, 258.0], [84.9, 258.0], [85.0, 258.0], [85.1, 258.0], [85.2, 259.0], [85.3, 259.0], [85.4, 259.0], [85.5, 259.0], [85.6, 259.0], [85.7, 259.0], [85.8, 259.0], [85.9, 259.0], [86.0, 259.0], [86.1, 259.0], [86.2, 259.0], [86.3, 260.0], [86.4, 260.0], [86.5, 260.0], [86.6, 260.0], [86.7, 260.0], [86.8, 260.0], [86.9, 260.0], [87.0, 260.0], [87.1, 261.0], [87.2, 261.0], [87.3, 261.0], [87.4, 261.0], [87.5, 261.0], [87.6, 261.0], [87.7, 261.0], [87.8, 261.0], [87.9, 262.0], [88.0, 262.0], [88.1, 262.0], [88.2, 262.0], [88.3, 262.0], [88.4, 262.0], [88.5, 263.0], [88.6, 263.0], [88.7, 264.0], [88.8, 264.0], [88.9, 264.0], [89.0, 264.0], [89.1, 264.0], [89.2, 264.0], [89.3, 264.0], [89.4, 264.0], [89.5, 265.0], [89.6, 266.0], [89.7, 266.0], [89.8, 266.0], [89.9, 266.0], [90.0, 267.0], [90.1, 267.0], [90.2, 267.0], [90.3, 268.0], [90.4, 269.0], [90.5, 269.0], [90.6, 269.0], [90.7, 269.0], [90.8, 269.0], [90.9, 270.0], [91.0, 270.0], [91.1, 271.0], [91.2, 271.0], [91.3, 271.0], [91.4, 271.0], [91.5, 272.0], [91.6, 272.0], [91.7, 273.0], [91.8, 274.0], [91.9, 274.0], [92.0, 275.0], [92.1, 275.0], [92.2, 275.0], [92.3, 275.0], [92.4, 275.0], [92.5, 275.0], [92.6, 275.0], [92.7, 275.0], [92.8, 278.0], [92.9, 278.0], [93.0, 279.0], [93.1, 280.0], [93.2, 280.0], [93.3, 280.0], [93.4, 280.0], [93.5, 280.0], [93.6, 284.0], [93.7, 284.0], [93.8, 284.0], [93.9, 285.0], [94.0, 285.0], [94.1, 286.0], [94.2, 286.0], [94.3, 286.0], [94.4, 286.0], [94.5, 286.0], [94.6, 286.0], [94.7, 287.0], [94.8, 288.0], [94.9, 288.0], [95.0, 291.0], [95.1, 291.0], [95.2, 291.0], [95.3, 292.0], [95.4, 292.0], [95.5, 292.0], [95.6, 293.0], [95.7, 293.0], [95.8, 293.0], [95.9, 294.0], [96.0, 294.0], [96.1, 294.0], [96.2, 294.0], [96.3, 296.0], [96.4, 297.0], [96.5, 297.0], [96.6, 297.0], [96.7, 305.0], [96.8, 305.0], [96.9, 307.0], [97.0, 307.0], [97.1, 310.0], [97.2, 313.0], [97.3, 313.0], [97.4, 314.0], [97.5, 315.0], [97.6, 315.0], [97.7, 316.0], [97.8, 324.0], [97.9, 324.0], [98.0, 327.0], [98.1, 327.0], [98.2, 332.0], [98.3, 341.0], [98.4, 341.0], [98.5, 343.0], [98.6, 343.0], [98.7, 343.0], [98.8, 345.0], [98.9, 364.0], [99.0, 364.0], [99.1, 368.0], [99.2, 368.0], [99.3, 403.0], [99.4, 420.0], [99.5, 420.0], [99.6, 430.0], [99.7, 443.0], [99.8, 443.0], [99.9, 479.0], [100.0, 479.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 613.0, "series": [{"data": [[33700.0, 1.0], [34100.0, 1.0], [34500.0, 1.0], [36100.0, 1.0], [36900.0, 1.0], [200.0, 4.0], [52900.0, 1.0], [51300.0, 1.0], [300.0, 114.0], [400.0, 11.0], [3900.0, 1.0], [4300.0, 1.0], [4800.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5300.0, 12.0], [5500.0, 3.0], [5400.0, 4.0], [5600.0, 4.0], [5700.0, 4.0], [5800.0, 1.0], [6000.0, 2.0], [5900.0, 5.0], [6100.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [6600.0, 2.0], [6400.0, 1.0], [6800.0, 2.0], [6700.0, 3.0], [6900.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7200.0, 3.0], [7400.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [7700.0, 3.0], [8000.0, 2.0], [8300.0, 2.0], [8600.0, 2.0], [8500.0, 1.0], [8700.0, 3.0], [8400.0, 1.0], [8900.0, 4.0], [9100.0, 2.0], [8800.0, 3.0], [9000.0, 1.0], [9200.0, 1.0], [9700.0, 3.0], [9600.0, 3.0], [9500.0, 1.0], [9300.0, 3.0], [9400.0, 1.0], [9800.0, 3.0], [9900.0, 4.0], [10000.0, 3.0], [10100.0, 3.0], [10200.0, 2.0], [10500.0, 1.0], [10300.0, 2.0], [10400.0, 1.0], [10700.0, 1.0], [10900.0, 3.0], [11100.0, 3.0], [10800.0, 1.0], [11200.0, 1.0], [11500.0, 3.0], [11700.0, 1.0], [11400.0, 3.0], [11600.0, 2.0], [11900.0, 1.0], [11800.0, 1.0], [12200.0, 4.0], [12100.0, 5.0], [12600.0, 3.0], [12700.0, 1.0], [12300.0, 4.0], [12400.0, 1.0], [13300.0, 1.0], [13100.0, 2.0], [13000.0, 1.0], [13200.0, 1.0], [12800.0, 1.0], [13400.0, 4.0], [13600.0, 3.0], [13800.0, 4.0], [13700.0, 1.0], [14200.0, 2.0], [14300.0, 2.0], [14100.0, 4.0], [14600.0, 2.0], [14800.0, 4.0], [14700.0, 2.0], [14500.0, 1.0], [15000.0, 5.0], [15100.0, 3.0], [14900.0, 4.0], [15300.0, 1.0], [15200.0, 1.0], [15500.0, 4.0], [15700.0, 2.0], [15600.0, 3.0], [15800.0, 1.0], [15400.0, 1.0], [16200.0, 2.0], [16000.0, 6.0], [16300.0, 3.0], [15900.0, 3.0], [16100.0, 1.0], [17200.0, 6.0], [16600.0, 4.0], [17400.0, 1.0], [16400.0, 1.0], [16800.0, 1.0], [17800.0, 5.0], [18000.0, 2.0], [17600.0, 1.0], [18400.0, 1.0], [18200.0, 2.0], [19000.0, 4.0], [19400.0, 4.0], [19200.0, 2.0], [18800.0, 1.0], [18600.0, 1.0], [19800.0, 3.0], [20400.0, 3.0], [20200.0, 1.0], [19600.0, 2.0], [20000.0, 2.0], [21000.0, 2.0], [21200.0, 3.0], [21400.0, 1.0], [21800.0, 1.0], [22000.0, 3.0], [22200.0, 1.0], [21600.0, 1.0], [22400.0, 1.0], [23000.0, 4.0], [22600.0, 5.0], [23400.0, 2.0], [24000.0, 2.0], [23600.0, 4.0], [24200.0, 2.0], [23800.0, 1.0], [24800.0, 1.0], [24600.0, 2.0], [25200.0, 1.0], [25000.0, 1.0], [26000.0, 1.0], [25800.0, 1.0], [26600.0, 1.0], [26400.0, 1.0], [25600.0, 2.0], [27200.0, 1.0], [27000.0, 1.0], [28000.0, 1.0], [27800.0, 1.0], [28400.0, 2.0], [29600.0, 1.0], [29200.0, 3.0], [29000.0, 1.0], [29400.0, 2.0], [30200.0, 2.0], [30000.0, 1.0], [30400.0, 1.0], [29800.0, 1.0], [31600.0, 1.0], [31000.0, 1.0], [31200.0, 1.0], [32600.0, 1.0], [31800.0, 1.0], [32000.0, 2.0], [34400.0, 3.0], [33600.0, 2.0], [34800.0, 1.0], [33200.0, 1.0], [35600.0, 1.0], [36000.0, 2.0], [37600.0, 1.0], [38000.0, 1.0], [40400.0, 1.0], [40000.0, 1.0], [41200.0, 1.0], [47200.0, 1.0], [48400.0, 1.0], [33100.0, 1.0], [34700.0, 1.0], [35900.0, 1.0], [37100.0, 1.0], [38300.0, 1.0], [43900.0, 1.0], [47100.0, 1.0], [48700.0, 1.0], [16500.0, 3.0], [16700.0, 2.0], [16900.0, 2.0], [17100.0, 3.0], [17300.0, 5.0], [18100.0, 2.0], [17500.0, 2.0], [17900.0, 1.0], [18300.0, 1.0], [19300.0, 2.0], [18900.0, 4.0], [19100.0, 1.0], [18700.0, 1.0], [20300.0, 1.0], [20100.0, 4.0], [19900.0, 4.0], [19500.0, 2.0], [20500.0, 1.0], [21300.0, 3.0], [21500.0, 2.0], [20700.0, 1.0], [20900.0, 1.0], [21700.0, 2.0], [22300.0, 3.0], [22100.0, 3.0], [22500.0, 1.0], [21900.0, 1.0], [22900.0, 4.0], [23500.0, 2.0], [23100.0, 4.0], [23300.0, 1.0], [22700.0, 1.0], [23700.0, 3.0], [24300.0, 1.0], [24500.0, 1.0], [23900.0, 1.0], [24900.0, 2.0], [24700.0, 1.0], [25100.0, 2.0], [25500.0, 1.0], [25900.0, 1.0], [26100.0, 1.0], [26300.0, 1.0], [26700.0, 3.0], [26900.0, 1.0], [27500.0, 1.0], [27100.0, 2.0], [28500.0, 1.0], [29500.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [30500.0, 4.0], [30100.0, 2.0], [30300.0, 6.0], [30700.0, 1.0], [31100.0, 1.0], [31700.0, 2.0], [30900.0, 1.0], [31300.0, 1.0], [32100.0, 1.0], [33000.0, 1.0], [33800.0, 1.0], [34600.0, 1.0], [36600.0, 1.0], [35400.0, 2.0], [38600.0, 2.0], [37800.0, 1.0], [51400.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 125.0], [34100.0, 2.0], [33300.0, 1.0], [32900.0, 1.0], [34500.0, 1.0], [35300.0, 1.0], [36900.0, 1.0], [37300.0, 1.0], [38100.0, 1.0], [37700.0, 1.0], [40100.0, 1.0], [46900.0, 2.0], [48500.0, 1.0], [3600.0, 1.0], [4100.0, 1.0], [4600.0, 1.0], [4800.0, 1.0], [5000.0, 6.0], [5100.0, 10.0], [5200.0, 3.0], [5300.0, 2.0], [5400.0, 5.0], [5600.0, 2.0], [5500.0, 2.0], [5700.0, 6.0], [5900.0, 2.0], [6100.0, 1.0], [6000.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6500.0, 2.0], [6400.0, 3.0], [6600.0, 1.0], [6900.0, 3.0], [6800.0, 4.0], [6700.0, 1.0], [7100.0, 1.0], [7300.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7500.0, 2.0], [7700.0, 3.0], [8000.0, 1.0], [8100.0, 1.0], [8600.0, 6.0], [8700.0, 2.0], [8400.0, 2.0], [8300.0, 2.0], [8500.0, 2.0], [8200.0, 1.0], [9200.0, 2.0], [8800.0, 1.0], [8900.0, 1.0], [9000.0, 4.0], [9600.0, 6.0], [9400.0, 2.0], [9500.0, 2.0], [9300.0, 3.0], [9800.0, 3.0], [9900.0, 4.0], [10000.0, 4.0], [10600.0, 3.0], [10300.0, 1.0], [10700.0, 1.0], [10400.0, 1.0], [10900.0, 3.0], [11200.0, 3.0], [11100.0, 2.0], [10800.0, 1.0], [11500.0, 1.0], [11300.0, 1.0], [11600.0, 2.0], [11400.0, 2.0], [12000.0, 6.0], [11900.0, 5.0], [12200.0, 1.0], [11800.0, 2.0], [12400.0, 2.0], [12500.0, 2.0], [12300.0, 1.0], [13100.0, 3.0], [12900.0, 1.0], [13300.0, 2.0], [12800.0, 2.0], [13200.0, 2.0], [13000.0, 1.0], [13400.0, 1.0], [13600.0, 4.0], [13800.0, 3.0], [13500.0, 1.0], [13900.0, 3.0], [14100.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14400.0, 3.0], [14800.0, 5.0], [14700.0, 4.0], [14600.0, 5.0], [14500.0, 2.0], [14900.0, 1.0], [15300.0, 3.0], [15200.0, 2.0], [15000.0, 2.0], [15700.0, 3.0], [15800.0, 5.0], [15500.0, 3.0], [15600.0, 2.0], [15400.0, 3.0], [16300.0, 5.0], [16000.0, 3.0], [16200.0, 2.0], [16100.0, 2.0], [16400.0, 3.0], [16800.0, 2.0], [17000.0, 6.0], [17400.0, 1.0], [17600.0, 5.0], [18000.0, 2.0], [17800.0, 1.0], [19200.0, 4.0], [19000.0, 2.0], [19400.0, 1.0], [18800.0, 2.0], [18600.0, 1.0], [19600.0, 4.0], [20200.0, 1.0], [19800.0, 3.0], [20400.0, 1.0], [21400.0, 1.0], [20800.0, 2.0], [21000.0, 3.0], [20600.0, 1.0], [21200.0, 1.0], [22400.0, 4.0], [22200.0, 1.0], [21600.0, 1.0], [22000.0, 1.0], [21800.0, 6.0], [22800.0, 5.0], [23000.0, 1.0], [23400.0, 3.0], [22600.0, 1.0], [24400.0, 1.0], [23800.0, 1.0], [23600.0, 1.0], [24600.0, 1.0], [24800.0, 1.0], [25200.0, 1.0], [25800.0, 2.0], [26400.0, 1.0], [26000.0, 1.0], [27600.0, 1.0], [27200.0, 1.0], [26800.0, 1.0], [28200.0, 1.0], [29400.0, 1.0], [29200.0, 3.0], [28800.0, 1.0], [29000.0, 2.0], [29600.0, 1.0], [30000.0, 3.0], [30200.0, 4.0], [29800.0, 1.0], [30600.0, 2.0], [31400.0, 2.0], [31600.0, 1.0], [31000.0, 1.0], [32400.0, 1.0], [31800.0, 1.0], [32800.0, 1.0], [34400.0, 1.0], [35600.0, 2.0], [36400.0, 1.0], [35200.0, 2.0], [37600.0, 1.0], [43600.0, 1.0], [48000.0, 1.0], [33500.0, 2.0], [35900.0, 1.0], [38300.0, 1.0], [51100.0, 1.0], [52700.0, 1.0], [16900.0, 4.0], [16700.0, 2.0], [17100.0, 3.0], [16500.0, 1.0], [17300.0, 2.0], [17900.0, 1.0], [17700.0, 2.0], [18300.0, 1.0], [18100.0, 2.0], [17500.0, 1.0], [18700.0, 7.0], [19100.0, 2.0], [19300.0, 2.0], [18500.0, 1.0], [18900.0, 1.0], [20300.0, 1.0], [20100.0, 3.0], [19700.0, 3.0], [19900.0, 3.0], [19500.0, 1.0], [21300.0, 3.0], [20900.0, 1.0], [21500.0, 1.0], [21100.0, 2.0], [22300.0, 2.0], [21900.0, 1.0], [22100.0, 3.0], [21700.0, 1.0], [22700.0, 4.0], [23300.0, 3.0], [23500.0, 3.0], [23100.0, 2.0], [22900.0, 2.0], [23700.0, 2.0], [24300.0, 2.0], [24100.0, 1.0], [23900.0, 2.0], [24500.0, 1.0], [24700.0, 2.0], [25500.0, 1.0], [24900.0, 3.0], [25300.0, 2.0], [26500.0, 3.0], [26100.0, 1.0], [25700.0, 1.0], [26900.0, 3.0], [26700.0, 1.0], [28300.0, 1.0], [27700.0, 1.0], [28100.0, 1.0], [28900.0, 2.0], [29500.0, 1.0], [29700.0, 1.0], [30100.0, 5.0], [29900.0, 2.0], [30500.0, 1.0], [30900.0, 1.0], [31700.0, 2.0], [31500.0, 1.0], [31100.0, 1.0], [34200.0, 2.0], [33800.0, 1.0], [34600.0, 1.0], [33000.0, 1.0], [33400.0, 1.0], [35800.0, 1.0], [36600.0, 1.0], [38200.0, 1.0], [39800.0, 1.0], [41000.0, 1.0], [51000.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 16.0], [200.0, 613.0], [400.0, 5.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 52900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 244.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 515.0, "series": [{"data": [[0.0, 515.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 505.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 244.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.68513318E12, "maxY": 24.323383084577117, "series": [{"data": [[1.68513348E12, 10.0], [1.68513318E12, 1.5], [1.68513408E12, 4.5], [1.68513378E12, 19.374100719424465], [1.68513324E12, 4.341463414634147], [1.6851339E12, 20.582159624413148], [1.68513384E12, 20.0], [1.68513354E12, 10.661764705882351], [1.68513396E12, 24.323383084577117], [1.68513366E12, 15.0], [1.6851336E12, 14.33673469387755], [1.6851333E12, 5.0], [1.68513372E12, 15.562500000000005], [1.68513342E12, 9.297520661157028], [1.68513336E12, 5.7333333333333325], [1.68513402E12, 21.242038216560513]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68513408E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 229.0, "minX": 1.0, "maxY": 48792.0, "series": [{"data": [[2.0, 20027.0], [3.0, 9469.25], [4.0, 21581.333333333332], [5.0, 18550.593749999996], [6.0, 48792.0], [7.0, 14284.0], [8.0, 11433.800000000001], [9.0, 2022.6666666666667], [10.0, 13576.142857142862], [11.0, 10304.363636363636], [12.0, 6622.357142857143], [13.0, 4653.249999999999], [14.0, 12721.384615384615], [15.0, 11687.307692307688], [1.0, 5464.5], [16.0, 15332.500000000002], [17.0, 18555.0], [18.0, 13879.363636363636], [19.0, 22750.90909090909], [20.0, 17982.64516129031], [21.0, 14921.263157894737], [22.0, 12899.117647058823], [23.0, 10990.90909090909], [24.0, 18431.9375], [25.0, 19240.171428571433]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.160883280757105, 14881.235015772872]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 19794.0], [3.0, 9239.5], [4.0, 21351.333333333332], [5.0, 18303.781249999996], [6.0, 48517.0], [7.0, 14016.0], [8.0, 11199.6], [9.0, 1778.3333333333333], [10.0, 13336.97619047619], [11.0, 11065.699999999999], [12.0, 6376.142857142858], [13.0, 4407.5], [14.0, 12468.76923076923], [15.0, 11536.418604651164], [1.0, 5188.5], [16.0, 15091.214285714286], [17.0, 18299.545454545456], [18.0, 13639.90909090909], [19.0, 22511.454545454548], [20.0, 17735.91935483871], [21.0, 15492.388888888892], [22.0, 13446.375000000004], [23.0, 10746.818181818182], [24.0, 18157.874999999996], [25.0, 18992.171428571426]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.153968253968255, 14729.695238095219]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 229.0], [3.0, 234.0], [4.0, 230.66666666666666], [5.0, 248.12499999999994], [6.0, 253.0], [7.0, 257.75], [8.0, 232.4666666666667], [9.0, 232.33333333333334], [10.0, 241.47619047619042], [11.0, 242.08333333333334], [12.0, 238.84615384615384], [13.0, 260.58333333333337], [14.0, 231.69230769230768], [15.0, 239.58139534883722], [1.0, 275.5], [16.0, 243.0666666666667], [17.0, 249.0], [18.0, 247.54545454545456], [19.0, 241.10000000000002], [20.0, 245.46774193548393], [21.0, 263.65], [22.0, 256.38888888888886], [23.0, 254.2], [24.0, 246.9375], [25.0, 246.72857142857146]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.162460567823356, 244.46845425867485]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 219.33333333333334, "minX": 1.68513318E12, "maxY": 11309.05, "series": [{"data": [[1.68513348E12, 1355.9], [1.68513318E12, 219.33333333333334], [1.68513408E12, 296.8], [1.68513378E12, 3264.3333333333335], [1.68513324E12, 989.45], [1.6851339E12, 4497.266666666666], [1.68513384E12, 3808.116666666667], [1.68513354E12, 2996.116666666667], [1.68513396E12, 4742.033333333334], [1.68513366E12, 3695.65], [1.6851336E12, 3434.3166666666666], [1.6851333E12, 1027.3666666666666], [1.68513372E12, 3888.5], [1.68513342E12, 1599.85], [1.68513336E12, 950.0166666666667], [1.68513402E12, 3417.633333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68513348E12, 5121.616666666667], [1.68513318E12, 398.51666666666665], [1.68513408E12, 1025.8333333333333], [1.68513378E12, 6769.516666666666], [1.68513324E12, 1607.8333333333333], [1.6851339E12, 11309.05], [1.68513384E12, 8899.65], [1.68513354E12, 6788.633333333333], [1.68513396E12, 10538.283333333333], [1.68513366E12, 8694.033333333333], [1.6851336E12, 8500.4], [1.6851333E12, 1788.45], [1.68513372E12, 7769.483333333334], [1.68513342E12, 5718.683333333333], [1.68513336E12, 2415.116666666667], [1.68513402E12, 7183.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68513408E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 238.26666666666668, "minX": 1.68513318E12, "maxY": 33481.75, "series": [{"data": [[1.68513348E12, 11477.787878787882], [1.68513318E12, 5426.0], [1.68513378E12, 19898.260000000006], [1.68513324E12, 13479.642857142857], [1.6851339E12, 15047.704225352114], [1.68513384E12, 17071.36538461538], [1.68513354E12, 12816.521739130432], [1.68513396E12, 18728.33870967742], [1.68513366E12, 12496.574074074071], [1.6851336E12, 8833.2], [1.6851333E12, 18711.75], [1.68513372E12, 13805.75925925926], [1.68513342E12, 9363.921052631576], [1.68513336E12, 15127.117647058825], [1.68513402E12, 20666.03125]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68513348E12, 10069.636363636362], [1.68513318E12, 5150.5], [1.68513408E12, 33481.75], [1.68513378E12, 19485.25581395349], [1.68513324E12, 13116.75], [1.6851339E12, 15484.774647887323], [1.68513384E12, 17010.036363636358], [1.68513354E12, 13542.113636363636], [1.68513396E12, 17510.3880597015], [1.68513366E12, 11649.355932203393], [1.6851336E12, 8658.21875], [1.6851333E12, 17815.64285714286], [1.68513372E12, 13763.115384615387], [1.68513342E12, 9807.724999999999], [1.68513336E12, 15953.846153846158], [1.68513402E12, 20070.18867924528]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68513348E12, 239.5151515151515], [1.68513318E12, 252.25], [1.68513378E12, 244.95652173913044], [1.68513324E12, 238.26666666666668], [1.6851339E12, 248.91549295774655], [1.68513384E12, 249.0181818181818], [1.68513354E12, 242.0217391304348], [1.68513396E12, 247.99999999999997], [1.68513366E12, 239.0508474576271], [1.6851336E12, 242.77611940298507], [1.6851333E12, 254.28571428571428], [1.68513372E12, 241.2777777777778], [1.68513342E12, 238.53488372093028], [1.68513336E12, 247.86666666666667], [1.68513402E12, 248.64999999999998]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68513408E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 237.66666666666663, "minX": 1.68513318E12, "maxY": 33481.125, "series": [{"data": [[1.68513348E12, 11477.18181818182], [1.68513318E12, 5419.5], [1.68513378E12, 19897.800000000007], [1.68513324E12, 13478.357142857141], [1.6851339E12, 15047.253521126755], [1.68513384E12, 17070.63461538462], [1.68513354E12, 12815.913043478258], [1.68513396E12, 18727.161290322576], [1.68513366E12, 12496.037037037036], [1.6851336E12, 8832.661538461538], [1.6851333E12, 18711.166666666664], [1.68513372E12, 13805.518518518516], [1.68513342E12, 9363.499999999998], [1.68513336E12, 15126.117647058823], [1.68513402E12, 20664.625]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68513348E12, 10069.242424242424], [1.68513318E12, 5150.0], [1.68513408E12, 33481.125], [1.68513378E12, 19485.023255813954], [1.68513324E12, 13116.416666666668], [1.6851339E12, 15484.577464788734], [1.68513384E12, 17009.636363636353], [1.68513354E12, 13541.863636363636], [1.68513396E12, 17510.208955223883], [1.68513366E12, 11649.220338983054], [1.6851336E12, 8657.953125], [1.6851333E12, 17815.14285714286], [1.68513372E12, 13762.961538461537], [1.68513342E12, 9807.525000000001], [1.68513336E12, 15953.69230769231], [1.68513402E12, 20070.018867924522]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68513348E12, 239.39393939393943], [1.68513318E12, 248.75], [1.68513378E12, 244.82608695652172], [1.68513324E12, 237.66666666666663], [1.6851339E12, 247.9718309859155], [1.68513384E12, 248.67272727272731], [1.68513354E12, 241.63043478260875], [1.68513396E12, 247.62500000000003], [1.68513366E12, 238.6779661016949], [1.6851336E12, 242.5074626865672], [1.6851333E12, 253.9285714285714], [1.68513372E12, 241.09259259259264], [1.68513342E12, 238.30232558139537], [1.68513336E12, 247.0], [1.68513402E12, 247.225]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68513408E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68513318E12, "maxY": 143.0, "series": [{"data": [[1.68513348E12, 117.36363636363637], [1.68513318E12, 143.0], [1.68513378E12, 116.16000000000001], [1.68513324E12, 114.92857142857142], [1.6851339E12, 116.7323943661972], [1.68513384E12, 119.75000000000001], [1.68513354E12, 114.93478260869564], [1.68513396E12, 116.98387096774198], [1.68513366E12, 115.03703703703704], [1.6851336E12, 115.92307692307692], [1.6851333E12, 124.58333333333333], [1.68513372E12, 114.20370370370371], [1.68513342E12, 115.84210526315788], [1.68513336E12, 121.17647058823529], [1.68513402E12, 116.8125]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68513348E12, 0.0], [1.68513318E12, 0.0], [1.68513408E12, 0.0], [1.68513378E12, 0.0], [1.68513324E12, 0.0], [1.6851339E12, 0.0], [1.68513384E12, 0.0], [1.68513354E12, 0.0], [1.68513396E12, 0.0], [1.68513366E12, 0.0], [1.6851336E12, 0.0], [1.6851333E12, 0.0], [1.68513372E12, 0.0], [1.68513342E12, 0.0], [1.68513336E12, 0.0], [1.68513402E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68513348E12, 117.0], [1.68513318E12, 127.5], [1.68513378E12, 116.65217391304347], [1.68513324E12, 115.86666666666666], [1.6851339E12, 116.2676056338028], [1.68513384E12, 120.14545454545454], [1.68513354E12, 114.9782608695652], [1.68513396E12, 116.87500000000004], [1.68513366E12, 114.96610169491528], [1.6851336E12, 115.71641791044776], [1.6851333E12, 122.21428571428571], [1.68513372E12, 114.51851851851855], [1.68513342E12, 115.93023255813955], [1.68513336E12, 122.53333333333333], [1.68513402E12, 117.04999999999998]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68513408E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.68513318E12, "maxY": 52728.0, "series": [{"data": [[1.68513348E12, 36923.0], [1.68513318E12, 5241.0], [1.68513408E12, 51096.0], [1.68513378E12, 34408.0], [1.68513324E12, 19647.0], [1.6851339E12, 40173.0], [1.68513384E12, 30647.0], [1.68513354E12, 38152.0], [1.68513396E12, 35921.0], [1.68513366E12, 29892.0], [1.6851336E12, 29755.0], [1.6851333E12, 23721.0], [1.68513372E12, 23990.0], [1.68513342E12, 35672.0], [1.68513336E12, 21666.0], [1.68513402E12, 52728.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68513348E12, 35712.0], [1.68513318E12, 5241.0], [1.68513408E12, 51096.0], [1.68513378E12, 29267.0], [1.68513324E12, 17122.8], [1.6851339E12, 32980.5], [1.68513384E12, 25858.2], [1.68513354E12, 25024.200000000048], [1.68513396E12, 26928.8], [1.68513366E12, 19579.2], [1.6851336E12, 23228.2], [1.6851333E12, 22738.8], [1.68513372E12, 18734.0], [1.68513342E12, 34174.6], [1.68513336E12, 21093.2], [1.68513402E12, 25789.000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68513348E12, 36923.0], [1.68513318E12, 5241.0], [1.68513408E12, 51096.0], [1.68513378E12, 34408.0], [1.68513324E12, 19647.0], [1.6851339E12, 40117.049999999996], [1.68513384E12, 30639.140000000003], [1.68513354E12, 38152.0], [1.68513396E12, 34860.97999999998], [1.68513366E12, 29892.0], [1.6851336E12, 29755.0], [1.6851333E12, 23721.0], [1.68513372E12, 23949.679999999997], [1.68513342E12, 35672.0], [1.68513336E12, 21666.0], [1.68513402E12, 52728.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68513348E12, 36643.75], [1.68513318E12, 5241.0], [1.68513408E12, 51096.0], [1.68513378E12, 32496.0], [1.68513324E12, 18848.199999999997], [1.6851339E12, 35877.25], [1.68513384E12, 29191.999999999996], [1.68513354E12, 34026.399999999994], [1.68513396E12, 30904.299999999996], [1.68513366E12, 23290.399999999998], [1.6851336E12, 25656.099999999995], [1.6851333E12, 23334.899999999998], [1.68513372E12, 22192.049999999996], [1.68513342E12, 35158.2], [1.68513336E12, 21611.7], [1.68513402E12, 46947.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68513348E12, 227.0], [1.68513318E12, 229.0], [1.68513408E12, 5136.0], [1.68513378E12, 228.0], [1.68513324E12, 226.0], [1.6851339E12, 227.0], [1.68513384E12, 226.0], [1.68513354E12, 224.0], [1.68513396E12, 225.0], [1.68513366E12, 224.0], [1.6851336E12, 225.0], [1.6851333E12, 224.0], [1.68513372E12, 224.0], [1.68513342E12, 226.0], [1.68513336E12, 224.0], [1.68513402E12, 226.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68513348E12, 3635.5], [1.68513318E12, 275.5], [1.68513408E12, 36080.0], [1.68513378E12, 293.0], [1.68513324E12, 252.0], [1.6851339E12, 296.5], [1.68513384E12, 5711.0], [1.68513354E12, 286.0], [1.68513396E12, 315.0], [1.68513366E12, 5168.0], [1.6851336E12, 280.0], [1.6851333E12, 4031.0], [1.68513372E12, 282.0], [1.68513342E12, 21581.5], [1.68513336E12, 275.0], [1.68513402E12, 5413.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68513408E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 119.0, "minX": 1.0, "maxY": 25148.0, "series": [{"data": [[2.0, 273.5], [8.0, 8323.0], [9.0, 255.5], [10.0, 275.5], [11.0, 14570.0], [3.0, 344.0], [12.0, 25148.0], [13.0, 5483.0], [14.0, 22074.0], [1.0, 269.5], [4.0, 5461.0], [5.0, 9752.5], [6.0, 6705.0], [7.0, 6861.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 123.0], [2.0, 123.0], [4.0, 224.0], [8.0, 222.5], [9.0, 119.0], [5.0, 136.0], [10.0, 182.5], [3.0, 122.0], [12.0, 233.0], [6.0, 225.0], [14.0, 222.0], [7.0, 231.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 119.0, "minX": 1.0, "maxY": 25148.0, "series": [{"data": [[2.0, 273.5], [8.0, 8322.0], [9.0, 255.5], [10.0, 275.0], [11.0, 14570.0], [3.0, 339.5], [12.0, 25148.0], [13.0, 5483.0], [14.0, 22074.0], [1.0, 262.5], [4.0, 5461.0], [5.0, 9752.5], [6.0, 6704.0], [7.0, 6861.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 123.0], [2.0, 123.0], [4.0, 224.0], [8.0, 222.5], [9.0, 119.0], [5.0, 136.0], [10.0, 182.5], [3.0, 121.5], [12.0, 233.0], [6.0, 225.0], [14.0, 222.0], [7.0, 231.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.68513318E12, "maxY": 2.35, "series": [{"data": [[1.68513348E12, 1.15], [1.68513318E12, 0.13333333333333333], [1.68513378E12, 1.5833333333333333], [1.68513324E12, 0.5], [1.6851339E12, 2.35], [1.68513384E12, 1.8333333333333333], [1.68513354E12, 1.4833333333333334], [1.68513396E12, 2.35], [1.68513366E12, 1.9833333333333334], [1.6851336E12, 2.216666666666667], [1.6851333E12, 0.4666666666666667], [1.68513372E12, 1.7833333333333334], [1.68513342E12, 1.4166666666666667], [1.68513336E12, 0.4666666666666667], [1.68513402E12, 1.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68513402E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68513318E12, "maxY": 2.0833333333333335, "series": [{"data": [[1.68513348E12, 0.4], [1.68513318E12, 0.1], [1.68513408E12, 0.13333333333333333], [1.68513378E12, 1.4833333333333334], [1.68513324E12, 0.45], [1.6851339E12, 1.9], [1.68513384E12, 1.6833333333333333], [1.68513354E12, 1.3], [1.68513396E12, 2.0833333333333335], [1.68513366E12, 1.55], [1.6851336E12, 1.2833333333333334], [1.6851333E12, 0.4666666666666667], [1.68513372E12, 1.7666666666666666], [1.68513342E12, 0.43333333333333335], [1.68513336E12, 0.4166666666666667], [1.68513402E12, 1.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68513348E12, 0.7], [1.68513396E12, 0.23333333333333334], [1.68513366E12, 0.4166666666666667], [1.6851336E12, 0.9], [1.68513342E12, 0.95], [1.6851339E12, 0.4666666666666667], [1.68513336E12, 0.05], [1.68513384E12, 0.15], [1.68513354E12, 0.2]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68513408E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68513318E12, "maxY": 1.1, "series": [{"data": [[1.68513348E12, 0.2], [1.68513318E12, 0.06666666666666667], [1.68513378E12, 0.7666666666666667], [1.68513324E12, 0.25], [1.6851339E12, 1.0], [1.68513384E12, 0.8333333333333334], [1.68513354E12, 0.6833333333333333], [1.68513396E12, 1.1], [1.68513366E12, 0.7666666666666667], [1.6851336E12, 0.6833333333333333], [1.6851333E12, 0.23333333333333334], [1.68513372E12, 0.9], [1.68513342E12, 0.2], [1.68513336E12, 0.23333333333333334], [1.68513402E12, 0.6666666666666666]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68513348E12, 0.35], [1.68513396E12, 0.1], [1.68513366E12, 0.21666666666666667], [1.6851336E12, 0.43333333333333335], [1.68513342E12, 0.5166666666666667], [1.6851339E12, 0.18333333333333332], [1.68513336E12, 0.016666666666666666], [1.68513384E12, 0.08333333333333333], [1.68513354E12, 0.08333333333333333]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68513348E12, 0.35], [1.68513396E12, 0.13333333333333333], [1.68513366E12, 0.2], [1.6851336E12, 0.4666666666666667], [1.68513342E12, 0.43333333333333335], [1.6851339E12, 0.2833333333333333], [1.68513336E12, 0.03333333333333333], [1.68513384E12, 0.06666666666666667], [1.68513354E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68513348E12, 0.06666666666666667], [1.68513318E12, 0.03333333333333333], [1.68513378E12, 0.8333333333333334], [1.68513324E12, 0.23333333333333334], [1.6851339E12, 0.7], [1.68513384E12, 0.7666666666666667], [1.68513354E12, 0.5], [1.68513396E12, 0.8], [1.68513366E12, 0.4666666666666667], [1.6851336E12, 0.36666666666666664], [1.6851333E12, 0.2], [1.68513372E12, 0.9], [1.68513342E12, 0.06666666666666667], [1.68513336E12, 0.21666666666666667], [1.68513402E12, 1.0666666666666667]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68513348E12, 0.48333333333333334], [1.68513396E12, 0.23333333333333334], [1.68513366E12, 0.43333333333333335], [1.6851336E12, 0.7166666666666667], [1.68513342E12, 0.5666666666666667], [1.6851339E12, 0.48333333333333334], [1.68513336E12, 0.06666666666666667], [1.68513384E12, 0.1], [1.68513354E12, 0.26666666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68513348E12, 0.2], [1.68513318E12, 0.03333333333333333], [1.68513408E12, 0.13333333333333333], [1.68513378E12, 0.7166666666666667], [1.68513324E12, 0.2], [1.6851339E12, 0.9], [1.68513384E12, 0.85], [1.68513354E12, 0.6166666666666667], [1.68513396E12, 0.9833333333333333], [1.68513366E12, 0.7833333333333333], [1.6851336E12, 0.6], [1.6851333E12, 0.23333333333333334], [1.68513372E12, 0.8666666666666667], [1.68513342E12, 0.23333333333333334], [1.68513336E12, 0.18333333333333332], [1.68513402E12, 0.8833333333333333]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68513408E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.68513318E12, "maxY": 2.8833333333333333, "series": [{"data": [[1.68513348E12, 0.4666666666666667], [1.68513318E12, 0.13333333333333333], [1.68513408E12, 0.13333333333333333], [1.68513378E12, 2.316666666666667], [1.68513324E12, 0.6833333333333333], [1.6851339E12, 2.6], [1.68513384E12, 2.45], [1.68513354E12, 1.8], [1.68513396E12, 2.8833333333333333], [1.68513366E12, 2.0166666666666666], [1.6851336E12, 1.65], [1.6851333E12, 0.6666666666666666], [1.68513372E12, 2.6666666666666665], [1.68513342E12, 0.5], [1.68513336E12, 0.6333333333333333], [1.68513402E12, 2.6166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68513348E12, 1.1833333333333333], [1.68513396E12, 0.4666666666666667], [1.68513366E12, 0.85], [1.6851336E12, 1.6166666666666667], [1.68513342E12, 1.5166666666666666], [1.6851339E12, 0.95], [1.68513336E12, 0.11666666666666667], [1.68513384E12, 0.25], [1.68513354E12, 0.4666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68513408E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

