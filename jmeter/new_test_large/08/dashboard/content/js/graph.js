/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 104.0, "minX": 0.0, "maxY": 60659.0, "series": [{"data": [[0.0, 312.0], [0.1, 312.0], [0.2, 313.0], [0.3, 314.0], [0.4, 317.0], [0.5, 317.0], [0.6, 319.0], [0.7, 320.0], [0.8, 321.0], [0.9, 321.0], [1.0, 321.0], [1.1, 322.0], [1.2, 323.0], [1.3, 323.0], [1.4, 326.0], [1.5, 327.0], [1.6, 330.0], [1.7, 336.0], [1.8, 336.0], [1.9, 337.0], [2.0, 338.0], [2.1, 342.0], [2.2, 342.0], [2.3, 343.0], [2.4, 347.0], [2.5, 351.0], [2.6, 351.0], [2.7, 358.0], [2.8, 363.0], [2.9, 366.0], [3.0, 367.0], [3.1, 367.0], [3.2, 382.0], [3.3, 387.0], [3.4, 390.0], [3.5, 390.0], [3.6, 394.0], [3.7, 394.0], [3.8, 396.0], [3.9, 396.0], [4.0, 400.0], [4.1, 403.0], [4.2, 408.0], [4.3, 408.0], [4.4, 408.0], [4.5, 410.0], [4.6, 411.0], [4.7, 412.0], [4.8, 412.0], [4.9, 413.0], [5.0, 414.0], [5.1, 414.0], [5.2, 414.0], [5.3, 416.0], [5.4, 417.0], [5.5, 417.0], [5.6, 418.0], [5.7, 418.0], [5.8, 420.0], [5.9, 421.0], [6.0, 422.0], [6.1, 422.0], [6.2, 426.0], [6.3, 433.0], [6.4, 433.0], [6.5, 433.0], [6.6, 435.0], [6.7, 440.0], [6.8, 445.0], [6.9, 445.0], [7.0, 446.0], [7.1, 449.0], [7.2, 461.0], [7.3, 461.0], [7.4, 461.0], [7.5, 467.0], [7.6, 468.0], [7.7, 469.0], [7.8, 469.0], [7.9, 469.0], [8.0, 472.0], [8.1, 474.0], [8.2, 474.0], [8.3, 475.0], [8.4, 478.0], [8.5, 479.0], [8.6, 479.0], [8.7, 479.0], [8.8, 481.0], [8.9, 487.0], [9.0, 487.0], [9.1, 487.0], [9.2, 490.0], [9.3, 491.0], [9.4, 492.0], [9.5, 492.0], [9.6, 498.0], [9.7, 501.0], [9.8, 501.0], [9.9, 503.0], [10.0, 503.0], [10.1, 505.0], [10.2, 507.0], [10.3, 508.0], [10.4, 508.0], [10.5, 511.0], [10.6, 511.0], [10.7, 512.0], [10.8, 512.0], [10.9, 513.0], [11.0, 514.0], [11.1, 514.0], [11.2, 514.0], [11.3, 514.0], [11.4, 515.0], [11.5, 516.0], [11.6, 517.0], [11.7, 517.0], [11.8, 519.0], [11.9, 520.0], [12.0, 536.0], [12.1, 536.0], [12.2, 536.0], [12.3, 537.0], [12.4, 542.0], [12.5, 542.0], [12.6, 545.0], [12.7, 547.0], [12.8, 549.0], [12.9, 550.0], [13.0, 550.0], [13.1, 550.0], [13.2, 551.0], [13.3, 552.0], [13.4, 552.0], [13.5, 556.0], [13.6, 558.0], [13.7, 565.0], [13.8, 565.0], [13.9, 566.0], [14.0, 566.0], [14.1, 567.0], [14.2, 568.0], [14.3, 568.0], [14.4, 570.0], [14.5, 572.0], [14.6, 576.0], [14.7, 576.0], [14.8, 582.0], [14.9, 584.0], [15.0, 591.0], [15.1, 591.0], [15.2, 592.0], [15.3, 593.0], [15.4, 594.0], [15.5, 598.0], [15.6, 598.0], [15.7, 603.0], [15.8, 608.0], [15.9, 609.0], [16.0, 609.0], [16.1, 609.0], [16.2, 610.0], [16.3, 618.0], [16.4, 618.0], [16.5, 627.0], [16.6, 668.0], [16.7, 682.0], [16.8, 1267.0], [16.9, 1267.0], [17.0, 1346.0], [17.1, 1458.0], [17.2, 1540.0], [17.3, 1540.0], [17.4, 2164.0], [17.5, 3115.0], [17.6, 4035.0], [17.7, 4035.0], [17.8, 4093.0], [17.9, 4194.0], [18.0, 4446.0], [18.1, 4627.0], [18.2, 4627.0], [18.3, 4654.0], [18.4, 4815.0], [18.5, 4948.0], [18.6, 4948.0], [18.7, 4991.0], [18.8, 5048.0], [18.9, 5108.0], [19.0, 5108.0], [19.1, 5110.0], [19.2, 5124.0], [19.3, 5166.0], [19.4, 5166.0], [19.5, 5167.0], [19.6, 5297.0], [19.7, 5328.0], [19.8, 5356.0], [19.9, 5356.0], [20.0, 5365.0], [20.1, 5391.0], [20.2, 5404.0], [20.3, 5404.0], [20.4, 5445.0], [20.5, 5464.0], [20.6, 5518.0], [20.7, 5518.0], [20.8, 5520.0], [20.9, 5525.0], [21.0, 5547.0], [21.1, 5562.0], [21.2, 5562.0], [21.3, 5571.0], [21.4, 5576.0], [21.5, 5603.0], [21.6, 5603.0], [21.7, 5614.0], [21.8, 5631.0], [21.9, 5639.0], [22.0, 5639.0], [22.1, 5639.0], [22.2, 5658.0], [22.3, 5665.0], [22.4, 5684.0], [22.5, 5684.0], [22.6, 5690.0], [22.7, 5710.0], [22.8, 5725.0], [22.9, 5725.0], [23.0, 5733.0], [23.1, 5844.0], [23.2, 5859.0], [23.3, 5859.0], [23.4, 5899.0], [23.5, 5968.0], [23.6, 5977.0], [23.7, 5999.0], [23.8, 5999.0], [23.9, 6056.0], [24.0, 6063.0], [24.1, 6078.0], [24.2, 6078.0], [24.3, 6106.0], [24.4, 6132.0], [24.5, 6179.0], [24.6, 6179.0], [24.7, 6205.0], [24.8, 6228.0], [24.9, 6229.0], [25.0, 6242.0], [25.1, 6242.0], [25.2, 6337.0], [25.3, 6381.0], [25.4, 6444.0], [25.5, 6444.0], [25.6, 6445.0], [25.7, 6592.0], [25.8, 6620.0], [25.9, 6620.0], [26.0, 6635.0], [26.1, 6664.0], [26.2, 6666.0], [26.3, 6666.0], [26.4, 6689.0], [26.5, 6955.0], [26.6, 6974.0], [26.7, 7016.0], [26.8, 7016.0], [26.9, 7121.0], [27.0, 7169.0], [27.1, 7247.0], [27.2, 7247.0], [27.3, 7273.0], [27.4, 7284.0], [27.5, 7286.0], [27.6, 7286.0], [27.7, 7376.0], [27.8, 7424.0], [27.9, 7497.0], [28.0, 7657.0], [28.1, 7657.0], [28.2, 7679.0], [28.3, 7704.0], [28.4, 7785.0], [28.5, 7785.0], [28.6, 7826.0], [28.7, 8000.0], [28.8, 8039.0], [28.9, 8039.0], [29.0, 8070.0], [29.1, 8114.0], [29.2, 8142.0], [29.3, 8365.0], [29.4, 8365.0], [29.5, 8425.0], [29.6, 8677.0], [29.7, 8744.0], [29.8, 8744.0], [29.9, 8746.0], [30.0, 8749.0], [30.1, 8760.0], [30.2, 8760.0], [30.3, 8878.0], [30.4, 8961.0], [30.5, 8993.0], [30.6, 9003.0], [30.7, 9003.0], [30.8, 9018.0], [30.9, 9034.0], [31.0, 9244.0], [31.1, 9244.0], [31.2, 9267.0], [31.3, 9286.0], [31.4, 9389.0], [31.5, 9389.0], [31.6, 9471.0], [31.7, 9486.0], [31.8, 9574.0], [31.9, 9574.0], [32.0, 9603.0], [32.1, 9643.0], [32.2, 9658.0], [32.3, 9844.0], [32.4, 9844.0], [32.5, 9950.0], [32.6, 9976.0], [32.7, 10247.0], [32.8, 10247.0], [32.9, 10355.0], [33.0, 10459.0], [33.1, 10532.0], [33.2, 10532.0], [33.3, 10603.0], [33.4, 10605.0], [33.5, 10620.0], [33.6, 10634.0], [33.7, 10634.0], [33.8, 10697.0], [33.9, 10715.0], [34.0, 10878.0], [34.1, 10878.0], [34.2, 10970.0], [34.3, 11004.0], [34.4, 11046.0], [34.5, 11046.0], [34.6, 11127.0], [34.7, 11193.0], [34.8, 11354.0], [34.9, 11420.0], [35.0, 11420.0], [35.1, 11452.0], [35.2, 11498.0], [35.3, 11757.0], [35.4, 11757.0], [35.5, 11766.0], [35.6, 11851.0], [35.7, 11897.0], [35.8, 11897.0], [35.9, 11965.0], [36.0, 11985.0], [36.1, 11986.0], [36.2, 12030.0], [36.3, 12030.0], [36.4, 12034.0], [36.5, 12077.0], [36.6, 12108.0], [36.7, 12108.0], [36.8, 12117.0], [36.9, 12312.0], [37.0, 12525.0], [37.1, 12525.0], [37.2, 12602.0], [37.3, 12649.0], [37.4, 12717.0], [37.5, 12805.0], [37.6, 12805.0], [37.7, 12869.0], [37.8, 13097.0], [37.9, 13152.0], [38.0, 13152.0], [38.1, 13196.0], [38.2, 13216.0], [38.3, 13237.0], [38.4, 13237.0], [38.5, 13255.0], [38.6, 13453.0], [38.7, 13533.0], [38.8, 13533.0], [38.9, 13624.0], [39.0, 13669.0], [39.1, 13676.0], [39.2, 13693.0], [39.3, 13693.0], [39.4, 13923.0], [39.5, 13940.0], [39.6, 14035.0], [39.7, 14035.0], [39.8, 14118.0], [39.9, 14163.0], [40.0, 14299.0], [40.1, 14299.0], [40.2, 14303.0], [40.3, 14312.0], [40.4, 14358.0], [40.5, 14461.0], [40.6, 14461.0], [40.7, 14476.0], [40.8, 14554.0], [40.9, 14655.0], [41.0, 14655.0], [41.1, 14689.0], [41.2, 14818.0], [41.3, 14832.0], [41.4, 14832.0], [41.5, 14971.0], [41.6, 15034.0], [41.7, 15054.0], [41.8, 15110.0], [41.9, 15110.0], [42.0, 15195.0], [42.1, 15493.0], [42.2, 15565.0], [42.3, 15565.0], [42.4, 15619.0], [42.5, 15668.0], [42.6, 15682.0], [42.7, 15682.0], [42.8, 15767.0], [42.9, 15859.0], [43.0, 16060.0], [43.1, 16157.0], [43.2, 16157.0], [43.3, 16157.0], [43.4, 16265.0], [43.5, 16300.0], [43.6, 16300.0], [43.7, 16356.0], [43.8, 16400.0], [43.9, 16426.0], [44.0, 16426.0], [44.1, 16584.0], [44.2, 16674.0], [44.3, 16752.0], [44.4, 16752.0], [44.5, 16763.0], [44.6, 16862.0], [44.7, 16897.0], [44.8, 17177.0], [44.9, 17177.0], [45.0, 17441.0], [45.1, 17477.0], [45.2, 17523.0], [45.3, 17523.0], [45.4, 17585.0], [45.5, 17773.0], [45.6, 17789.0], [45.7, 17789.0], [45.8, 17790.0], [45.9, 17797.0], [46.0, 17862.0], [46.1, 17911.0], [46.2, 17911.0], [46.3, 17973.0], [46.4, 17983.0], [46.5, 18106.0], [46.6, 18106.0], [46.7, 18120.0], [46.8, 18190.0], [46.9, 18263.0], [47.0, 18263.0], [47.1, 18264.0], [47.2, 18290.0], [47.3, 18302.0], [47.4, 18338.0], [47.5, 18338.0], [47.6, 18362.0], [47.7, 18562.0], [47.8, 18581.0], [47.9, 18581.0], [48.0, 18680.0], [48.1, 18692.0], [48.2, 18818.0], [48.3, 18818.0], [48.4, 18911.0], [48.5, 18957.0], [48.6, 18976.0], [48.7, 19007.0], [48.8, 19007.0], [48.9, 19022.0], [49.0, 19103.0], [49.1, 19168.0], [49.2, 19168.0], [49.3, 19256.0], [49.4, 19298.0], [49.5, 19313.0], [49.6, 19313.0], [49.7, 19377.0], [49.8, 19571.0], [49.9, 19585.0], [50.0, 19585.0], [50.1, 19799.0], [50.2, 19800.0], [50.3, 19805.0], [50.4, 19862.0], [50.5, 19862.0], [50.6, 19871.0], [50.7, 19895.0], [50.8, 19959.0], [50.9, 19959.0], [51.0, 20105.0], [51.1, 20106.0], [51.2, 20106.0], [51.3, 20106.0], [51.4, 20144.0], [51.5, 20230.0], [51.6, 20238.0], [51.7, 20321.0], [51.8, 20321.0], [51.9, 20361.0], [52.0, 20426.0], [52.1, 20459.0], [52.2, 20459.0], [52.3, 20501.0], [52.4, 20506.0], [52.5, 20524.0], [52.6, 20524.0], [52.7, 20541.0], [52.8, 20597.0], [52.9, 20830.0], [53.0, 20886.0], [53.1, 20886.0], [53.2, 20928.0], [53.3, 20934.0], [53.4, 20950.0], [53.5, 20950.0], [53.6, 20953.0], [53.7, 20966.0], [53.8, 21005.0], [53.9, 21005.0], [54.0, 21028.0], [54.1, 21052.0], [54.2, 21074.0], [54.3, 21156.0], [54.4, 21156.0], [54.5, 21173.0], [54.6, 21209.0], [54.7, 21219.0], [54.8, 21219.0], [54.9, 21245.0], [55.0, 21256.0], [55.1, 21265.0], [55.2, 21265.0], [55.3, 21420.0], [55.4, 21435.0], [55.5, 21453.0], [55.6, 21479.0], [55.7, 21479.0], [55.8, 21481.0], [55.9, 21558.0], [56.0, 21616.0], [56.1, 21616.0], [56.2, 21665.0], [56.3, 21753.0], [56.4, 21756.0], [56.5, 21756.0], [56.6, 21801.0], [56.7, 21947.0], [56.8, 21977.0], [56.9, 21977.0], [57.0, 22003.0], [57.1, 22175.0], [57.2, 22196.0], [57.3, 22243.0], [57.4, 22243.0], [57.5, 22380.0], [57.6, 22388.0], [57.7, 22389.0], [57.8, 22389.0], [57.9, 22426.0], [58.0, 22444.0], [58.1, 22526.0], [58.2, 22526.0], [58.3, 22558.0], [58.4, 22586.0], [58.5, 22912.0], [58.6, 23084.0], [58.7, 23084.0], [58.8, 23089.0], [58.9, 23141.0], [59.0, 23229.0], [59.1, 23229.0], [59.2, 23263.0], [59.3, 23312.0], [59.4, 23329.0], [59.5, 23329.0], [59.6, 23338.0], [59.7, 23462.0], [59.8, 23469.0], [59.9, 23551.0], [60.0, 23551.0], [60.1, 23602.0], [60.2, 23662.0], [60.3, 23669.0], [60.4, 23669.0], [60.5, 23682.0], [60.6, 23770.0], [60.7, 23775.0], [60.8, 23775.0], [60.9, 23910.0], [61.0, 23967.0], [61.1, 23998.0], [61.2, 24002.0], [61.3, 24002.0], [61.4, 24132.0], [61.5, 24172.0], [61.6, 24173.0], [61.7, 24173.0], [61.8, 24188.0], [61.9, 24191.0], [62.0, 24312.0], [62.1, 24312.0], [62.2, 24389.0], [62.3, 24398.0], [62.4, 24436.0], [62.5, 24436.0], [62.6, 24446.0], [62.7, 24451.0], [62.8, 24472.0], [62.9, 24543.0], [63.0, 24543.0], [63.1, 24576.0], [63.2, 24602.0], [63.3, 24720.0], [63.4, 24720.0], [63.5, 24765.0], [63.6, 24802.0], [63.7, 24869.0], [63.8, 24869.0], [63.9, 24895.0], [64.0, 24938.0], [64.1, 24993.0], [64.2, 25037.0], [64.3, 25037.0], [64.4, 25135.0], [64.5, 25183.0], [64.6, 25221.0], [64.7, 25221.0], [64.8, 25317.0], [64.9, 25388.0], [65.0, 25448.0], [65.1, 25448.0], [65.2, 25526.0], [65.3, 25677.0], [65.4, 25819.0], [65.5, 25859.0], [65.6, 25859.0], [65.7, 25918.0], [65.8, 26020.0], [65.9, 26047.0], [66.0, 26047.0], [66.1, 26091.0], [66.2, 26321.0], [66.3, 26352.0], [66.4, 26352.0], [66.5, 26414.0], [66.6, 26474.0], [66.7, 26528.0], [66.8, 26617.0], [66.9, 26617.0], [67.0, 26631.0], [67.1, 26711.0], [67.2, 26882.0], [67.3, 26882.0], [67.4, 26910.0], [67.5, 27036.0], [67.6, 27086.0], [67.7, 27086.0], [67.8, 27121.0], [67.9, 27235.0], [68.0, 27302.0], [68.1, 27310.0], [68.2, 27310.0], [68.3, 27343.0], [68.4, 27354.0], [68.5, 27653.0], [68.6, 27653.0], [68.7, 27685.0], [68.8, 27723.0], [68.9, 27728.0], [69.0, 27728.0], [69.1, 27761.0], [69.2, 27866.0], [69.3, 27918.0], [69.4, 27918.0], [69.5, 28007.0], [69.6, 28119.0], [69.7, 28177.0], [69.8, 28272.0], [69.9, 28272.0], [70.0, 28304.0], [70.1, 28350.0], [70.2, 28393.0], [70.3, 28393.0], [70.4, 28495.0], [70.5, 28608.0], [70.6, 28693.0], [70.7, 28693.0], [70.8, 28750.0], [70.9, 28750.0], [71.0, 28834.0], [71.1, 28837.0], [71.2, 28837.0], [71.3, 28873.0], [71.4, 29056.0], [71.5, 29154.0], [71.6, 29154.0], [71.7, 29201.0], [71.8, 29222.0], [71.9, 29231.0], [72.0, 29231.0], [72.1, 29277.0], [72.2, 29304.0], [72.3, 29314.0], [72.4, 29327.0], [72.5, 29327.0], [72.6, 29361.0], [72.7, 29399.0], [72.8, 29473.0], [72.9, 29473.0], [73.0, 29481.0], [73.1, 29611.0], [73.2, 29623.0], [73.3, 29623.0], [73.4, 29737.0], [73.5, 29781.0], [73.6, 29846.0], [73.7, 29999.0], [73.8, 29999.0], [73.9, 30009.0], [74.0, 30296.0], [74.1, 30310.0], [74.2, 30310.0], [74.3, 30463.0], [74.4, 30488.0], [74.5, 30559.0], [74.6, 30559.0], [74.7, 30592.0], [74.8, 30597.0], [74.9, 30638.0], [75.0, 30638.0], [75.1, 30779.0], [75.2, 30912.0], [75.3, 30971.0], [75.4, 30990.0], [75.5, 30990.0], [75.6, 31011.0], [75.7, 31061.0], [75.8, 31069.0], [75.9, 31069.0], [76.0, 31251.0], [76.1, 31301.0], [76.2, 31317.0], [76.3, 31317.0], [76.4, 31344.0], [76.5, 31409.0], [76.6, 31450.0], [76.7, 31465.0], [76.8, 31465.0], [76.9, 31638.0], [77.0, 31718.0], [77.1, 31788.0], [77.2, 31788.0], [77.3, 31825.0], [77.4, 31966.0], [77.5, 31974.0], [77.6, 31974.0], [77.7, 31980.0], [77.8, 32025.0], [77.9, 32035.0], [78.0, 32038.0], [78.1, 32038.0], [78.2, 32121.0], [78.3, 32157.0], [78.4, 32303.0], [78.5, 32303.0], [78.6, 32320.0], [78.7, 32320.0], [78.8, 32452.0], [78.9, 32452.0], [79.0, 32822.0], [79.1, 32996.0], [79.2, 33012.0], [79.3, 33014.0], [79.4, 33014.0], [79.5, 33049.0], [79.6, 33460.0], [79.7, 33468.0], [79.8, 33468.0], [79.9, 33471.0], [80.0, 33549.0], [80.1, 33566.0], [80.2, 33566.0], [80.3, 33625.0], [80.4, 33669.0], [80.5, 33706.0], [80.6, 33937.0], [80.7, 33937.0], [80.8, 33983.0], [80.9, 34061.0], [81.0, 34103.0], [81.1, 34103.0], [81.2, 34314.0], [81.3, 34459.0], [81.4, 34617.0], [81.5, 34617.0], [81.6, 34746.0], [81.7, 34830.0], [81.8, 34963.0], [81.9, 34963.0], [82.0, 35017.0], [82.1, 35245.0], [82.2, 35251.0], [82.3, 35309.0], [82.4, 35309.0], [82.5, 35320.0], [82.6, 35337.0], [82.7, 35394.0], [82.8, 35394.0], [82.9, 35733.0], [83.0, 35861.0], [83.1, 35972.0], [83.2, 35972.0], [83.3, 36079.0], [83.4, 36434.0], [83.5, 36494.0], [83.6, 36577.0], [83.7, 36577.0], [83.8, 36590.0], [83.9, 36704.0], [84.0, 36717.0], [84.1, 36717.0], [84.2, 36740.0], [84.3, 36835.0], [84.4, 36846.0], [84.5, 36846.0], [84.6, 36874.0], [84.7, 36884.0], [84.8, 36909.0], [84.9, 37128.0], [85.0, 37128.0], [85.1, 37249.0], [85.2, 37459.0], [85.3, 37477.0], [85.4, 37477.0], [85.5, 37663.0], [85.6, 37667.0], [85.7, 37689.0], [85.8, 37689.0], [85.9, 37748.0], [86.0, 37761.0], [86.1, 37862.0], [86.2, 37963.0], [86.3, 37963.0], [86.4, 38222.0], [86.5, 38390.0], [86.6, 38409.0], [86.7, 38409.0], [86.8, 38436.0], [86.9, 38531.0], [87.0, 38605.0], [87.1, 38605.0], [87.2, 38716.0], [87.3, 38718.0], [87.4, 38903.0], [87.5, 38946.0], [87.6, 38946.0], [87.7, 39123.0], [87.8, 39144.0], [87.9, 39195.0], [88.0, 39195.0], [88.1, 39290.0], [88.2, 39302.0], [88.3, 39354.0], [88.4, 39354.0], [88.5, 39800.0], [88.6, 39925.0], [88.7, 39974.0], [88.8, 39974.0], [88.9, 40092.0], [89.0, 40373.0], [89.1, 40515.0], [89.2, 40596.0], [89.3, 40596.0], [89.4, 40596.0], [89.5, 40763.0], [89.6, 40830.0], [89.7, 40830.0], [89.8, 40901.0], [89.9, 40976.0], [90.0, 41076.0], [90.1, 41076.0], [90.2, 41079.0], [90.3, 41199.0], [90.4, 41210.0], [90.5, 41260.0], [90.6, 41260.0], [90.7, 41262.0], [90.8, 41293.0], [90.9, 41324.0], [91.0, 41324.0], [91.1, 41513.0], [91.2, 41554.0], [91.3, 41692.0], [91.4, 41692.0], [91.5, 42308.0], [91.6, 42938.0], [91.7, 42943.0], [91.8, 42989.0], [91.9, 42989.0], [92.0, 43005.0], [92.1, 43068.0], [92.2, 43229.0], [92.3, 43229.0], [92.4, 43513.0], [92.5, 43662.0], [92.6, 43711.0], [92.7, 43711.0], [92.8, 44059.0], [92.9, 44120.0], [93.0, 44173.0], [93.1, 44353.0], [93.2, 44353.0], [93.3, 44428.0], [93.4, 44534.0], [93.5, 44566.0], [93.6, 44566.0], [93.7, 44867.0], [93.8, 45567.0], [93.9, 45787.0], [94.0, 45787.0], [94.1, 46196.0], [94.2, 46298.0], [94.3, 46895.0], [94.4, 46895.0], [94.5, 47737.0], [94.6, 48033.0], [94.7, 49626.0], [94.8, 50109.0], [94.9, 50109.0], [95.0, 50839.0], [95.1, 51975.0], [95.2, 52073.0], [95.3, 52073.0], [95.4, 53612.0], [95.5, 53878.0], [95.6, 53903.0], [95.7, 53903.0], [95.8, 54874.0], [95.9, 55366.0], [96.0, 56020.0], [96.1, 57903.0], [96.2, 57903.0], [96.3, 57906.0], [96.4, 58666.0], [96.5, 58739.0], [96.6, 58739.0], [96.7, 59589.0], [96.8, 60249.0], [96.9, 60325.0], [97.0, 60325.0], [97.1, 60330.0], [97.2, 60338.0], [97.3, 60357.0], [97.4, 60366.0], [97.5, 60366.0], [97.6, 60369.0], [97.7, 60381.0], [97.8, 60392.0], [97.9, 60392.0], [98.0, 60410.0], [98.1, 60418.0], [98.2, 60460.0], [98.3, 60460.0], [98.4, 60470.0], [98.5, 60471.0], [98.6, 60493.0], [98.7, 60503.0], [98.8, 60503.0], [98.9, 60514.0], [99.0, 60516.0], [99.1, 60526.0], [99.2, 60526.0], [99.3, 60530.0], [99.4, 60586.0], [99.5, 60605.0], [99.6, 60605.0], [99.7, 60652.0], [99.8, 60653.0], [99.9, 60659.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 104.0], [0.1, 104.0], [0.2, 104.0], [0.3, 104.0], [0.4, 105.0], [0.5, 105.0], [0.6, 105.0], [0.7, 105.0], [0.8, 105.0], [0.9, 105.0], [1.0, 105.0], [1.1, 105.0], [1.2, 105.0], [1.3, 105.0], [1.4, 105.0], [1.5, 106.0], [1.6, 106.0], [1.7, 106.0], [1.8, 106.0], [1.9, 106.0], [2.0, 106.0], [2.1, 106.0], [2.2, 106.0], [2.3, 106.0], [2.4, 106.0], [2.5, 106.0], [2.6, 106.0], [2.7, 106.0], [2.8, 107.0], [2.9, 107.0], [3.0, 107.0], [3.1, 107.0], [3.2, 107.0], [3.3, 107.0], [3.4, 107.0], [3.5, 107.0], [3.6, 107.0], [3.7, 108.0], [3.8, 108.0], [3.9, 108.0], [4.0, 108.0], [4.1, 108.0], [4.2, 108.0], [4.3, 108.0], [4.4, 109.0], [4.5, 109.0], [4.6, 109.0], [4.7, 109.0], [4.8, 109.0], [4.9, 110.0], [5.0, 110.0], [5.1, 111.0], [5.2, 111.0], [5.3, 112.0], [5.4, 113.0], [5.5, 113.0], [5.6, 113.0], [5.7, 113.0], [5.8, 113.0], [5.9, 115.0], [6.0, 116.0], [6.1, 116.0], [6.2, 126.0], [6.3, 126.0], [6.4, 127.0], [6.5, 127.0], [6.6, 127.0], [6.7, 128.0], [6.8, 129.0], [6.9, 129.0], [7.0, 131.0], [7.1, 132.0], [7.2, 133.0], [7.3, 133.0], [7.4, 134.0], [7.5, 135.0], [7.6, 136.0], [7.7, 137.0], [7.8, 137.0], [7.9, 138.0], [8.0, 139.0], [8.1, 140.0], [8.2, 140.0], [8.3, 140.0], [8.4, 141.0], [8.5, 142.0], [8.6, 142.0], [8.7, 143.0], [8.8, 143.0], [8.9, 144.0], [9.0, 144.0], [9.1, 144.0], [9.2, 145.0], [9.3, 147.0], [9.4, 148.0], [9.5, 148.0], [9.6, 149.0], [9.7, 149.0], [9.8, 149.0], [9.9, 149.0], [10.0, 152.0], [10.1, 153.0], [10.2, 154.0], [10.3, 155.0], [10.4, 155.0], [10.5, 155.0], [10.6, 159.0], [10.7, 159.0], [10.8, 159.0], [10.9, 159.0], [11.0, 159.0], [11.1, 160.0], [11.2, 160.0], [11.3, 161.0], [11.4, 162.0], [11.5, 162.0], [11.6, 162.0], [11.7, 162.0], [11.8, 164.0], [11.9, 166.0], [12.0, 166.0], [12.1, 166.0], [12.2, 166.0], [12.3, 170.0], [12.4, 171.0], [12.5, 171.0], [12.6, 173.0], [12.7, 174.0], [12.8, 175.0], [12.9, 175.0], [13.0, 175.0], [13.1, 177.0], [13.2, 178.0], [13.3, 181.0], [13.4, 181.0], [13.5, 182.0], [13.6, 183.0], [13.7, 183.0], [13.8, 183.0], [13.9, 184.0], [14.0, 184.0], [14.1, 186.0], [14.2, 186.0], [14.3, 187.0], [14.4, 187.0], [14.5, 191.0], [14.6, 191.0], [14.7, 193.0], [14.8, 194.0], [14.9, 194.0], [15.0, 199.0], [15.1, 199.0], [15.2, 200.0], [15.3, 200.0], [15.4, 201.0], [15.5, 201.0], [15.6, 202.0], [15.7, 202.0], [15.8, 202.0], [15.9, 202.0], [16.0, 204.0], [16.1, 204.0], [16.2, 211.0], [16.3, 213.0], [16.4, 213.0], [16.5, 220.0], [16.6, 400.0], [16.7, 857.0], [16.8, 857.0], [16.9, 937.0], [17.0, 1050.0], [17.1, 1209.0], [17.2, 1209.0], [17.3, 1659.0], [17.4, 2701.0], [17.5, 3626.0], [17.6, 3626.0], [17.7, 3786.0], [17.8, 3890.0], [17.9, 4205.0], [18.0, 4248.0], [18.1, 4248.0], [18.2, 4264.0], [18.3, 4406.0], [18.4, 4545.0], [18.5, 4545.0], [18.6, 4638.0], [18.7, 4702.0], [18.8, 4742.0], [18.9, 4742.0], [19.0, 4756.0], [19.1, 4851.0], [19.2, 4898.0], [19.3, 4938.0], [19.4, 4938.0], [19.5, 5085.0], [19.6, 5085.0], [19.7, 5110.0], [19.8, 5110.0], [19.9, 5112.0], [20.0, 5115.0], [20.1, 5137.0], [20.2, 5137.0], [20.3, 5139.0], [20.4, 5142.0], [20.5, 5159.0], [20.6, 5160.0], [20.7, 5160.0], [20.8, 5172.0], [20.9, 5195.0], [21.0, 5206.0], [21.1, 5206.0], [21.2, 5208.0], [21.3, 5222.0], [21.4, 5222.0], [21.5, 5222.0], [21.6, 5231.0], [21.7, 5233.0], [21.8, 5248.0], [21.9, 5248.0], [22.0, 5254.0], [22.1, 5256.0], [22.2, 5276.0], [22.3, 5281.0], [22.4, 5281.0], [22.5, 5295.0], [22.6, 5325.0], [22.7, 5347.0], [22.8, 5347.0], [22.9, 5411.0], [23.0, 5452.0], [23.1, 5562.0], [23.2, 5562.0], [23.3, 5594.0], [23.4, 5608.0], [23.5, 5609.0], [23.6, 5633.0], [23.7, 5633.0], [23.8, 5649.0], [23.9, 5696.0], [24.0, 5724.0], [24.1, 5724.0], [24.2, 5768.0], [24.3, 5819.0], [24.4, 5830.0], [24.5, 5830.0], [24.6, 5852.0], [24.7, 5854.0], [24.8, 5860.0], [24.9, 5860.0], [25.0, 5925.0], [25.1, 5973.0], [25.2, 6039.0], [25.3, 6074.0], [25.4, 6074.0], [25.5, 6142.0], [25.6, 6189.0], [25.7, 6205.0], [25.8, 6205.0], [25.9, 6256.0], [26.0, 6267.0], [26.1, 6379.0], [26.2, 6379.0], [26.3, 6426.0], [26.4, 6604.0], [26.5, 6686.0], [26.6, 6713.0], [26.7, 6713.0], [26.8, 6762.0], [26.9, 6866.0], [27.0, 6877.0], [27.1, 6877.0], [27.2, 6966.0], [27.3, 6968.0], [27.4, 7017.0], [27.5, 7017.0], [27.6, 7038.0], [27.7, 7068.0], [27.8, 7130.0], [27.9, 7130.0], [28.0, 7275.0], [28.1, 7379.0], [28.2, 7385.0], [28.3, 7445.0], [28.4, 7445.0], [28.5, 7613.0], [28.6, 7615.0], [28.7, 7629.0], [28.8, 7629.0], [28.9, 7760.0], [29.0, 7838.0], [29.1, 7894.0], [29.2, 7894.0], [29.3, 7957.0], [29.4, 8116.0], [29.5, 8344.0], [29.6, 8352.0], [29.7, 8352.0], [29.8, 8403.0], [29.9, 8425.0], [30.0, 8463.0], [30.1, 8463.0], [30.2, 8469.0], [30.3, 8553.0], [30.4, 8584.0], [30.5, 8584.0], [30.6, 8628.0], [30.7, 8713.0], [30.8, 8714.0], [30.9, 8930.0], [31.0, 8930.0], [31.1, 8992.0], [31.2, 9056.0], [31.3, 9145.0], [31.4, 9145.0], [31.5, 9178.0], [31.6, 9215.0], [31.7, 9236.0], [31.8, 9236.0], [31.9, 9244.0], [32.0, 9248.0], [32.1, 9370.0], [32.2, 9370.0], [32.3, 9511.0], [32.4, 9719.0], [32.5, 9745.0], [32.6, 9838.0], [32.7, 9838.0], [32.8, 10044.0], [32.9, 10052.0], [33.0, 10111.0], [33.1, 10111.0], [33.2, 10119.0], [33.3, 10195.0], [33.4, 10201.0], [33.5, 10201.0], [33.6, 10288.0], [33.7, 10395.0], [33.8, 10487.0], [33.9, 10576.0], [34.0, 10576.0], [34.1, 10696.0], [34.2, 10709.0], [34.3, 10739.0], [34.4, 10739.0], [34.5, 10740.0], [34.6, 10784.0], [34.7, 10984.0], [34.8, 10984.0], [34.9, 11044.0], [35.0, 11048.0], [35.1, 11092.0], [35.2, 11092.0], [35.3, 11364.0], [35.4, 11443.0], [35.5, 11487.0], [35.6, 11488.0], [35.7, 11488.0], [35.8, 11561.0], [35.9, 11592.0], [36.0, 11633.0], [36.1, 11633.0], [36.2, 11675.0], [36.3, 11680.0], [36.4, 11699.0], [36.5, 11699.0], [36.6, 11707.0], [36.7, 11762.0], [36.8, 11917.0], [36.9, 12239.0], [37.0, 12239.0], [37.1, 12285.0], [37.2, 12308.0], [37.3, 12308.0], [37.4, 12308.0], [37.5, 12388.0], [37.6, 12524.0], [37.7, 12688.0], [37.8, 12688.0], [37.9, 12831.0], [38.0, 12899.0], [38.1, 12919.0], [38.2, 12919.0], [38.3, 12951.0], [38.4, 12962.0], [38.5, 13045.0], [38.6, 13207.0], [38.7, 13207.0], [38.8, 13229.0], [38.9, 13363.0], [39.0, 13371.0], [39.1, 13371.0], [39.2, 13402.0], [39.3, 13516.0], [39.4, 13707.0], [39.5, 13707.0], [39.6, 13725.0], [39.7, 13730.0], [39.8, 13826.0], [39.9, 13889.0], [40.0, 13889.0], [40.1, 13896.0], [40.2, 14064.0], [40.3, 14079.0], [40.4, 14079.0], [40.5, 14112.0], [40.6, 14176.0], [40.7, 14242.0], [40.8, 14242.0], [40.9, 14289.0], [41.0, 14410.0], [41.1, 14481.0], [41.2, 14527.0], [41.3, 14527.0], [41.4, 14562.0], [41.5, 14625.0], [41.6, 14701.0], [41.7, 14701.0], [41.8, 14748.0], [41.9, 14982.0], [42.0, 15254.0], [42.1, 15254.0], [42.2, 15261.0], [42.3, 15304.0], [42.4, 15309.0], [42.5, 15309.0], [42.6, 15353.0], [42.7, 15359.0], [42.8, 15644.0], [42.9, 15752.0], [43.0, 15752.0], [43.1, 15757.0], [43.2, 15845.0], [43.3, 15859.0], [43.4, 15859.0], [43.5, 15892.0], [43.6, 15953.0], [43.7, 15992.0], [43.8, 15992.0], [43.9, 16172.0], [44.0, 16214.0], [44.1, 16347.0], [44.2, 16364.0], [44.3, 16364.0], [44.4, 16542.0], [44.5, 16654.0], [44.6, 16687.0], [44.7, 16687.0], [44.8, 16767.0], [44.9, 17037.0], [45.0, 17167.0], [45.1, 17167.0], [45.2, 17281.0], [45.3, 17298.0], [45.4, 17370.0], [45.5, 17370.0], [45.6, 17388.0], [45.7, 17415.0], [45.8, 17474.0], [45.9, 17510.0], [46.0, 17510.0], [46.1, 17569.0], [46.2, 17571.0], [46.3, 17583.0], [46.4, 17583.0], [46.5, 17698.0], [46.6, 17741.0], [46.7, 17782.0], [46.8, 17782.0], [46.9, 17786.0], [47.0, 17853.0], [47.1, 17855.0], [47.2, 17929.0], [47.3, 17929.0], [47.4, 18033.0], [47.5, 18068.0], [47.6, 18092.0], [47.7, 18092.0], [47.8, 18170.0], [47.9, 18184.0], [48.0, 18256.0], [48.1, 18256.0], [48.2, 18414.0], [48.3, 18502.0], [48.4, 18570.0], [48.5, 18570.0], [48.6, 18570.0], [48.7, 18600.0], [48.8, 18614.0], [48.9, 18764.0], [49.0, 18764.0], [49.1, 18893.0], [49.2, 18894.0], [49.3, 18952.0], [49.4, 18952.0], [49.5, 19082.0], [49.6, 19163.0], [49.7, 19214.0], [49.8, 19214.0], [49.9, 19279.0], [50.0, 19399.0], [50.1, 19409.0], [50.2, 19472.0], [50.3, 19472.0], [50.4, 19487.0], [50.5, 19494.0], [50.6, 19586.0], [50.7, 19586.0], [50.8, 19642.0], [50.9, 19694.0], [51.0, 19798.0], [51.1, 19798.0], [51.2, 19883.0], [51.3, 19894.0], [51.4, 19920.0], [51.5, 20017.0], [51.6, 20017.0], [51.7, 20020.0], [51.8, 20021.0], [51.9, 20042.0], [52.0, 20042.0], [52.1, 20091.0], [52.2, 20098.0], [52.3, 20132.0], [52.4, 20132.0], [52.5, 20188.0], [52.6, 20198.0], [52.7, 20228.0], [52.8, 20228.0], [52.9, 20424.0], [53.0, 20507.0], [53.1, 20531.0], [53.2, 20548.0], [53.3, 20548.0], [53.4, 20627.0], [53.5, 20634.0], [53.6, 20666.0], [53.7, 20666.0], [53.8, 20721.0], [53.9, 20740.0], [54.0, 20741.0], [54.1, 20741.0], [54.2, 20752.0], [54.3, 20773.0], [54.4, 20836.0], [54.5, 20852.0], [54.6, 20852.0], [54.7, 20854.0], [54.8, 20863.0], [54.9, 20902.0], [55.0, 20902.0], [55.1, 21014.0], [55.2, 21051.0], [55.3, 21072.0], [55.4, 21072.0], [55.5, 21149.0], [55.6, 21150.0], [55.7, 21150.0], [55.8, 21150.0], [55.9, 21208.0], [56.0, 21223.0], [56.1, 21344.0], [56.2, 21347.0], [56.3, 21347.0], [56.4, 21381.0], [56.5, 21398.0], [56.6, 21540.0], [56.7, 21540.0], [56.8, 21630.0], [56.9, 21680.0], [57.0, 21730.0], [57.1, 21730.0], [57.2, 21790.0], [57.3, 21965.0], [57.4, 21969.0], [57.5, 21983.0], [57.6, 21983.0], [57.7, 22036.0], [57.8, 22115.0], [57.9, 22168.0], [58.0, 22168.0], [58.1, 22184.0], [58.2, 22254.0], [58.3, 22265.0], [58.4, 22265.0], [58.5, 22704.0], [58.6, 22734.0], [58.7, 22754.0], [58.8, 22754.0], [58.9, 22776.0], [59.0, 22916.0], [59.1, 22929.0], [59.2, 23008.0], [59.3, 23008.0], [59.4, 23016.0], [59.5, 23068.0], [59.6, 23154.0], [59.7, 23154.0], [59.8, 23165.0], [59.9, 23194.0], [60.0, 23258.0], [60.1, 23258.0], [60.2, 23264.0], [60.3, 23298.0], [60.4, 23361.0], [60.5, 23400.0], [60.6, 23400.0], [60.7, 23444.0], [60.8, 23566.0], [60.9, 23595.0], [61.0, 23595.0], [61.1, 23611.0], [61.2, 23690.0], [61.3, 23731.0], [61.4, 23731.0], [61.5, 23760.0], [61.6, 23779.0], [61.7, 23792.0], [61.8, 23957.0], [61.9, 23957.0], [62.0, 23980.0], [62.1, 24030.0], [62.2, 24038.0], [62.3, 24038.0], [62.4, 24039.0], [62.5, 24091.0], [62.6, 24147.0], [62.7, 24147.0], [62.8, 24167.0], [62.9, 24192.0], [63.0, 24264.0], [63.1, 24264.0], [63.2, 24317.0], [63.3, 24327.0], [63.4, 24356.0], [63.5, 24489.0], [63.6, 24489.0], [63.7, 24491.0], [63.8, 24585.0], [63.9, 24616.0], [64.0, 24616.0], [64.1, 24632.0], [64.2, 24659.0], [64.3, 24775.0], [64.4, 24775.0], [64.5, 24813.0], [64.6, 24917.0], [64.7, 24919.0], [64.8, 25020.0], [64.9, 25020.0], [65.0, 25038.0], [65.1, 25083.0], [65.2, 25443.0], [65.3, 25443.0], [65.4, 25462.0], [65.5, 25465.0], [65.6, 25511.0], [65.7, 25511.0], [65.8, 25640.0], [65.9, 25714.0], [66.0, 25812.0], [66.1, 25812.0], [66.2, 25855.0], [66.3, 26062.0], [66.4, 26109.0], [66.5, 26202.0], [66.6, 26202.0], [66.7, 26210.0], [66.8, 26213.0], [66.9, 26225.0], [67.0, 26225.0], [67.1, 26358.0], [67.2, 26501.0], [67.3, 26627.0], [67.4, 26627.0], [67.5, 26652.0], [67.6, 26712.0], [67.7, 26834.0], [67.8, 26928.0], [67.9, 26928.0], [68.0, 26966.0], [68.1, 26983.0], [68.2, 26998.0], [68.3, 26998.0], [68.4, 27134.0], [68.5, 27217.0], [68.6, 27245.0], [68.7, 27245.0], [68.8, 27310.0], [68.9, 27450.0], [69.0, 27458.0], [69.1, 27458.0], [69.2, 27463.0], [69.3, 27506.0], [69.4, 27607.0], [69.5, 27863.0], [69.6, 27863.0], [69.7, 27869.0], [69.8, 27895.0], [69.9, 27970.0], [70.0, 27970.0], [70.1, 28037.0], [70.2, 28183.0], [70.3, 28194.0], [70.4, 28194.0], [70.5, 28287.0], [70.6, 28298.0], [70.7, 28342.0], [70.8, 28480.0], [70.9, 28480.0], [71.0, 28491.0], [71.1, 28508.0], [71.2, 28523.0], [71.3, 28523.0], [71.4, 28792.0], [71.5, 28834.0], [71.6, 28867.0], [71.7, 28867.0], [71.8, 28870.0], [71.9, 28922.0], [72.0, 28951.0], [72.1, 28992.0], [72.2, 28992.0], [72.3, 29000.0], [72.4, 29011.0], [72.5, 29094.0], [72.6, 29094.0], [72.7, 29150.0], [72.8, 29180.0], [72.9, 29206.0], [73.0, 29206.0], [73.1, 29265.0], [73.2, 29412.0], [73.3, 29434.0], [73.4, 29434.0], [73.5, 29438.0], [73.6, 29570.0], [73.7, 29594.0], [73.8, 29703.0], [73.9, 29703.0], [74.0, 29900.0], [74.1, 29975.0], [74.2, 30083.0], [74.3, 30083.0], [74.4, 30086.0], [74.5, 30252.0], [74.6, 30254.0], [74.7, 30254.0], [74.8, 30374.0], [74.9, 30381.0], [75.0, 30426.0], [75.1, 30683.0], [75.2, 30683.0], [75.3, 30706.0], [75.4, 30720.0], [75.5, 30760.0], [75.6, 30760.0], [75.7, 30805.0], [75.8, 30847.0], [75.9, 30953.0], [76.0, 30953.0], [76.1, 31009.0], [76.2, 31032.0], [76.3, 31041.0], [76.4, 31041.0], [76.5, 31090.0], [76.6, 31097.0], [76.7, 31127.0], [76.8, 31377.0], [76.9, 31377.0], [77.0, 31411.0], [77.1, 31420.0], [77.2, 31485.0], [77.3, 31485.0], [77.4, 31638.0], [77.5, 31669.0], [77.6, 31675.0], [77.7, 31675.0], [77.8, 31714.0], [77.9, 31752.0], [78.0, 31800.0], [78.1, 31829.0], [78.2, 31829.0], [78.3, 31854.0], [78.4, 31890.0], [78.5, 31959.0], [78.6, 31959.0], [78.7, 32013.0], [78.8, 32217.0], [78.9, 32519.0], [79.0, 32519.0], [79.1, 32589.0], [79.2, 32711.0], [79.3, 32781.0], [79.4, 32781.0], [79.5, 32814.0], [79.6, 32946.0], [79.7, 33060.0], [79.8, 33128.0], [79.9, 33128.0], [80.0, 33222.0], [80.1, 33249.0], [80.2, 33257.0], [80.3, 33257.0], [80.4, 33261.0], [80.5, 33320.0], [80.6, 33632.0], [80.7, 33632.0], [80.8, 33680.0], [80.9, 33734.0], [81.0, 33882.0], [81.1, 34076.0], [81.2, 34076.0], [81.3, 34187.0], [81.4, 34311.0], [81.5, 34320.0], [81.6, 34320.0], [81.7, 34446.0], [81.8, 34607.0], [81.9, 34730.0], [82.0, 34730.0], [82.1, 34736.0], [82.2, 34842.0], [82.3, 34908.0], [82.4, 34986.0], [82.5, 34986.0], [82.6, 35110.0], [82.7, 35122.0], [82.8, 35427.0], [82.9, 35427.0], [83.0, 35454.0], [83.1, 35667.0], [83.2, 35870.0], [83.3, 35870.0], [83.4, 36026.0], [83.5, 36281.0], [83.6, 36285.0], [83.7, 36285.0], [83.8, 36333.0], [83.9, 36366.0], [84.0, 36381.0], [84.1, 36452.0], [84.2, 36452.0], [84.3, 36498.0], [84.4, 36568.0], [84.5, 36583.0], [84.6, 36583.0], [84.7, 36623.0], [84.8, 36634.0], [84.9, 36842.0], [85.0, 36842.0], [85.1, 36919.0], [85.2, 37172.0], [85.3, 37237.0], [85.4, 37344.0], [85.5, 37344.0], [85.6, 37348.0], [85.7, 37354.0], [85.8, 37458.0], [85.9, 37458.0], [86.0, 37469.0], [86.1, 37568.0], [86.2, 37612.0], [86.3, 37612.0], [86.4, 37982.0], [86.5, 38010.0], [86.6, 38030.0], [86.7, 38030.0], [86.8, 38102.0], [86.9, 38207.0], [87.0, 38322.0], [87.1, 38400.0], [87.2, 38400.0], [87.3, 38496.0], [87.4, 38503.0], [87.5, 38732.0], [87.6, 38732.0], [87.7, 38783.0], [87.8, 38882.0], [87.9, 38903.0], [88.0, 38903.0], [88.1, 38946.0], [88.2, 38996.0], [88.3, 39079.0], [88.4, 39392.0], [88.5, 39392.0], [88.6, 39530.0], [88.7, 39564.0], [88.8, 39757.0], [88.9, 39757.0], [89.0, 40059.0], [89.1, 40210.0], [89.2, 40356.0], [89.3, 40356.0], [89.4, 40381.0], [89.5, 40387.0], [89.6, 40511.0], [89.7, 40511.0], [89.8, 40670.0], [89.9, 40670.0], [90.0, 40690.0], [90.1, 40760.0], [90.2, 40760.0], [90.3, 40801.0], [90.4, 40851.0], [90.5, 40885.0], [90.6, 40885.0], [90.7, 40894.0], [90.8, 40956.0], [90.9, 40965.0], [91.0, 40965.0], [91.1, 41214.0], [91.2, 41305.0], [91.3, 41483.0], [91.4, 42000.0], [91.5, 42000.0], [91.6, 42531.0], [91.7, 42600.0], [91.8, 42606.0], [91.9, 42606.0], [92.0, 42655.0], [92.1, 42771.0], [92.2, 43010.0], [92.3, 43010.0], [92.4, 43303.0], [92.5, 43316.0], [92.6, 43371.0], [92.7, 43761.0], [92.8, 43761.0], [92.9, 43844.0], [93.0, 43907.0], [93.1, 44020.0], [93.2, 44020.0], [93.3, 44129.0], [93.4, 44143.0], [93.5, 44357.0], [93.6, 44357.0], [93.7, 44460.0], [93.8, 45356.0], [93.9, 45480.0], [94.0, 45480.0], [94.1, 45697.0], [94.2, 45932.0], [94.3, 46482.0], [94.4, 47525.0], [94.5, 47525.0], [94.6, 47788.0], [94.7, 49221.0], [94.8, 49596.0], [94.9, 49596.0], [95.0, 50427.0], [95.1, 51649.0], [95.2, 51768.0], [95.3, 51768.0], [95.4, 53205.0], [95.5, 53597.0], [95.6, 53619.0], [95.7, 54667.0], [95.8, 54667.0], [95.9, 55021.0], [96.0, 55713.0], [96.1, 57495.0], [96.2, 57495.0], [96.3, 57595.0], [96.4, 58257.0], [96.5, 58337.0], [96.6, 58337.0], [96.7, 59289.0], [96.8, 59845.0], [96.9, 60108.0], [97.0, 60108.0], [97.1, 60108.0], [97.2, 60111.0], [97.3, 60117.0], [97.4, 60119.0], [97.5, 60119.0], [97.6, 60119.0], [97.7, 60127.0], [97.8, 60139.0], [97.9, 60139.0], [98.0, 60155.0], [98.1, 60157.0], [98.2, 60158.0], [98.3, 60158.0], [98.4, 60158.0], [98.5, 60171.0], [98.6, 60177.0], [98.7, 60182.0], [98.8, 60182.0], [98.9, 60185.0], [99.0, 60190.0], [99.1, 60193.0], [99.2, 60193.0], [99.3, 60200.0], [99.4, 60223.0], [99.5, 60245.0], [99.6, 60245.0], [99.7, 60259.0], [99.8, 60271.0], [99.9, 60362.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 206.0], [0.1, 206.0], [0.2, 206.0], [0.3, 206.0], [0.4, 206.0], [0.5, 206.0], [0.6, 206.0], [0.7, 207.0], [0.8, 207.0], [0.9, 207.0], [1.0, 207.0], [1.1, 208.0], [1.2, 208.0], [1.3, 208.0], [1.4, 208.0], [1.5, 208.0], [1.6, 208.0], [1.7, 208.0], [1.8, 208.0], [1.9, 208.0], [2.0, 208.0], [2.1, 208.0], [2.2, 208.0], [2.3, 208.0], [2.4, 209.0], [2.5, 209.0], [2.6, 209.0], [2.7, 209.0], [2.8, 209.0], [2.9, 209.0], [3.0, 209.0], [3.1, 209.0], [3.2, 209.0], [3.3, 209.0], [3.4, 209.0], [3.5, 209.0], [3.6, 209.0], [3.7, 209.0], [3.8, 209.0], [3.9, 209.0], [4.0, 209.0], [4.1, 209.0], [4.2, 209.0], [4.3, 209.0], [4.4, 209.0], [4.5, 209.0], [4.6, 210.0], [4.7, 210.0], [4.8, 210.0], [4.9, 210.0], [5.0, 210.0], [5.1, 210.0], [5.2, 210.0], [5.3, 210.0], [5.4, 210.0], [5.5, 210.0], [5.6, 210.0], [5.7, 210.0], [5.8, 210.0], [5.9, 210.0], [6.0, 210.0], [6.1, 210.0], [6.2, 210.0], [6.3, 210.0], [6.4, 210.0], [6.5, 210.0], [6.6, 211.0], [6.7, 211.0], [6.8, 211.0], [6.9, 211.0], [7.0, 211.0], [7.1, 211.0], [7.2, 211.0], [7.3, 211.0], [7.4, 211.0], [7.5, 211.0], [7.6, 211.0], [7.7, 211.0], [7.8, 211.0], [7.9, 211.0], [8.0, 211.0], [8.1, 211.0], [8.2, 211.0], [8.3, 211.0], [8.4, 211.0], [8.5, 211.0], [8.6, 211.0], [8.7, 211.0], [8.8, 211.0], [8.9, 211.0], [9.0, 211.0], [9.1, 211.0], [9.2, 212.0], [9.3, 212.0], [9.4, 212.0], [9.5, 212.0], [9.6, 212.0], [9.7, 212.0], [9.8, 212.0], [9.9, 212.0], [10.0, 212.0], [10.1, 212.0], [10.2, 212.0], [10.3, 212.0], [10.4, 212.0], [10.5, 212.0], [10.6, 212.0], [10.7, 212.0], [10.8, 212.0], [10.9, 212.0], [11.0, 212.0], [11.1, 212.0], [11.2, 213.0], [11.3, 213.0], [11.4, 213.0], [11.5, 213.0], [11.6, 213.0], [11.7, 213.0], [11.8, 213.0], [11.9, 213.0], [12.0, 213.0], [12.1, 213.0], [12.2, 213.0], [12.3, 213.0], [12.4, 214.0], [12.5, 214.0], [12.6, 214.0], [12.7, 214.0], [12.8, 214.0], [12.9, 214.0], [13.0, 214.0], [13.1, 214.0], [13.2, 214.0], [13.3, 214.0], [13.4, 214.0], [13.5, 214.0], [13.6, 215.0], [13.7, 215.0], [13.8, 215.0], [13.9, 215.0], [14.0, 215.0], [14.1, 215.0], [14.2, 215.0], [14.3, 215.0], [14.4, 215.0], [14.5, 215.0], [14.6, 215.0], [14.7, 215.0], [14.8, 215.0], [14.9, 215.0], [15.0, 216.0], [15.1, 216.0], [15.2, 216.0], [15.3, 216.0], [15.4, 216.0], [15.5, 218.0], [15.6, 218.0], [15.7, 218.0], [15.8, 218.0], [15.9, 218.0], [16.0, 218.0], [16.1, 219.0], [16.2, 219.0], [16.3, 220.0], [16.4, 220.0], [16.5, 220.0], [16.6, 220.0], [16.7, 220.0], [16.8, 221.0], [16.9, 221.0], [17.0, 221.0], [17.1, 222.0], [17.2, 222.0], [17.3, 222.0], [17.4, 222.0], [17.5, 222.0], [17.6, 222.0], [17.7, 222.0], [17.8, 222.0], [17.9, 223.0], [18.0, 223.0], [18.1, 223.0], [18.2, 223.0], [18.3, 223.0], [18.4, 223.0], [18.5, 224.0], [18.6, 224.0], [18.7, 224.0], [18.8, 225.0], [18.9, 227.0], [19.0, 227.0], [19.1, 227.0], [19.2, 228.0], [19.3, 228.0], [19.4, 228.0], [19.5, 230.0], [19.6, 230.0], [19.7, 231.0], [19.8, 231.0], [19.9, 231.0], [20.0, 231.0], [20.1, 232.0], [20.2, 233.0], [20.3, 233.0], [20.4, 233.0], [20.5, 233.0], [20.6, 233.0], [20.7, 233.0], [20.8, 233.0], [20.9, 234.0], [21.0, 235.0], [21.1, 235.0], [21.2, 235.0], [21.3, 235.0], [21.4, 238.0], [21.5, 239.0], [21.6, 239.0], [21.7, 240.0], [21.8, 241.0], [21.9, 242.0], [22.0, 242.0], [22.1, 242.0], [22.2, 244.0], [22.3, 244.0], [22.4, 245.0], [22.5, 245.0], [22.6, 246.0], [22.7, 250.0], [22.8, 250.0], [22.9, 250.0], [23.0, 250.0], [23.1, 252.0], [23.2, 252.0], [23.3, 252.0], [23.4, 257.0], [23.5, 259.0], [23.6, 261.0], [23.7, 261.0], [23.8, 261.0], [23.9, 262.0], [24.0, 263.0], [24.1, 265.0], [24.2, 265.0], [24.3, 265.0], [24.4, 269.0], [24.5, 270.0], [24.6, 270.0], [24.7, 271.0], [24.8, 272.0], [24.9, 274.0], [25.0, 274.0], [25.1, 274.0], [25.2, 275.0], [25.3, 277.0], [25.4, 279.0], [25.5, 279.0], [25.6, 279.0], [25.7, 282.0], [25.8, 284.0], [25.9, 284.0], [26.0, 284.0], [26.1, 286.0], [26.2, 287.0], [26.3, 287.0], [26.4, 287.0], [26.5, 288.0], [26.6, 289.0], [26.7, 290.0], [26.8, 290.0], [26.9, 290.0], [27.0, 291.0], [27.1, 291.0], [27.2, 291.0], [27.3, 291.0], [27.4, 294.0], [27.5, 294.0], [27.6, 294.0], [27.7, 295.0], [27.8, 295.0], [27.9, 297.0], [28.0, 298.0], [28.1, 298.0], [28.2, 298.0], [28.3, 300.0], [28.4, 300.0], [28.5, 300.0], [28.6, 300.0], [28.7, 300.0], [28.8, 300.0], [28.9, 300.0], [29.0, 300.0], [29.1, 301.0], [29.2, 301.0], [29.3, 301.0], [29.4, 301.0], [29.5, 301.0], [29.6, 302.0], [29.7, 302.0], [29.8, 302.0], [29.9, 303.0], [30.0, 303.0], [30.1, 303.0], [30.2, 303.0], [30.3, 303.0], [30.4, 303.0], [30.5, 303.0], [30.6, 303.0], [30.7, 303.0], [30.8, 303.0], [30.9, 303.0], [31.0, 303.0], [31.1, 303.0], [31.2, 304.0], [31.3, 304.0], [31.4, 304.0], [31.5, 304.0], [31.6, 304.0], [31.7, 304.0], [31.8, 304.0], [31.9, 304.0], [32.0, 304.0], [32.1, 304.0], [32.2, 304.0], [32.3, 304.0], [32.4, 304.0], [32.5, 304.0], [32.6, 304.0], [32.7, 304.0], [32.8, 304.0], [32.9, 304.0], [33.0, 304.0], [33.1, 304.0], [33.2, 304.0], [33.3, 304.0], [33.4, 304.0], [33.5, 304.0], [33.6, 305.0], [33.7, 305.0], [33.8, 305.0], [33.9, 305.0], [34.0, 305.0], [34.1, 305.0], [34.2, 305.0], [34.3, 305.0], [34.4, 305.0], [34.5, 305.0], [34.6, 305.0], [34.7, 305.0], [34.8, 305.0], [34.9, 305.0], [35.0, 305.0], [35.1, 305.0], [35.2, 305.0], [35.3, 305.0], [35.4, 305.0], [35.5, 305.0], [35.6, 305.0], [35.7, 305.0], [35.8, 305.0], [35.9, 305.0], [36.0, 306.0], [36.1, 306.0], [36.2, 306.0], [36.3, 306.0], [36.4, 306.0], [36.5, 306.0], [36.6, 306.0], [36.7, 306.0], [36.8, 306.0], [36.9, 306.0], [37.0, 306.0], [37.1, 306.0], [37.2, 306.0], [37.3, 306.0], [37.4, 306.0], [37.5, 306.0], [37.6, 306.0], [37.7, 306.0], [37.8, 306.0], [37.9, 306.0], [38.0, 306.0], [38.1, 306.0], [38.2, 306.0], [38.3, 306.0], [38.4, 306.0], [38.5, 306.0], [38.6, 306.0], [38.7, 307.0], [38.8, 307.0], [38.9, 307.0], [39.0, 307.0], [39.1, 307.0], [39.2, 307.0], [39.3, 307.0], [39.4, 307.0], [39.5, 307.0], [39.6, 307.0], [39.7, 307.0], [39.8, 307.0], [39.9, 307.0], [40.0, 307.0], [40.1, 307.0], [40.2, 307.0], [40.3, 307.0], [40.4, 307.0], [40.5, 307.0], [40.6, 307.0], [40.7, 307.0], [40.8, 307.0], [40.9, 308.0], [41.0, 308.0], [41.1, 308.0], [41.2, 308.0], [41.3, 308.0], [41.4, 308.0], [41.5, 308.0], [41.6, 308.0], [41.7, 308.0], [41.8, 308.0], [41.9, 308.0], [42.0, 308.0], [42.1, 308.0], [42.2, 308.0], [42.3, 308.0], [42.4, 308.0], [42.5, 309.0], [42.6, 309.0], [42.7, 309.0], [42.8, 309.0], [42.9, 310.0], [43.0, 310.0], [43.1, 310.0], [43.2, 310.0], [43.3, 310.0], [43.4, 310.0], [43.5, 310.0], [43.6, 310.0], [43.7, 310.0], [43.8, 310.0], [43.9, 310.0], [44.0, 310.0], [44.1, 311.0], [44.2, 311.0], [44.3, 311.0], [44.4, 311.0], [44.5, 311.0], [44.6, 311.0], [44.7, 312.0], [44.8, 312.0], [44.9, 312.0], [45.0, 313.0], [45.1, 313.0], [45.2, 313.0], [45.3, 313.0], [45.4, 314.0], [45.5, 314.0], [45.6, 314.0], [45.7, 314.0], [45.8, 314.0], [45.9, 315.0], [46.0, 315.0], [46.1, 315.0], [46.2, 315.0], [46.3, 315.0], [46.4, 316.0], [46.5, 316.0], [46.6, 316.0], [46.7, 316.0], [46.8, 316.0], [46.9, 316.0], [47.0, 316.0], [47.1, 316.0], [47.2, 316.0], [47.3, 316.0], [47.4, 316.0], [47.5, 316.0], [47.6, 317.0], [47.7, 317.0], [47.8, 317.0], [47.9, 317.0], [48.0, 318.0], [48.1, 319.0], [48.2, 319.0], [48.3, 319.0], [48.4, 319.0], [48.5, 319.0], [48.6, 319.0], [48.7, 320.0], [48.8, 320.0], [48.9, 320.0], [49.0, 321.0], [49.1, 321.0], [49.2, 321.0], [49.3, 321.0], [49.4, 321.0], [49.5, 322.0], [49.6, 322.0], [49.7, 324.0], [49.8, 325.0], [49.9, 326.0], [50.0, 326.0], [50.1, 326.0], [50.2, 326.0], [50.3, 326.0], [50.4, 326.0], [50.5, 326.0], [50.6, 326.0], [50.7, 327.0], [50.8, 327.0], [50.9, 327.0], [51.0, 327.0], [51.1, 329.0], [51.2, 330.0], [51.3, 330.0], [51.4, 330.0], [51.5, 331.0], [51.6, 331.0], [51.7, 333.0], [51.8, 333.0], [51.9, 334.0], [52.0, 335.0], [52.1, 336.0], [52.2, 336.0], [52.3, 337.0], [52.4, 337.0], [52.5, 338.0], [52.6, 338.0], [52.7, 338.0], [52.8, 340.0], [52.9, 341.0], [53.0, 341.0], [53.1, 341.0], [53.2, 343.0], [53.3, 344.0], [53.4, 345.0], [53.5, 345.0], [53.6, 345.0], [53.7, 346.0], [53.8, 347.0], [53.9, 347.0], [54.0, 350.0], [54.1, 350.0], [54.2, 351.0], [54.3, 352.0], [54.4, 352.0], [54.5, 353.0], [54.6, 353.0], [54.7, 353.0], [54.8, 353.0], [54.9, 354.0], [55.0, 356.0], [55.1, 357.0], [55.2, 357.0], [55.3, 357.0], [55.4, 357.0], [55.5, 357.0], [55.6, 358.0], [55.7, 358.0], [55.8, 358.0], [55.9, 359.0], [56.0, 361.0], [56.1, 361.0], [56.2, 362.0], [56.3, 363.0], [56.4, 363.0], [56.5, 363.0], [56.6, 365.0], [56.7, 366.0], [56.8, 367.0], [56.9, 367.0], [57.0, 368.0], [57.1, 368.0], [57.2, 369.0], [57.3, 371.0], [57.4, 371.0], [57.5, 373.0], [57.6, 373.0], [57.7, 376.0], [57.8, 376.0], [57.9, 378.0], [58.0, 378.0], [58.1, 379.0], [58.2, 379.0], [58.3, 381.0], [58.4, 381.0], [58.5, 384.0], [58.6, 385.0], [58.7, 385.0], [58.8, 386.0], [58.9, 387.0], [59.0, 387.0], [59.1, 387.0], [59.2, 388.0], [59.3, 388.0], [59.4, 388.0], [59.5, 388.0], [59.6, 392.0], [59.7, 393.0], [59.8, 393.0], [59.9, 393.0], [60.0, 393.0], [60.1, 394.0], [60.2, 394.0], [60.3, 395.0], [60.4, 395.0], [60.5, 395.0], [60.6, 395.0], [60.7, 395.0], [60.8, 395.0], [60.9, 396.0], [61.0, 397.0], [61.1, 397.0], [61.2, 397.0], [61.3, 397.0], [61.4, 398.0], [61.5, 398.0], [61.6, 398.0], [61.7, 398.0], [61.8, 399.0], [61.9, 399.0], [62.0, 399.0], [62.1, 399.0], [62.2, 399.0], [62.3, 400.0], [62.4, 400.0], [62.5, 400.0], [62.6, 400.0], [62.7, 401.0], [62.8, 401.0], [62.9, 401.0], [63.0, 401.0], [63.1, 401.0], [63.2, 402.0], [63.3, 402.0], [63.4, 402.0], [63.5, 402.0], [63.6, 403.0], [63.7, 403.0], [63.8, 403.0], [63.9, 403.0], [64.0, 403.0], [64.1, 403.0], [64.2, 403.0], [64.3, 403.0], [64.4, 403.0], [64.5, 403.0], [64.6, 404.0], [64.7, 404.0], [64.8, 404.0], [64.9, 404.0], [65.0, 404.0], [65.1, 404.0], [65.2, 404.0], [65.3, 404.0], [65.4, 404.0], [65.5, 404.0], [65.6, 404.0], [65.7, 404.0], [65.8, 404.0], [65.9, 405.0], [66.0, 405.0], [66.1, 405.0], [66.2, 405.0], [66.3, 405.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 405.0], [67.2, 405.0], [67.3, 405.0], [67.4, 405.0], [67.5, 405.0], [67.6, 405.0], [67.7, 405.0], [67.8, 405.0], [67.9, 405.0], [68.0, 405.0], [68.1, 405.0], [68.2, 405.0], [68.3, 405.0], [68.4, 406.0], [68.5, 406.0], [68.6, 406.0], [68.7, 406.0], [68.8, 406.0], [68.9, 406.0], [69.0, 406.0], [69.1, 406.0], [69.2, 406.0], [69.3, 406.0], [69.4, 406.0], [69.5, 406.0], [69.6, 406.0], [69.7, 406.0], [69.8, 406.0], [69.9, 406.0], [70.0, 406.0], [70.1, 406.0], [70.2, 406.0], [70.3, 406.0], [70.4, 406.0], [70.5, 406.0], [70.6, 406.0], [70.7, 406.0], [70.8, 406.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 407.0], [71.8, 407.0], [71.9, 407.0], [72.0, 407.0], [72.1, 407.0], [72.2, 407.0], [72.3, 407.0], [72.4, 407.0], [72.5, 407.0], [72.6, 407.0], [72.7, 407.0], [72.8, 407.0], [72.9, 407.0], [73.0, 407.0], [73.1, 407.0], [73.2, 407.0], [73.3, 407.0], [73.4, 407.0], [73.5, 407.0], [73.6, 407.0], [73.7, 407.0], [73.8, 407.0], [73.9, 407.0], [74.0, 407.0], [74.1, 407.0], [74.2, 407.0], [74.3, 407.0], [74.4, 407.0], [74.5, 407.0], [74.6, 407.0], [74.7, 407.0], [74.8, 407.0], [74.9, 407.0], [75.0, 407.0], [75.1, 407.0], [75.2, 407.0], [75.3, 407.0], [75.4, 407.0], [75.5, 407.0], [75.6, 407.0], [75.7, 407.0], [75.8, 407.0], [75.9, 407.0], [76.0, 407.0], [76.1, 407.0], [76.2, 408.0], [76.3, 408.0], [76.4, 408.0], [76.5, 408.0], [76.6, 408.0], [76.7, 408.0], [76.8, 408.0], [76.9, 408.0], [77.0, 408.0], [77.1, 408.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 408.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 408.0], [79.2, 408.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 408.0], [80.4, 408.0], [80.5, 408.0], [80.6, 408.0], [80.7, 408.0], [80.8, 408.0], [80.9, 408.0], [81.0, 408.0], [81.1, 408.0], [81.2, 408.0], [81.3, 408.0], [81.4, 408.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 409.0], [83.5, 409.0], [83.6, 409.0], [83.7, 409.0], [83.8, 409.0], [83.9, 409.0], [84.0, 409.0], [84.1, 409.0], [84.2, 409.0], [84.3, 409.0], [84.4, 409.0], [84.5, 409.0], [84.6, 409.0], [84.7, 409.0], [84.8, 409.0], [84.9, 409.0], [85.0, 409.0], [85.1, 409.0], [85.2, 409.0], [85.3, 409.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 409.0], [86.0, 409.0], [86.1, 409.0], [86.2, 409.0], [86.3, 409.0], [86.4, 409.0], [86.5, 409.0], [86.6, 409.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 409.0], [87.2, 409.0], [87.3, 409.0], [87.4, 409.0], [87.5, 409.0], [87.6, 409.0], [87.7, 409.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 409.0], [89.1, 409.0], [89.2, 409.0], [89.3, 409.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 410.0], [90.3, 410.0], [90.4, 410.0], [90.5, 410.0], [90.6, 410.0], [90.7, 410.0], [90.8, 410.0], [90.9, 410.0], [91.0, 410.0], [91.1, 410.0], [91.2, 410.0], [91.3, 410.0], [91.4, 410.0], [91.5, 410.0], [91.6, 410.0], [91.7, 410.0], [91.8, 410.0], [91.9, 410.0], [92.0, 410.0], [92.1, 410.0], [92.2, 410.0], [92.3, 410.0], [92.4, 410.0], [92.5, 410.0], [92.6, 410.0], [92.7, 410.0], [92.8, 411.0], [92.9, 411.0], [93.0, 411.0], [93.1, 411.0], [93.2, 411.0], [93.3, 411.0], [93.4, 411.0], [93.5, 411.0], [93.6, 411.0], [93.7, 411.0], [93.8, 412.0], [93.9, 412.0], [94.0, 412.0], [94.1, 412.0], [94.2, 412.0], [94.3, 412.0], [94.4, 412.0], [94.5, 412.0], [94.6, 412.0], [94.7, 412.0], [94.8, 412.0], [94.9, 412.0], [95.0, 412.0], [95.1, 413.0], [95.2, 413.0], [95.3, 413.0], [95.4, 413.0], [95.5, 413.0], [95.6, 413.0], [95.7, 413.0], [95.8, 413.0], [95.9, 414.0], [96.0, 414.0], [96.1, 415.0], [96.2, 415.0], [96.3, 416.0], [96.4, 417.0], [96.5, 418.0], [96.6, 418.0], [96.7, 418.0], [96.8, 421.0], [96.9, 421.0], [97.0, 421.0], [97.1, 433.0], [97.2, 436.0], [97.3, 457.0], [97.4, 497.0], [97.5, 497.0], [97.6, 497.0], [97.7, 498.0], [97.8, 499.0], [97.9, 499.0], [98.0, 505.0], [98.1, 506.0], [98.2, 508.0], [98.3, 508.0], [98.4, 509.0], [98.5, 510.0], [98.6, 510.0], [98.7, 511.0], [98.8, 511.0], [98.9, 511.0], [99.0, 512.0], [99.1, 513.0], [99.2, 513.0], [99.3, 513.0], [99.4, 514.0], [99.5, 515.0], [99.6, 515.0], [99.7, 525.0], [99.8, 612.0], [99.9, 947.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 274.0, "series": [{"data": [[33700.0, 1.0], [34100.0, 1.0], [32900.0, 1.0], [35300.0, 4.0], [36500.0, 2.0], [34900.0, 1.0], [35700.0, 1.0], [38500.0, 1.0], [37700.0, 2.0], [38900.0, 2.0], [36900.0, 1.0], [40500.0, 3.0], [40900.0, 2.0], [39300.0, 2.0], [41300.0, 1.0], [42900.0, 3.0], [44500.0, 2.0], [43700.0, 1.0], [44100.0, 2.0], [46100.0, 1.0], [45700.0, 1.0], [47700.0, 1.0], [50100.0, 1.0], [55300.0, 1.0], [60500.0, 6.0], [300.0, 30.0], [400.0, 44.0], [500.0, 46.0], [600.0, 9.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [2100.0, 1.0], [3100.0, 1.0], [4000.0, 2.0], [4100.0, 1.0], [4600.0, 2.0], [4400.0, 1.0], [4800.0, 1.0], [5100.0, 5.0], [5000.0, 1.0], [4900.0, 2.0], [5300.0, 4.0], [5200.0, 1.0], [5600.0, 9.0], [5500.0, 7.0], [5400.0, 3.0], [5800.0, 3.0], [5700.0, 3.0], [5900.0, 3.0], [6100.0, 3.0], [6000.0, 3.0], [6200.0, 4.0], [6300.0, 2.0], [6500.0, 1.0], [6600.0, 5.0], [6400.0, 2.0], [6900.0, 2.0], [7000.0, 1.0], [7100.0, 2.0], [7400.0, 2.0], [7200.0, 4.0], [7300.0, 1.0], [7600.0, 2.0], [7700.0, 2.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 2.0], [8300.0, 1.0], [8700.0, 4.0], [8600.0, 1.0], [8400.0, 1.0], [9000.0, 3.0], [8900.0, 2.0], [8800.0, 1.0], [9200.0, 3.0], [9600.0, 3.0], [9500.0, 1.0], [9400.0, 2.0], [9300.0, 1.0], [9800.0, 1.0], [9900.0, 2.0], [10200.0, 1.0], [10600.0, 5.0], [10400.0, 1.0], [10700.0, 1.0], [10500.0, 1.0], [10300.0, 1.0], [11100.0, 2.0], [10900.0, 1.0], [11000.0, 2.0], [10800.0, 1.0], [11700.0, 2.0], [11400.0, 3.0], [11300.0, 1.0], [12000.0, 3.0], [12100.0, 2.0], [11900.0, 3.0], [11800.0, 2.0], [12300.0, 1.0], [12500.0, 1.0], [12600.0, 2.0], [12700.0, 1.0], [13100.0, 2.0], [13200.0, 3.0], [13000.0, 1.0], [12800.0, 2.0], [13600.0, 4.0], [13500.0, 1.0], [13400.0, 1.0], [14300.0, 3.0], [14100.0, 2.0], [13900.0, 2.0], [14000.0, 1.0], [14200.0, 1.0], [14400.0, 2.0], [14600.0, 2.0], [14500.0, 1.0], [14800.0, 2.0], [15000.0, 2.0], [15100.0, 2.0], [14900.0, 1.0], [15400.0, 1.0], [15600.0, 3.0], [15800.0, 1.0], [15500.0, 1.0], [15700.0, 1.0], [16300.0, 2.0], [16100.0, 2.0], [16000.0, 1.0], [16200.0, 1.0], [17400.0, 2.0], [16400.0, 2.0], [16800.0, 2.0], [16600.0, 1.0], [18200.0, 3.0], [17800.0, 1.0], [19200.0, 2.0], [18600.0, 2.0], [18800.0, 1.0], [19000.0, 2.0], [19800.0, 5.0], [20200.0, 2.0], [20400.0, 2.0], [21400.0, 5.0], [20800.0, 2.0], [21200.0, 5.0], [21000.0, 4.0], [21800.0, 1.0], [21600.0, 2.0], [22400.0, 2.0], [22000.0, 1.0], [22200.0, 1.0], [23200.0, 2.0], [23000.0, 2.0], [23400.0, 2.0], [23600.0, 4.0], [24000.0, 1.0], [24400.0, 4.0], [25000.0, 1.0], [24800.0, 3.0], [24600.0, 1.0], [25400.0, 1.0], [25200.0, 1.0], [26000.0, 3.0], [26600.0, 2.0], [25800.0, 2.0], [25600.0, 1.0], [26400.0, 2.0], [27200.0, 1.0], [27000.0, 2.0], [26800.0, 1.0], [27600.0, 2.0], [28600.0, 2.0], [27800.0, 1.0], [28400.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [29400.0, 2.0], [29200.0, 4.0], [28800.0, 3.0], [29000.0, 1.0], [29600.0, 2.0], [30200.0, 1.0], [30400.0, 2.0], [29800.0, 1.0], [30000.0, 1.0], [30600.0, 1.0], [31000.0, 3.0], [31200.0, 1.0], [31400.0, 3.0], [31600.0, 1.0], [32000.0, 3.0], [31800.0, 1.0], [32400.0, 1.0], [32800.0, 1.0], [34000.0, 1.0], [33600.0, 2.0], [34800.0, 1.0], [34400.0, 1.0], [36800.0, 4.0], [35200.0, 2.0], [36000.0, 1.0], [36400.0, 2.0], [37200.0, 1.0], [38400.0, 2.0], [37600.0, 3.0], [40000.0, 1.0], [40800.0, 1.0], [39200.0, 1.0], [41200.0, 4.0], [41600.0, 1.0], [44800.0, 1.0], [43600.0, 1.0], [44000.0, 1.0], [43200.0, 1.0], [44400.0, 1.0], [46800.0, 1.0], [48000.0, 1.0], [49600.0, 1.0], [50800.0, 1.0], [52000.0, 1.0], [53600.0, 1.0], [54800.0, 1.0], [56000.0, 1.0], [60400.0, 6.0], [33500.0, 2.0], [34300.0, 1.0], [34700.0, 1.0], [33900.0, 2.0], [36700.0, 3.0], [35900.0, 1.0], [38700.0, 2.0], [38300.0, 1.0], [37100.0, 1.0], [37900.0, 1.0], [40700.0, 1.0], [39900.0, 2.0], [40300.0, 1.0], [39100.0, 3.0], [42300.0, 1.0], [41100.0, 1.0], [41500.0, 2.0], [43500.0, 1.0], [44300.0, 1.0], [45500.0, 1.0], [51900.0, 1.0], [53900.0, 1.0], [57900.0, 2.0], [58700.0, 1.0], [59500.0, 1.0], [60300.0, 8.0], [17100.0, 1.0], [16700.0, 2.0], [16500.0, 1.0], [18100.0, 3.0], [17700.0, 4.0], [17900.0, 3.0], [18300.0, 3.0], [17500.0, 2.0], [18500.0, 2.0], [19100.0, 2.0], [19300.0, 2.0], [18900.0, 3.0], [20100.0, 4.0], [19900.0, 1.0], [19700.0, 1.0], [19500.0, 2.0], [20300.0, 2.0], [20900.0, 5.0], [20500.0, 5.0], [21100.0, 2.0], [21500.0, 1.0], [22300.0, 3.0], [22500.0, 3.0], [21700.0, 2.0], [22100.0, 2.0], [21900.0, 2.0], [23100.0, 1.0], [22900.0, 1.0], [23500.0, 1.0], [23300.0, 3.0], [24500.0, 2.0], [23900.0, 3.0], [24100.0, 5.0], [24300.0, 3.0], [23700.0, 2.0], [25300.0, 2.0], [25100.0, 2.0], [25500.0, 1.0], [24700.0, 2.0], [24900.0, 2.0], [26300.0, 2.0], [25900.0, 1.0], [26500.0, 1.0], [27300.0, 4.0], [26700.0, 1.0], [26900.0, 1.0], [27100.0, 1.0], [28100.0, 2.0], [27900.0, 1.0], [27700.0, 3.0], [28300.0, 3.0], [29300.0, 5.0], [29100.0, 1.0], [28700.0, 2.0], [29700.0, 2.0], [30300.0, 1.0], [30500.0, 3.0], [29900.0, 1.0], [30700.0, 1.0], [31300.0, 3.0], [30900.0, 3.0], [31700.0, 2.0], [32300.0, 3.0], [32100.0, 2.0], [31900.0, 3.0], [33400.0, 3.0], [33000.0, 3.0], [34600.0, 1.0], [35800.0, 1.0], [35000.0, 1.0], [38600.0, 1.0], [38200.0, 1.0], [37400.0, 2.0], [37800.0, 1.0], [39800.0, 1.0], [43000.0, 2.0], [41000.0, 2.0], [46200.0, 1.0], [53800.0, 1.0], [58600.0, 1.0], [60600.0, 4.0], [60200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 116.0], [32900.0, 1.0], [33700.0, 1.0], [33300.0, 1.0], [34100.0, 1.0], [34900.0, 2.0], [36500.0, 2.0], [37300.0, 3.0], [38500.0, 1.0], [38900.0, 3.0], [36900.0, 1.0], [38100.0, 1.0], [40900.0, 2.0], [39700.0, 1.0], [40500.0, 1.0], [39300.0, 1.0], [42500.0, 1.0], [41300.0, 1.0], [44100.0, 2.0], [43300.0, 3.0], [43700.0, 1.0], [45300.0, 1.0], [47700.0, 1.0], [200.0, 11.0], [51700.0, 1.0], [55700.0, 1.0], [60100.0, 18.0], [400.0, 1.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1600.0, 1.0], [2700.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [4200.0, 3.0], [4400.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [4700.0, 3.0], [4800.0, 2.0], [5000.0, 2.0], [5100.0, 10.0], [4900.0, 1.0], [5200.0, 12.0], [5300.0, 2.0], [5600.0, 5.0], [5500.0, 2.0], [5400.0, 2.0], [5800.0, 5.0], [5700.0, 2.0], [6100.0, 2.0], [6000.0, 2.0], [5900.0, 2.0], [6300.0, 1.0], [6200.0, 3.0], [6600.0, 2.0], [6400.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [7100.0, 1.0], [7000.0, 3.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [7600.0, 3.0], [7900.0, 1.0], [7800.0, 2.0], [7700.0, 1.0], [8100.0, 1.0], [8600.0, 1.0], [8400.0, 4.0], [8500.0, 2.0], [8700.0, 2.0], [8300.0, 2.0], [9200.0, 4.0], [9000.0, 1.0], [9100.0, 2.0], [8900.0, 2.0], [9500.0, 1.0], [9700.0, 2.0], [9300.0, 1.0], [10200.0, 2.0], [10100.0, 3.0], [10000.0, 2.0], [9800.0, 1.0], [10700.0, 4.0], [10600.0, 1.0], [10300.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [11000.0, 3.0], [10900.0, 1.0], [11600.0, 4.0], [11700.0, 2.0], [11500.0, 2.0], [11400.0, 3.0], [11300.0, 1.0], [11900.0, 1.0], [12200.0, 2.0], [12300.0, 3.0], [12600.0, 1.0], [12500.0, 1.0], [13300.0, 2.0], [12900.0, 3.0], [13200.0, 2.0], [12800.0, 2.0], [13000.0, 1.0], [13800.0, 3.0], [13400.0, 1.0], [13700.0, 3.0], [13500.0, 1.0], [14100.0, 2.0], [14000.0, 2.0], [14200.0, 2.0], [14700.0, 2.0], [14400.0, 2.0], [14600.0, 1.0], [14500.0, 2.0], [15200.0, 2.0], [15300.0, 4.0], [14900.0, 1.0], [15700.0, 2.0], [15800.0, 3.0], [15600.0, 1.0], [15900.0, 2.0], [16300.0, 2.0], [16200.0, 1.0], [16100.0, 1.0], [16600.0, 2.0], [17400.0, 2.0], [17200.0, 2.0], [17000.0, 1.0], [18400.0, 1.0], [18000.0, 3.0], [17800.0, 2.0], [18200.0, 1.0], [17600.0, 1.0], [19400.0, 4.0], [19200.0, 2.0], [18800.0, 2.0], [19000.0, 1.0], [18600.0, 2.0], [20000.0, 6.0], [19600.0, 2.0], [19800.0, 2.0], [20200.0, 1.0], [20400.0, 1.0], [21200.0, 2.0], [20800.0, 4.0], [21000.0, 3.0], [20600.0, 3.0], [22200.0, 2.0], [22000.0, 1.0], [21600.0, 2.0], [23200.0, 3.0], [23400.0, 2.0], [23000.0, 3.0], [24000.0, 4.0], [24400.0, 2.0], [24200.0, 1.0], [23600.0, 2.0], [24600.0, 3.0], [25000.0, 3.0], [25400.0, 3.0], [24800.0, 1.0], [25600.0, 1.0], [26600.0, 2.0], [26200.0, 4.0], [25800.0, 2.0], [26000.0, 1.0], [26800.0, 1.0], [27400.0, 3.0], [27200.0, 2.0], [27600.0, 1.0], [28200.0, 2.0], [27800.0, 3.0], [28400.0, 2.0], [28000.0, 1.0], [29400.0, 3.0], [29000.0, 3.0], [29200.0, 2.0], [28800.0, 3.0], [30600.0, 1.0], [30000.0, 2.0], [30200.0, 2.0], [30400.0, 1.0], [31000.0, 5.0], [31600.0, 3.0], [31400.0, 3.0], [30800.0, 2.0], [31800.0, 4.0], [32200.0, 1.0], [32000.0, 1.0], [33200.0, 4.0], [34000.0, 1.0], [34400.0, 1.0], [33600.0, 2.0], [34800.0, 1.0], [32800.0, 1.0], [36800.0, 1.0], [35600.0, 1.0], [36400.0, 2.0], [36000.0, 1.0], [38400.0, 2.0], [38000.0, 2.0], [37600.0, 1.0], [37200.0, 1.0], [38800.0, 1.0], [40800.0, 4.0], [40000.0, 1.0], [42000.0, 1.0], [41200.0, 1.0], [44400.0, 1.0], [44000.0, 1.0], [45600.0, 1.0], [46400.0, 1.0], [49200.0, 1.0], [50400.0, 1.0], [53200.0, 1.0], [51600.0, 1.0], [53600.0, 1.0], [59200.0, 1.0], [33100.0, 1.0], [34300.0, 2.0], [34700.0, 2.0], [35100.0, 2.0], [36300.0, 3.0], [38300.0, 1.0], [37900.0, 1.0], [37100.0, 1.0], [37500.0, 1.0], [38700.0, 2.0], [40300.0, 3.0], [40700.0, 1.0], [39500.0, 2.0], [42700.0, 1.0], [43900.0, 1.0], [44300.0, 1.0], [45900.0, 1.0], [47500.0, 1.0], [49500.0, 1.0], [53500.0, 1.0], [57500.0, 1.0], [58300.0, 1.0], [60300.0, 1.0], [17100.0, 1.0], [17300.0, 2.0], [16700.0, 1.0], [16500.0, 1.0], [17700.0, 3.0], [17500.0, 4.0], [18100.0, 2.0], [17900.0, 1.0], [18900.0, 1.0], [19300.0, 1.0], [18500.0, 3.0], [18700.0, 1.0], [19100.0, 1.0], [20100.0, 3.0], [19500.0, 1.0], [19900.0, 1.0], [19700.0, 1.0], [21100.0, 3.0], [21300.0, 4.0], [20500.0, 3.0], [20700.0, 5.0], [20900.0, 1.0], [21500.0, 1.0], [21900.0, 3.0], [22100.0, 3.0], [21700.0, 2.0], [22900.0, 2.0], [22700.0, 4.0], [23500.0, 2.0], [23100.0, 3.0], [23300.0, 1.0], [24300.0, 3.0], [23700.0, 4.0], [24100.0, 3.0], [23900.0, 2.0], [24500.0, 1.0], [24900.0, 2.0], [24700.0, 1.0], [25500.0, 1.0], [26100.0, 1.0], [26300.0, 1.0], [26500.0, 1.0], [25700.0, 1.0], [26900.0, 4.0], [27500.0, 1.0], [27300.0, 1.0], [27100.0, 1.0], [26700.0, 1.0], [28500.0, 2.0], [28100.0, 2.0], [28300.0, 1.0], [27900.0, 1.0], [29100.0, 2.0], [28900.0, 3.0], [29500.0, 2.0], [28700.0, 1.0], [29900.0, 2.0], [30700.0, 3.0], [30300.0, 2.0], [29700.0, 1.0], [31700.0, 2.0], [30900.0, 1.0], [31300.0, 1.0], [31100.0, 1.0], [32500.0, 2.0], [31900.0, 1.0], [32700.0, 2.0], [34600.0, 1.0], [33800.0, 1.0], [33000.0, 1.0], [36600.0, 2.0], [35400.0, 2.0], [35800.0, 1.0], [36200.0, 2.0], [38200.0, 1.0], [37400.0, 2.0], [40200.0, 1.0], [40600.0, 3.0], [39000.0, 1.0], [42600.0, 3.0], [43000.0, 1.0], [41400.0, 1.0], [43800.0, 1.0], [45400.0, 1.0], [55000.0, 1.0], [54600.0, 1.0], [58200.0, 1.0], [57400.0, 1.0], [60200.0, 5.0], [59800.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 261.0], [600.0, 1.0], [400.0, 274.0], [200.0, 217.0], [900.0, 1.0], [500.0, 14.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 623.0, "series": [{"data": [[0.0, 623.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 15.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 603.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 294.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.75, "minX": 1.6854498E12, "maxY": 25.0, "series": [{"data": [[1.6854501E12, 10.0], [1.68545106E12, 5.555555555555557], [1.6854504E12, 19.20634920634921], [1.68545046E12, 20.0], [1.6854498E12, 1.75], [1.68545076E12, 21.47328244274809], [1.68544986E12, 4.027027027027026], [1.68545082E12, 19.006896551724136], [1.68545016E12, 10.189655172413795], [1.68545112E12, 4.680000000000001], [1.68545022E12, 14.227722772277238], [1.68545052E12, 20.379844961240316], [1.68545058E12, 23.98895027624309], [1.68544992E12, 5.0], [1.68545088E12, 15.0], [1.68544998E12, 5.514285714285714], [1.68545094E12, 13.309734513274334], [1.68545028E12, 15.0], [1.68545034E12, 15.213333333333333], [1.68545064E12, 25.0], [1.6854507E12, 25.0], [1.68545004E12, 9.000000000000002], [1.685451E12, 9.925373134328359]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545112E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 123.8, "minX": 1.0, "maxY": 32165.799999999996, "series": [{"data": [[2.0, 6737.0], [8.0, 19700.5], [9.0, 29346.5], [10.0, 17223.207920792087], [11.0, 431.0], [3.0, 9317.0], [12.0, 18039.3], [13.0, 15718.599999999999], [14.0, 28598.666666666664], [15.0, 23771.771929824565], [4.0, 15199.857142857143], [16.0, 16514.0], [17.0, 18883.25], [18.0, 30374.421052631576], [19.0, 4670.8], [5.0, 17249.543478260868], [20.0, 18697.877192982465], [21.0, 32165.799999999996], [22.0, 17139.818181818184], [23.0, 18228.46153846154], [6.0, 19996.333333333332], [24.0, 22179.57894736842], [25.0, 21671.158940397352], [7.0, 18976.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.23567708333332, 20360.47005208334]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 6369.0], [8.0, 19321.0], [9.0, 28954.25], [10.0, 16892.69306930693], [11.0, 123.8], [3.0, 8908.0], [12.0, 17666.0], [13.0, 15375.7], [14.0, 28256.083333333332], [15.0, 23429.06140350877], [4.0, 14844.57142857143], [16.0, 16180.714285714286], [17.0, 18549.5], [18.0, 30037.473684210516], [19.0, 4323.866666666667], [5.0, 16871.13043478262], [20.0, 18469.17058823529], [21.0, 31832.799999999992], [22.0, 16793.909090909092], [23.0, 17910.46153846154], [6.0, 19623.5], [24.0, 21868.105263157897], [25.0, 21369.629139072837], [7.0, 18570.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.232073011734023, 20052.93872229466]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 395.6666666666667], [3.0, 388.0], [4.0, 317.0], [5.0, 379.7826086956521], [6.0, 376.1666666666667], [7.0, 401.0], [8.0, 395.6666666666667], [9.0, 385.6], [10.0, 323.56000000000006], [11.0, 324.5], [12.0, 364.77777777777777], [13.0, 355.72727272727275], [14.0, 260.5], [15.0, 352.18018018017995], [1.0, 367.0], [16.0, 404.45454545454544], [17.0, 379.0], [18.0, 317.05000000000007], [19.0, 357.3571428571429], [20.0, 334.81286549707596], [21.0, 323.2580645161291], [22.0, 327.8], [23.0, 241.99999999999997], [24.0, 361.94999999999993], [25.0, 304.1066666666669]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.214843749999993, 333.6419270833333]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 109.66666666666667, "minX": 1.6854498E12, "maxY": 8804.0, "series": [{"data": [[1.6854501E12, 1947.6333333333334], [1.68545106E12, 1322.5333333333333], [1.6854504E12, 2966.5833333333335], [1.68545046E12, 2432.0], [1.6854498E12, 109.66666666666667], [1.68545076E12, 3047.45], [1.68544986E12, 952.35], [1.68545082E12, 3597.4166666666665], [1.68545016E12, 1440.1333333333334], [1.68545112E12, 552.4166666666666], [1.68545022E12, 2530.5], [1.68545052E12, 2721.5666666666666], [1.68545058E12, 3760.2833333333333], [1.68544992E12, 1100.75], [1.68545088E12, 2201.5], [1.68544998E12, 879.7833333333333], [1.68545094E12, 2753.9166666666665], [1.68545028E12, 1761.2], [1.68545034E12, 1833.7666666666667], [1.68545064E12, 4071.0833333333335], [1.6854507E12, 4476.383333333333], [1.68545004E12, 769.3], [1.685451E12, 1578.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6854501E12, 5350.1], [1.68545106E12, 3146.05], [1.6854504E12, 8366.7], [1.68545046E12, 8159.816666666667], [1.6854498E12, 282.96666666666664], [1.68545076E12, 7232.383333333333], [1.68544986E12, 1755.0833333333333], [1.68545082E12, 8522.583333333334], [1.68545016E12, 5379.533333333334], [1.68545112E12, 1267.8833333333334], [1.68545022E12, 4192.433333333333], [1.68545052E12, 5713.066666666667], [1.68545058E12, 8334.833333333334], [1.68544992E12, 1885.35], [1.68545088E12, 4859.55], [1.68544998E12, 1860.8666666666666], [1.68545094E12, 5374.533333333334], [1.68545028E12, 3130.2833333333333], [1.68545034E12, 3000.7833333333333], [1.68545064E12, 7903.983333333334], [1.6854507E12, 8804.0], [1.68545004E12, 1134.25], [1.685451E12, 2484.55]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545112E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 268.40983606557376, "minX": 1.6854498E12, "maxY": 29535.88888888889, "series": [{"data": [[1.6854501E12, 18323.219512195126], [1.68545106E12, 13638.722222222223], [1.6854504E12, 13855.40625], [1.68545046E12, 16739.983606557376], [1.6854498E12, 7497.0], [1.68545076E12, 25459.0], [1.68544986E12, 11704.272727272728], [1.68545082E12, 21849.95744680851], [1.68545016E12, 8786.263157894735], [1.68545112E12, 19833.899999999998], [1.68545022E12, 23169.656250000004], [1.68545052E12, 29426.476190476187], [1.68545058E12, 21588.8], [1.68544992E12, 20484.133333333335], [1.68545088E12, 19537.343750000007], [1.68544998E12, 18849.636363636364], [1.68545094E12, 19883.131578947363], [1.68545028E12, 26188.434782608692], [1.68545034E12, 26626.92], [1.68545064E12, 20223.7627118644], [1.6854507E12, 21811.305084745763], [1.68545004E12, 29535.88888888889], [1.685451E12, 26368.166666666664]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854501E12, 18913.30769230769], [1.68545106E12, 14975.800000000001], [1.6854504E12, 14273.803278688525], [1.68545046E12, 16045.338709677419], [1.6854498E12, 7130.0], [1.68545076E12, 23113.431818181827], [1.68544986E12, 11337.272727272728], [1.68545082E12, 23834.470588235297], [1.68545016E12, 7987.631578947369], [1.68545112E12, 19468.5], [1.68545022E12, 22355.818181818184], [1.68545052E12, 28227.76190476191], [1.68545058E12, 21359.650000000005], [1.68544992E12, 20093.333333333332], [1.68545088E12, 19429.266666666666], [1.68544998E12, 18480.363636363636], [1.68545094E12, 19315.249999999996], [1.68545028E12, 25252.166666666668], [1.68545034E12, 27144.208333333336], [1.68545064E12, 19555.745762711867], [1.6854507E12, 21520.24590163934], [1.68545004E12, 29154.0], [1.685451E12, 25630.45454545455]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854501E12, 307.66666666666663], [1.68545106E12, 387.875], [1.6854504E12, 306.57812499999994], [1.68545046E12, 356.3934426229508], [1.6854498E12, 368.0], [1.68545076E12, 343.94871794871807], [1.68544986E12, 359.0], [1.68545082E12, 331.80851063829783], [1.68545016E12, 319.325], [1.68545112E12, 346.2], [1.68545022E12, 330.61111111111114], [1.68545052E12, 344.31111111111113], [1.68545058E12, 313.99999999999994], [1.68544992E12, 398.1333333333334], [1.68545088E12, 354.4333333333333], [1.68544998E12, 376.15384615384613], [1.68545094E12, 369.74285714285713], [1.68545028E12, 343.83333333333337], [1.68545034E12, 359.53846153846155], [1.68545064E12, 268.40983606557376], [1.6854507E12, 327.93442622950823], [1.68545004E12, 398.1666666666667], [1.685451E12, 347.4285714285715]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545112E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 267.8688524590166, "minX": 1.6854498E12, "maxY": 29535.555555555555, "series": [{"data": [[1.6854501E12, 18322.756097560978], [1.68545106E12, 13638.055555555558], [1.6854504E12, 13854.953125000005], [1.68545046E12, 16739.639344262298], [1.6854498E12, 7487.0], [1.68545076E12, 25458.54166666667], [1.68544986E12, 11704.0], [1.68545082E12, 21849.510638297867], [1.68545016E12, 8785.815789473681], [1.68545112E12, 19831.7], [1.68545022E12, 23169.21875], [1.68545052E12, 29426.166666666664], [1.68545058E12, 21588.116666666676], [1.68544992E12, 20483.6], [1.68545088E12, 19537.124999999996], [1.68544998E12, 18848.272727272724], [1.68545094E12, 19877.55263157895], [1.68545028E12, 26188.043478260875], [1.68545034E12, 26626.68], [1.68545064E12, 20223.016949152545], [1.6854507E12, 21810.71186440678], [1.68545004E12, 29535.555555555555], [1.685451E12, 26367.750000000004]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854501E12, 18913.15384615384], [1.68545106E12, 14975.300000000001], [1.6854504E12, 14273.540983606556], [1.68545046E12, 16045.209677419349], [1.6854498E12, 7130.0], [1.68545076E12, 23113.06818181818], [1.68544986E12, 11337.181818181818], [1.68545082E12, 23834.176470588238], [1.68545016E12, 7987.368421052634], [1.68545112E12, 19466.300000000003], [1.68545022E12, 22355.666666666664], [1.68545052E12, 28227.523809523813], [1.68545058E12, 21359.366666666665], [1.68544992E12, 20092.933333333334], [1.68545088E12, 19429.2], [1.68544998E12, 18479.727272727272], [1.68545094E12, 19314.925000000003], [1.68545028E12, 25251.958333333332], [1.68545034E12, 27144.041666666664], [1.68545064E12, 19555.355932203383], [1.6854507E12, 21519.950819672133], [1.68545004E12, 29153.666666666668], [1.685451E12, 25630.18181818182]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854501E12, 307.33333333333337], [1.68545106E12, 387.75], [1.6854504E12, 306.28124999999994], [1.68545046E12, 356.3442622950819], [1.6854498E12, 363.0], [1.68545076E12, 343.7435897435898], [1.68544986E12, 358.8666666666667], [1.68545082E12, 331.70212765957444], [1.68545016E12, 319.07500000000005], [1.68545112E12, 346.2], [1.68545022E12, 330.4166666666667], [1.68545052E12, 343.9333333333334], [1.68545058E12, 313.81967213114757], [1.68544992E12, 397.66666666666663], [1.68545088E12, 347.83333333333337], [1.68544998E12, 375.92307692307696], [1.68545094E12, 369.6571428571429], [1.68545028E12, 343.70833333333337], [1.68545034E12, 359.3461538461539], [1.68545064E12, 267.8688524590166], [1.6854507E12, 327.8524590163933], [1.68545004E12, 398.0], [1.685451E12, 347.23809523809524]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545112E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6854498E12, "maxY": 202.75, "series": [{"data": [[1.6854501E12, 166.8780487804878], [1.68545106E12, 201.88888888888889], [1.6854504E12, 155.21875000000006], [1.68545046E12, 165.3114754098361], [1.6854498E12, 135.0], [1.68545076E12, 166.14583333333331], [1.68544986E12, 185.27272727272728], [1.68545082E12, 165.51063829787236], [1.68545016E12, 157.2105263157895], [1.68545112E12, 172.7], [1.68545022E12, 148.875], [1.68545052E12, 169.02380952380952], [1.68545058E12, 155.15000000000003], [1.68544992E12, 192.20000000000005], [1.68545088E12, 174.5625], [1.68544998E12, 170.81818181818184], [1.68545094E12, 185.21052631578948], [1.68545028E12, 162.69565217391303], [1.68545034E12, 160.79999999999998], [1.68545064E12, 138.4237288135593], [1.6854507E12, 147.3559322033898], [1.68545004E12, 175.44444444444446], [1.685451E12, 161.79166666666663]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854501E12, 0.0], [1.68545106E12, 0.0], [1.6854504E12, 0.0], [1.68545046E12, 0.0], [1.6854498E12, 0.0], [1.68545076E12, 0.0], [1.68544986E12, 0.0], [1.68545082E12, 0.0], [1.68545016E12, 0.0], [1.68545112E12, 0.0], [1.68545022E12, 0.0], [1.68545052E12, 0.0], [1.68545058E12, 0.0], [1.68544992E12, 0.0], [1.68545088E12, 0.0], [1.68544998E12, 0.0], [1.68545094E12, 0.0], [1.68545028E12, 0.0], [1.68545034E12, 0.0], [1.68545064E12, 0.0], [1.6854507E12, 0.0], [1.68545004E12, 0.0], [1.685451E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854501E12, 161.74358974358978], [1.68545106E12, 202.75], [1.6854504E12, 147.28124999999997], [1.68545046E12, 173.0655737704918], [1.6854498E12, 149.5], [1.68545076E12, 173.3076923076923], [1.68544986E12, 178.19999999999996], [1.68545082E12, 164.42553191489364], [1.68545016E12, 153.45000000000002], [1.68545112E12, 161.2], [1.68545022E12, 153.88888888888886], [1.68545052E12, 163.79999999999998], [1.68545058E12, 158.63934426229505], [1.68544992E12, 196.7333333333333], [1.68545088E12, 172.53333333333336], [1.68544998E12, 170.61538461538458], [1.68545094E12, 188.08571428571432], [1.68545028E12, 165.54166666666669], [1.68545034E12, 164.88461538461536], [1.68545064E12, 125.11475409836063], [1.6854507E12, 158.8852459016394], [1.68545004E12, 183.08333333333331], [1.685451E12, 168.0952380952381]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545112E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 207.0, "minX": 1.6854498E12, "maxY": 59845.0, "series": [{"data": [[1.6854501E12, 44460.0], [1.68545106E12, 36026.0], [1.6854504E12, 59289.0], [1.68545046E12, 59845.0], [1.6854498E12, 7130.0], [1.68545076E12, 47525.0], [1.68544986E12, 17786.0], [1.68545082E12, 46482.0], [1.68545016E12, 38207.0], [1.68545112E12, 21790.0], [1.68545022E12, 40387.0], [1.68545052E12, 58257.0], [1.68545058E12, 43371.0], [1.68544992E12, 23258.0], [1.68545088E12, 28922.0], [1.68544998E12, 23595.0], [1.68545094E12, 31377.0], [1.68545028E12, 43316.0], [1.68545034E12, 34607.0], [1.68545064E12, 42771.0], [1.6854507E12, 44357.0], [1.68545004E12, 37344.0], [1.685451E12, 38882.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6854501E12, 42061.200000000004], [1.68545106E12, 20316.100000000006], [1.6854504E12, 52773.9], [1.68545046E12, 10217.2], [1.6854498E12, 7130.0], [1.68545076E12, 38807.40000000001], [1.68544986E12, 17291.8], [1.68545082E12, 36401.200000000004], [1.68545016E12, 37825.4], [1.68545112E12, 21724.0], [1.68545022E12, 33257.0], [1.68545052E12, 45356.0], [1.68545058E12, 34588.0], [1.68544992E12, 22163.9], [1.68545088E12, 27429.5], [1.68544998E12, 22494.0], [1.68545094E12, 27121.40000000001], [1.68545028E12, 38990.6], [1.68545034E12, 31817.5], [1.68545064E12, 33325.6], [1.6854507E12, 31824.90000000001], [1.68545004E12, 32860.6], [1.685451E12, 34629.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6854501E12, 44460.0], [1.68545106E12, 36026.0], [1.6854504E12, 59289.0], [1.68545046E12, 59845.0], [1.6854498E12, 7130.0], [1.68545076E12, 47525.0], [1.68544986E12, 17786.0], [1.68545082E12, 46482.0], [1.68545016E12, 38207.0], [1.68545112E12, 21790.0], [1.68545022E12, 40387.0], [1.68545052E12, 58257.0], [1.68545058E12, 43371.0], [1.68544992E12, 23258.0], [1.68545088E12, 28922.0], [1.68544998E12, 23595.0], [1.68545094E12, 31377.0], [1.68545028E12, 43316.0], [1.68545034E12, 34607.0], [1.68545064E12, 42709.32], [1.6854507E12, 44307.78], [1.68545004E12, 37344.0], [1.685451E12, 38882.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6854501E12, 43899.65], [1.68545106E12, 26585.049999999985], [1.6854504E12, 57208.89999999999], [1.68545046E12, 48077.80000000006], [1.6854498E12, 7130.0], [1.68545076E12, 42384.99999999999], [1.68544986E12, 17714.95], [1.68545082E12, 38997.899999999994], [1.68545016E12, 38180.45], [1.68545112E12, 21790.0], [1.68545022E12, 38256.5], [1.68545052E12, 54655.0], [1.68545058E12, 36982.25], [1.68544992E12, 23077.05], [1.68545088E12, 28029.899999999998], [1.68544998E12, 23379.75], [1.68545094E12, 29580.000000000004], [1.68545028E12, 40598.45], [1.68545034E12, 33660.2], [1.68545064E12, 37888.399999999994], [1.6854507E12, 42780.94999999999], [1.68545004E12, 36904.2], [1.685451E12, 38023.59999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6854501E12, 209.0], [1.68545106E12, 234.0], [1.6854504E12, 208.0], [1.68545046E12, 211.0], [1.6854498E12, 367.0], [1.68545076E12, 211.0], [1.68544986E12, 214.0], [1.68545082E12, 210.0], [1.68545016E12, 215.0], [1.68545112E12, 214.0], [1.68545022E12, 209.0], [1.68545052E12, 212.0], [1.68545058E12, 208.0], [1.68544992E12, 239.0], [1.68545088E12, 211.0], [1.68544998E12, 303.0], [1.68545094E12, 209.0], [1.68545028E12, 209.0], [1.68545034E12, 216.0], [1.68545064E12, 208.0], [1.6854507E12, 207.0], [1.68545004E12, 335.0], [1.685451E12, 214.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6854501E12, 407.5], [1.68545106E12, 5950.5], [1.6854504E12, 406.5], [1.68545046E12, 408.5], [1.6854498E12, 369.0], [1.68545076E12, 6713.0], [1.68544986E12, 414.0], [1.68545082E12, 5149.0], [1.68545016E12, 416.5], [1.68545112E12, 18600.0], [1.68545022E12, 412.0], [1.68545052E12, 410.0], [1.68545058E12, 9377.5], [1.68544992E12, 8230.5], [1.68545088E12, 2524.5], [1.68544998E12, 469.0], [1.68545094E12, 6866.0], [1.68545028E12, 3300.0], [1.68545034E12, 506.0], [1.68545064E12, 408.0], [1.6854507E12, 2309.0], [1.68545004E12, 421.0], [1.685451E12, 5112.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545112E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 199.0, "minX": 1.0, "maxY": 29443.5, "series": [{"data": [[2.0, 505.5], [8.0, 10395.0], [9.0, 360.0], [10.0, 20548.0], [3.0, 4898.0], [12.0, 5973.0], [14.0, 15564.0], [15.0, 29443.5], [1.0, 411.0], [4.0, 410.0], [16.0, 5262.0], [5.0, 409.0], [6.0, 412.0], [7.0, 12688.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 207.5], [1.0, 199.0], [4.0, 206.0], [8.0, 331.0], [10.0, 209.0], [5.0, 408.5], [3.0, 208.0], [6.0, 306.0], [12.0, 411.0], [7.0, 211.0], [15.0, 316.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 199.0, "minX": 1.0, "maxY": 29443.5, "series": [{"data": [[2.0, 505.5], [8.0, 10395.0], [9.0, 360.0], [10.0, 20548.0], [3.0, 4898.0], [12.0, 5973.0], [14.0, 15563.5], [15.0, 29443.5], [1.0, 409.5], [4.0, 410.0], [16.0, 5262.0], [5.0, 409.0], [6.0, 412.0], [7.0, 12688.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 207.5], [1.0, 199.0], [4.0, 206.0], [8.0, 331.0], [10.0, 209.0], [5.0, 408.5], [3.0, 207.5], [6.0, 306.0], [12.0, 411.0], [7.0, 211.0], [15.0, 316.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 16.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.6854498E12, "maxY": 2.1, "series": [{"data": [[1.6854501E12, 1.2166666666666666], [1.68545106E12, 0.5666666666666667], [1.6854504E12, 2.1], [1.68545046E12, 2.05], [1.6854498E12, 0.08333333333333333], [1.68545076E12, 1.2833333333333334], [1.68544986E12, 0.48333333333333334], [1.68545082E12, 1.5], [1.68545016E12, 1.4166666666666667], [1.68545112E12, 0.16666666666666666], [1.68545022E12, 1.1833333333333333], [1.68545052E12, 1.5166666666666666], [1.68545058E12, 2.0], [1.68544992E12, 0.43333333333333335], [1.68545088E12, 1.1], [1.68544998E12, 0.5], [1.68545094E12, 1.1333333333333333], [1.68545028E12, 0.8333333333333334], [1.68545034E12, 0.8333333333333334], [1.68545064E12, 2.0166666666666666], [1.6854507E12, 2.0833333333333335], [1.68545004E12, 0.38333333333333336], [1.685451E12, 0.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545112E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6854498E12, "maxY": 2.033333333333333, "series": [{"data": [[1.6854501E12, 0.7], [1.68545106E12, 0.6], [1.6854504E12, 1.0333333333333334], [1.68545046E12, 0.7], [1.6854498E12, 0.05], [1.68545076E12, 1.3833333333333333], [1.68544986E12, 0.43333333333333335], [1.68545082E12, 1.6333333333333333], [1.68545016E12, 0.36666666666666664], [1.68545112E12, 0.25], [1.68545022E12, 1.15], [1.68545052E12, 1.15], [1.68545058E12, 1.5666666666666667], [1.68544992E12, 0.5], [1.68545088E12, 1.0], [1.68544998E12, 0.4], [1.68545094E12, 1.25], [1.68545028E12, 0.8], [1.68545034E12, 0.8333333333333334], [1.68545064E12, 1.7833333333333334], [1.6854507E12, 2.033333333333333], [1.68545004E12, 0.35], [1.685451E12, 0.7166666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6854504E12, 0.06666666666666667], [1.68545046E12, 0.1], [1.68545052E12, 0.05]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.6854501E12, 0.6], [1.68545058E12, 0.45], [1.6854504E12, 0.95], [1.68545046E12, 1.0333333333333334], [1.68545016E12, 0.9333333333333333], [1.68545064E12, 0.21666666666666667], [1.68545052E12, 0.1]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.6854504E12, 0.03333333333333333], [1.68545046E12, 0.21666666666666667], [1.68545052E12, 0.15]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545112E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6854498E12, "maxY": 1.0166666666666666, "series": [{"data": [[1.6854501E12, 0.36666666666666664], [1.68545106E12, 0.26666666666666666], [1.6854504E12, 0.6666666666666666], [1.68545046E12, 0.5], [1.6854498E12, 0.03333333333333333], [1.68545076E12, 0.65], [1.68544986E12, 0.25], [1.68545082E12, 0.7833333333333333], [1.68545016E12, 0.2], [1.68545112E12, 0.08333333333333333], [1.68545022E12, 0.6], [1.68545052E12, 0.6833333333333333], [1.68545058E12, 0.6666666666666666], [1.68544992E12, 0.25], [1.68545088E12, 0.5], [1.68544998E12, 0.21666666666666667], [1.68545094E12, 0.5833333333333334], [1.68545028E12, 0.4], [1.68545034E12, 0.43333333333333335], [1.68545064E12, 0.9333333333333333], [1.6854507E12, 1.0166666666666666], [1.68545004E12, 0.2], [1.685451E12, 0.35]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.6854501E12, 0.2833333333333333], [1.68545058E12, 0.35], [1.6854504E12, 0.4], [1.68545046E12, 0.5166666666666667], [1.68545016E12, 0.4666666666666667], [1.68545064E12, 0.08333333333333333], [1.68545052E12, 0.06666666666666667]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.6854501E12, 0.31666666666666665], [1.68545058E12, 0.1], [1.6854504E12, 0.65], [1.68545046E12, 0.8333333333333334], [1.68545016E12, 0.4666666666666667], [1.68545064E12, 0.13333333333333333], [1.68545052E12, 0.23333333333333334]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6854501E12, 0.25], [1.68545106E12, 0.3], [1.6854504E12, 0.2833333333333333], [1.68545046E12, 0.03333333333333333], [1.6854498E12, 0.016666666666666666], [1.68545076E12, 0.8], [1.68544986E12, 0.18333333333333332], [1.68545082E12, 0.7833333333333333], [1.68545016E12, 0.1], [1.68545112E12, 0.16666666666666666], [1.68545022E12, 0.4], [1.68545052E12, 0.38333333333333336], [1.68545058E12, 0.6666666666666666], [1.68544992E12, 0.25], [1.68545088E12, 0.5333333333333333], [1.68544998E12, 0.18333333333333332], [1.68545094E12, 0.6333333333333333], [1.68545028E12, 0.38333333333333336], [1.68545034E12, 0.4166666666666667], [1.68545064E12, 0.6333333333333333], [1.6854507E12, 0.9833333333333333], [1.68545004E12, 0.15], [1.685451E12, 0.4]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.6854501E12, 0.43333333333333335], [1.68545058E12, 0.3333333333333333], [1.6854504E12, 0.7833333333333333], [1.68545046E12, 0.9833333333333333], [1.68545016E12, 0.5333333333333333], [1.68545064E12, 0.35], [1.68545022E12, 0.13333333333333333], [1.68545052E12, 0.31666666666666665]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6854501E12, 0.3333333333333333], [1.68545106E12, 0.3333333333333333], [1.6854504E12, 0.36666666666666664], [1.68545046E12, 0.2], [1.6854498E12, 0.016666666666666666], [1.68545076E12, 0.7333333333333333], [1.68544986E12, 0.18333333333333332], [1.68545082E12, 0.85], [1.68545016E12, 0.16666666666666666], [1.68545112E12, 0.16666666666666666], [1.68545022E12, 0.55], [1.68545052E12, 0.4666666666666667], [1.68545058E12, 0.9], [1.68544992E12, 0.25], [1.68545088E12, 0.5], [1.68544998E12, 0.18333333333333332], [1.68545094E12, 0.6666666666666666], [1.68545028E12, 0.4], [1.68545034E12, 0.4], [1.68545064E12, 0.85], [1.6854507E12, 1.0166666666666666], [1.68545004E12, 0.15], [1.685451E12, 0.36666666666666664]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545112E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6854498E12, "maxY": 3.0166666666666666, "series": [{"data": [[1.6854501E12, 0.95], [1.68545106E12, 0.9], [1.6854504E12, 1.3166666666666667], [1.68545046E12, 0.7333333333333333], [1.6854498E12, 0.06666666666666667], [1.68545076E12, 2.183333333333333], [1.68544986E12, 0.6166666666666667], [1.68545082E12, 2.4166666666666665], [1.68545016E12, 0.4666666666666667], [1.68545112E12, 0.4166666666666667], [1.68545022E12, 1.55], [1.68545052E12, 1.5333333333333334], [1.68545058E12, 2.2333333333333334], [1.68544992E12, 0.75], [1.68545088E12, 1.5333333333333334], [1.68544998E12, 0.5833333333333334], [1.68545094E12, 1.8833333333333333], [1.68545028E12, 1.1833333333333333], [1.68545034E12, 1.25], [1.68545064E12, 2.4166666666666665], [1.6854507E12, 3.0166666666666666], [1.68545004E12, 0.5], [1.685451E12, 1.1166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6854501E12, 1.0333333333333334], [1.68545058E12, 0.7833333333333333], [1.6854504E12, 1.8333333333333333], [1.68545046E12, 2.3333333333333335], [1.68545016E12, 1.4666666666666666], [1.68545064E12, 0.5666666666666667], [1.68545022E12, 0.13333333333333333], [1.68545052E12, 0.6166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545112E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

