/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 122.0, "minX": 0.0, "maxY": 88650.0, "series": [{"data": [[0.0, 253.0], [0.1, 253.0], [0.2, 253.0], [0.3, 254.0], [0.4, 254.0], [0.5, 258.0], [0.6, 370.0], [0.7, 370.0], [0.8, 371.0], [0.9, 371.0], [1.0, 371.0], [1.1, 372.0], [1.2, 372.0], [1.3, 372.0], [1.4, 372.0], [1.5, 373.0], [1.6, 373.0], [1.7, 373.0], [1.8, 373.0], [1.9, 373.0], [2.0, 373.0], [2.1, 373.0], [2.2, 373.0], [2.3, 374.0], [2.4, 374.0], [2.5, 374.0], [2.6, 374.0], [2.7, 374.0], [2.8, 374.0], [2.9, 374.0], [3.0, 375.0], [3.1, 375.0], [3.2, 375.0], [3.3, 375.0], [3.4, 375.0], [3.5, 375.0], [3.6, 375.0], [3.7, 375.0], [3.8, 375.0], [3.9, 375.0], [4.0, 375.0], [4.1, 375.0], [4.2, 376.0], [4.3, 376.0], [4.4, 376.0], [4.5, 376.0], [4.6, 376.0], [4.7, 376.0], [4.8, 376.0], [4.9, 376.0], [5.0, 376.0], [5.1, 376.0], [5.2, 376.0], [5.3, 377.0], [5.4, 377.0], [5.5, 377.0], [5.6, 377.0], [5.7, 377.0], [5.8, 377.0], [5.9, 378.0], [6.0, 378.0], [6.1, 378.0], [6.2, 378.0], [6.3, 379.0], [6.4, 379.0], [6.5, 379.0], [6.6, 379.0], [6.7, 380.0], [6.8, 380.0], [6.9, 381.0], [7.0, 381.0], [7.1, 381.0], [7.2, 381.0], [7.3, 381.0], [7.4, 381.0], [7.5, 381.0], [7.6, 381.0], [7.7, 381.0], [7.8, 383.0], [7.9, 383.0], [8.0, 383.0], [8.1, 383.0], [8.2, 383.0], [8.3, 383.0], [8.4, 383.0], [8.5, 383.0], [8.6, 384.0], [8.7, 384.0], [8.8, 384.0], [8.9, 384.0], [9.0, 384.0], [9.1, 385.0], [9.2, 385.0], [9.3, 385.0], [9.4, 386.0], [9.5, 386.0], [9.6, 386.0], [9.7, 387.0], [9.8, 387.0], [9.9, 387.0], [10.0, 387.0], [10.1, 387.0], [10.2, 387.0], [10.3, 388.0], [10.4, 388.0], [10.5, 388.0], [10.6, 388.0], [10.7, 388.0], [10.8, 388.0], [10.9, 389.0], [11.0, 389.0], [11.1, 389.0], [11.2, 389.0], [11.3, 389.0], [11.4, 389.0], [11.5, 389.0], [11.6, 389.0], [11.7, 390.0], [11.8, 390.0], [11.9, 390.0], [12.0, 390.0], [12.1, 391.0], [12.2, 391.0], [12.3, 391.0], [12.4, 391.0], [12.5, 391.0], [12.6, 391.0], [12.7, 391.0], [12.8, 391.0], [12.9, 391.0], [13.0, 391.0], [13.1, 391.0], [13.2, 391.0], [13.3, 392.0], [13.4, 392.0], [13.5, 392.0], [13.6, 392.0], [13.7, 392.0], [13.8, 392.0], [13.9, 392.0], [14.0, 392.0], [14.1, 392.0], [14.2, 392.0], [14.3, 392.0], [14.4, 393.0], [14.5, 393.0], [14.6, 393.0], [14.7, 393.0], [14.8, 393.0], [14.9, 393.0], [15.0, 393.0], [15.1, 393.0], [15.2, 393.0], [15.3, 394.0], [15.4, 394.0], [15.5, 394.0], [15.6, 394.0], [15.7, 394.0], [15.8, 394.0], [15.9, 395.0], [16.0, 395.0], [16.1, 395.0], [16.2, 395.0], [16.3, 395.0], [16.4, 395.0], [16.5, 396.0], [16.6, 396.0], [16.7, 396.0], [16.8, 396.0], [16.9, 396.0], [17.0, 396.0], [17.1, 396.0], [17.2, 396.0], [17.3, 397.0], [17.4, 397.0], [17.5, 397.0], [17.6, 397.0], [17.7, 398.0], [17.8, 398.0], [17.9, 398.0], [18.0, 398.0], [18.1, 399.0], [18.2, 399.0], [18.3, 400.0], [18.4, 400.0], [18.5, 400.0], [18.6, 401.0], [18.7, 401.0], [18.8, 401.0], [18.9, 401.0], [19.0, 402.0], [19.1, 402.0], [19.2, 402.0], [19.3, 403.0], [19.4, 403.0], [19.5, 403.0], [19.6, 403.0], [19.7, 403.0], [19.8, 405.0], [19.9, 405.0], [20.0, 406.0], [20.1, 406.0], [20.2, 406.0], [20.3, 408.0], [20.4, 408.0], [20.5, 409.0], [20.6, 410.0], [20.7, 411.0], [20.8, 412.0], [20.9, 412.0], [21.0, 413.0], [21.1, 414.0], [21.2, 415.0], [21.3, 415.0], [21.4, 416.0], [21.5, 418.0], [21.6, 420.0], [21.7, 420.0], [21.8, 423.0], [21.9, 430.0], [22.0, 430.0], [22.1, 432.0], [22.2, 438.0], [22.3, 439.0], [22.4, 442.0], [22.5, 448.0], [22.6, 449.0], [22.7, 455.0], [22.8, 459.0], [22.9, 467.0], [23.0, 467.0], [23.1, 477.0], [23.2, 556.0], [23.3, 652.0], [23.4, 805.0], [23.5, 809.0], [23.6, 832.0], [23.7, 835.0], [23.8, 841.0], [23.9, 867.0], [24.0, 886.0], [24.1, 916.0], [24.2, 994.0], [24.3, 1000.0], [24.4, 1000.0], [24.5, 1009.0], [24.6, 1026.0], [24.7, 1056.0], [24.8, 1064.0], [24.9, 1087.0], [25.0, 1117.0], [25.1, 1131.0], [25.2, 1138.0], [25.3, 1156.0], [25.4, 1162.0], [25.5, 1164.0], [25.6, 1174.0], [25.7, 1175.0], [25.8, 1180.0], [25.9, 1192.0], [26.0, 1198.0], [26.1, 1221.0], [26.2, 1240.0], [26.3, 1259.0], [26.4, 1268.0], [26.5, 1275.0], [26.6, 1278.0], [26.7, 1282.0], [26.8, 1283.0], [26.9, 1283.0], [27.0, 1288.0], [27.1, 1290.0], [27.2, 1293.0], [27.3, 1294.0], [27.4, 1301.0], [27.5, 1305.0], [27.6, 1311.0], [27.7, 1324.0], [27.8, 1325.0], [27.9, 1350.0], [28.0, 1351.0], [28.1, 1364.0], [28.2, 1381.0], [28.3, 1391.0], [28.4, 1395.0], [28.5, 1402.0], [28.6, 1410.0], [28.7, 1411.0], [28.8, 1415.0], [28.9, 1425.0], [29.0, 1430.0], [29.1, 1435.0], [29.2, 1443.0], [29.3, 1443.0], [29.4, 1451.0], [29.5, 1469.0], [29.6, 1478.0], [29.7, 1490.0], [29.8, 1505.0], [29.9, 1506.0], [30.0, 1511.0], [30.1, 1523.0], [30.2, 1523.0], [30.3, 1526.0], [30.4, 1529.0], [30.5, 1531.0], [30.6, 1535.0], [30.7, 1569.0], [30.8, 1587.0], [30.9, 1589.0], [31.0, 1597.0], [31.1, 1598.0], [31.2, 1616.0], [31.3, 1617.0], [31.4, 1618.0], [31.5, 1653.0], [31.6, 1668.0], [31.7, 1672.0], [31.8, 1672.0], [31.9, 1694.0], [32.0, 1711.0], [32.1, 1747.0], [32.2, 1756.0], [32.3, 1792.0], [32.4, 1851.0], [32.5, 1924.0], [32.6, 1943.0], [32.7, 1946.0], [32.8, 1973.0], [32.9, 1992.0], [33.0, 2080.0], [33.1, 2134.0], [33.2, 2157.0], [33.3, 2160.0], [33.4, 2208.0], [33.5, 2435.0], [33.6, 2497.0], [33.7, 2765.0], [33.8, 2919.0], [33.9, 2927.0], [34.0, 3259.0], [34.1, 3295.0], [34.2, 3295.0], [34.3, 3377.0], [34.4, 3384.0], [34.5, 3445.0], [34.6, 3481.0], [34.7, 3513.0], [34.8, 3528.0], [34.9, 3552.0], [35.0, 3590.0], [35.1, 3831.0], [35.2, 4036.0], [35.3, 4142.0], [35.4, 4166.0], [35.5, 4301.0], [35.6, 4356.0], [35.7, 4366.0], [35.8, 4386.0], [35.9, 4436.0], [36.0, 4502.0], [36.1, 4580.0], [36.2, 4596.0], [36.3, 4629.0], [36.4, 4643.0], [36.5, 4663.0], [36.6, 4663.0], [36.7, 4719.0], [36.8, 4721.0], [36.9, 4729.0], [37.0, 4784.0], [37.1, 4798.0], [37.2, 4817.0], [37.3, 4841.0], [37.4, 4870.0], [37.5, 4913.0], [37.6, 4976.0], [37.7, 4985.0], [37.8, 4991.0], [37.9, 5039.0], [38.0, 5046.0], [38.1, 5088.0], [38.2, 5089.0], [38.3, 5153.0], [38.4, 5212.0], [38.5, 5246.0], [38.6, 5269.0], [38.7, 5272.0], [38.8, 5281.0], [38.9, 5287.0], [39.0, 5312.0], [39.1, 5312.0], [39.2, 5313.0], [39.3, 5353.0], [39.4, 5390.0], [39.5, 5392.0], [39.6, 5403.0], [39.7, 5404.0], [39.8, 5413.0], [39.9, 5422.0], [40.0, 5423.0], [40.1, 5428.0], [40.2, 5434.0], [40.3, 5445.0], [40.4, 5462.0], [40.5, 5472.0], [40.6, 5495.0], [40.7, 5504.0], [40.8, 5512.0], [40.9, 5514.0], [41.0, 5515.0], [41.1, 5517.0], [41.2, 5519.0], [41.3, 5522.0], [41.4, 5525.0], [41.5, 5525.0], [41.6, 5527.0], [41.7, 5536.0], [41.8, 5561.0], [41.9, 5579.0], [42.0, 5604.0], [42.1, 5616.0], [42.2, 5630.0], [42.3, 5635.0], [42.4, 5649.0], [42.5, 5702.0], [42.6, 5710.0], [42.7, 5711.0], [42.8, 5730.0], [42.9, 5765.0], [43.0, 5778.0], [43.1, 5781.0], [43.2, 5797.0], [43.3, 5859.0], [43.4, 5865.0], [43.5, 5894.0], [43.6, 5906.0], [43.7, 5907.0], [43.8, 5928.0], [43.9, 5933.0], [44.0, 5933.0], [44.1, 5950.0], [44.2, 5966.0], [44.3, 5989.0], [44.4, 5993.0], [44.5, 5998.0], [44.6, 6068.0], [44.7, 6077.0], [44.8, 6096.0], [44.9, 6111.0], [45.0, 6116.0], [45.1, 6140.0], [45.2, 6177.0], [45.3, 6180.0], [45.4, 6184.0], [45.5, 6206.0], [45.6, 6219.0], [45.7, 6227.0], [45.8, 6267.0], [45.9, 6286.0], [46.0, 6308.0], [46.1, 6332.0], [46.2, 6360.0], [46.3, 6372.0], [46.4, 6372.0], [46.5, 6400.0], [46.6, 6406.0], [46.7, 6420.0], [46.8, 6426.0], [46.9, 6455.0], [47.0, 6544.0], [47.1, 6611.0], [47.2, 6641.0], [47.3, 6675.0], [47.4, 6678.0], [47.5, 6728.0], [47.6, 6767.0], [47.7, 6821.0], [47.8, 6871.0], [47.9, 6877.0], [48.0, 6913.0], [48.1, 6940.0], [48.2, 6950.0], [48.3, 7000.0], [48.4, 7035.0], [48.5, 7053.0], [48.6, 7098.0], [48.7, 7149.0], [48.8, 7149.0], [48.9, 7200.0], [49.0, 7279.0], [49.1, 7327.0], [49.2, 7329.0], [49.3, 7394.0], [49.4, 7410.0], [49.5, 7461.0], [49.6, 7480.0], [49.7, 7545.0], [49.8, 7587.0], [49.9, 7781.0], [50.0, 7800.0], [50.1, 7829.0], [50.2, 7846.0], [50.3, 7945.0], [50.4, 7953.0], [50.5, 7969.0], [50.6, 8057.0], [50.7, 8135.0], [50.8, 8247.0], [50.9, 8307.0], [51.0, 8308.0], [51.1, 8328.0], [51.2, 8374.0], [51.3, 8374.0], [51.4, 8567.0], [51.5, 8584.0], [51.6, 8634.0], [51.7, 8668.0], [51.8, 8680.0], [51.9, 8680.0], [52.0, 8688.0], [52.1, 8721.0], [52.2, 8722.0], [52.3, 8725.0], [52.4, 8770.0], [52.5, 8833.0], [52.6, 8876.0], [52.7, 8879.0], [52.8, 8902.0], [52.9, 8908.0], [53.0, 8917.0], [53.1, 8920.0], [53.2, 8947.0], [53.3, 8950.0], [53.4, 8961.0], [53.5, 9121.0], [53.6, 9144.0], [53.7, 9144.0], [53.8, 9161.0], [53.9, 9187.0], [54.0, 9246.0], [54.1, 9254.0], [54.2, 9270.0], [54.3, 9452.0], [54.4, 9456.0], [54.5, 9485.0], [54.6, 9549.0], [54.7, 9593.0], [54.8, 9645.0], [54.9, 9661.0], [55.0, 9688.0], [55.1, 9717.0], [55.2, 9733.0], [55.3, 9786.0], [55.4, 9794.0], [55.5, 9832.0], [55.6, 9887.0], [55.7, 9919.0], [55.8, 10013.0], [55.9, 10060.0], [56.0, 10109.0], [56.1, 10109.0], [56.2, 10126.0], [56.3, 10152.0], [56.4, 10284.0], [56.5, 10369.0], [56.6, 10379.0], [56.7, 10451.0], [56.8, 10453.0], [56.9, 10479.0], [57.0, 10598.0], [57.1, 10621.0], [57.2, 10714.0], [57.3, 10795.0], [57.4, 10859.0], [57.5, 10879.0], [57.6, 10905.0], [57.7, 11014.0], [57.8, 11022.0], [57.9, 11076.0], [58.0, 11161.0], [58.1, 11209.0], [58.2, 11210.0], [58.3, 11267.0], [58.4, 11286.0], [58.5, 11367.0], [58.6, 11367.0], [58.7, 11423.0], [58.8, 11468.0], [58.9, 11521.0], [59.0, 11569.0], [59.1, 11651.0], [59.2, 11717.0], [59.3, 11730.0], [59.4, 11751.0], [59.5, 11759.0], [59.6, 11777.0], [59.7, 11852.0], [59.8, 11867.0], [59.9, 11888.0], [60.0, 11987.0], [60.1, 12099.0], [60.2, 12105.0], [60.3, 12111.0], [60.4, 12152.0], [60.5, 12265.0], [60.6, 12309.0], [60.7, 12387.0], [60.8, 12548.0], [60.9, 12619.0], [61.0, 12619.0], [61.1, 12622.0], [61.2, 12759.0], [61.3, 12809.0], [61.4, 12931.0], [61.5, 13001.0], [61.6, 13004.0], [61.7, 13049.0], [61.8, 13119.0], [61.9, 13132.0], [62.0, 13138.0], [62.1, 13145.0], [62.2, 13293.0], [62.3, 13306.0], [62.4, 13362.0], [62.5, 13465.0], [62.6, 13508.0], [62.7, 13530.0], [62.8, 13539.0], [62.9, 13577.0], [63.0, 13592.0], [63.1, 13608.0], [63.2, 13662.0], [63.3, 13777.0], [63.4, 13833.0], [63.5, 13833.0], [63.6, 14075.0], [63.7, 14123.0], [63.8, 14299.0], [63.9, 14395.0], [64.0, 14428.0], [64.1, 14529.0], [64.2, 14638.0], [64.3, 14742.0], [64.4, 14791.0], [64.5, 14807.0], [64.6, 15094.0], [64.7, 15101.0], [64.8, 15151.0], [64.9, 15175.0], [65.0, 15377.0], [65.1, 15385.0], [65.2, 15535.0], [65.3, 15593.0], [65.4, 15668.0], [65.5, 15740.0], [65.6, 15760.0], [65.7, 15823.0], [65.8, 16162.0], [65.9, 16162.0], [66.0, 16253.0], [66.1, 16451.0], [66.2, 16530.0], [66.3, 16603.0], [66.4, 16689.0], [66.5, 16747.0], [66.6, 16769.0], [66.7, 16783.0], [66.8, 16904.0], [66.9, 16980.0], [67.0, 16985.0], [67.1, 17038.0], [67.2, 17072.0], [67.3, 17113.0], [67.4, 17136.0], [67.5, 17175.0], [67.6, 17178.0], [67.7, 17308.0], [67.8, 17352.0], [67.9, 17436.0], [68.0, 17490.0], [68.1, 17551.0], [68.2, 17634.0], [68.3, 17634.0], [68.4, 17718.0], [68.5, 17772.0], [68.6, 17779.0], [68.7, 17952.0], [68.8, 17987.0], [68.9, 18089.0], [69.0, 18155.0], [69.1, 18233.0], [69.2, 18252.0], [69.3, 18400.0], [69.4, 18471.0], [69.5, 18488.0], [69.6, 18828.0], [69.7, 18867.0], [69.8, 18875.0], [69.9, 19045.0], [70.0, 19320.0], [70.1, 19411.0], [70.2, 19427.0], [70.3, 19459.0], [70.4, 19612.0], [70.5, 19774.0], [70.6, 19866.0], [70.7, 19867.0], [70.8, 19867.0], [70.9, 19913.0], [71.0, 19982.0], [71.1, 20068.0], [71.2, 20145.0], [71.3, 20151.0], [71.4, 20192.0], [71.5, 20198.0], [71.6, 20237.0], [71.7, 20340.0], [71.8, 20392.0], [71.9, 20416.0], [72.0, 20429.0], [72.1, 20490.0], [72.2, 20758.0], [72.3, 21055.0], [72.4, 21144.0], [72.5, 21149.0], [72.6, 21171.0], [72.7, 21245.0], [72.8, 21264.0], [72.9, 21329.0], [73.0, 21354.0], [73.1, 21399.0], [73.2, 21399.0], [73.3, 21453.0], [73.4, 21582.0], [73.5, 21585.0], [73.6, 21590.0], [73.7, 21727.0], [73.8, 21744.0], [73.9, 21793.0], [74.0, 21937.0], [74.1, 22128.0], [74.2, 22128.0], [74.3, 22191.0], [74.4, 22252.0], [74.5, 22466.0], [74.6, 22515.0], [74.7, 22516.0], [74.8, 22641.0], [74.9, 22700.0], [75.0, 22758.0], [75.1, 22831.0], [75.2, 22866.0], [75.3, 22883.0], [75.4, 22914.0], [75.5, 23046.0], [75.6, 23119.0], [75.7, 23119.0], [75.8, 23169.0], [75.9, 23636.0], [76.0, 23647.0], [76.1, 23732.0], [76.2, 23869.0], [76.3, 23985.0], [76.4, 24021.0], [76.5, 24039.0], [76.6, 24049.0], [76.7, 24229.0], [76.8, 24429.0], [76.9, 24484.0], [77.0, 24588.0], [77.1, 24706.0], [77.2, 24715.0], [77.3, 24765.0], [77.4, 24776.0], [77.5, 24908.0], [77.6, 24915.0], [77.7, 25006.0], [77.8, 25014.0], [77.9, 25072.0], [78.0, 25170.0], [78.1, 25170.0], [78.2, 25444.0], [78.3, 25570.0], [78.4, 25648.0], [78.5, 25725.0], [78.6, 25750.0], [78.7, 25915.0], [78.8, 26146.0], [78.9, 26342.0], [79.0, 26343.0], [79.1, 26383.0], [79.2, 26471.0], [79.3, 26562.0], [79.4, 26706.0], [79.5, 27265.0], [79.6, 27506.0], [79.7, 27566.0], [79.8, 27736.0], [79.9, 27762.0], [80.0, 27900.0], [80.1, 27911.0], [80.2, 27960.0], [80.3, 27963.0], [80.4, 28027.0], [80.5, 28027.0], [80.6, 28327.0], [80.7, 28562.0], [80.8, 28715.0], [80.9, 28721.0], [81.0, 28795.0], [81.1, 28808.0], [81.2, 29122.0], [81.3, 29291.0], [81.4, 29337.0], [81.5, 29390.0], [81.6, 29670.0], [81.7, 29913.0], [81.8, 29926.0], [81.9, 30231.0], [82.0, 30275.0], [82.1, 30507.0], [82.2, 30515.0], [82.3, 30739.0], [82.4, 30792.0], [82.5, 30837.0], [82.6, 30864.0], [82.7, 30885.0], [82.8, 30931.0], [82.9, 31028.0], [83.0, 31028.0], [83.1, 31162.0], [83.2, 31199.0], [83.3, 31230.0], [83.4, 31534.0], [83.5, 31676.0], [83.6, 32403.0], [83.7, 32489.0], [83.8, 32657.0], [83.9, 32827.0], [84.0, 33057.0], [84.1, 33105.0], [84.2, 33259.0], [84.3, 33363.0], [84.4, 33574.0], [84.5, 33597.0], [84.6, 33991.0], [84.7, 34096.0], [84.8, 34222.0], [84.9, 34235.0], [85.0, 34329.0], [85.1, 34347.0], [85.2, 34385.0], [85.3, 34934.0], [85.4, 34934.0], [85.5, 35053.0], [85.6, 35567.0], [85.7, 35846.0], [85.8, 35884.0], [85.9, 35939.0], [86.0, 36043.0], [86.1, 36055.0], [86.2, 36425.0], [86.3, 36595.0], [86.4, 36670.0], [86.5, 37251.0], [86.6, 37324.0], [86.7, 38010.0], [86.8, 38121.0], [86.9, 39036.0], [87.0, 39102.0], [87.1, 39663.0], [87.2, 39992.0], [87.3, 40073.0], [87.4, 40555.0], [87.5, 40691.0], [87.6, 41445.0], [87.7, 42296.0], [87.8, 42480.0], [87.9, 42480.0], [88.0, 42977.0], [88.1, 43329.0], [88.2, 43541.0], [88.3, 43553.0], [88.4, 43608.0], [88.5, 43847.0], [88.6, 44721.0], [88.7, 45272.0], [88.8, 46178.0], [88.9, 46523.0], [89.0, 46838.0], [89.1, 47123.0], [89.2, 47576.0], [89.3, 47918.0], [89.4, 49840.0], [89.5, 50882.0], [89.6, 51673.0], [89.7, 51834.0], [89.8, 52150.0], [89.9, 53678.0], [90.0, 54001.0], [90.1, 54163.0], [90.2, 54582.0], [90.3, 54582.0], [90.4, 54834.0], [90.5, 55010.0], [90.6, 55581.0], [90.7, 55903.0], [90.8, 56616.0], [90.9, 56787.0], [91.0, 56950.0], [91.1, 57357.0], [91.2, 58280.0], [91.3, 58311.0], [91.4, 58783.0], [91.5, 59875.0], [91.6, 60373.0], [91.7, 60376.0], [91.8, 60377.0], [91.9, 60377.0], [92.0, 60377.0], [92.1, 60380.0], [92.2, 60380.0], [92.3, 60380.0], [92.4, 60382.0], [92.5, 60382.0], [92.6, 60383.0], [92.7, 60383.0], [92.8, 60383.0], [92.9, 60383.0], [93.0, 60384.0], [93.1, 60384.0], [93.2, 60385.0], [93.3, 60387.0], [93.4, 60387.0], [93.5, 60389.0], [93.6, 60390.0], [93.7, 60390.0], [93.8, 60390.0], [93.9, 60392.0], [94.0, 60393.0], [94.1, 60394.0], [94.2, 60395.0], [94.3, 60395.0], [94.4, 60396.0], [94.5, 60396.0], [94.6, 60398.0], [94.7, 60398.0], [94.8, 60398.0], [94.9, 60399.0], [95.0, 60400.0], [95.1, 60400.0], [95.2, 60400.0], [95.3, 60402.0], [95.4, 60403.0], [95.5, 60403.0], [95.6, 60404.0], [95.7, 60405.0], [95.8, 60406.0], [95.9, 60406.0], [96.0, 60406.0], [96.1, 60407.0], [96.2, 60409.0], [96.3, 60411.0], [96.4, 60412.0], [96.5, 60414.0], [96.6, 60416.0], [96.7, 60416.0], [96.8, 60417.0], [96.9, 60418.0], [97.0, 60418.0], [97.1, 60418.0], [97.2, 60419.0], [97.3, 60420.0], [97.4, 60421.0], [97.5, 60421.0], [97.6, 60421.0], [97.7, 60425.0], [97.8, 60439.0], [97.9, 60444.0], [98.0, 60447.0], [98.1, 60453.0], [98.2, 60458.0], [98.3, 60496.0], [98.4, 60503.0], [98.5, 60504.0], [98.6, 60514.0], [98.7, 60517.0], [98.8, 60525.0], [98.9, 60525.0], [99.0, 60526.0], [99.1, 60534.0], [99.2, 60536.0], [99.3, 60566.0], [99.4, 60570.0], [99.5, 60588.0], [99.6, 60644.0], [99.7, 60646.0], [99.8, 84928.0], [99.9, 88650.0], [100.0, 88650.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 122.0], [0.1, 122.0], [0.2, 123.0], [0.3, 123.0], [0.4, 123.0], [0.5, 123.0], [0.6, 124.0], [0.7, 124.0], [0.8, 124.0], [0.9, 124.0], [1.0, 124.0], [1.1, 124.0], [1.2, 124.0], [1.3, 124.0], [1.4, 124.0], [1.5, 124.0], [1.6, 124.0], [1.7, 124.0], [1.8, 125.0], [1.9, 125.0], [2.0, 125.0], [2.1, 125.0], [2.2, 125.0], [2.3, 125.0], [2.4, 125.0], [2.5, 125.0], [2.6, 125.0], [2.7, 125.0], [2.8, 125.0], [2.9, 125.0], [3.0, 125.0], [3.1, 125.0], [3.2, 125.0], [3.3, 125.0], [3.4, 125.0], [3.5, 125.0], [3.6, 126.0], [3.7, 126.0], [3.8, 126.0], [3.9, 126.0], [4.0, 126.0], [4.1, 126.0], [4.2, 126.0], [4.3, 126.0], [4.4, 126.0], [4.5, 126.0], [4.6, 126.0], [4.7, 126.0], [4.8, 126.0], [4.9, 126.0], [5.0, 126.0], [5.1, 126.0], [5.2, 126.0], [5.3, 126.0], [5.4, 126.0], [5.5, 126.0], [5.6, 126.0], [5.7, 126.0], [5.8, 126.0], [5.9, 126.0], [6.0, 126.0], [6.1, 127.0], [6.2, 127.0], [6.3, 127.0], [6.4, 127.0], [6.5, 127.0], [6.6, 127.0], [6.7, 127.0], [6.8, 127.0], [6.9, 127.0], [7.0, 127.0], [7.1, 127.0], [7.2, 127.0], [7.3, 127.0], [7.4, 127.0], [7.5, 127.0], [7.6, 127.0], [7.7, 127.0], [7.8, 127.0], [7.9, 127.0], [8.0, 127.0], [8.1, 127.0], [8.2, 128.0], [8.3, 128.0], [8.4, 128.0], [8.5, 128.0], [8.6, 128.0], [8.7, 128.0], [8.8, 128.0], [8.9, 128.0], [9.0, 128.0], [9.1, 128.0], [9.2, 128.0], [9.3, 128.0], [9.4, 128.0], [9.5, 128.0], [9.6, 128.0], [9.7, 128.0], [9.8, 128.0], [9.9, 128.0], [10.0, 129.0], [10.1, 129.0], [10.2, 129.0], [10.3, 129.0], [10.4, 129.0], [10.5, 129.0], [10.6, 129.0], [10.7, 129.0], [10.8, 129.0], [10.9, 129.0], [11.0, 129.0], [11.1, 129.0], [11.2, 129.0], [11.3, 129.0], [11.4, 129.0], [11.5, 129.0], [11.6, 129.0], [11.7, 129.0], [11.8, 129.0], [11.9, 129.0], [12.0, 130.0], [12.1, 130.0], [12.2, 130.0], [12.3, 130.0], [12.4, 130.0], [12.5, 130.0], [12.6, 130.0], [12.7, 130.0], [12.8, 130.0], [12.9, 130.0], [13.0, 130.0], [13.1, 130.0], [13.2, 130.0], [13.3, 130.0], [13.4, 130.0], [13.5, 130.0], [13.6, 130.0], [13.7, 131.0], [13.8, 131.0], [13.9, 131.0], [14.0, 131.0], [14.1, 131.0], [14.2, 131.0], [14.3, 131.0], [14.4, 131.0], [14.5, 131.0], [14.6, 131.0], [14.7, 131.0], [14.8, 131.0], [14.9, 131.0], [15.0, 131.0], [15.1, 131.0], [15.2, 131.0], [15.3, 131.0], [15.4, 131.0], [15.5, 131.0], [15.6, 131.0], [15.7, 131.0], [15.8, 131.0], [15.9, 131.0], [16.0, 131.0], [16.1, 131.0], [16.2, 131.0], [16.3, 131.0], [16.4, 131.0], [16.5, 131.0], [16.6, 131.0], [16.7, 131.0], [16.8, 131.0], [16.9, 132.0], [17.0, 132.0], [17.1, 132.0], [17.2, 132.0], [17.3, 132.0], [17.4, 132.0], [17.5, 132.0], [17.6, 132.0], [17.7, 132.0], [17.8, 132.0], [17.9, 132.0], [18.0, 132.0], [18.1, 132.0], [18.2, 132.0], [18.3, 132.0], [18.4, 132.0], [18.5, 132.0], [18.6, 133.0], [18.7, 133.0], [18.8, 133.0], [18.9, 133.0], [19.0, 133.0], [19.1, 133.0], [19.2, 133.0], [19.3, 133.0], [19.4, 133.0], [19.5, 133.0], [19.6, 133.0], [19.7, 133.0], [19.8, 133.0], [19.9, 134.0], [20.0, 134.0], [20.1, 134.0], [20.2, 134.0], [20.3, 134.0], [20.4, 134.0], [20.5, 134.0], [20.6, 134.0], [20.7, 134.0], [20.8, 134.0], [20.9, 134.0], [21.0, 134.0], [21.1, 134.0], [21.2, 134.0], [21.3, 134.0], [21.4, 134.0], [21.5, 135.0], [21.6, 135.0], [21.7, 135.0], [21.8, 135.0], [21.9, 135.0], [22.0, 135.0], [22.1, 135.0], [22.2, 135.0], [22.3, 136.0], [22.4, 136.0], [22.5, 136.0], [22.6, 136.0], [22.7, 143.0], [22.8, 156.0], [22.9, 397.0], [23.0, 546.0], [23.1, 554.0], [23.2, 558.0], [23.3, 564.0], [23.4, 571.0], [23.5, 613.0], [23.6, 624.0], [23.7, 657.0], [23.8, 709.0], [23.9, 736.0], [24.0, 736.0], [24.1, 758.0], [24.2, 770.0], [24.3, 801.0], [24.4, 804.0], [24.5, 834.0], [24.6, 838.0], [24.7, 841.0], [24.8, 843.0], [24.9, 866.0], [25.0, 869.0], [25.1, 883.0], [25.2, 883.0], [25.3, 889.0], [25.4, 910.0], [25.5, 915.0], [25.6, 924.0], [25.7, 953.0], [25.8, 961.0], [25.9, 982.0], [26.0, 987.0], [26.1, 987.0], [26.2, 993.0], [26.3, 1004.0], [26.4, 1013.0], [26.5, 1022.0], [26.6, 1024.0], [26.7, 1029.0], [26.8, 1030.0], [26.9, 1031.0], [27.0, 1032.0], [27.1, 1042.0], [27.2, 1051.0], [27.3, 1055.0], [27.4, 1059.0], [27.5, 1067.0], [27.6, 1073.0], [27.7, 1086.0], [27.8, 1092.0], [27.9, 1100.0], [28.0, 1124.0], [28.1, 1127.0], [28.2, 1130.0], [28.3, 1130.0], [28.4, 1140.0], [28.5, 1144.0], [28.6, 1146.0], [28.7, 1147.0], [28.8, 1148.0], [28.9, 1161.0], [29.0, 1162.0], [29.1, 1168.0], [29.2, 1178.0], [29.3, 1196.0], [29.4, 1225.0], [29.5, 1226.0], [29.6, 1238.0], [29.7, 1240.0], [29.8, 1264.0], [29.9, 1266.0], [30.0, 1269.0], [30.1, 1273.0], [30.2, 1276.0], [30.3, 1281.0], [30.4, 1317.0], [30.5, 1317.0], [30.6, 1322.0], [30.7, 1338.0], [30.8, 1339.0], [30.9, 1348.0], [31.0, 1353.0], [31.1, 1362.0], [31.2, 1396.0], [31.3, 1402.0], [31.4, 1405.0], [31.5, 1434.0], [31.6, 1441.0], [31.7, 1458.0], [31.8, 1466.0], [31.9, 1474.0], [32.0, 1499.0], [32.1, 1617.0], [32.2, 1641.0], [32.3, 1690.0], [32.4, 1710.0], [32.5, 1724.0], [32.6, 1830.0], [32.7, 1830.0], [32.8, 1842.0], [32.9, 1872.0], [33.0, 1887.0], [33.1, 1901.0], [33.2, 2140.0], [33.3, 2214.0], [33.4, 2467.0], [33.5, 2598.0], [33.6, 2622.0], [33.7, 2962.0], [33.8, 3034.0], [33.9, 3105.0], [34.0, 3127.0], [34.1, 3146.0], [34.2, 3202.0], [34.3, 3246.0], [34.4, 3266.0], [34.5, 3289.0], [34.6, 3301.0], [34.7, 3548.0], [34.8, 3548.0], [34.9, 3774.0], [35.0, 3828.0], [35.1, 3903.0], [35.2, 4042.0], [35.3, 4091.0], [35.4, 4103.0], [35.5, 4103.0], [35.6, 4173.0], [35.7, 4238.0], [35.8, 4313.0], [35.9, 4339.0], [36.0, 4366.0], [36.1, 4384.0], [36.2, 4394.0], [36.3, 4461.0], [36.4, 4465.0], [36.5, 4468.0], [36.6, 4471.0], [36.7, 4521.0], [36.8, 4530.0], [36.9, 4567.0], [37.0, 4567.0], [37.1, 4577.0], [37.2, 4659.0], [37.3, 4709.0], [37.4, 4717.0], [37.5, 4737.0], [37.6, 4779.0], [37.7, 4783.0], [37.8, 4817.0], [37.9, 4825.0], [38.0, 4826.0], [38.1, 4909.0], [38.2, 4975.0], [38.3, 5011.0], [38.4, 5015.0], [38.5, 5019.0], [38.6, 5033.0], [38.7, 5048.0], [38.8, 5049.0], [38.9, 5050.0], [39.0, 5087.0], [39.1, 5104.0], [39.2, 5104.0], [39.3, 5121.0], [39.4, 5137.0], [39.5, 5149.0], [39.6, 5160.0], [39.7, 5162.0], [39.8, 5170.0], [39.9, 5174.0], [40.0, 5181.0], [40.1, 5200.0], [40.2, 5213.0], [40.3, 5218.0], [40.4, 5234.0], [40.5, 5237.0], [40.6, 5240.0], [40.7, 5244.0], [40.8, 5246.0], [40.9, 5250.0], [41.0, 5253.0], [41.1, 5258.0], [41.2, 5264.0], [41.3, 5268.0], [41.4, 5268.0], [41.5, 5273.0], [41.6, 5309.0], [41.7, 5309.0], [41.8, 5345.0], [41.9, 5368.0], [42.0, 5378.0], [42.1, 5400.0], [42.2, 5444.0], [42.3, 5454.0], [42.4, 5459.0], [42.5, 5461.0], [42.6, 5505.0], [42.7, 5510.0], [42.8, 5515.0], [42.9, 5517.0], [43.0, 5593.0], [43.1, 5599.0], [43.2, 5637.0], [43.3, 5645.0], [43.4, 5654.0], [43.5, 5654.0], [43.6, 5662.0], [43.7, 5671.0], [43.8, 5687.0], [43.9, 5704.0], [44.0, 5740.0], [44.1, 5742.0], [44.2, 5743.0], [44.3, 5807.0], [44.4, 5824.0], [44.5, 5845.0], [44.6, 5846.0], [44.7, 5858.0], [44.8, 5881.0], [44.9, 5908.0], [45.0, 5922.0], [45.1, 5931.0], [45.2, 5932.0], [45.3, 5940.0], [45.4, 5960.0], [45.5, 5967.0], [45.6, 6007.0], [45.7, 6007.0], [45.8, 6056.0], [45.9, 6078.0], [46.0, 6080.0], [46.1, 6105.0], [46.2, 6136.0], [46.3, 6151.0], [46.4, 6170.0], [46.5, 6176.0], [46.6, 6191.0], [46.7, 6287.0], [46.8, 6301.0], [46.9, 6346.0], [47.0, 6407.0], [47.1, 6418.0], [47.2, 6482.0], [47.3, 6496.0], [47.4, 6539.0], [47.5, 6566.0], [47.6, 6615.0], [47.7, 6630.0], [47.8, 6668.0], [47.9, 6668.0], [48.0, 6677.0], [48.1, 6737.0], [48.2, 6777.0], [48.3, 6795.0], [48.4, 6836.0], [48.5, 6892.0], [48.6, 6916.0], [48.7, 6941.0], [48.8, 7069.0], [48.9, 7075.0], [49.0, 7128.0], [49.1, 7130.0], [49.2, 7211.0], [49.3, 7213.0], [49.4, 7296.0], [49.5, 7324.0], [49.6, 7518.0], [49.7, 7537.0], [49.8, 7566.0], [49.9, 7587.0], [50.0, 7587.0], [50.1, 7617.0], [50.2, 7693.0], [50.3, 7706.0], [50.4, 7762.0], [50.5, 7867.0], [50.6, 7936.0], [50.7, 8049.0], [50.8, 8050.0], [50.9, 8071.0], [51.0, 8111.0], [51.1, 8312.0], [51.2, 8327.0], [51.3, 8382.0], [51.4, 8413.0], [51.5, 8413.0], [51.6, 8422.0], [51.7, 8429.0], [51.8, 8463.0], [51.9, 8469.0], [52.0, 8471.0], [52.1, 8510.0], [52.2, 8510.0], [52.3, 8545.0], [52.4, 8579.0], [52.5, 8623.0], [52.6, 8647.0], [52.7, 8652.0], [52.8, 8653.0], [52.9, 8656.0], [53.0, 8662.0], [53.1, 8690.0], [53.2, 8696.0], [53.3, 8871.0], [53.4, 8879.0], [53.5, 8894.0], [53.6, 8934.0], [53.7, 8986.0], [53.8, 8998.0], [53.9, 9017.0], [54.0, 9087.0], [54.1, 9189.0], [54.2, 9196.0], [54.3, 9200.0], [54.4, 9200.0], [54.5, 9332.0], [54.6, 9384.0], [54.7, 9395.0], [54.8, 9426.0], [54.9, 9439.0], [55.0, 9482.0], [55.1, 9536.0], [55.2, 9538.0], [55.3, 9572.0], [55.4, 9629.0], [55.5, 9641.0], [55.6, 9667.0], [55.7, 9749.0], [55.8, 9794.0], [55.9, 9836.0], [56.0, 9866.0], [56.1, 9893.0], [56.2, 10003.0], [56.3, 10097.0], [56.4, 10108.0], [56.5, 10187.0], [56.6, 10187.0], [56.7, 10193.0], [56.8, 10214.0], [56.9, 10334.0], [57.0, 10359.0], [57.1, 10444.0], [57.2, 10463.0], [57.3, 10588.0], [57.4, 10628.0], [57.5, 10641.0], [57.6, 10690.0], [57.7, 10764.0], [57.8, 10815.0], [57.9, 10902.0], [58.0, 10921.0], [58.1, 10942.0], [58.2, 10944.0], [58.3, 11004.0], [58.4, 11110.0], [58.5, 11146.0], [58.6, 11222.0], [58.7, 11222.0], [58.8, 11233.0], [58.9, 11309.0], [59.0, 11389.0], [59.1, 11426.0], [59.2, 11430.0], [59.3, 11476.0], [59.4, 11478.0], [59.5, 11493.0], [59.6, 11588.0], [59.7, 11605.0], [59.8, 11628.0], [59.9, 11723.0], [60.0, 11850.0], [60.1, 11851.0], [60.2, 11854.0], [60.3, 11897.0], [60.4, 12018.0], [60.5, 12045.0], [60.6, 12122.0], [60.7, 12243.0], [60.8, 12294.0], [60.9, 12294.0], [61.0, 12311.0], [61.1, 12509.0], [61.2, 12561.0], [61.3, 12656.0], [61.4, 12702.0], [61.5, 12753.0], [61.6, 12784.0], [61.7, 12819.0], [61.8, 12858.0], [61.9, 12864.0], [62.0, 12882.0], [62.1, 13023.0], [62.2, 13023.0], [62.3, 13078.0], [62.4, 13192.0], [62.5, 13246.0], [62.6, 13271.0], [62.7, 13273.0], [62.8, 13325.0], [62.9, 13344.0], [63.0, 13346.0], [63.1, 13346.0], [63.2, 13374.0], [63.3, 13389.0], [63.4, 13516.0], [63.5, 13563.0], [63.6, 13806.0], [63.7, 13863.0], [63.8, 14033.0], [63.9, 14128.0], [64.0, 14155.0], [64.1, 14276.0], [64.2, 14386.0], [64.3, 14478.0], [64.4, 14517.0], [64.5, 14540.0], [64.6, 14836.0], [64.7, 14844.0], [64.8, 14893.0], [64.9, 14899.0], [65.0, 15114.0], [65.1, 15126.0], [65.2, 15267.0], [65.3, 15267.0], [65.4, 15337.0], [65.5, 15412.0], [65.6, 15471.0], [65.7, 15480.0], [65.8, 15548.0], [65.9, 15911.0], [66.0, 15974.0], [66.1, 16184.0], [66.2, 16278.0], [66.3, 16296.0], [66.4, 16428.0], [66.5, 16484.0], [66.6, 16498.0], [66.7, 16500.0], [66.8, 16631.0], [66.9, 16714.0], [67.0, 16719.0], [67.1, 16762.0], [67.2, 16816.0], [67.3, 16822.0], [67.4, 16822.0], [67.5, 16848.0], [67.6, 16911.0], [67.7, 16921.0], [67.8, 17048.0], [67.9, 17075.0], [68.0, 17166.0], [68.1, 17227.0], [68.2, 17294.0], [68.3, 17370.0], [68.4, 17461.0], [68.5, 17505.0], [68.6, 17514.0], [68.7, 17687.0], [68.8, 17729.0], [68.9, 17825.0], [69.0, 17889.0], [69.1, 17967.0], [69.2, 18002.0], [69.3, 18141.0], [69.4, 18186.0], [69.5, 18234.0], [69.6, 18234.0], [69.7, 18543.0], [69.8, 18611.0], [69.9, 18611.0], [70.0, 18791.0], [70.1, 19063.0], [70.2, 19150.0], [70.3, 19178.0], [70.4, 19201.0], [70.5, 19337.0], [70.6, 19519.0], [70.7, 19596.0], [70.8, 19618.0], [70.9, 19653.0], [71.0, 19717.0], [71.1, 19805.0], [71.2, 19874.0], [71.3, 19883.0], [71.4, 19931.0], [71.5, 19934.0], [71.6, 19977.0], [71.7, 20070.0], [71.8, 20070.0], [71.9, 20140.0], [72.0, 20153.0], [72.1, 20178.0], [72.2, 20227.0], [72.3, 20497.0], [72.4, 20788.0], [72.5, 20872.0], [72.6, 20883.0], [72.7, 20922.0], [72.8, 20989.0], [72.9, 21008.0], [73.0, 21073.0], [73.1, 21089.0], [73.2, 21128.0], [73.3, 21200.0], [73.4, 21300.0], [73.5, 21306.0], [73.6, 21327.0], [73.7, 21445.0], [73.8, 21491.0], [73.9, 21514.0], [74.0, 21514.0], [74.1, 21676.0], [74.2, 21871.0], [74.3, 21873.0], [74.4, 21909.0], [74.5, 21930.0], [74.6, 22215.0], [74.7, 22235.0], [74.8, 22270.0], [74.9, 22388.0], [75.0, 22434.0], [75.1, 22505.0], [75.2, 22540.0], [75.3, 22606.0], [75.4, 22618.0], [75.5, 22668.0], [75.6, 22784.0], [75.7, 22807.0], [75.8, 22906.0], [75.9, 23380.0], [76.0, 23388.0], [76.1, 23388.0], [76.2, 23425.0], [76.3, 23617.0], [76.4, 23696.0], [76.5, 23697.0], [76.6, 23784.0], [76.7, 23788.0], [76.8, 23976.0], [76.9, 24170.0], [77.0, 24206.0], [77.1, 24314.0], [77.2, 24443.0], [77.3, 24451.0], [77.4, 24492.0], [77.5, 24499.0], [77.6, 24643.0], [77.7, 24658.0], [77.8, 24719.0], [77.9, 24766.0], [78.0, 24772.0], [78.1, 24860.0], [78.2, 25165.0], [78.3, 25165.0], [78.4, 25266.0], [78.5, 25294.0], [78.6, 25400.0], [78.7, 25494.0], [78.8, 25660.0], [78.9, 25888.0], [79.0, 26070.0], [79.1, 26084.0], [79.2, 26123.0], [79.3, 26201.0], [79.4, 26289.0], [79.5, 26457.0], [79.6, 27005.0], [79.7, 27255.0], [79.8, 27320.0], [79.9, 27473.0], [80.0, 27512.0], [80.1, 27617.0], [80.2, 27643.0], [80.3, 27649.0], [80.4, 27717.0], [80.5, 27717.0], [80.6, 27768.0], [80.7, 28061.0], [80.8, 28294.0], [80.9, 28452.0], [81.0, 28462.0], [81.1, 28503.0], [81.2, 28558.0], [81.3, 28835.0], [81.4, 29024.0], [81.5, 29035.0], [81.6, 29065.0], [81.7, 29381.0], [81.8, 29631.0], [81.9, 29668.0], [82.0, 29968.0], [82.1, 30027.0], [82.2, 30250.0], [82.3, 30253.0], [82.4, 30478.0], [82.5, 30512.0], [82.6, 30587.0], [82.7, 30587.0], [82.8, 30618.0], [82.9, 30640.0], [83.0, 30663.0], [83.1, 30766.0], [83.2, 30905.0], [83.3, 30936.0], [83.4, 30937.0], [83.5, 31279.0], [83.6, 31419.0], [83.7, 32122.0], [83.8, 32228.0], [83.9, 32408.0], [84.0, 32578.0], [84.1, 32774.0], [84.2, 32859.0], [84.3, 32982.0], [84.4, 33101.0], [84.5, 33303.0], [84.6, 33310.0], [84.7, 33730.0], [84.8, 33730.0], [84.9, 33829.0], [85.0, 33962.0], [85.1, 33982.0], [85.2, 34063.0], [85.3, 34085.0], [85.4, 34116.0], [85.5, 34675.0], [85.6, 34764.0], [85.7, 35315.0], [85.8, 35583.0], [85.9, 35586.0], [86.0, 35661.0], [86.1, 35781.0], [86.2, 35797.0], [86.3, 36163.0], [86.4, 36303.0], [86.5, 36411.0], [86.6, 36987.0], [86.7, 37015.0], [86.8, 37751.0], [86.9, 37864.0], [87.0, 37864.0], [87.1, 38759.0], [87.2, 38854.0], [87.3, 39405.0], [87.4, 39734.0], [87.5, 39805.0], [87.6, 40274.0], [87.7, 40429.0], [87.8, 41197.0], [87.9, 42033.0], [88.0, 42205.0], [88.1, 42719.0], [88.2, 43077.0], [88.3, 43238.0], [88.4, 43292.0], [88.5, 43339.0], [88.6, 43599.0], [88.7, 44467.0], [88.8, 45000.0], [88.9, 45927.0], [89.0, 46262.0], [89.1, 46573.0], [89.2, 46573.0], [89.3, 46865.0], [89.4, 47325.0], [89.5, 47642.0], [89.6, 49576.0], [89.7, 50627.0], [89.8, 51415.0], [89.9, 51541.0], [90.0, 51900.0], [90.1, 53408.0], [90.2, 53734.0], [90.3, 53880.0], [90.4, 54311.0], [90.5, 54585.0], [90.6, 54761.0], [90.7, 55288.0], [90.8, 55557.0], [90.9, 56314.0], [91.0, 56486.0], [91.1, 56700.0], [91.2, 57090.0], [91.3, 58018.0], [91.4, 58018.0], [91.5, 58023.0], [91.6, 58522.0], [91.7, 59618.0], [91.8, 60125.0], [91.9, 60127.0], [92.0, 60127.0], [92.1, 60127.0], [92.2, 60127.0], [92.3, 60127.0], [92.4, 60127.0], [92.5, 60128.0], [92.6, 60128.0], [92.7, 60128.0], [92.8, 60128.0], [92.9, 60128.0], [93.0, 60128.0], [93.1, 60128.0], [93.2, 60128.0], [93.3, 60128.0], [93.4, 60129.0], [93.5, 60129.0], [93.6, 60129.0], [93.7, 60129.0], [93.8, 60129.0], [93.9, 60129.0], [94.0, 60129.0], [94.1, 60130.0], [94.2, 60130.0], [94.3, 60130.0], [94.4, 60131.0], [94.5, 60131.0], [94.6, 60131.0], [94.7, 60132.0], [94.8, 60132.0], [94.9, 60132.0], [95.0, 60132.0], [95.1, 60132.0], [95.2, 60132.0], [95.3, 60132.0], [95.4, 60133.0], [95.5, 60133.0], [95.6, 60133.0], [95.7, 60133.0], [95.8, 60133.0], [95.9, 60133.0], [96.0, 60133.0], [96.1, 60133.0], [96.2, 60133.0], [96.3, 60133.0], [96.4, 60133.0], [96.5, 60134.0], [96.6, 60134.0], [96.7, 60134.0], [96.8, 60134.0], [96.9, 60134.0], [97.0, 60135.0], [97.1, 60135.0], [97.2, 60135.0], [97.3, 60135.0], [97.4, 60135.0], [97.5, 60135.0], [97.6, 60135.0], [97.7, 60135.0], [97.8, 60136.0], [97.9, 60136.0], [98.0, 60136.0], [98.1, 60137.0], [98.2, 60138.0], [98.3, 60141.0], [98.4, 60154.0], [98.5, 60184.0], [98.6, 60248.0], [98.7, 60248.0], [98.8, 60248.0], [98.9, 60249.0], [99.0, 60249.0], [99.1, 60249.0], [99.2, 60250.0], [99.3, 60250.0], [99.4, 60254.0], [99.5, 60255.0], [99.6, 60259.0], [99.7, 60259.0], [99.8, 60259.0], [99.9, 60261.0], [100.0, 60261.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 244.0], [0.1, 244.0], [0.2, 245.0], [0.3, 245.0], [0.4, 245.0], [0.5, 246.0], [0.6, 246.0], [0.7, 246.0], [0.8, 246.0], [0.9, 246.0], [1.0, 246.0], [1.1, 246.0], [1.2, 246.0], [1.3, 246.0], [1.4, 246.0], [1.5, 246.0], [1.6, 246.0], [1.7, 246.0], [1.8, 246.0], [1.9, 246.0], [2.0, 246.0], [2.1, 246.0], [2.2, 247.0], [2.3, 247.0], [2.4, 247.0], [2.5, 247.0], [2.6, 247.0], [2.7, 247.0], [2.8, 247.0], [2.9, 247.0], [3.0, 247.0], [3.1, 247.0], [3.2, 247.0], [3.3, 247.0], [3.4, 247.0], [3.5, 247.0], [3.6, 247.0], [3.7, 247.0], [3.8, 247.0], [3.9, 247.0], [4.0, 248.0], [4.1, 248.0], [4.2, 248.0], [4.3, 248.0], [4.4, 248.0], [4.5, 248.0], [4.6, 248.0], [4.7, 248.0], [4.8, 248.0], [4.9, 248.0], [5.0, 248.0], [5.1, 248.0], [5.2, 248.0], [5.3, 248.0], [5.4, 248.0], [5.5, 248.0], [5.6, 248.0], [5.7, 248.0], [5.8, 249.0], [5.9, 249.0], [6.0, 249.0], [6.1, 249.0], [6.2, 249.0], [6.3, 249.0], [6.4, 249.0], [6.5, 249.0], [6.6, 249.0], [6.7, 249.0], [6.8, 249.0], [6.9, 249.0], [7.0, 249.0], [7.1, 249.0], [7.2, 249.0], [7.3, 249.0], [7.4, 249.0], [7.5, 249.0], [7.6, 249.0], [7.7, 249.0], [7.8, 249.0], [7.9, 249.0], [8.0, 249.0], [8.1, 249.0], [8.2, 249.0], [8.3, 249.0], [8.4, 249.0], [8.5, 249.0], [8.6, 249.0], [8.7, 249.0], [8.8, 249.0], [8.9, 249.0], [9.0, 249.0], [9.1, 249.0], [9.2, 250.0], [9.3, 250.0], [9.4, 250.0], [9.5, 250.0], [9.6, 250.0], [9.7, 250.0], [9.8, 250.0], [9.9, 250.0], [10.0, 250.0], [10.1, 250.0], [10.2, 250.0], [10.3, 250.0], [10.4, 250.0], [10.5, 250.0], [10.6, 250.0], [10.7, 250.0], [10.8, 250.0], [10.9, 250.0], [11.0, 250.0], [11.1, 250.0], [11.2, 250.0], [11.3, 250.0], [11.4, 250.0], [11.5, 250.0], [11.6, 250.0], [11.7, 250.0], [11.8, 250.0], [11.9, 250.0], [12.0, 250.0], [12.1, 250.0], [12.2, 250.0], [12.3, 250.0], [12.4, 250.0], [12.5, 250.0], [12.6, 250.0], [12.7, 250.0], [12.8, 250.0], [12.9, 250.0], [13.0, 250.0], [13.1, 250.0], [13.2, 251.0], [13.3, 251.0], [13.4, 251.0], [13.5, 251.0], [13.6, 251.0], [13.7, 251.0], [13.8, 251.0], [13.9, 251.0], [14.0, 251.0], [14.1, 251.0], [14.2, 251.0], [14.3, 251.0], [14.4, 251.0], [14.5, 251.0], [14.6, 251.0], [14.7, 251.0], [14.8, 251.0], [14.9, 251.0], [15.0, 251.0], [15.1, 251.0], [15.2, 251.0], [15.3, 251.0], [15.4, 251.0], [15.5, 251.0], [15.6, 251.0], [15.7, 251.0], [15.8, 252.0], [15.9, 252.0], [16.0, 252.0], [16.1, 252.0], [16.2, 252.0], [16.3, 252.0], [16.4, 252.0], [16.5, 252.0], [16.6, 252.0], [16.7, 252.0], [16.8, 252.0], [16.9, 252.0], [17.0, 252.0], [17.1, 252.0], [17.2, 252.0], [17.3, 252.0], [17.4, 252.0], [17.5, 252.0], [17.6, 252.0], [17.7, 252.0], [17.8, 252.0], [17.9, 252.0], [18.0, 252.0], [18.1, 252.0], [18.2, 252.0], [18.3, 252.0], [18.4, 252.0], [18.5, 252.0], [18.6, 252.0], [18.7, 252.0], [18.8, 252.0], [18.9, 253.0], [19.0, 253.0], [19.1, 253.0], [19.2, 253.0], [19.3, 253.0], [19.4, 253.0], [19.5, 253.0], [19.6, 253.0], [19.7, 253.0], [19.8, 253.0], [19.9, 253.0], [20.0, 253.0], [20.1, 253.0], [20.2, 253.0], [20.3, 253.0], [20.4, 253.0], [20.5, 253.0], [20.6, 253.0], [20.7, 253.0], [20.8, 253.0], [20.9, 253.0], [21.0, 253.0], [21.1, 253.0], [21.2, 253.0], [21.3, 253.0], [21.4, 253.0], [21.5, 253.0], [21.6, 253.0], [21.7, 253.0], [21.8, 253.0], [21.9, 254.0], [22.0, 254.0], [22.1, 254.0], [22.2, 254.0], [22.3, 254.0], [22.4, 254.0], [22.5, 254.0], [22.6, 254.0], [22.7, 254.0], [22.8, 254.0], [22.9, 254.0], [23.0, 254.0], [23.1, 254.0], [23.2, 254.0], [23.3, 254.0], [23.4, 254.0], [23.5, 254.0], [23.6, 254.0], [23.7, 254.0], [23.8, 254.0], [23.9, 254.0], [24.0, 254.0], [24.1, 254.0], [24.2, 255.0], [24.3, 255.0], [24.4, 255.0], [24.5, 255.0], [24.6, 255.0], [24.7, 255.0], [24.8, 255.0], [24.9, 255.0], [25.0, 255.0], [25.1, 255.0], [25.2, 255.0], [25.3, 255.0], [25.4, 255.0], [25.5, 255.0], [25.6, 255.0], [25.7, 255.0], [25.8, 255.0], [25.9, 255.0], [26.0, 255.0], [26.1, 255.0], [26.2, 255.0], [26.3, 255.0], [26.4, 255.0], [26.5, 255.0], [26.6, 255.0], [26.7, 255.0], [26.8, 256.0], [26.9, 256.0], [27.0, 256.0], [27.1, 256.0], [27.2, 256.0], [27.3, 256.0], [27.4, 256.0], [27.5, 256.0], [27.6, 256.0], [27.7, 256.0], [27.8, 256.0], [27.9, 256.0], [28.0, 256.0], [28.1, 256.0], [28.2, 256.0], [28.3, 256.0], [28.4, 256.0], [28.5, 256.0], [28.6, 256.0], [28.7, 256.0], [28.8, 256.0], [28.9, 256.0], [29.0, 257.0], [29.1, 257.0], [29.2, 257.0], [29.3, 257.0], [29.4, 257.0], [29.5, 257.0], [29.6, 257.0], [29.7, 257.0], [29.8, 257.0], [29.9, 257.0], [30.0, 257.0], [30.1, 257.0], [30.2, 257.0], [30.3, 257.0], [30.4, 257.0], [30.5, 257.0], [30.6, 257.0], [30.7, 257.0], [30.8, 257.0], [30.9, 257.0], [31.0, 257.0], [31.1, 257.0], [31.2, 257.0], [31.3, 257.0], [31.4, 257.0], [31.5, 257.0], [31.6, 257.0], [31.7, 257.0], [31.8, 257.0], [31.9, 257.0], [32.0, 257.0], [32.1, 257.0], [32.2, 257.0], [32.3, 257.0], [32.4, 257.0], [32.5, 257.0], [32.6, 257.0], [32.7, 257.0], [32.8, 258.0], [32.9, 258.0], [33.0, 258.0], [33.1, 258.0], [33.2, 258.0], [33.3, 258.0], [33.4, 258.0], [33.5, 258.0], [33.6, 258.0], [33.7, 258.0], [33.8, 258.0], [33.9, 258.0], [34.0, 258.0], [34.1, 258.0], [34.2, 258.0], [34.3, 258.0], [34.4, 258.0], [34.5, 258.0], [34.6, 258.0], [34.7, 258.0], [34.8, 258.0], [34.9, 258.0], [35.0, 258.0], [35.1, 258.0], [35.2, 258.0], [35.3, 258.0], [35.4, 258.0], [35.5, 258.0], [35.6, 258.0], [35.7, 258.0], [35.8, 258.0], [35.9, 258.0], [36.0, 258.0], [36.1, 258.0], [36.2, 258.0], [36.3, 258.0], [36.4, 258.0], [36.5, 258.0], [36.6, 258.0], [36.7, 258.0], [36.8, 258.0], [36.9, 258.0], [37.0, 259.0], [37.1, 259.0], [37.2, 259.0], [37.3, 259.0], [37.4, 259.0], [37.5, 259.0], [37.6, 259.0], [37.7, 259.0], [37.8, 259.0], [37.9, 259.0], [38.0, 259.0], [38.1, 259.0], [38.2, 259.0], [38.3, 259.0], [38.4, 259.0], [38.5, 259.0], [38.6, 259.0], [38.7, 259.0], [38.8, 259.0], [38.9, 259.0], [39.0, 259.0], [39.1, 259.0], [39.2, 259.0], [39.3, 259.0], [39.4, 259.0], [39.5, 259.0], [39.6, 259.0], [39.7, 259.0], [39.8, 259.0], [39.9, 259.0], [40.0, 259.0], [40.1, 259.0], [40.2, 259.0], [40.3, 259.0], [40.4, 259.0], [40.5, 259.0], [40.6, 259.0], [40.7, 259.0], [40.8, 259.0], [40.9, 259.0], [41.0, 259.0], [41.1, 259.0], [41.2, 259.0], [41.3, 259.0], [41.4, 259.0], [41.5, 259.0], [41.6, 259.0], [41.7, 260.0], [41.8, 260.0], [41.9, 260.0], [42.0, 260.0], [42.1, 260.0], [42.2, 260.0], [42.3, 260.0], [42.4, 260.0], [42.5, 260.0], [42.6, 260.0], [42.7, 260.0], [42.8, 260.0], [42.9, 260.0], [43.0, 260.0], [43.1, 260.0], [43.2, 260.0], [43.3, 260.0], [43.4, 260.0], [43.5, 260.0], [43.6, 260.0], [43.7, 260.0], [43.8, 260.0], [43.9, 260.0], [44.0, 260.0], [44.1, 260.0], [44.2, 260.0], [44.3, 260.0], [44.4, 260.0], [44.5, 260.0], [44.6, 260.0], [44.7, 260.0], [44.8, 260.0], [44.9, 260.0], [45.0, 260.0], [45.1, 260.0], [45.2, 260.0], [45.3, 260.0], [45.4, 260.0], [45.5, 260.0], [45.6, 260.0], [45.7, 261.0], [45.8, 261.0], [45.9, 261.0], [46.0, 261.0], [46.1, 261.0], [46.2, 261.0], [46.3, 261.0], [46.4, 261.0], [46.5, 261.0], [46.6, 261.0], [46.7, 261.0], [46.8, 261.0], [46.9, 261.0], [47.0, 261.0], [47.1, 261.0], [47.2, 261.0], [47.3, 261.0], [47.4, 261.0], [47.5, 261.0], [47.6, 261.0], [47.7, 261.0], [47.8, 261.0], [47.9, 261.0], [48.0, 261.0], [48.1, 261.0], [48.2, 261.0], [48.3, 261.0], [48.4, 261.0], [48.5, 261.0], [48.6, 261.0], [48.7, 261.0], [48.8, 261.0], [48.9, 262.0], [49.0, 262.0], [49.1, 262.0], [49.2, 262.0], [49.3, 262.0], [49.4, 262.0], [49.5, 262.0], [49.6, 262.0], [49.7, 262.0], [49.8, 262.0], [49.9, 262.0], [50.0, 262.0], [50.1, 262.0], [50.2, 262.0], [50.3, 262.0], [50.4, 262.0], [50.5, 262.0], [50.6, 262.0], [50.7, 262.0], [50.8, 262.0], [50.9, 262.0], [51.0, 262.0], [51.1, 262.0], [51.2, 262.0], [51.3, 262.0], [51.4, 262.0], [51.5, 262.0], [51.6, 262.0], [51.7, 262.0], [51.8, 262.0], [51.9, 262.0], [52.0, 262.0], [52.1, 262.0], [52.2, 262.0], [52.3, 262.0], [52.4, 262.0], [52.5, 262.0], [52.6, 262.0], [52.7, 262.0], [52.8, 262.0], [52.9, 262.0], [53.0, 262.0], [53.1, 262.0], [53.2, 262.0], [53.3, 263.0], [53.4, 263.0], [53.5, 263.0], [53.6, 263.0], [53.7, 263.0], [53.8, 263.0], [53.9, 263.0], [54.0, 263.0], [54.1, 263.0], [54.2, 263.0], [54.3, 263.0], [54.4, 263.0], [54.5, 263.0], [54.6, 263.0], [54.7, 263.0], [54.8, 263.0], [54.9, 263.0], [55.0, 263.0], [55.1, 263.0], [55.2, 263.0], [55.3, 263.0], [55.4, 263.0], [55.5, 263.0], [55.6, 263.0], [55.7, 263.0], [55.8, 263.0], [55.9, 263.0], [56.0, 263.0], [56.1, 263.0], [56.2, 263.0], [56.3, 263.0], [56.4, 263.0], [56.5, 263.0], [56.6, 263.0], [56.7, 263.0], [56.8, 263.0], [56.9, 263.0], [57.0, 263.0], [57.1, 263.0], [57.2, 263.0], [57.3, 263.0], [57.4, 263.0], [57.5, 264.0], [57.6, 264.0], [57.7, 264.0], [57.8, 264.0], [57.9, 264.0], [58.0, 264.0], [58.1, 264.0], [58.2, 264.0], [58.3, 264.0], [58.4, 264.0], [58.5, 264.0], [58.6, 264.0], [58.7, 264.0], [58.8, 264.0], [58.9, 264.0], [59.0, 264.0], [59.1, 264.0], [59.2, 264.0], [59.3, 264.0], [59.4, 264.0], [59.5, 264.0], [59.6, 264.0], [59.7, 264.0], [59.8, 264.0], [59.9, 264.0], [60.0, 264.0], [60.1, 264.0], [60.2, 264.0], [60.3, 264.0], [60.4, 264.0], [60.5, 264.0], [60.6, 264.0], [60.7, 264.0], [60.8, 264.0], [60.9, 265.0], [61.0, 265.0], [61.1, 265.0], [61.2, 265.0], [61.3, 265.0], [61.4, 265.0], [61.5, 265.0], [61.6, 265.0], [61.7, 265.0], [61.8, 265.0], [61.9, 265.0], [62.0, 265.0], [62.1, 265.0], [62.2, 265.0], [62.3, 265.0], [62.4, 265.0], [62.5, 265.0], [62.6, 265.0], [62.7, 265.0], [62.8, 265.0], [62.9, 265.0], [63.0, 265.0], [63.1, 265.0], [63.2, 265.0], [63.3, 265.0], [63.4, 266.0], [63.5, 266.0], [63.6, 266.0], [63.7, 266.0], [63.8, 266.0], [63.9, 266.0], [64.0, 266.0], [64.1, 266.0], [64.2, 266.0], [64.3, 266.0], [64.4, 266.0], [64.5, 266.0], [64.6, 266.0], [64.7, 266.0], [64.8, 266.0], [64.9, 266.0], [65.0, 266.0], [65.1, 266.0], [65.2, 266.0], [65.3, 266.0], [65.4, 266.0], [65.5, 266.0], [65.6, 266.0], [65.7, 266.0], [65.8, 266.0], [65.9, 266.0], [66.0, 266.0], [66.1, 267.0], [66.2, 267.0], [66.3, 267.0], [66.4, 267.0], [66.5, 267.0], [66.6, 267.0], [66.7, 267.0], [66.8, 267.0], [66.9, 267.0], [67.0, 267.0], [67.1, 267.0], [67.2, 267.0], [67.3, 267.0], [67.4, 267.0], [67.5, 267.0], [67.6, 267.0], [67.7, 267.0], [67.8, 267.0], [67.9, 267.0], [68.0, 267.0], [68.1, 267.0], [68.2, 267.0], [68.3, 267.0], [68.4, 267.0], [68.5, 267.0], [68.6, 267.0], [68.7, 268.0], [68.8, 268.0], [68.9, 268.0], [69.0, 268.0], [69.1, 268.0], [69.2, 268.0], [69.3, 268.0], [69.4, 268.0], [69.5, 268.0], [69.6, 268.0], [69.7, 268.0], [69.8, 268.0], [69.9, 268.0], [70.0, 268.0], [70.1, 268.0], [70.2, 269.0], [70.3, 269.0], [70.4, 269.0], [70.5, 269.0], [70.6, 269.0], [70.7, 269.0], [70.8, 269.0], [70.9, 269.0], [71.0, 269.0], [71.1, 269.0], [71.2, 269.0], [71.3, 270.0], [71.4, 270.0], [71.5, 270.0], [71.6, 270.0], [71.7, 270.0], [71.8, 270.0], [71.9, 270.0], [72.0, 270.0], [72.1, 270.0], [72.2, 270.0], [72.3, 270.0], [72.4, 270.0], [72.5, 270.0], [72.6, 270.0], [72.7, 270.0], [72.8, 271.0], [72.9, 271.0], [73.0, 271.0], [73.1, 271.0], [73.2, 271.0], [73.3, 271.0], [73.4, 271.0], [73.5, 271.0], [73.6, 271.0], [73.7, 271.0], [73.8, 271.0], [73.9, 271.0], [74.0, 271.0], [74.1, 271.0], [74.2, 272.0], [74.3, 272.0], [74.4, 272.0], [74.5, 272.0], [74.6, 272.0], [74.7, 272.0], [74.8, 272.0], [74.9, 272.0], [75.0, 272.0], [75.1, 272.0], [75.2, 272.0], [75.3, 272.0], [75.4, 273.0], [75.5, 273.0], [75.6, 273.0], [75.7, 273.0], [75.8, 273.0], [75.9, 273.0], [76.0, 273.0], [76.1, 273.0], [76.2, 273.0], [76.3, 273.0], [76.4, 273.0], [76.5, 274.0], [76.6, 274.0], [76.7, 274.0], [76.8, 274.0], [76.9, 274.0], [77.0, 275.0], [77.1, 275.0], [77.2, 275.0], [77.3, 275.0], [77.4, 275.0], [77.5, 275.0], [77.6, 275.0], [77.7, 275.0], [77.8, 276.0], [77.9, 276.0], [78.0, 276.0], [78.1, 276.0], [78.2, 276.0], [78.3, 276.0], [78.4, 276.0], [78.5, 276.0], [78.6, 276.0], [78.7, 277.0], [78.8, 277.0], [78.9, 277.0], [79.0, 277.0], [79.1, 277.0], [79.2, 277.0], [79.3, 277.0], [79.4, 277.0], [79.5, 277.0], [79.6, 278.0], [79.7, 278.0], [79.8, 278.0], [79.9, 278.0], [80.0, 278.0], [80.1, 278.0], [80.2, 278.0], [80.3, 279.0], [80.4, 279.0], [80.5, 279.0], [80.6, 279.0], [80.7, 279.0], [80.8, 279.0], [80.9, 279.0], [81.0, 279.0], [81.1, 280.0], [81.2, 280.0], [81.3, 280.0], [81.4, 280.0], [81.5, 280.0], [81.6, 280.0], [81.7, 280.0], [81.8, 280.0], [81.9, 280.0], [82.0, 281.0], [82.1, 281.0], [82.2, 281.0], [82.3, 281.0], [82.4, 281.0], [82.5, 281.0], [82.6, 282.0], [82.7, 282.0], [82.8, 282.0], [82.9, 282.0], [83.0, 282.0], [83.1, 282.0], [83.2, 282.0], [83.3, 282.0], [83.4, 282.0], [83.5, 282.0], [83.6, 283.0], [83.7, 283.0], [83.8, 283.0], [83.9, 283.0], [84.0, 283.0], [84.1, 283.0], [84.2, 283.0], [84.3, 283.0], [84.4, 284.0], [84.5, 284.0], [84.6, 284.0], [84.7, 284.0], [84.8, 284.0], [84.9, 285.0], [85.0, 285.0], [85.1, 285.0], [85.2, 285.0], [85.3, 285.0], [85.4, 285.0], [85.5, 285.0], [85.6, 285.0], [85.7, 285.0], [85.8, 285.0], [85.9, 286.0], [86.0, 286.0], [86.1, 287.0], [86.2, 287.0], [86.3, 287.0], [86.4, 287.0], [86.5, 287.0], [86.6, 287.0], [86.7, 287.0], [86.8, 287.0], [86.9, 288.0], [87.0, 288.0], [87.1, 288.0], [87.2, 288.0], [87.3, 288.0], [87.4, 288.0], [87.5, 288.0], [87.6, 289.0], [87.7, 289.0], [87.8, 289.0], [87.9, 289.0], [88.0, 289.0], [88.1, 290.0], [88.2, 291.0], [88.3, 291.0], [88.4, 291.0], [88.5, 291.0], [88.6, 291.0], [88.7, 291.0], [88.8, 292.0], [88.9, 292.0], [89.0, 292.0], [89.1, 292.0], [89.2, 293.0], [89.3, 293.0], [89.4, 293.0], [89.5, 293.0], [89.6, 294.0], [89.7, 294.0], [89.8, 294.0], [89.9, 295.0], [90.0, 295.0], [90.1, 295.0], [90.2, 295.0], [90.3, 295.0], [90.4, 297.0], [90.5, 297.0], [90.6, 297.0], [90.7, 298.0], [90.8, 298.0], [90.9, 298.0], [91.0, 299.0], [91.1, 299.0], [91.2, 299.0], [91.3, 300.0], [91.4, 301.0], [91.5, 301.0], [91.6, 301.0], [91.7, 302.0], [91.8, 303.0], [91.9, 305.0], [92.0, 305.0], [92.1, 305.0], [92.2, 306.0], [92.3, 307.0], [92.4, 307.0], [92.5, 307.0], [92.6, 307.0], [92.7, 307.0], [92.8, 308.0], [92.9, 309.0], [93.0, 309.0], [93.1, 310.0], [93.2, 311.0], [93.3, 311.0], [93.4, 312.0], [93.5, 313.0], [93.6, 314.0], [93.7, 314.0], [93.8, 314.0], [93.9, 315.0], [94.0, 315.0], [94.1, 315.0], [94.2, 316.0], [94.3, 318.0], [94.4, 319.0], [94.5, 319.0], [94.6, 320.0], [94.7, 321.0], [94.8, 321.0], [94.9, 322.0], [95.0, 322.0], [95.1, 322.0], [95.2, 322.0], [95.3, 322.0], [95.4, 324.0], [95.5, 324.0], [95.6, 325.0], [95.7, 325.0], [95.8, 325.0], [95.9, 325.0], [96.0, 326.0], [96.1, 326.0], [96.2, 328.0], [96.3, 328.0], [96.4, 328.0], [96.5, 332.0], [96.6, 332.0], [96.7, 333.0], [96.8, 334.0], [96.9, 334.0], [97.0, 334.0], [97.1, 336.0], [97.2, 338.0], [97.3, 340.0], [97.4, 341.0], [97.5, 341.0], [97.6, 341.0], [97.7, 343.0], [97.8, 343.0], [97.9, 346.0], [98.0, 346.0], [98.1, 349.0], [98.2, 350.0], [98.3, 350.0], [98.4, 355.0], [98.5, 355.0], [98.6, 361.0], [98.7, 363.0], [98.8, 364.0], [98.9, 365.0], [99.0, 376.0], [99.1, 377.0], [99.2, 382.0], [99.3, 385.0], [99.4, 387.0], [99.5, 402.0], [99.6, 423.0], [99.7, 462.0], [99.8, 75261.0], [99.9, 75287.0], [100.0, 75287.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 875.0, "series": [{"data": [[33300.0, 1.0], [36500.0, 1.0], [34900.0, 1.0], [38100.0, 1.0], [37300.0, 1.0], [40500.0, 1.0], [42900.0, 1.0], [43300.0, 1.0], [46100.0, 1.0], [46500.0, 1.0], [52100.0, 1.0], [200.0, 5.0], [54100.0, 1.0], [54500.0, 1.0], [57300.0, 1.0], [56900.0, 1.0], [60500.0, 12.0], [300.0, 170.0], [400.0, 47.0], [500.0, 1.0], [600.0, 1.0], [800.0, 7.0], [900.0, 2.0], [1000.0, 6.0], [1100.0, 11.0], [1200.0, 12.0], [1300.0, 11.0], [1400.0, 12.0], [1500.0, 14.0], [1600.0, 7.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 5.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 1.0], [2400.0, 2.0], [2700.0, 1.0], [2900.0, 2.0], [3200.0, 2.0], [3300.0, 2.0], [3400.0, 2.0], [3500.0, 4.0], [3800.0, 1.0], [4000.0, 1.0], [4300.0, 4.0], [4100.0, 2.0], [4500.0, 3.0], [4600.0, 3.0], [4400.0, 1.0], [4800.0, 3.0], [4700.0, 5.0], [5100.0, 1.0], [4900.0, 4.0], [5000.0, 4.0], [5200.0, 6.0], [84900.0, 1.0], [5300.0, 5.0], [5500.0, 12.0], [5400.0, 11.0], [5600.0, 5.0], [5700.0, 8.0], [5800.0, 3.0], [6100.0, 6.0], [6000.0, 3.0], [5900.0, 9.0], [6200.0, 5.0], [6300.0, 4.0], [6400.0, 5.0], [6500.0, 1.0], [6600.0, 4.0], [6700.0, 2.0], [6900.0, 3.0], [6800.0, 3.0], [7000.0, 4.0], [7100.0, 1.0], [7400.0, 3.0], [7300.0, 3.0], [7200.0, 2.0], [7500.0, 2.0], [7800.0, 3.0], [7900.0, 3.0], [7700.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8700.0, 4.0], [8300.0, 4.0], [8600.0, 5.0], [8200.0, 1.0], [8500.0, 2.0], [9100.0, 4.0], [8900.0, 7.0], [9200.0, 3.0], [8800.0, 3.0], [9600.0, 3.0], [9500.0, 2.0], [9700.0, 4.0], [9400.0, 3.0], [9800.0, 2.0], [10000.0, 2.0], [10200.0, 1.0], [10100.0, 3.0], [9900.0, 1.0], [10400.0, 3.0], [10300.0, 2.0], [10700.0, 2.0], [10600.0, 1.0], [10500.0, 1.0], [11000.0, 3.0], [11200.0, 4.0], [10800.0, 2.0], [11100.0, 1.0], [10900.0, 1.0], [11400.0, 2.0], [11700.0, 5.0], [11500.0, 2.0], [11600.0, 1.0], [11300.0, 1.0], [11800.0, 3.0], [11900.0, 1.0], [12000.0, 1.0], [12100.0, 3.0], [12200.0, 1.0], [12300.0, 2.0], [12600.0, 2.0], [12500.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [12900.0, 1.0], [13300.0, 2.0], [13000.0, 3.0], [13100.0, 4.0], [13200.0, 1.0], [13500.0, 5.0], [13800.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [13400.0, 1.0], [14100.0, 1.0], [14300.0, 1.0], [14200.0, 1.0], [14000.0, 1.0], [14800.0, 1.0], [14600.0, 1.0], [14700.0, 2.0], [14400.0, 1.0], [14500.0, 1.0], [15100.0, 3.0], [15000.0, 1.0], [15300.0, 2.0], [15500.0, 2.0], [15800.0, 1.0], [15600.0, 1.0], [15700.0, 2.0], [16200.0, 1.0], [16100.0, 1.0], [16600.0, 2.0], [17000.0, 2.0], [17400.0, 2.0], [16400.0, 1.0], [18400.0, 3.0], [18200.0, 2.0], [17600.0, 1.0], [18000.0, 1.0], [19400.0, 3.0], [18800.0, 3.0], [19000.0, 1.0], [19600.0, 1.0], [20400.0, 3.0], [20200.0, 1.0], [19800.0, 2.0], [20000.0, 1.0], [21200.0, 2.0], [21000.0, 1.0], [21400.0, 1.0], [22400.0, 1.0], [22200.0, 1.0], [22800.0, 3.0], [23000.0, 1.0], [22600.0, 1.0], [24000.0, 3.0], [24400.0, 2.0], [23800.0, 1.0], [24200.0, 1.0], [23600.0, 2.0], [25000.0, 3.0], [25400.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [27200.0, 1.0], [28000.0, 1.0], [28800.0, 1.0], [29600.0, 1.0], [29200.0, 1.0], [30200.0, 2.0], [30800.0, 3.0], [31600.0, 1.0], [31200.0, 1.0], [31000.0, 1.0], [32600.0, 1.0], [32400.0, 2.0], [32800.0, 1.0], [34000.0, 1.0], [33200.0, 1.0], [36000.0, 2.0], [36400.0, 1.0], [37200.0, 1.0], [38000.0, 1.0], [39600.0, 1.0], [40000.0, 1.0], [42400.0, 1.0], [43600.0, 1.0], [46800.0, 1.0], [45200.0, 1.0], [50800.0, 1.0], [51600.0, 1.0], [54000.0, 1.0], [53600.0, 1.0], [54800.0, 1.0], [60400.0, 32.0], [33900.0, 1.0], [33500.0, 2.0], [34300.0, 3.0], [33100.0, 1.0], [35900.0, 1.0], [35500.0, 1.0], [39100.0, 1.0], [39900.0, 1.0], [43500.0, 2.0], [44700.0, 1.0], [47100.0, 1.0], [47500.0, 1.0], [47900.0, 1.0], [55500.0, 1.0], [55900.0, 1.0], [56700.0, 1.0], [58700.0, 1.0], [58300.0, 1.0], [60300.0, 33.0], [88600.0, 1.0], [16700.0, 3.0], [17100.0, 4.0], [16500.0, 1.0], [16900.0, 3.0], [17300.0, 2.0], [17900.0, 2.0], [17500.0, 1.0], [17700.0, 3.0], [18100.0, 1.0], [19300.0, 1.0], [20300.0, 2.0], [20100.0, 4.0], [19900.0, 2.0], [19700.0, 1.0], [21500.0, 3.0], [20700.0, 1.0], [21300.0, 3.0], [21100.0, 3.0], [21900.0, 1.0], [22100.0, 3.0], [21700.0, 3.0], [22500.0, 2.0], [22700.0, 2.0], [23100.0, 2.0], [22900.0, 1.0], [23900.0, 1.0], [24500.0, 1.0], [23700.0, 1.0], [24700.0, 4.0], [24900.0, 2.0], [25500.0, 1.0], [25100.0, 1.0], [26300.0, 3.0], [26100.0, 1.0], [25700.0, 2.0], [25900.0, 1.0], [26500.0, 1.0], [27500.0, 2.0], [26700.0, 1.0], [27700.0, 2.0], [27900.0, 4.0], [28300.0, 1.0], [28500.0, 1.0], [28700.0, 3.0], [29300.0, 2.0], [29100.0, 1.0], [29900.0, 2.0], [30700.0, 2.0], [30500.0, 2.0], [30900.0, 1.0], [31100.0, 2.0], [31500.0, 1.0], [33000.0, 1.0], [34200.0, 2.0], [35000.0, 1.0], [35800.0, 2.0], [36600.0, 1.0], [40600.0, 1.0], [39000.0, 1.0], [41400.0, 1.0], [42200.0, 1.0], [43800.0, 1.0], [49800.0, 1.0], [51800.0, 1.0], [55000.0, 1.0], [56600.0, 1.0], [58200.0, 1.0], [59800.0, 1.0], [60600.0, 2.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 218.0], [33700.0, 1.0], [33300.0, 2.0], [34100.0, 1.0], [32900.0, 1.0], [35700.0, 2.0], [36100.0, 1.0], [35300.0, 1.0], [36900.0, 1.0], [37700.0, 1.0], [39700.0, 1.0], [43300.0, 1.0], [46500.0, 1.0], [47300.0, 1.0], [53700.0, 1.0], [54500.0, 1.0], [58500.0, 1.0], [60100.0, 65.0], [300.0, 1.0], [500.0, 5.0], [600.0, 3.0], [700.0, 4.0], [800.0, 11.0], [900.0, 8.0], [1000.0, 16.0], [1100.0, 14.0], [1200.0, 10.0], [1300.0, 8.0], [1400.0, 8.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 3.0], [3200.0, 4.0], [3300.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4200.0, 1.0], [4300.0, 5.0], [4100.0, 3.0], [4400.0, 4.0], [4500.0, 4.0], [4600.0, 1.0], [4800.0, 3.0], [4700.0, 5.0], [5100.0, 9.0], [4900.0, 2.0], [5000.0, 8.0], [5200.0, 14.0], [5300.0, 5.0], [5600.0, 6.0], [5400.0, 5.0], [5500.0, 6.0], [5800.0, 6.0], [5700.0, 4.0], [5900.0, 7.0], [6100.0, 6.0], [6000.0, 4.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 4.0], [6600.0, 4.0], [6500.0, 2.0], [6800.0, 2.0], [6700.0, 3.0], [6900.0, 2.0], [7100.0, 2.0], [7000.0, 2.0], [7200.0, 3.0], [7300.0, 1.0], [7500.0, 4.0], [7600.0, 2.0], [7900.0, 1.0], [7700.0, 2.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 1.0], [8400.0, 7.0], [8600.0, 8.0], [8500.0, 3.0], [8300.0, 3.0], [8900.0, 3.0], [8800.0, 3.0], [9200.0, 1.0], [9100.0, 2.0], [9000.0, 2.0], [9300.0, 3.0], [9600.0, 3.0], [9500.0, 3.0], [9700.0, 2.0], [9400.0, 3.0], [10200.0, 1.0], [10100.0, 3.0], [10000.0, 2.0], [9800.0, 3.0], [10700.0, 1.0], [10600.0, 3.0], [10500.0, 1.0], [10400.0, 2.0], [10300.0, 2.0], [11000.0, 1.0], [11100.0, 2.0], [10900.0, 4.0], [11200.0, 2.0], [10800.0, 1.0], [11400.0, 5.0], [11500.0, 1.0], [11300.0, 2.0], [11700.0, 1.0], [11600.0, 2.0], [12000.0, 2.0], [11800.0, 4.0], [12100.0, 1.0], [12200.0, 2.0], [12500.0, 2.0], [12600.0, 1.0], [12700.0, 3.0], [12300.0, 1.0], [13300.0, 5.0], [13000.0, 3.0], [13200.0, 3.0], [12800.0, 4.0], [13100.0, 1.0], [13800.0, 2.0], [13500.0, 2.0], [14100.0, 2.0], [14300.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14500.0, 2.0], [14800.0, 4.0], [14400.0, 1.0], [15200.0, 1.0], [15100.0, 2.0], [15300.0, 1.0], [15500.0, 1.0], [15400.0, 3.0], [15900.0, 2.0], [16200.0, 2.0], [16100.0, 1.0], [16600.0, 1.0], [16400.0, 3.0], [16800.0, 3.0], [17200.0, 2.0], [17400.0, 1.0], [17000.0, 2.0], [17800.0, 2.0], [17600.0, 1.0], [18200.0, 1.0], [18000.0, 1.0], [19200.0, 1.0], [18600.0, 2.0], [19000.0, 1.0], [20400.0, 1.0], [19800.0, 3.0], [20000.0, 1.0], [19600.0, 2.0], [20200.0, 1.0], [21400.0, 2.0], [21000.0, 3.0], [20800.0, 2.0], [21200.0, 1.0], [21600.0, 1.0], [21800.0, 2.0], [22400.0, 1.0], [22200.0, 3.0], [22800.0, 1.0], [22600.0, 3.0], [23400.0, 1.0], [23600.0, 3.0], [24200.0, 1.0], [24400.0, 4.0], [24600.0, 2.0], [25400.0, 2.0], [25200.0, 2.0], [24800.0, 1.0], [26000.0, 2.0], [25800.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [26200.0, 2.0], [27400.0, 1.0], [27200.0, 1.0], [27000.0, 1.0], [27600.0, 3.0], [28400.0, 2.0], [28000.0, 1.0], [28200.0, 1.0], [29600.0, 2.0], [29000.0, 3.0], [28800.0, 1.0], [30600.0, 3.0], [30400.0, 1.0], [30000.0, 1.0], [30200.0, 2.0], [31400.0, 1.0], [31200.0, 1.0], [32400.0, 1.0], [32200.0, 1.0], [34000.0, 2.0], [32800.0, 1.0], [35600.0, 1.0], [36400.0, 1.0], [38800.0, 1.0], [40400.0, 1.0], [42000.0, 1.0], [43200.0, 2.0], [44400.0, 1.0], [46800.0, 1.0], [47600.0, 1.0], [55200.0, 1.0], [56400.0, 1.0], [58000.0, 2.0], [59600.0, 1.0], [33900.0, 2.0], [33100.0, 1.0], [34700.0, 1.0], [36300.0, 1.0], [35500.0, 2.0], [38700.0, 1.0], [41100.0, 1.0], [42700.0, 1.0], [43500.0, 1.0], [45900.0, 1.0], [49500.0, 1.0], [51900.0, 1.0], [51500.0, 1.0], [54300.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [55500.0, 1.0], [56700.0, 1.0], [16900.0, 2.0], [16700.0, 3.0], [16500.0, 1.0], [17300.0, 1.0], [17100.0, 1.0], [18100.0, 2.0], [17700.0, 1.0], [17900.0, 1.0], [17500.0, 2.0], [19300.0, 1.0], [19100.0, 2.0], [18500.0, 1.0], [18700.0, 1.0], [20100.0, 3.0], [19900.0, 3.0], [19500.0, 2.0], [19700.0, 1.0], [21300.0, 3.0], [21500.0, 1.0], [20900.0, 2.0], [20700.0, 1.0], [21100.0, 1.0], [21900.0, 2.0], [22500.0, 2.0], [22300.0, 1.0], [22900.0, 1.0], [23300.0, 2.0], [22700.0, 1.0], [24100.0, 1.0], [23700.0, 2.0], [23900.0, 1.0], [24300.0, 1.0], [24700.0, 3.0], [25100.0, 1.0], [26100.0, 1.0], [27300.0, 1.0], [27500.0, 1.0], [28500.0, 2.0], [27700.0, 2.0], [29300.0, 1.0], [30500.0, 2.0], [29900.0, 1.0], [30700.0, 1.0], [30900.0, 3.0], [32700.0, 1.0], [32500.0, 1.0], [32100.0, 1.0], [33800.0, 1.0], [34600.0, 1.0], [37800.0, 1.0], [37000.0, 1.0], [39400.0, 1.0], [40200.0, 1.0], [39800.0, 1.0], [43000.0, 1.0], [42200.0, 1.0], [45000.0, 1.0], [46200.0, 1.0], [50600.0, 1.0], [51400.0, 1.0], [53800.0, 1.0], [53400.0, 1.0], [57000.0, 1.0], [60200.0, 14.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 79.0], [75200.0, 2.0], [200.0, 875.0], [400.0, 3.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 88600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 508.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 727.0, "series": [{"data": [[0.0, 727.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 508.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 678.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.68544338E12, "maxY": 25.0, "series": [{"data": [[1.6854438E12, 14.20000000000001], [1.6854435E12, 5.0], [1.68544446E12, 15.0], [1.68544344E12, 4.23076923076923], [1.6854444E12, 16.329999999999995], [1.6854441E12, 20.447999999999997], [1.68544404E12, 20.0], [1.68544374E12, 10.668874172185435], [1.6854447E12, 4.614035087719299], [1.68544368E12, 10.0], [1.68544464E12, 5.026086956521741], [1.68544338E12, 1.5], [1.68544434E12, 21.52238805970149], [1.68544428E12, 25.0], [1.68544398E12, 19.128440366972484], [1.68544392E12, 15.46103896103896], [1.68544362E12, 8.950000000000001], [1.68544458E12, 9.610619469026549], [1.68544356E12, 5.687499999999999], [1.68544452E12, 12.59677419354839], [1.68544422E12, 25.0], [1.68544416E12, 24.157407407407398], [1.68544386E12, 15.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854447E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 253.42857142857142, "minX": 1.0, "maxY": 30827.749999999996, "series": [{"data": [[2.0, 7057.0], [3.0, 8357.5], [4.0, 8720.8], [5.0, 9257.540229885055], [6.0, 4111.461538461538], [7.0, 2492.5555555555557], [8.0, 6938.0], [9.0, 19651.5], [10.0, 14463.336283185834], [11.0, 7239.833333333333], [12.0, 8030.916666666666], [13.0, 21263.076923076922], [14.0, 15608.857142857145], [15.0, 7797.7352941176505], [1.0, 5546.5], [16.0, 30827.749999999996], [17.0, 19553.833333333332], [18.0, 16085.666666666668], [19.0, 23140.75], [20.0, 24376.47368421053], [21.0, 24666.928571428572], [22.0, 10017.416666666664], [23.0, 22746.0], [24.0, 25292.916666666668], [25.0, 28592.061946902657]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[15.42440041710112, 15628.765380604813]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 6793.5], [3.0, 8087.5], [4.0, 10573.25], [5.0, 9100.406976744183], [6.0, 3848.6153846153843], [7.0, 2235.0], [8.0, 6681.333333333333], [9.0, 19395.333333333332], [10.0, 14451.603603603606], [11.0, 6972.277777777777], [12.0, 7773.333333333334], [13.0, 20990.384615384613], [14.0, 15349.333333333332], [15.0, 6981.511029411765], [1.0, 5231.0], [16.0, 30556.125], [17.0, 19285.000000000004], [18.0, 15803.0], [19.0, 22868.75], [20.0, 24108.135338345874], [21.0, 24376.60714285714], [22.0, 9737.791666666666], [23.0, 22476.071428571428], [24.0, 25010.75], [25.0, 28566.750000000022]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[15.448637316561834, 15283.482180293444]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 268.0], [3.0, 265.0], [4.0, 272.8], [5.0, 262.0697674418605], [6.0, 256.85714285714283], [7.0, 256.44444444444446], [8.0, 257.0], [9.0, 253.42857142857142], [10.0, 268.84821428571433], [11.0, 260.66666666666674], [12.0, 259.25], [13.0, 269.5384615384615], [14.0, 263.24999999999994], [15.0, 817.5830258302575], [1.0, 310.5], [16.0, 267.6153846153845], [17.0, 286.6363636363637], [18.0, 271.0909090909091], [19.0, 266.25], [20.0, 270.33587786259545], [21.0, 276.48275862068965], [22.0, 286.36], [23.0, 276.2142857142857], [24.0, 287.5], [25.0, 278.02631578947387]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[15.426485922836298, 424.9676746611057]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 219.33333333333334, "minX": 1.68544338E12, "maxY": 19245.366666666665, "series": [{"data": [[1.6854438E12, 2943.733333333333], [1.6854435E12, 807.2166666666667], [1.68544446E12, 4175.15], [1.68544344E12, 989.45], [1.6854444E12, 976.0166666666667], [1.6854441E12, 3081.2833333333333], [1.68544404E12, 3208.4666666666667], [1.68544374E12, 2994.95], [1.6854447E12, 1153.4833333333333], [1.68544368E12, 2312.3333333333335], [1.68544464E12, 2054.733333333333], [1.68544338E12, 219.33333333333334], [1.68544434E12, 4029.3166666666666], [1.68544428E12, 2384.266666666667], [1.68544398E12, 2568.0666666666666], [1.68544392E12, 3851.4], [1.68544362E12, 1004.2666666666667], [1.68544458E12, 2625.8166666666666], [1.68544356E12, 1359.05], [1.68544452E12, 1093.6166666666666], [1.68544422E12, 2349.0833333333335], [1.68544416E12, 2508.016666666667], [1.68544386E12, 3686.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6854438E12, 7890.8], [1.6854435E12, 1423.8666666666666], [1.68544446E12, 19245.366666666665], [1.68544344E12, 1488.1666666666667], [1.6854444E12, 4557.7], [1.6854441E12, 6282.516666666666], [1.68544404E12, 7408.95], [1.68544374E12, 7144.25], [1.6854447E12, 3328.5666666666666], [1.68544368E12, 5239.85], [1.68544464E12, 5953.916666666667], [1.68544338E12, 565.0666666666667], [1.68544434E12, 12521.366666666667], [1.68544428E12, 6097.083333333333], [1.68544398E12, 5573.033333333334], [1.68544392E12, 7114.95], [1.68544362E12, 3373.266666666667], [1.68544458E12, 4919.066666666667], [1.68544356E12, 4697.366666666667], [1.68544452E12, 2469.3166666666666], [1.68544422E12, 5788.333333333333], [1.68544416E12, 4649.016666666666], [1.68544386E12, 8582.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854447E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 258.15625, "minX": 1.68544338E12, "maxY": 41681.899999999994, "series": [{"data": [[1.6854438E12, 9682.650000000001], [1.6854435E12, 20754.363636363636], [1.68544446E12, 2041.6666666666674], [1.68544344E12, 13322.25], [1.6854444E12, 26948.66666666666], [1.6854441E12, 25612.268292682933], [1.68544404E12, 26720.608695652165], [1.68544374E12, 8489.880000000001], [1.6854447E12, 4933.833333333334], [1.68544368E12, 17737.94736842105], [1.68544464E12, 4610.846153846154], [1.68544338E12, 5506.5], [1.68544434E12, 14193.34482758621], [1.68544428E12, 32123.022222222226], [1.68544398E12, 19770.558823529413], [1.68544392E12, 13102.285714285717], [1.68544362E12, 10182.44], [1.68544458E12, 11562.157894736847], [1.68544356E12, 7859.718750000001], [1.68544452E12, 36576.88461538462], [1.68544422E12, 32407.756097560978], [1.68544416E12, 26275.421052631584], [1.68544386E12, 13998.132075471698]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854438E12, 8763.833333333334], [1.6854435E12, 20479.090909090908], [1.68544446E12, 1682.3404255319133], [1.68544344E12, 13052.416666666664], [1.6854444E12, 34932.75000000001], [1.6854441E12, 25342.390243902442], [1.68544404E12, 25989.000000000004], [1.68544374E12, 8903.760000000002], [1.6854447E12, 4887.0952380952385], [1.68544368E12, 17355.750000000004], [1.68544464E12, 5459.333333333333], [1.68544338E12, 5196.0], [1.68544434E12, 13384.384615384612], [1.68544428E12, 31888.717391304355], [1.68544398E12, 19133.083333333336], [1.68544392E12, 12818.70588235294], [1.68544362E12, 9919.400000000001], [1.68544458E12, 12581.815789473685], [1.68544356E12, 7601.34375], [1.68544452E12, 41681.899999999994], [1.68544422E12, 32231.35000000001], [1.68544416E12, 29536.393939393933], [1.68544386E12, 11061.642857142855]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854438E12, 266.64285714285705], [1.6854435E12, 270.3636363636364], [1.68544446E12, 263.29078014184404], [1.68544344E12, 269.7333333333333], [1.6854444E12, 268.03846153846166], [1.6854441E12, 275.3023255813953], [1.68544404E12, 270.304347826087], [1.68544374E12, 265.8431372549019], [1.6854447E12, 259.6666666666667], [1.68544368E12, 268.91666666666663], [1.68544464E12, 260.1081081081081], [1.68544338E12, 289.25], [1.68544434E12, 274.911111111111], [1.68544428E12, 287.9767441860466], [1.68544398E12, 264.025641025641], [1.68544392E12, 268.3333333333335], [1.68544362E12, 260.9666666666667], [1.68544458E12, 267.6486486486486], [1.68544356E12, 258.15625], [1.68544452E12, 265.06250000000006], [1.68544422E12, 273.775], [1.68544416E12, 278.0], [1.68544386E12, 2897.36842105263]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854447E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 257.96875000000006, "minX": 1.68544338E12, "maxY": 41681.20000000001, "series": [{"data": [[1.6854438E12, 9682.216666666667], [1.6854435E12, 20753.363636363636], [1.68544446E12, 2041.2575757575753], [1.68544344E12, 13320.25], [1.6854444E12, 26947.57142857144], [1.6854441E12, 25611.024390243903], [1.68544404E12, 26719.500000000004], [1.68544374E12, 8489.499999999998], [1.6854447E12, 4933.222222222223], [1.68544368E12, 17736.499999999993], [1.68544464E12, 4610.153846153847], [1.68544338E12, 5502.5], [1.68544434E12, 14192.19540229885], [1.68544428E12, 32122.24444444443], [1.68544398E12, 19769.41176470588], [1.68544392E12, 13101.551020408164], [1.68544362E12, 10181.999999999998], [1.68544458E12, 11561.078947368422], [1.68544356E12, 7859.125], [1.68544452E12, 36576.19230769231], [1.68544422E12, 32407.146341463416], [1.68544416E12, 26274.605263157897], [1.68544386E12, 13997.603773584906]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854438E12, 8763.759259259261], [1.6854435E12, 20478.818181818184], [1.68544446E12, 1682.2836879432627], [1.68544344E12, 13051.75], [1.6854444E12, 34931.81250000001], [1.6854441E12, 25341.804878048773], [1.68544404E12, 25988.31914893617], [1.68544374E12, 8903.58], [1.6854447E12, 4886.952380952381], [1.68544368E12, 17355.472222222226], [1.68544464E12, 5458.897435897436], [1.68544338E12, 5196.0], [1.68544434E12, 13384.351648351645], [1.68544428E12, 31888.673913043473], [1.68544398E12, 19132.80555555556], [1.68544392E12, 12818.254901960783], [1.68544362E12, 9919.200000000004], [1.68544458E12, 12581.289473684212], [1.68544356E12, 7601.000000000001], [1.68544452E12, 41681.20000000001], [1.68544422E12, 32231.275000000005], [1.68544416E12, 29536.060606060608], [1.68544386E12, 11061.392857142853]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854438E12, 266.28571428571433], [1.6854435E12, 269.90909090909093], [1.68544446E12, 263.13475177304946], [1.68544344E12, 268.2666666666667], [1.6854444E12, 267.00000000000006], [1.6854441E12, 274.5813953488372], [1.68544404E12, 269.84782608695656], [1.68544374E12, 265.72549019607845], [1.6854447E12, 259.2222222222222], [1.68544368E12, 267.6111111111111], [1.68544464E12, 259.89189189189176], [1.68544338E12, 287.25], [1.68544434E12, 273.8555555555556], [1.68544428E12, 287.0232558139535], [1.68544398E12, 263.71794871794873], [1.68544392E12, 267.7222222222222], [1.68544362E12, 260.7333333333333], [1.68544458E12, 267.08108108108115], [1.68544356E12, 257.96875000000006], [1.68544452E12, 264.75], [1.68544422E12, 273.3499999999999], [1.68544416E12, 277.43243243243245], [1.68544386E12, 2897.0350877192973]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854447E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68544338E12, "maxY": 2962.2264150943392, "series": [{"data": [[1.6854438E12, 127.60000000000001], [1.6854435E12, 132.45454545454544], [1.68544446E12, 127.54545454545458], [1.68544344E12, 128.66666666666666], [1.6854444E12, 129.07142857142858], [1.6854441E12, 126.04878048780489], [1.68544404E12, 127.6086956521739], [1.68544374E12, 128.42], [1.6854447E12, 127.66666666666666], [1.68544368E12, 128.10526315789477], [1.68544464E12, 128.46153846153848], [1.68544338E12, 166.5], [1.68544434E12, 128.05747126436782], [1.68544428E12, 128.1333333333334], [1.68544398E12, 128.08823529411768], [1.68544392E12, 127.3061224489796], [1.68544362E12, 127.48], [1.68544458E12, 127.55263157894736], [1.68544356E12, 128.49999999999997], [1.68544452E12, 129.84615384615384], [1.68544422E12, 128.97560975609755], [1.68544416E12, 127.13157894736844], [1.68544386E12, 2962.2264150943392]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854438E12, 0.0], [1.6854435E12, 0.0], [1.68544446E12, 0.0], [1.68544344E12, 0.0], [1.6854444E12, 0.0], [1.6854441E12, 0.0], [1.68544404E12, 0.0], [1.68544374E12, 0.0], [1.6854447E12, 0.0], [1.68544368E12, 0.0], [1.68544464E12, 0.0], [1.68544338E12, 0.0], [1.68544434E12, 0.0], [1.68544428E12, 0.0], [1.68544398E12, 0.0], [1.68544392E12, 0.0], [1.68544362E12, 0.0], [1.68544458E12, 0.0], [1.68544356E12, 0.0], [1.68544452E12, 0.0], [1.68544422E12, 0.0], [1.68544416E12, 0.0], [1.68544386E12, 4.464285714285714]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854438E12, 127.49999999999999], [1.6854435E12, 132.27272727272725], [1.68544446E12, 127.48226950354618], [1.68544344E12, 128.13333333333335], [1.6854444E12, 129.88461538461536], [1.6854441E12, 126.00000000000001], [1.68544404E12, 127.54347826086956], [1.68544374E12, 128.54901960784315], [1.6854447E12, 127.66666666666667], [1.68544368E12, 128.19444444444446], [1.68544464E12, 128.59459459459458], [1.68544338E12, 147.25], [1.68544434E12, 128.06666666666663], [1.68544428E12, 127.48837209302324], [1.68544398E12, 126.3076923076923], [1.68544392E12, 128.31481481481484], [1.68544362E12, 127.09999999999998], [1.68544458E12, 127.43243243243245], [1.68544356E12, 128.78124999999997], [1.68544452E12, 131.93749999999997], [1.68544422E12, 127.99999999999999], [1.68544416E12, 129.81081081081078], [1.68544386E12, 2758.859649122807]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854447E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.68544338E12, "maxY": 75287.0, "series": [{"data": [[1.6854438E12, 33730.0], [1.6854435E12, 24643.0], [1.68544446E12, 350.0], [1.68544344E12, 21676.0], [1.6854444E12, 36411.0], [1.6854441E12, 36987.0], [1.68544404E12, 56314.0], [1.68544374E12, 22807.0], [1.6854447E12, 9439.0], [1.68544368E12, 43292.0], [1.68544464E12, 21128.0], [1.68544338E12, 5218.0], [1.68544434E12, 387.0], [1.68544428E12, 59618.0], [1.68544398E12, 57090.0], [1.68544392E12, 34085.0], [1.68544362E12, 32408.0], [1.68544458E12, 24719.0], [1.68544356E12, 24170.0], [1.68544452E12, 56700.0], [1.68544422E12, 58522.0], [1.68544416E12, 55288.0], [1.68544386E12, 75287.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6854438E12, 22217.600000000013], [1.6854435E12, 24371.9], [1.68544446E12, 323.6], [1.68544344E12, 17115.6], [1.6854444E12, 31216.599999999995], [1.6854441E12, 30251.5], [1.68544404E12, 36270.80000000003], [1.68544374E12, 17426.000000000004], [1.6854447E12, 8335.6], [1.68544368E12, 37864.0], [1.68544464E12, 10301.000000000007], [1.68544338E12, 5218.0], [1.68544434E12, 307.0], [1.68544428E12, 42822.8], [1.68544398E12, 12040.5], [1.68544392E12, 15966.400000000012], [1.68544362E12, 31361.0], [1.68544458E12, 20689.699999999997], [1.68544356E12, 22907.200000000004], [1.68544452E12, 54965.2], [1.68544422E12, 51541.0], [1.68544416E12, 35819.2], [1.68544386E12, 23860.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6854438E12, 33730.0], [1.6854435E12, 24643.0], [1.68544446E12, 350.0], [1.68544344E12, 21676.0], [1.6854444E12, 36411.0], [1.6854441E12, 36987.0], [1.68544404E12, 56314.0], [1.68544374E12, 22807.0], [1.6854447E12, 9439.0], [1.68544368E12, 43292.0], [1.68544464E12, 21128.0], [1.68544338E12, 5218.0], [1.68544434E12, 387.0], [1.68544428E12, 59618.0], [1.68544398E12, 57090.0], [1.68544392E12, 34038.5], [1.68544362E12, 32408.0], [1.68544458E12, 24719.0], [1.68544356E12, 24170.0], [1.68544452E12, 56700.0], [1.68544422E12, 58522.0], [1.68544416E12, 55288.0], [1.68544386E12, 75287.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6854438E12, 29463.59999999998], [1.6854435E12, 24613.0], [1.68544446E12, 340.5999999999999], [1.68544344E12, 20279.999999999993], [1.6854444E12, 36411.0], [1.6854441E12, 32856.25], [1.68544404E12, 53286.00000000001], [1.68544374E12, 19944.8], [1.6854447E12, 8977.299999999997], [1.68544368E12, 41197.0], [1.68544464E12, 17911.399999999983], [1.68544338E12, 5218.0], [1.68544434E12, 326.40000000000003], [1.68544428E12, 44520.299999999996], [1.68544398E12, 13149.699999999997], [1.68544392E12, 30564.5], [1.68544362E12, 32408.0], [1.68544458E12, 21502.850000000002], [1.68544356E12, 24004.1], [1.68544452E12, 56614.4], [1.68544422E12, 58018.0], [1.68544416E12, 43923.54999999997], [1.68544386E12, 27885.19999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6854438E12, 247.0], [1.6854435E12, 252.0], [1.68544446E12, 250.0], [1.68544344E12, 253.0], [1.6854444E12, 252.0], [1.6854441E12, 245.0], [1.68544404E12, 248.0], [1.68544374E12, 248.0], [1.6854447E12, 253.0], [1.68544368E12, 248.0], [1.68544464E12, 248.0], [1.68544338E12, 259.0], [1.68544434E12, 247.0], [1.68544428E12, 249.0], [1.68544398E12, 245.0], [1.68544392E12, 248.0], [1.68544362E12, 249.0], [1.68544458E12, 246.0], [1.68544356E12, 246.0], [1.68544452E12, 254.0], [1.68544422E12, 249.0], [1.68544416E12, 250.0], [1.68544386E12, 246.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6854438E12, 341.0], [1.6854435E12, 4977.0], [1.68544446E12, 276.0], [1.68544344E12, 285.0], [1.6854444E12, 265.0], [1.6854441E12, 349.0], [1.68544404E12, 294.0], [1.68544374E12, 328.0], [1.6854447E12, 5191.5], [1.68544368E12, 4468.0], [1.68544464E12, 4717.0], [1.68544338E12, 319.0], [1.68544434E12, 264.5], [1.68544428E12, 287.0], [1.68544398E12, 284.5], [1.68544392E12, 340.0], [1.68544362E12, 26084.0], [1.68544458E12, 4506.0], [1.68544356E12, 5967.0], [1.68544452E12, 338.0], [1.68544422E12, 282.0], [1.68544416E12, 330.5], [1.68544386E12, 332.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854447E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 248.0, "minX": 1.0, "maxY": 11101.0, "series": [{"data": [[2.0, 285.0], [8.0, 328.0], [9.0, 292.0], [10.0, 283.0], [11.0, 267.5], [3.0, 314.0], [12.0, 11101.0], [13.0, 324.5], [14.0, 261.0], [1.0, 297.0], [4.0, 298.0], [5.0, 294.0], [20.0, 263.0], [22.0, 263.0], [6.0, 294.5], [26.0, 263.0], [7.0, 292.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 252.0], [8.0, 256.0], [9.0, 257.0], [10.0, 256.0], [11.0, 258.0], [3.0, 258.0], [13.0, 4384.0], [14.0, 1474.0], [4.0, 258.0], [1.0, 249.0], [5.0, 253.0], [20.0, 2863.5], [22.0, 7324.0], [6.0, 249.0], [26.0, 4173.0], [7.0, 248.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 248.0, "minX": 1.0, "maxY": 11101.0, "series": [{"data": [[2.0, 285.0], [8.0, 327.0], [9.0, 290.0], [10.0, 283.0], [11.0, 267.5], [3.0, 310.0], [12.0, 11101.0], [13.0, 322.0], [14.0, 261.0], [1.0, 297.0], [4.0, 298.0], [5.0, 293.0], [20.0, 262.5], [22.0, 262.0], [6.0, 293.5], [26.0, 262.0], [7.0, 289.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 252.0], [8.0, 256.0], [9.0, 256.0], [10.0, 256.0], [11.0, 258.0], [3.0, 258.0], [13.0, 4384.0], [14.0, 1474.0], [4.0, 258.0], [1.0, 249.0], [5.0, 253.0], [20.0, 2863.5], [22.0, 7324.0], [6.0, 249.0], [26.0, 4173.0], [7.0, 248.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.68544338E12, "maxY": 4.866666666666666, "series": [{"data": [[1.6854438E12, 1.8833333333333333], [1.6854435E12, 0.36666666666666664], [1.68544446E12, 4.866666666666666], [1.68544344E12, 0.5], [1.6854444E12, 0.7], [1.6854441E12, 1.4], [1.68544404E12, 1.5833333333333333], [1.68544374E12, 1.6666666666666667], [1.6854447E12, 0.6], [1.68544368E12, 1.15], [1.68544464E12, 1.2333333333333334], [1.68544338E12, 0.13333333333333333], [1.68544434E12, 3.033333333333333], [1.68544428E12, 1.45], [1.68544398E12, 1.3], [1.68544392E12, 1.7833333333333334], [1.68544362E12, 0.9666666666666667], [1.68544458E12, 1.1833333333333333], [1.68544356E12, 1.1], [1.68544452E12, 0.5166666666666667], [1.68544422E12, 1.3], [1.68544416E12, 1.2166666666666666], [1.68544386E12, 1.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854447E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68544338E12, "maxY": 3.25, "series": [{"data": [[1.6854438E12, 1.1166666666666667], [1.6854435E12, 0.36666666666666664], [1.68544446E12, 0.75], [1.68544344E12, 0.45], [1.6854444E12, 0.21666666666666667], [1.6854441E12, 1.4], [1.68544404E12, 1.4166666666666667], [1.68544374E12, 1.2166666666666666], [1.6854447E12, 0.4666666666666667], [1.68544368E12, 0.9833333333333333], [1.68544464E12, 0.7833333333333333], [1.68544338E12, 0.1], [1.68544434E12, 1.5], [1.68544428E12, 0.95], [1.68544398E12, 1.1333333333333333], [1.68544392E12, 1.75], [1.68544362E12, 0.25], [1.68544458E12, 1.1666666666666667], [1.68544356E12, 0.4166666666666667], [1.68544452E12, 0.45], [1.68544422E12, 0.9833333333333333], [1.68544416E12, 1.1333333333333333], [1.68544386E12, 1.5833333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68544428E12, 0.2833333333333333], [1.68544398E12, 0.016666666666666666], [1.68544446E12, 0.65], [1.6854444E12, 0.05], [1.68544422E12, 0.21666666666666667], [1.68544416E12, 0.03333333333333333], [1.68544434E12, 1.25]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.6854438E12, 0.7166666666666667], [1.68544446E12, 3.25], [1.6854444E12, 0.4166666666666667], [1.68544362E12, 0.6666666666666666], [1.68544458E12, 0.08333333333333333], [1.68544356E12, 0.65], [1.68544452E12, 0.05], [1.68544374E12, 0.4666666666666667], [1.6854447E12, 0.18333333333333332], [1.68544368E12, 0.21666666666666667], [1.68544464E12, 0.48333333333333334], [1.68544386E12, 0.3]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68544428E12, 0.25], [1.68544398E12, 0.1], [1.68544446E12, 0.05], [1.6854444E12, 0.2833333333333333], [1.68544404E12, 0.13333333333333333], [1.68544452E12, 0.1], [1.68544422E12, 0.13333333333333333], [1.68544434E12, 0.26666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854447E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68544338E12, "maxY": 2.35, "series": [{"data": [[1.6854438E12, 0.5833333333333334], [1.6854435E12, 0.18333333333333332], [1.68544446E12, 0.75], [1.68544344E12, 0.25], [1.6854444E12, 0.18333333333333332], [1.6854441E12, 0.7166666666666667], [1.68544404E12, 0.7666666666666667], [1.68544374E12, 0.6166666666666667], [1.6854447E12, 0.2], [1.68544368E12, 0.48333333333333334], [1.68544464E12, 0.35], [1.68544338E12, 0.06666666666666667], [1.68544434E12, 1.5], [1.68544428E12, 0.7166666666666667], [1.68544398E12, 0.65], [1.68544392E12, 0.9], [1.68544362E12, 0.1], [1.68544458E12, 0.5666666666666667], [1.68544356E12, 0.2], [1.68544452E12, 0.23333333333333334], [1.68544422E12, 0.6666666666666666], [1.68544416E12, 0.6166666666666667], [1.68544386E12, 0.85]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.6854438E12, 0.35], [1.68544446E12, 1.6], [1.6854444E12, 0.25], [1.68544362E12, 0.4], [1.68544458E12, 0.05], [1.68544356E12, 0.3333333333333333], [1.68544452E12, 0.03333333333333333], [1.68544374E12, 0.23333333333333334], [1.6854447E12, 0.1], [1.68544368E12, 0.11666666666666667], [1.68544464E12, 0.26666666666666666], [1.68544386E12, 0.1]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.6854438E12, 0.36666666666666664], [1.68544446E12, 2.35], [1.6854444E12, 0.5], [1.68544404E12, 0.13333333333333333], [1.68544374E12, 0.23333333333333334], [1.6854447E12, 0.08333333333333333], [1.68544368E12, 0.1], [1.68544464E12, 0.21666666666666667], [1.68544434E12, 1.5166666666666666], [1.68544428E12, 0.5333333333333333], [1.68544398E12, 0.11666666666666667], [1.68544362E12, 0.26666666666666666], [1.68544458E12, 0.03333333333333333], [1.68544356E12, 0.31666666666666665], [1.68544452E12, 0.11666666666666667], [1.68544422E12, 0.35], [1.68544416E12, 0.03333333333333333], [1.68544386E12, 0.2]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6854438E12, 0.35], [1.6854435E12, 0.18333333333333332], [1.68544344E12, 0.2], [1.6854444E12, 0.03333333333333333], [1.6854441E12, 0.6833333333333333], [1.68544404E12, 0.6333333333333333], [1.68544374E12, 0.5], [1.6854447E12, 0.15], [1.68544368E12, 0.31666666666666665], [1.68544464E12, 0.21666666666666667], [1.68544338E12, 0.03333333333333333], [1.68544434E12, 0.016666666666666666], [1.68544428E12, 0.2], [1.68544398E12, 0.45], [1.68544392E12, 0.8166666666666667], [1.68544362E12, 0.016666666666666666], [1.68544458E12, 0.55], [1.68544356E12, 0.2], [1.68544452E12, 0.23333333333333334], [1.68544422E12, 0.3333333333333333], [1.68544416E12, 0.5333333333333333], [1.68544386E12, 0.6]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.6854438E12, 0.65], [1.68544446E12, 2.2], [1.6854444E12, 0.6666666666666666], [1.68544404E12, 0.13333333333333333], [1.68544374E12, 0.3333333333333333], [1.6854447E12, 0.15], [1.68544368E12, 0.31666666666666665], [1.68544464E12, 0.43333333333333335], [1.68544434E12, 1.4333333333333333], [1.68544428E12, 0.55], [1.68544398E12, 0.11666666666666667], [1.68544362E12, 0.4], [1.68544458E12, 0.08333333333333333], [1.68544356E12, 0.3333333333333333], [1.68544452E12, 0.2], [1.68544422E12, 0.35], [1.68544416E12, 0.1], [1.68544386E12, 0.2833333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6854438E12, 0.5333333333333333], [1.6854435E12, 0.18333333333333332], [1.68544344E12, 0.2], [1.6854444E12, 0.03333333333333333], [1.6854441E12, 0.6833333333333333], [1.68544404E12, 0.65], [1.68544374E12, 0.6], [1.6854447E12, 0.26666666666666666], [1.68544368E12, 0.5], [1.68544464E12, 0.43333333333333335], [1.68544338E12, 0.03333333333333333], [1.68544428E12, 0.23333333333333334], [1.68544398E12, 0.48333333333333334], [1.68544392E12, 0.85], [1.68544362E12, 0.15], [1.68544458E12, 0.6], [1.68544356E12, 0.21666666666666667], [1.68544452E12, 0.21666666666666667], [1.68544422E12, 0.31666666666666665], [1.68544416E12, 0.5166666666666667], [1.68544386E12, 0.7333333333333333]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854447E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.68544338E12, "maxY": 6.15, "series": [{"data": [[1.6854438E12, 1.4666666666666666], [1.6854435E12, 0.55], [1.68544446E12, 0.75], [1.68544344E12, 0.65], [1.6854444E12, 0.25], [1.6854441E12, 2.0833333333333335], [1.68544404E12, 2.05], [1.68544374E12, 1.7166666666666666], [1.6854447E12, 0.6166666666666667], [1.68544368E12, 1.3], [1.68544464E12, 1.0], [1.68544338E12, 0.13333333333333333], [1.68544434E12, 1.5166666666666666], [1.68544428E12, 1.15], [1.68544398E12, 1.5833333333333333], [1.68544392E12, 2.566666666666667], [1.68544362E12, 0.26666666666666666], [1.68544458E12, 1.7166666666666666], [1.68544356E12, 0.6166666666666667], [1.68544452E12, 0.6833333333333333], [1.68544422E12, 1.3166666666666667], [1.68544416E12, 1.6666666666666667], [1.68544386E12, 2.183333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6854438E12, 1.3666666666666667], [1.68544446E12, 6.15], [1.6854444E12, 1.4166666666666667], [1.68544404E12, 0.26666666666666666], [1.68544374E12, 0.8], [1.6854447E12, 0.3333333333333333], [1.68544368E12, 0.5333333333333333], [1.68544464E12, 0.9166666666666666], [1.68544434E12, 2.95], [1.68544428E12, 1.0833333333333333], [1.68544398E12, 0.23333333333333334], [1.68544362E12, 1.0666666666666667], [1.68544458E12, 0.16666666666666666], [1.68544356E12, 0.9833333333333333], [1.68544452E12, 0.35], [1.68544422E12, 0.7], [1.68544416E12, 0.13333333333333333], [1.68544386E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854447E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

