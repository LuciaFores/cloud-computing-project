/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 124.0, "minX": 0.0, "maxY": 87700.0, "series": [{"data": [[0.0, 250.0], [0.1, 250.0], [0.2, 254.0], [0.3, 255.0], [0.4, 255.0], [0.5, 262.0], [0.6, 266.0], [0.7, 266.0], [0.8, 373.0], [0.9, 374.0], [1.0, 374.0], [1.1, 374.0], [1.2, 374.0], [1.3, 375.0], [1.4, 375.0], [1.5, 375.0], [1.6, 375.0], [1.7, 376.0], [1.8, 376.0], [1.9, 376.0], [2.0, 376.0], [2.1, 376.0], [2.2, 376.0], [2.3, 376.0], [2.4, 376.0], [2.5, 376.0], [2.6, 377.0], [2.7, 377.0], [2.8, 377.0], [2.9, 377.0], [3.0, 377.0], [3.1, 377.0], [3.2, 377.0], [3.3, 378.0], [3.4, 378.0], [3.5, 378.0], [3.6, 378.0], [3.7, 379.0], [3.8, 379.0], [3.9, 379.0], [4.0, 379.0], [4.1, 379.0], [4.2, 379.0], [4.3, 379.0], [4.4, 380.0], [4.5, 380.0], [4.6, 380.0], [4.7, 380.0], [4.8, 381.0], [4.9, 381.0], [5.0, 381.0], [5.1, 381.0], [5.2, 381.0], [5.3, 381.0], [5.4, 382.0], [5.5, 382.0], [5.6, 382.0], [5.7, 382.0], [5.8, 383.0], [5.9, 384.0], [6.0, 384.0], [6.1, 386.0], [6.2, 387.0], [6.3, 387.0], [6.4, 387.0], [6.5, 389.0], [6.6, 389.0], [6.7, 389.0], [6.8, 390.0], [6.9, 391.0], [7.0, 391.0], [7.1, 391.0], [7.2, 391.0], [7.3, 391.0], [7.4, 391.0], [7.5, 392.0], [7.6, 392.0], [7.7, 392.0], [7.8, 393.0], [7.9, 393.0], [8.0, 393.0], [8.1, 393.0], [8.2, 393.0], [8.3, 393.0], [8.4, 393.0], [8.5, 393.0], [8.6, 394.0], [8.7, 394.0], [8.8, 394.0], [8.9, 394.0], [9.0, 394.0], [9.1, 394.0], [9.2, 394.0], [9.3, 394.0], [9.4, 394.0], [9.5, 394.0], [9.6, 394.0], [9.7, 395.0], [9.8, 395.0], [9.9, 395.0], [10.0, 395.0], [10.1, 395.0], [10.2, 396.0], [10.3, 396.0], [10.4, 397.0], [10.5, 397.0], [10.6, 397.0], [10.7, 398.0], [10.8, 398.0], [10.9, 398.0], [11.0, 400.0], [11.1, 400.0], [11.2, 400.0], [11.3, 401.0], [11.4, 401.0], [11.5, 401.0], [11.6, 401.0], [11.7, 401.0], [11.8, 402.0], [11.9, 402.0], [12.0, 403.0], [12.1, 403.0], [12.2, 403.0], [12.3, 404.0], [12.4, 404.0], [12.5, 404.0], [12.6, 404.0], [12.7, 405.0], [12.8, 406.0], [12.9, 406.0], [13.0, 406.0], [13.1, 407.0], [13.2, 407.0], [13.3, 408.0], [13.4, 410.0], [13.5, 411.0], [13.6, 411.0], [13.7, 412.0], [13.8, 413.0], [13.9, 413.0], [14.0, 414.0], [14.1, 414.0], [14.2, 414.0], [14.3, 414.0], [14.4, 417.0], [14.5, 424.0], [14.6, 424.0], [14.7, 425.0], [14.8, 425.0], [14.9, 429.0], [15.0, 429.0], [15.1, 432.0], [15.2, 443.0], [15.3, 443.0], [15.4, 448.0], [15.5, 450.0], [15.6, 459.0], [15.7, 459.0], [15.8, 460.0], [15.9, 467.0], [16.0, 467.0], [16.1, 479.0], [16.2, 484.0], [16.3, 535.0], [16.4, 535.0], [16.5, 542.0], [16.6, 680.0], [16.7, 680.0], [16.8, 756.0], [16.9, 935.0], [17.0, 1162.0], [17.1, 1162.0], [17.2, 1362.0], [17.3, 1375.0], [17.4, 1375.0], [17.5, 2120.0], [17.6, 2236.0], [17.7, 2958.0], [17.8, 2958.0], [17.9, 3389.0], [18.0, 3421.0], [18.1, 3421.0], [18.2, 3559.0], [18.3, 4009.0], [18.4, 4293.0], [18.5, 4293.0], [18.6, 4336.0], [18.7, 4380.0], [18.8, 4380.0], [18.9, 4405.0], [19.0, 4441.0], [19.1, 4441.0], [19.2, 4443.0], [19.3, 4556.0], [19.4, 4557.0], [19.5, 4557.0], [19.6, 4557.0], [19.7, 4620.0], [19.8, 4620.0], [19.9, 4625.0], [20.0, 4629.0], [20.1, 4647.0], [20.2, 4647.0], [20.3, 4665.0], [20.4, 4711.0], [20.5, 4711.0], [20.6, 4774.0], [20.7, 4849.0], [20.8, 4859.0], [20.9, 4859.0], [21.0, 4875.0], [21.1, 4972.0], [21.2, 4972.0], [21.3, 4984.0], [21.4, 4996.0], [21.5, 5084.0], [21.6, 5084.0], [21.7, 5127.0], [21.8, 5129.0], [21.9, 5129.0], [22.0, 5207.0], [22.1, 5249.0], [22.2, 5264.0], [22.3, 5264.0], [22.4, 5285.0], [22.5, 5290.0], [22.6, 5290.0], [22.7, 5296.0], [22.8, 5315.0], [22.9, 5321.0], [23.0, 5321.0], [23.1, 5322.0], [23.2, 5331.0], [23.3, 5331.0], [23.4, 5333.0], [23.5, 5336.0], [23.6, 5366.0], [23.7, 5366.0], [23.8, 5380.0], [23.9, 5380.0], [24.0, 5380.0], [24.1, 5385.0], [24.2, 5398.0], [24.3, 5404.0], [24.4, 5404.0], [24.5, 5430.0], [24.6, 5433.0], [24.7, 5433.0], [24.8, 5458.0], [24.9, 5474.0], [25.0, 5475.0], [25.1, 5475.0], [25.2, 5477.0], [25.3, 5484.0], [25.4, 5484.0], [25.5, 5487.0], [25.6, 5493.0], [25.7, 5493.0], [25.8, 5513.0], [25.9, 5513.0], [26.0, 5524.0], [26.1, 5524.0], [26.2, 5532.0], [26.3, 5573.0], [26.4, 5573.0], [26.5, 5592.0], [26.6, 5601.0], [26.7, 5630.0], [26.8, 5630.0], [26.9, 5634.0], [27.0, 5647.0], [27.1, 5647.0], [27.2, 5649.0], [27.3, 5670.0], [27.4, 5685.0], [27.5, 5685.0], [27.6, 5713.0], [27.7, 5713.0], [27.8, 5713.0], [27.9, 5752.0], [28.0, 5768.0], [28.1, 5879.0], [28.2, 5879.0], [28.3, 5907.0], [28.4, 5909.0], [28.5, 5909.0], [28.6, 5914.0], [28.7, 5952.0], [28.8, 5983.0], [28.9, 5983.0], [29.0, 5993.0], [29.1, 5994.0], [29.2, 5994.0], [29.3, 6021.0], [29.4, 6061.0], [29.5, 6145.0], [29.6, 6145.0], [29.7, 6223.0], [29.8, 6226.0], [29.9, 6226.0], [30.0, 6252.0], [30.1, 6267.0], [30.2, 6294.0], [30.3, 6294.0], [30.4, 6351.0], [30.5, 6388.0], [30.6, 6388.0], [30.7, 6404.0], [30.8, 6408.0], [30.9, 6576.0], [31.0, 6576.0], [31.1, 6603.0], [31.2, 6628.0], [31.3, 6628.0], [31.4, 6633.0], [31.5, 6742.0], [31.6, 6742.0], [31.7, 6774.0], [31.8, 6828.0], [31.9, 6868.0], [32.0, 6868.0], [32.1, 6871.0], [32.2, 6880.0], [32.3, 6880.0], [32.4, 6960.0], [32.5, 6968.0], [32.6, 7088.0], [32.7, 7088.0], [32.8, 7091.0], [32.9, 7094.0], [33.0, 7094.0], [33.1, 7096.0], [33.2, 7135.0], [33.3, 7165.0], [33.4, 7165.0], [33.5, 7217.0], [33.6, 7224.0], [33.7, 7224.0], [33.8, 7297.0], [33.9, 7324.0], [34.0, 7455.0], [34.1, 7455.0], [34.2, 7489.0], [34.3, 7519.0], [34.4, 7519.0], [34.5, 7665.0], [34.6, 7699.0], [34.7, 7805.0], [34.8, 7805.0], [34.9, 7924.0], [35.0, 7947.0], [35.1, 7947.0], [35.2, 7956.0], [35.3, 7992.0], [35.4, 8334.0], [35.5, 8334.0], [35.6, 8393.0], [35.7, 8407.0], [35.8, 8407.0], [35.9, 8473.0], [36.0, 8495.0], [36.1, 8573.0], [36.2, 8573.0], [36.3, 8581.0], [36.4, 8591.0], [36.5, 8591.0], [36.6, 8656.0], [36.7, 8658.0], [36.8, 8681.0], [36.9, 8681.0], [37.0, 8723.0], [37.1, 8725.0], [37.2, 8725.0], [37.3, 8817.0], [37.4, 8852.0], [37.5, 8899.0], [37.6, 8899.0], [37.7, 8982.0], [37.8, 9022.0], [37.9, 9022.0], [38.0, 9033.0], [38.1, 9070.0], [38.2, 9070.0], [38.3, 9078.0], [38.4, 9080.0], [38.5, 9165.0], [38.6, 9165.0], [38.7, 9190.0], [38.8, 9199.0], [38.9, 9199.0], [39.0, 9201.0], [39.1, 9213.0], [39.2, 9249.0], [39.3, 9249.0], [39.4, 9279.0], [39.5, 9313.0], [39.6, 9313.0], [39.7, 9318.0], [39.8, 9385.0], [39.9, 9447.0], [40.0, 9447.0], [40.1, 9484.0], [40.2, 9557.0], [40.3, 9557.0], [40.4, 9604.0], [40.5, 9720.0], [40.6, 9797.0], [40.7, 9797.0], [40.8, 9944.0], [40.9, 9962.0], [41.0, 9962.0], [41.1, 10028.0], [41.2, 10090.0], [41.3, 10154.0], [41.4, 10154.0], [41.5, 10247.0], [41.6, 10341.0], [41.7, 10341.0], [41.8, 10401.0], [41.9, 10420.0], [42.0, 10430.0], [42.1, 10430.0], [42.2, 10431.0], [42.3, 10561.0], [42.4, 10561.0], [42.5, 10586.0], [42.6, 10894.0], [42.7, 10962.0], [42.8, 10962.0], [42.9, 11016.0], [43.0, 11031.0], [43.1, 11031.0], [43.2, 11285.0], [43.3, 11396.0], [43.4, 11525.0], [43.5, 11525.0], [43.6, 11555.0], [43.7, 11614.0], [43.8, 11614.0], [43.9, 11720.0], [44.0, 11756.0], [44.1, 11756.0], [44.2, 11859.0], [44.3, 11863.0], [44.4, 11898.0], [44.5, 11898.0], [44.6, 11900.0], [44.7, 12009.0], [44.8, 12009.0], [44.9, 12038.0], [45.0, 12046.0], [45.1, 12068.0], [45.2, 12068.0], [45.3, 12136.0], [45.4, 12152.0], [45.5, 12152.0], [45.6, 12170.0], [45.7, 12174.0], [45.8, 12245.0], [45.9, 12245.0], [46.0, 12455.0], [46.1, 12535.0], [46.2, 12535.0], [46.3, 12626.0], [46.4, 12949.0], [46.5, 12963.0], [46.6, 12963.0], [46.7, 13136.0], [46.8, 13158.0], [46.9, 13158.0], [47.0, 13165.0], [47.1, 13177.0], [47.2, 13436.0], [47.3, 13436.0], [47.4, 13480.0], [47.5, 13665.0], [47.6, 13665.0], [47.7, 13727.0], [47.8, 14035.0], [47.9, 14045.0], [48.0, 14045.0], [48.1, 14147.0], [48.2, 14178.0], [48.3, 14178.0], [48.4, 14237.0], [48.5, 14276.0], [48.6, 14329.0], [48.7, 14329.0], [48.8, 14363.0], [48.9, 14402.0], [49.0, 14402.0], [49.1, 14426.0], [49.2, 14610.0], [49.3, 14611.0], [49.4, 14611.0], [49.5, 15068.0], [49.6, 15094.0], [49.7, 15094.0], [49.8, 15118.0], [49.9, 15769.0], [50.0, 15841.0], [50.1, 15841.0], [50.2, 15995.0], [50.3, 16045.0], [50.4, 16045.0], [50.5, 16410.0], [50.6, 16446.0], [50.7, 16446.0], [50.8, 16487.0], [50.9, 16871.0], [51.0, 16956.0], [51.1, 16956.0], [51.2, 17229.0], [51.3, 17352.0], [51.4, 17352.0], [51.5, 17608.0], [51.6, 17804.0], [51.7, 17811.0], [51.8, 17811.0], [51.9, 18159.0], [52.0, 18178.0], [52.1, 18178.0], [52.2, 18257.0], [52.3, 18261.0], [52.4, 18472.0], [52.5, 18472.0], [52.6, 18575.0], [52.7, 18723.0], [52.8, 18723.0], [52.9, 19000.0], [53.0, 19132.0], [53.1, 19142.0], [53.2, 19142.0], [53.3, 19202.0], [53.4, 19331.0], [53.5, 19331.0], [53.6, 19350.0], [53.7, 19502.0], [53.8, 19678.0], [53.9, 19678.0], [54.0, 19706.0], [54.1, 19765.0], [54.2, 19765.0], [54.3, 19792.0], [54.4, 20015.0], [54.5, 20039.0], [54.6, 20039.0], [54.7, 20152.0], [54.8, 20252.0], [54.9, 20252.0], [55.0, 20309.0], [55.1, 20433.0], [55.2, 20725.0], [55.3, 20725.0], [55.4, 20754.0], [55.5, 20775.0], [55.6, 20775.0], [55.7, 21101.0], [55.8, 21125.0], [55.9, 21137.0], [56.0, 21137.0], [56.1, 21197.0], [56.2, 21314.0], [56.3, 21314.0], [56.4, 21330.0], [56.5, 21351.0], [56.6, 21351.0], [56.7, 21387.0], [56.8, 21516.0], [56.9, 21556.0], [57.0, 21556.0], [57.1, 21610.0], [57.2, 21649.0], [57.3, 21649.0], [57.4, 21652.0], [57.5, 21768.0], [57.6, 21909.0], [57.7, 21909.0], [57.8, 22298.0], [57.9, 22366.0], [58.0, 22366.0], [58.1, 22510.0], [58.2, 22594.0], [58.3, 22606.0], [58.4, 22606.0], [58.5, 22677.0], [58.6, 22701.0], [58.7, 22701.0], [58.8, 22766.0], [58.9, 22860.0], [59.0, 23029.0], [59.1, 23029.0], [59.2, 23098.0], [59.3, 23112.0], [59.4, 23112.0], [59.5, 23337.0], [59.6, 23435.0], [59.7, 23442.0], [59.8, 23442.0], [59.9, 23491.0], [60.0, 23634.0], [60.1, 23634.0], [60.2, 23644.0], [60.3, 23657.0], [60.4, 23661.0], [60.5, 23661.0], [60.6, 23815.0], [60.7, 23980.0], [60.8, 23980.0], [60.9, 24011.0], [61.0, 24050.0], [61.1, 24150.0], [61.2, 24150.0], [61.3, 24252.0], [61.4, 24340.0], [61.5, 24340.0], [61.6, 24473.0], [61.7, 24554.0], [61.8, 24598.0], [61.9, 24598.0], [62.0, 25423.0], [62.1, 25727.0], [62.2, 25727.0], [62.3, 25763.0], [62.4, 25894.0], [62.5, 25913.0], [62.6, 25913.0], [62.7, 25950.0], [62.8, 26135.0], [62.9, 26135.0], [63.0, 26313.0], [63.1, 26651.0], [63.2, 26651.0], [63.3, 26723.0], [63.4, 26779.0], [63.5, 27076.0], [63.6, 27076.0], [63.7, 27953.0], [63.8, 28018.0], [63.9, 28018.0], [64.0, 28117.0], [64.1, 28243.0], [64.2, 28644.0], [64.3, 28644.0], [64.4, 28747.0], [64.5, 28951.0], [64.6, 28951.0], [64.7, 29013.0], [64.8, 29057.0], [64.9, 29178.0], [65.0, 29178.0], [65.1, 29800.0], [65.2, 29892.0], [65.3, 29892.0], [65.4, 30126.0], [65.5, 30284.0], [65.6, 30341.0], [65.7, 30341.0], [65.8, 30380.0], [65.9, 30833.0], [66.0, 30833.0], [66.1, 31044.0], [66.2, 31268.0], [66.3, 31299.0], [66.4, 31299.0], [66.5, 31338.0], [66.6, 31409.0], [66.7, 31409.0], [66.8, 31424.0], [66.9, 31468.0], [67.0, 31677.0], [67.1, 31677.0], [67.2, 31887.0], [67.3, 32019.0], [67.4, 32019.0], [67.5, 32120.0], [67.6, 32150.0], [67.7, 32317.0], [67.8, 32317.0], [67.9, 32399.0], [68.0, 32528.0], [68.1, 32528.0], [68.2, 32757.0], [68.3, 32786.0], [68.4, 32797.0], [68.5, 32797.0], [68.6, 32934.0], [68.7, 32946.0], [68.8, 32946.0], [68.9, 33159.0], [69.0, 33166.0], [69.1, 33166.0], [69.2, 33207.0], [69.3, 33347.0], [69.4, 33553.0], [69.5, 33553.0], [69.6, 33615.0], [69.7, 33817.0], [69.8, 33817.0], [69.9, 33820.0], [70.0, 33892.0], [70.1, 33924.0], [70.2, 33924.0], [70.3, 34251.0], [70.4, 34493.0], [70.5, 34493.0], [70.6, 34505.0], [70.7, 34749.0], [70.8, 34828.0], [70.9, 34828.0], [71.0, 34875.0], [71.1, 34928.0], [71.2, 34928.0], [71.3, 35275.0], [71.4, 35298.0], [71.5, 35333.0], [71.6, 35333.0], [71.7, 35358.0], [71.8, 35420.0], [71.9, 35420.0], [72.0, 35523.0], [72.1, 35527.0], [72.2, 35680.0], [72.3, 35680.0], [72.4, 35701.0], [72.5, 35914.0], [72.6, 35914.0], [72.7, 35934.0], [72.8, 36180.0], [72.9, 36278.0], [73.0, 36278.0], [73.1, 36294.0], [73.2, 36356.0], [73.3, 36356.0], [73.4, 36362.0], [73.5, 36422.0], [73.6, 36457.0], [73.7, 36457.0], [73.8, 36540.0], [73.9, 36612.0], [74.0, 36612.0], [74.1, 36654.0], [74.2, 36924.0], [74.3, 37052.0], [74.4, 37052.0], [74.5, 37189.0], [74.6, 37506.0], [74.7, 37506.0], [74.8, 37604.0], [74.9, 37775.0], [75.0, 37775.0], [75.1, 37921.0], [75.2, 38336.0], [75.3, 38508.0], [75.4, 38508.0], [75.5, 38526.0], [75.6, 38781.0], [75.7, 38781.0], [75.8, 38859.0], [75.9, 39015.0], [76.0, 39028.0], [76.1, 39028.0], [76.2, 39067.0], [76.3, 39288.0], [76.4, 39288.0], [76.5, 39690.0], [76.6, 40070.0], [76.7, 40403.0], [76.8, 40403.0], [76.9, 40657.0], [77.0, 40873.0], [77.1, 40873.0], [77.2, 41162.0], [77.3, 41213.0], [77.4, 41268.0], [77.5, 41268.0], [77.6, 41301.0], [77.7, 41513.0], [77.8, 41513.0], [77.9, 41531.0], [78.0, 41601.0], [78.1, 41950.0], [78.2, 41950.0], [78.3, 42047.0], [78.4, 42131.0], [78.5, 42131.0], [78.6, 42156.0], [78.7, 42162.0], [78.8, 42391.0], [78.9, 42391.0], [79.0, 42624.0], [79.1, 42780.0], [79.2, 42780.0], [79.3, 42960.0], [79.4, 42988.0], [79.5, 43068.0], [79.6, 43068.0], [79.7, 43141.0], [79.8, 43149.0], [79.9, 43149.0], [80.0, 43254.0], [80.1, 43681.0], [80.2, 43772.0], [80.3, 43772.0], [80.4, 43932.0], [80.5, 44042.0], [80.6, 44042.0], [80.7, 44065.0], [80.8, 44089.0], [80.9, 44192.0], [81.0, 44192.0], [81.1, 44211.0], [81.2, 44282.0], [81.3, 44282.0], [81.4, 44405.0], [81.5, 44462.0], [81.6, 44462.0], [81.7, 44525.0], [81.8, 44696.0], [81.9, 44725.0], [82.0, 44725.0], [82.1, 44729.0], [82.2, 44848.0], [82.3, 44848.0], [82.4, 44871.0], [82.5, 45010.0], [82.6, 45389.0], [82.7, 45389.0], [82.8, 45554.0], [82.9, 45681.0], [83.0, 45681.0], [83.1, 45793.0], [83.2, 45838.0], [83.3, 45972.0], [83.4, 45972.0], [83.5, 46047.0], [83.6, 46158.0], [83.7, 46158.0], [83.8, 46244.0], [83.9, 46332.0], [84.0, 46379.0], [84.1, 46379.0], [84.2, 46472.0], [84.3, 46850.0], [84.4, 46850.0], [84.5, 47011.0], [84.6, 47344.0], [84.7, 47621.0], [84.8, 47621.0], [84.9, 47848.0], [85.0, 47890.0], [85.1, 47890.0], [85.2, 48279.0], [85.3, 48449.0], [85.4, 48721.0], [85.5, 48721.0], [85.6, 49119.0], [85.7, 49126.0], [85.8, 49126.0], [85.9, 49126.0], [86.0, 49762.0], [86.1, 50102.0], [86.2, 50102.0], [86.3, 50330.0], [86.4, 50337.0], [86.5, 50337.0], [86.6, 50731.0], [86.7, 50951.0], [86.8, 51089.0], [86.9, 51089.0], [87.0, 51186.0], [87.1, 51217.0], [87.2, 51217.0], [87.3, 51694.0], [87.4, 51736.0], [87.5, 51736.0], [87.6, 51744.0], [87.7, 52049.0], [87.8, 52286.0], [87.9, 52286.0], [88.0, 52510.0], [88.1, 52542.0], [88.2, 52542.0], [88.3, 52636.0], [88.4, 52705.0], [88.5, 53303.0], [88.6, 53303.0], [88.7, 53440.0], [88.8, 53865.0], [88.9, 53865.0], [89.0, 54003.0], [89.1, 54330.0], [89.2, 54332.0], [89.3, 54332.0], [89.4, 54823.0], [89.5, 54935.0], [89.6, 54935.0], [89.7, 55064.0], [89.8, 55259.0], [89.9, 55547.0], [90.0, 55547.0], [90.1, 55933.0], [90.2, 55939.0], [90.3, 55939.0], [90.4, 56113.0], [90.5, 56174.0], [90.6, 56266.0], [90.7, 56266.0], [90.8, 56334.0], [90.9, 56381.0], [91.0, 56381.0], [91.1, 56601.0], [91.2, 56608.0], [91.3, 56736.0], [91.4, 56736.0], [91.5, 56826.0], [91.6, 57127.0], [91.7, 57127.0], [91.8, 57181.0], [91.9, 57534.0], [92.0, 57655.0], [92.1, 57655.0], [92.2, 57805.0], [92.3, 58174.0], [92.4, 58174.0], [92.5, 58264.0], [92.6, 58587.0], [92.7, 58660.0], [92.8, 58660.0], [92.9, 58919.0], [93.0, 58963.0], [93.1, 58963.0], [93.2, 59483.0], [93.3, 59566.0], [93.4, 59758.0], [93.5, 59758.0], [93.6, 59809.0], [93.7, 59837.0], [93.8, 59837.0], [93.9, 60150.0], [94.0, 60378.0], [94.1, 60378.0], [94.2, 60382.0], [94.3, 60383.0], [94.4, 60384.0], [94.5, 60384.0], [94.6, 60386.0], [94.7, 60391.0], [94.8, 60391.0], [94.9, 60391.0], [95.0, 60395.0], [95.1, 60395.0], [95.2, 60395.0], [95.3, 60396.0], [95.4, 60397.0], [95.5, 60397.0], [95.6, 60397.0], [95.7, 60398.0], [95.8, 60400.0], [95.9, 60400.0], [96.0, 60400.0], [96.1, 60401.0], [96.2, 60401.0], [96.3, 60402.0], [96.4, 60403.0], [96.5, 60403.0], [96.6, 60403.0], [96.7, 60404.0], [96.8, 60404.0], [96.9, 60404.0], [97.0, 60416.0], [97.1, 60420.0], [97.2, 60426.0], [97.3, 60426.0], [97.4, 60430.0], [97.5, 60434.0], [97.6, 60434.0], [97.7, 60462.0], [97.8, 60485.0], [97.9, 60516.0], [98.0, 60516.0], [98.1, 60516.0], [98.2, 60519.0], [98.3, 60519.0], [98.4, 60520.0], [98.5, 60523.0], [98.6, 60523.0], [98.7, 60523.0], [98.8, 60524.0], [98.9, 60525.0], [99.0, 60525.0], [99.1, 60527.0], [99.2, 60795.0], [99.3, 72010.0], [99.4, 72010.0], [99.5, 75712.0], [99.6, 77399.0], [99.7, 77399.0], [99.8, 80208.0], [99.9, 87700.0], [100.0, 87700.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 124.0], [0.1, 124.0], [0.2, 125.0], [0.3, 125.0], [0.4, 125.0], [0.5, 126.0], [0.6, 126.0], [0.7, 126.0], [0.8, 126.0], [0.9, 126.0], [1.0, 126.0], [1.1, 126.0], [1.2, 126.0], [1.3, 126.0], [1.4, 126.0], [1.5, 126.0], [1.6, 126.0], [1.7, 126.0], [1.8, 127.0], [1.9, 127.0], [2.0, 127.0], [2.1, 127.0], [2.2, 127.0], [2.3, 127.0], [2.4, 127.0], [2.5, 127.0], [2.6, 127.0], [2.7, 127.0], [2.8, 127.0], [2.9, 127.0], [3.0, 127.0], [3.1, 127.0], [3.2, 127.0], [3.3, 127.0], [3.4, 127.0], [3.5, 127.0], [3.6, 127.0], [3.7, 127.0], [3.8, 127.0], [3.9, 127.0], [4.0, 127.0], [4.1, 127.0], [4.2, 127.0], [4.3, 127.0], [4.4, 127.0], [4.5, 127.0], [4.6, 128.0], [4.7, 128.0], [4.8, 128.0], [4.9, 128.0], [5.0, 128.0], [5.1, 128.0], [5.2, 128.0], [5.3, 128.0], [5.4, 128.0], [5.5, 128.0], [5.6, 128.0], [5.7, 128.0], [5.8, 128.0], [5.9, 128.0], [6.0, 128.0], [6.1, 128.0], [6.2, 128.0], [6.3, 128.0], [6.4, 129.0], [6.5, 129.0], [6.6, 129.0], [6.7, 129.0], [6.8, 129.0], [6.9, 129.0], [7.0, 129.0], [7.1, 130.0], [7.2, 130.0], [7.3, 130.0], [7.4, 130.0], [7.5, 130.0], [7.6, 130.0], [7.7, 130.0], [7.8, 130.0], [7.9, 130.0], [8.0, 130.0], [8.1, 130.0], [8.2, 130.0], [8.3, 130.0], [8.4, 131.0], [8.5, 131.0], [8.6, 131.0], [8.7, 131.0], [8.8, 131.0], [8.9, 131.0], [9.0, 131.0], [9.1, 131.0], [9.2, 131.0], [9.3, 131.0], [9.4, 131.0], [9.5, 131.0], [9.6, 132.0], [9.7, 132.0], [9.8, 132.0], [9.9, 132.0], [10.0, 132.0], [10.1, 132.0], [10.2, 132.0], [10.3, 132.0], [10.4, 132.0], [10.5, 132.0], [10.6, 132.0], [10.7, 132.0], [10.8, 132.0], [10.9, 132.0], [11.0, 132.0], [11.1, 132.0], [11.2, 132.0], [11.3, 132.0], [11.4, 132.0], [11.5, 132.0], [11.6, 132.0], [11.7, 132.0], [11.8, 133.0], [11.9, 133.0], [12.0, 133.0], [12.1, 133.0], [12.2, 133.0], [12.3, 133.0], [12.4, 133.0], [12.5, 133.0], [12.6, 133.0], [12.7, 133.0], [12.8, 133.0], [12.9, 133.0], [13.0, 133.0], [13.1, 133.0], [13.2, 133.0], [13.3, 133.0], [13.4, 133.0], [13.5, 133.0], [13.6, 133.0], [13.7, 133.0], [13.8, 133.0], [13.9, 133.0], [14.0, 134.0], [14.1, 134.0], [14.2, 134.0], [14.3, 134.0], [14.4, 134.0], [14.5, 134.0], [14.6, 134.0], [14.7, 134.0], [14.8, 134.0], [14.9, 135.0], [15.0, 135.0], [15.1, 135.0], [15.2, 135.0], [15.3, 135.0], [15.4, 136.0], [15.5, 137.0], [15.6, 137.0], [15.7, 141.0], [15.8, 144.0], [15.9, 286.0], [16.0, 286.0], [16.1, 662.0], [16.2, 913.0], [16.3, 913.0], [16.4, 1065.0], [16.5, 1108.0], [16.6, 1862.0], [16.7, 1862.0], [16.8, 1984.0], [16.9, 2697.0], [17.0, 2697.0], [17.1, 3142.0], [17.2, 3166.0], [17.3, 3166.0], [17.4, 3290.0], [17.5, 3758.0], [17.6, 4042.0], [17.7, 4042.0], [17.8, 4072.0], [17.9, 4101.0], [18.0, 4101.0], [18.1, 4111.0], [18.2, 4143.0], [18.3, 4189.0], [18.4, 4189.0], [18.5, 4280.0], [18.6, 4282.0], [18.7, 4282.0], [18.8, 4294.0], [18.9, 4304.0], [19.0, 4304.0], [19.1, 4367.0], [19.2, 4371.0], [19.3, 4376.0], [19.4, 4376.0], [19.5, 4405.0], [19.6, 4449.0], [19.7, 4449.0], [19.8, 4520.0], [19.9, 4562.0], [20.0, 4562.0], [20.1, 4588.0], [20.2, 4622.0], [20.3, 4712.0], [20.4, 4712.0], [20.5, 4724.0], [20.6, 4734.0], [20.7, 4734.0], [20.8, 4820.0], [20.9, 4859.0], [21.0, 4876.0], [21.1, 4876.0], [21.2, 4953.0], [21.3, 4985.0], [21.4, 4985.0], [21.5, 4998.0], [21.6, 5025.0], [21.7, 5025.0], [21.8, 5027.0], [21.9, 5028.0], [22.0, 5061.0], [22.1, 5061.0], [22.2, 5063.0], [22.3, 5064.0], [22.4, 5064.0], [22.5, 5068.0], [22.6, 5068.0], [22.7, 5083.0], [22.8, 5083.0], [22.9, 5112.0], [23.0, 5114.0], [23.1, 5114.0], [23.2, 5117.0], [23.3, 5126.0], [23.4, 5126.0], [23.5, 5145.0], [23.6, 5145.0], [23.7, 5167.0], [23.8, 5167.0], [23.9, 5177.0], [24.0, 5185.0], [24.1, 5185.0], [24.2, 5186.0], [24.3, 5204.0], [24.4, 5205.0], [24.5, 5205.0], [24.6, 5213.0], [24.7, 5214.0], [24.8, 5214.0], [24.9, 5221.0], [25.0, 5224.0], [25.1, 5224.0], [25.2, 5244.0], [25.3, 5261.0], [25.4, 5271.0], [25.5, 5271.0], [25.6, 5304.0], [25.7, 5325.0], [25.8, 5325.0], [25.9, 5330.0], [26.0, 5351.0], [26.1, 5385.0], [26.2, 5385.0], [26.3, 5386.0], [26.4, 5388.0], [26.5, 5388.0], [26.6, 5407.0], [26.7, 5416.0], [26.8, 5416.0], [26.9, 5441.0], [27.0, 5461.0], [27.1, 5491.0], [27.2, 5491.0], [27.3, 5503.0], [27.4, 5580.0], [27.5, 5580.0], [27.6, 5618.0], [27.7, 5646.0], [27.8, 5646.0], [27.9, 5646.0], [28.0, 5691.0], [28.1, 5717.0], [28.2, 5717.0], [28.3, 5721.0], [28.4, 5723.0], [28.5, 5723.0], [28.6, 5769.0], [28.7, 5807.0], [28.8, 5879.0], [28.9, 5879.0], [29.0, 5961.0], [29.1, 5962.0], [29.2, 5962.0], [29.3, 5973.0], [29.4, 5992.0], [29.5, 5992.0], [29.6, 6018.0], [29.7, 6081.0], [29.8, 6112.0], [29.9, 6112.0], [30.0, 6122.0], [30.1, 6139.0], [30.2, 6139.0], [30.3, 6245.0], [30.4, 6349.0], [30.5, 6368.0], [30.6, 6368.0], [30.7, 6381.0], [30.8, 6487.0], [30.9, 6487.0], [31.0, 6514.0], [31.1, 6576.0], [31.2, 6576.0], [31.3, 6615.0], [31.4, 6617.0], [31.5, 6625.0], [31.6, 6625.0], [31.7, 6699.0], [31.8, 6701.0], [31.9, 6701.0], [32.0, 6817.0], [32.1, 6821.0], [32.2, 6826.0], [32.3, 6826.0], [32.4, 6831.0], [32.5, 6831.0], [32.6, 6831.0], [32.7, 6891.0], [32.8, 6945.0], [32.9, 6945.0], [33.0, 6955.0], [33.1, 6987.0], [33.2, 7072.0], [33.3, 7072.0], [33.4, 7207.0], [33.5, 7234.0], [33.6, 7234.0], [33.7, 7248.0], [33.8, 7340.0], [33.9, 7340.0], [34.0, 7422.0], [34.1, 7546.0], [34.2, 7662.0], [34.3, 7662.0], [34.4, 7663.0], [34.5, 7684.0], [34.6, 7684.0], [34.7, 7699.0], [34.8, 8003.0], [34.9, 8142.0], [35.0, 8142.0], [35.1, 8143.0], [35.2, 8221.0], [35.3, 8221.0], [35.4, 8221.0], [35.5, 8222.0], [35.6, 8222.0], [35.7, 8331.0], [35.8, 8332.0], [35.9, 8397.0], [36.0, 8397.0], [36.1, 8404.0], [36.2, 8415.0], [36.3, 8415.0], [36.4, 8459.0], [36.5, 8460.0], [36.6, 8552.0], [36.7, 8552.0], [36.8, 8564.0], [36.9, 8648.0], [37.0, 8648.0], [37.1, 8712.0], [37.2, 8731.0], [37.3, 8731.0], [37.4, 8760.0], [37.5, 8778.0], [37.6, 8823.0], [37.7, 8823.0], [37.8, 8830.0], [37.9, 8893.0], [38.0, 8893.0], [38.1, 8924.0], [38.2, 8930.0], [38.3, 8937.0], [38.4, 8937.0], [38.5, 8950.0], [38.6, 8988.0], [38.7, 8988.0], [38.8, 9029.0], [38.9, 9050.0], [39.0, 9050.0], [39.1, 9068.0], [39.2, 9081.0], [39.3, 9187.0], [39.4, 9187.0], [39.5, 9221.0], [39.6, 9272.0], [39.7, 9272.0], [39.8, 9328.0], [39.9, 9456.0], [40.0, 9456.0], [40.1, 9542.0], [40.2, 9687.0], [40.3, 9707.0], [40.4, 9707.0], [40.5, 9767.0], [40.6, 9822.0], [40.7, 9822.0], [40.8, 9904.0], [40.9, 9954.0], [41.0, 10091.0], [41.1, 10091.0], [41.2, 10145.0], [41.3, 10155.0], [41.4, 10155.0], [41.5, 10159.0], [41.6, 10160.0], [41.7, 10160.0], [41.8, 10310.0], [41.9, 10311.0], [42.0, 10632.0], [42.1, 10632.0], [42.2, 10710.0], [42.3, 10764.0], [42.4, 10764.0], [42.5, 10779.0], [42.6, 11026.0], [42.7, 11092.0], [42.8, 11092.0], [42.9, 11258.0], [43.0, 11302.0], [43.1, 11302.0], [43.2, 11352.0], [43.3, 11458.0], [43.4, 11458.0], [43.5, 11494.0], [43.6, 11594.0], [43.7, 11598.0], [43.8, 11598.0], [43.9, 11633.0], [44.0, 11637.0], [44.1, 11637.0], [44.2, 11748.0], [44.3, 11749.0], [44.4, 11762.0], [44.5, 11762.0], [44.6, 11802.0], [44.7, 11866.0], [44.8, 11866.0], [44.9, 11883.0], [45.0, 11894.0], [45.1, 11894.0], [45.2, 11905.0], [45.3, 11993.0], [45.4, 12198.0], [45.5, 12198.0], [45.6, 12276.0], [45.7, 12355.0], [45.8, 12355.0], [45.9, 12669.0], [46.0, 12714.0], [46.1, 12875.0], [46.2, 12875.0], [46.3, 12886.0], [46.4, 12903.0], [46.5, 12903.0], [46.6, 12929.0], [46.7, 13172.0], [46.8, 13172.0], [46.9, 13215.0], [47.0, 13411.0], [47.1, 13478.0], [47.2, 13478.0], [47.3, 13699.0], [47.4, 13774.0], [47.5, 13774.0], [47.6, 13884.0], [47.7, 13889.0], [47.8, 13889.0], [47.9, 13964.0], [48.0, 13985.0], [48.1, 14057.0], [48.2, 14057.0], [48.3, 14059.0], [48.4, 14147.0], [48.5, 14147.0], [48.6, 14156.0], [48.7, 14342.0], [48.8, 14353.0], [48.9, 14353.0], [49.0, 14785.0], [49.1, 14844.0], [49.2, 14844.0], [49.3, 14848.0], [49.4, 15484.0], [49.5, 15484.0], [49.6, 15544.0], [49.7, 15733.0], [49.8, 15784.0], [49.9, 15784.0], [50.0, 16137.0], [50.1, 16178.0], [50.2, 16178.0], [50.3, 16226.0], [50.4, 16614.0], [50.5, 16703.0], [50.6, 16703.0], [50.7, 16967.0], [50.8, 17102.0], [50.9, 17102.0], [51.0, 17333.0], [51.1, 17410.0], [51.2, 17410.0], [51.3, 17543.0], [51.4, 17554.0], [51.5, 17585.0], [51.6, 17585.0], [51.7, 17633.0], [51.8, 17723.0], [51.9, 17723.0], [52.0, 17736.0], [52.1, 17905.0], [52.2, 17920.0], [52.3, 17920.0], [52.4, 17995.0], [52.5, 18006.0], [52.6, 18006.0], [52.7, 18295.0], [52.8, 18413.0], [52.9, 18413.0], [53.0, 18446.0], [53.1, 18735.0], [53.2, 18797.0], [53.3, 18797.0], [53.4, 18863.0], [53.5, 18938.0], [53.6, 18938.0], [53.7, 18985.0], [53.8, 19076.0], [53.9, 19076.0], [54.0, 19240.0], [54.1, 19424.0], [54.2, 19455.0], [54.3, 19455.0], [54.4, 19480.0], [54.5, 19517.0], [54.6, 19517.0], [54.7, 19656.0], [54.8, 19755.0], [54.9, 19786.0], [55.0, 19786.0], [55.1, 19878.0], [55.2, 19981.0], [55.3, 19981.0], [55.4, 20036.0], [55.5, 20172.0], [55.6, 20172.0], [55.7, 20464.0], [55.8, 20490.0], [55.9, 20512.0], [56.0, 20512.0], [56.1, 20794.0], [56.2, 20845.0], [56.3, 20845.0], [56.4, 20868.0], [56.5, 20931.0], [56.6, 21033.0], [56.7, 21033.0], [56.8, 21041.0], [56.9, 21068.0], [57.0, 21068.0], [57.1, 21131.0], [57.2, 21257.0], [57.3, 21257.0], [57.4, 21282.0], [57.5, 21302.0], [57.6, 21341.0], [57.7, 21341.0], [57.8, 21375.0], [57.9, 21378.0], [58.0, 21378.0], [58.1, 21392.0], [58.2, 21495.0], [58.3, 21644.0], [58.4, 21644.0], [58.5, 21924.0], [58.6, 22030.0], [58.7, 22030.0], [58.8, 22075.0], [58.9, 22115.0], [59.0, 22115.0], [59.1, 22249.0], [59.2, 22323.0], [59.3, 22357.0], [59.4, 22357.0], [59.5, 22395.0], [59.6, 22405.0], [59.7, 22405.0], [59.8, 22491.0], [59.9, 22581.0], [60.0, 22777.0], [60.1, 22777.0], [60.2, 22841.0], [60.3, 22853.0], [60.4, 22853.0], [60.5, 23070.0], [60.6, 23107.0], [60.7, 23107.0], [60.8, 23173.0], [60.9, 23206.0], [61.0, 23341.0], [61.1, 23341.0], [61.2, 23365.0], [61.3, 23381.0], [61.4, 23381.0], [61.5, 23406.0], [61.6, 23563.0], [61.7, 23563.0], [61.8, 23729.0], [61.9, 23747.0], [62.0, 23788.0], [62.1, 23788.0], [62.2, 23857.0], [62.3, 23986.0], [62.4, 23986.0], [62.5, 24087.0], [62.6, 24195.0], [62.7, 24276.0], [62.8, 24276.0], [62.9, 24322.0], [63.0, 25119.0], [63.1, 25119.0], [63.2, 25442.0], [63.3, 25498.0], [63.4, 25498.0], [63.5, 25591.0], [63.6, 25696.0], [63.7, 25864.0], [63.8, 25864.0], [63.9, 26059.0], [64.0, 26388.0], [64.1, 26388.0], [64.2, 26475.0], [64.3, 26521.0], [64.4, 26804.0], [64.5, 26804.0], [64.6, 27672.0], [64.7, 27730.0], [64.8, 27730.0], [64.9, 27866.0], [65.0, 27971.0], [65.1, 27971.0], [65.2, 28389.0], [65.3, 28473.0], [65.4, 28692.0], [65.5, 28692.0], [65.6, 28752.0], [65.7, 28900.0], [65.8, 28900.0], [65.9, 29629.0], [66.0, 29867.0], [66.1, 30011.0], [66.2, 30011.0], [66.3, 30076.0], [66.4, 30108.0], [66.5, 30108.0], [66.6, 30569.0], [66.7, 31014.0], [66.8, 31014.0], [66.9, 31025.0], [67.0, 31089.0], [67.1, 31148.0], [67.2, 31148.0], [67.3, 31214.0], [67.4, 31376.0], [67.5, 31376.0], [67.6, 31611.0], [67.7, 31889.0], [67.8, 31889.0], [67.9, 32021.0], [68.0, 32145.0], [68.1, 32274.0], [68.2, 32274.0], [68.3, 32480.0], [68.4, 32486.0], [68.5, 32486.0], [68.6, 32502.0], [68.7, 32544.0], [68.8, 32678.0], [68.9, 32678.0], [69.0, 32687.0], [69.1, 32901.0], [69.2, 32901.0], [69.3, 32903.0], [69.4, 33088.0], [69.5, 33088.0], [69.6, 33290.0], [69.7, 33365.0], [69.8, 33430.0], [69.9, 33430.0], [70.0, 33558.0], [70.1, 33640.0], [70.2, 33640.0], [70.3, 33674.0], [70.4, 34237.0], [70.5, 34253.0], [70.6, 34253.0], [70.7, 34474.0], [70.8, 34557.0], [70.9, 34557.0], [71.0, 34586.0], [71.1, 34677.0], [71.2, 34677.0], [71.3, 34892.0], [71.4, 35039.0], [71.5, 35057.0], [71.6, 35057.0], [71.7, 35095.0], [71.8, 35161.0], [71.9, 35161.0], [72.0, 35197.0], [72.1, 35275.0], [72.2, 35418.0], [72.3, 35418.0], [72.4, 35430.0], [72.5, 35648.0], [72.6, 35648.0], [72.7, 35674.0], [72.8, 35920.0], [72.9, 35920.0], [73.0, 35960.0], [73.1, 36029.0], [73.2, 36108.0], [73.3, 36108.0], [73.4, 36109.0], [73.5, 36152.0], [73.6, 36152.0], [73.7, 36196.0], [73.8, 36275.0], [73.9, 36275.0], [74.0, 36313.0], [74.1, 36395.0], [74.2, 36659.0], [74.3, 36659.0], [74.4, 36747.0], [74.5, 36914.0], [74.6, 36914.0], [74.7, 37256.0], [74.8, 37349.0], [74.9, 37517.0], [75.0, 37517.0], [75.1, 37638.0], [75.2, 38075.0], [75.3, 38075.0], [75.4, 38212.0], [75.5, 38259.0], [75.6, 38259.0], [75.7, 38530.0], [75.8, 38606.0], [75.9, 38732.0], [76.0, 38732.0], [76.1, 38763.0], [76.2, 38816.0], [76.3, 38816.0], [76.4, 39025.0], [76.5, 39435.0], [76.6, 39799.0], [76.7, 39799.0], [76.8, 40145.0], [76.9, 40404.0], [77.0, 40404.0], [77.1, 40604.0], [77.2, 40886.0], [77.3, 40886.0], [77.4, 40912.0], [77.5, 41004.0], [77.6, 41044.0], [77.7, 41044.0], [77.8, 41240.0], [77.9, 41265.0], [78.0, 41265.0], [78.1, 41309.0], [78.2, 41766.0], [78.3, 41865.0], [78.4, 41865.0], [78.5, 41893.0], [78.6, 41910.0], [78.7, 41910.0], [78.8, 42138.0], [78.9, 42363.0], [79.0, 42363.0], [79.1, 42499.0], [79.2, 42687.0], [79.3, 42708.0], [79.4, 42708.0], [79.5, 42726.0], [79.6, 42800.0], [79.7, 42800.0], [79.8, 42834.0], [79.9, 42895.0], [80.0, 42963.0], [80.1, 42963.0], [80.2, 43411.0], [80.3, 43685.0], [80.4, 43685.0], [80.5, 43758.0], [80.6, 43801.0], [80.7, 43801.0], [80.8, 43811.0], [80.9, 43935.0], [81.0, 43947.0], [81.1, 43947.0], [81.2, 44029.0], [81.3, 44148.0], [81.4, 44148.0], [81.5, 44180.0], [81.6, 44193.0], [81.7, 44193.0], [81.8, 44410.0], [81.9, 44465.0], [82.0, 44465.0], [82.1, 44465.0], [82.2, 44524.0], [82.3, 44621.0], [82.4, 44621.0], [82.5, 44733.0], [82.6, 45128.0], [82.7, 45249.0], [82.8, 45249.0], [82.9, 45397.0], [83.0, 45537.0], [83.1, 45537.0], [83.2, 45587.0], [83.3, 45712.0], [83.4, 45712.0], [83.5, 45843.0], [83.6, 45990.0], [83.7, 46083.0], [83.8, 46083.0], [83.9, 46127.0], [84.0, 46206.0], [84.1, 46206.0], [84.2, 46504.0], [84.3, 46702.0], [84.4, 47094.0], [84.5, 47094.0], [84.6, 47343.0], [84.7, 47591.0], [84.8, 47591.0], [84.9, 47594.0], [85.0, 47999.0], [85.1, 47999.0], [85.2, 48197.0], [85.3, 48424.0], [85.4, 48836.0], [85.5, 48836.0], [85.6, 48861.0], [85.7, 48877.0], [85.8, 48877.0], [85.9, 49487.0], [86.0, 49835.0], [86.1, 49957.0], [86.2, 49957.0], [86.3, 50059.0], [86.4, 50471.0], [86.5, 50471.0], [86.6, 50539.0], [86.7, 50661.0], [86.8, 50661.0], [86.9, 50775.0], [87.0, 50937.0], [87.1, 51409.0], [87.2, 51409.0], [87.3, 51429.0], [87.4, 51460.0], [87.5, 51460.0], [87.6, 51789.0], [87.7, 52034.0], [87.8, 52034.0], [87.9, 52196.0], [88.0, 52277.0], [88.1, 52384.0], [88.2, 52384.0], [88.3, 52449.0], [88.4, 52502.0], [88.5, 52502.0], [88.6, 53041.0], [88.7, 53182.0], [88.8, 53545.0], [88.9, 53545.0], [89.0, 53746.0], [89.1, 53984.0], [89.2, 53984.0], [89.3, 54057.0], [89.4, 54565.0], [89.5, 54565.0], [89.6, 54676.0], [89.7, 54769.0], [89.8, 55011.0], [89.9, 55011.0], [90.0, 55280.0], [90.1, 55657.0], [90.2, 55657.0], [90.3, 55685.0], [90.4, 55849.0], [90.5, 55887.0], [90.6, 55887.0], [90.7, 56015.0], [90.8, 56069.0], [90.9, 56069.0], [91.0, 56086.0], [91.1, 56323.0], [91.2, 56323.0], [91.3, 56335.0], [91.4, 56457.0], [91.5, 56540.0], [91.6, 56540.0], [91.7, 56860.0], [91.8, 56929.0], [91.9, 56929.0], [92.0, 57276.0], [92.1, 57392.0], [92.2, 57551.0], [92.3, 57551.0], [92.4, 57887.0], [92.5, 57955.0], [92.6, 57955.0], [92.7, 58068.0], [92.8, 58337.0], [92.9, 58337.0], [93.0, 58398.0], [93.1, 58658.0], [93.2, 58686.0], [93.3, 58686.0], [93.4, 59229.0], [93.5, 59277.0], [93.6, 59277.0], [93.7, 59505.0], [93.8, 59558.0], [93.9, 59558.0], [94.0, 59587.0], [94.1, 59890.0], [94.2, 60127.0], [94.3, 60127.0], [94.4, 60129.0], [94.5, 60129.0], [94.6, 60129.0], [94.7, 60129.0], [94.8, 60130.0], [94.9, 60130.0], [95.0, 60130.0], [95.1, 60130.0], [95.2, 60131.0], [95.3, 60131.0], [95.4, 60132.0], [95.5, 60132.0], [95.6, 60132.0], [95.7, 60133.0], [95.8, 60133.0], [95.9, 60134.0], [96.0, 60134.0], [96.1, 60134.0], [96.2, 60134.0], [96.3, 60134.0], [96.4, 60134.0], [96.5, 60134.0], [96.6, 60134.0], [96.7, 60134.0], [96.8, 60135.0], [96.9, 60135.0], [97.0, 60135.0], [97.1, 60135.0], [97.2, 60135.0], [97.3, 60135.0], [97.4, 60136.0], [97.5, 60136.0], [97.6, 60136.0], [97.7, 60136.0], [97.8, 60136.0], [97.9, 60137.0], [98.0, 60137.0], [98.1, 60137.0], [98.2, 60137.0], [98.3, 60138.0], [98.4, 60138.0], [98.5, 60165.0], [98.6, 60249.0], [98.7, 60249.0], [98.8, 60252.0], [98.9, 60257.0], [99.0, 60257.0], [99.1, 60259.0], [99.2, 60260.0], [99.3, 60260.0], [99.4, 60260.0], [99.5, 60261.0], [99.6, 60261.0], [99.7, 60261.0], [99.8, 60261.0], [99.9, 60262.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 244.0], [0.1, 244.0], [0.2, 247.0], [0.3, 247.0], [0.4, 247.0], [0.5, 247.0], [0.6, 247.0], [0.7, 247.0], [0.8, 248.0], [0.9, 248.0], [1.0, 248.0], [1.1, 248.0], [1.2, 248.0], [1.3, 248.0], [1.4, 248.0], [1.5, 248.0], [1.6, 248.0], [1.7, 248.0], [1.8, 248.0], [1.9, 248.0], [2.0, 248.0], [2.1, 248.0], [2.2, 249.0], [2.3, 249.0], [2.4, 249.0], [2.5, 249.0], [2.6, 249.0], [2.7, 249.0], [2.8, 249.0], [2.9, 249.0], [3.0, 249.0], [3.1, 249.0], [3.2, 249.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 249.0], [4.5, 249.0], [4.6, 249.0], [4.7, 249.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 250.0], [6.9, 250.0], [7.0, 250.0], [7.1, 250.0], [7.2, 250.0], [7.3, 250.0], [7.4, 250.0], [7.5, 250.0], [7.6, 250.0], [7.7, 250.0], [7.8, 250.0], [7.9, 250.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 251.0], [10.2, 251.0], [10.3, 251.0], [10.4, 251.0], [10.5, 251.0], [10.6, 251.0], [10.7, 251.0], [10.8, 251.0], [10.9, 251.0], [11.0, 251.0], [11.1, 251.0], [11.2, 251.0], [11.3, 251.0], [11.4, 251.0], [11.5, 251.0], [11.6, 252.0], [11.7, 252.0], [11.8, 252.0], [11.9, 252.0], [12.0, 252.0], [12.1, 252.0], [12.2, 252.0], [12.3, 252.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 252.0], [13.1, 252.0], [13.2, 252.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 252.0], [14.2, 252.0], [14.3, 252.0], [14.4, 252.0], [14.5, 252.0], [14.6, 252.0], [14.7, 252.0], [14.8, 252.0], [14.9, 252.0], [15.0, 252.0], [15.1, 252.0], [15.2, 252.0], [15.3, 252.0], [15.4, 252.0], [15.5, 252.0], [15.6, 252.0], [15.7, 252.0], [15.8, 252.0], [15.9, 252.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 253.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 253.0], [17.1, 253.0], [17.2, 253.0], [17.3, 253.0], [17.4, 253.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 253.0], [17.9, 253.0], [18.0, 253.0], [18.1, 253.0], [18.2, 253.0], [18.3, 253.0], [18.4, 253.0], [18.5, 253.0], [18.6, 253.0], [18.7, 253.0], [18.8, 253.0], [18.9, 253.0], [19.0, 253.0], [19.1, 253.0], [19.2, 253.0], [19.3, 253.0], [19.4, 254.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 254.0], [19.9, 254.0], [20.0, 254.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 254.0], [22.2, 254.0], [22.3, 254.0], [22.4, 254.0], [22.5, 254.0], [22.6, 254.0], [22.7, 254.0], [22.8, 254.0], [22.9, 254.0], [23.0, 254.0], [23.1, 254.0], [23.2, 254.0], [23.3, 254.0], [23.4, 254.0], [23.5, 254.0], [23.6, 254.0], [23.7, 254.0], [23.8, 254.0], [23.9, 254.0], [24.0, 254.0], [24.1, 254.0], [24.2, 254.0], [24.3, 254.0], [24.4, 254.0], [24.5, 255.0], [24.6, 255.0], [24.7, 255.0], [24.8, 255.0], [24.9, 255.0], [25.0, 255.0], [25.1, 255.0], [25.2, 255.0], [25.3, 255.0], [25.4, 255.0], [25.5, 255.0], [25.6, 255.0], [25.7, 255.0], [25.8, 255.0], [25.9, 255.0], [26.0, 255.0], [26.1, 255.0], [26.2, 255.0], [26.3, 255.0], [26.4, 255.0], [26.5, 255.0], [26.6, 256.0], [26.7, 256.0], [26.8, 256.0], [26.9, 256.0], [27.0, 256.0], [27.1, 256.0], [27.2, 256.0], [27.3, 256.0], [27.4, 256.0], [27.5, 256.0], [27.6, 256.0], [27.7, 256.0], [27.8, 256.0], [27.9, 256.0], [28.0, 257.0], [28.1, 257.0], [28.2, 257.0], [28.3, 257.0], [28.4, 257.0], [28.5, 257.0], [28.6, 257.0], [28.7, 257.0], [28.8, 257.0], [28.9, 257.0], [29.0, 257.0], [29.1, 257.0], [29.2, 257.0], [29.3, 257.0], [29.4, 257.0], [29.5, 257.0], [29.6, 257.0], [29.7, 257.0], [29.8, 257.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 258.0], [30.4, 258.0], [30.5, 258.0], [30.6, 258.0], [30.7, 258.0], [30.8, 258.0], [30.9, 258.0], [31.0, 258.0], [31.1, 258.0], [31.2, 258.0], [31.3, 258.0], [31.4, 258.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 259.0], [34.0, 259.0], [34.1, 259.0], [34.2, 259.0], [34.3, 259.0], [34.4, 259.0], [34.5, 259.0], [34.6, 259.0], [34.7, 259.0], [34.8, 259.0], [34.9, 259.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 260.0], [36.3, 260.0], [36.4, 260.0], [36.5, 260.0], [36.6, 260.0], [36.7, 260.0], [36.8, 260.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 260.0], [38.3, 260.0], [38.4, 260.0], [38.5, 261.0], [38.6, 261.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 261.0], [40.4, 261.0], [40.5, 261.0], [40.6, 261.0], [40.7, 261.0], [40.8, 261.0], [40.9, 261.0], [41.0, 261.0], [41.1, 261.0], [41.2, 261.0], [41.3, 261.0], [41.4, 261.0], [41.5, 261.0], [41.6, 261.0], [41.7, 261.0], [41.8, 261.0], [41.9, 261.0], [42.0, 261.0], [42.1, 261.0], [42.2, 261.0], [42.3, 261.0], [42.4, 261.0], [42.5, 261.0], [42.6, 261.0], [42.7, 261.0], [42.8, 261.0], [42.9, 261.0], [43.0, 261.0], [43.1, 261.0], [43.2, 261.0], [43.3, 261.0], [43.4, 261.0], [43.5, 262.0], [43.6, 262.0], [43.7, 262.0], [43.8, 262.0], [43.9, 262.0], [44.0, 262.0], [44.1, 262.0], [44.2, 262.0], [44.3, 262.0], [44.4, 262.0], [44.5, 262.0], [44.6, 262.0], [44.7, 262.0], [44.8, 262.0], [44.9, 262.0], [45.0, 262.0], [45.1, 262.0], [45.2, 262.0], [45.3, 262.0], [45.4, 262.0], [45.5, 262.0], [45.6, 262.0], [45.7, 262.0], [45.8, 262.0], [45.9, 262.0], [46.0, 262.0], [46.1, 262.0], [46.2, 262.0], [46.3, 262.0], [46.4, 262.0], [46.5, 262.0], [46.6, 262.0], [46.7, 262.0], [46.8, 262.0], [46.9, 262.0], [47.0, 262.0], [47.1, 262.0], [47.2, 262.0], [47.3, 262.0], [47.4, 262.0], [47.5, 262.0], [47.6, 262.0], [47.7, 262.0], [47.8, 262.0], [47.9, 262.0], [48.0, 262.0], [48.1, 262.0], [48.2, 262.0], [48.3, 263.0], [48.4, 263.0], [48.5, 263.0], [48.6, 263.0], [48.7, 263.0], [48.8, 263.0], [48.9, 263.0], [49.0, 263.0], [49.1, 263.0], [49.2, 263.0], [49.3, 263.0], [49.4, 263.0], [49.5, 263.0], [49.6, 263.0], [49.7, 263.0], [49.8, 263.0], [49.9, 263.0], [50.0, 263.0], [50.1, 263.0], [50.2, 263.0], [50.3, 263.0], [50.4, 263.0], [50.5, 263.0], [50.6, 263.0], [50.7, 263.0], [50.8, 263.0], [50.9, 263.0], [51.0, 263.0], [51.1, 263.0], [51.2, 263.0], [51.3, 263.0], [51.4, 263.0], [51.5, 263.0], [51.6, 263.0], [51.7, 263.0], [51.8, 263.0], [51.9, 263.0], [52.0, 263.0], [52.1, 263.0], [52.2, 263.0], [52.3, 263.0], [52.4, 264.0], [52.5, 264.0], [52.6, 264.0], [52.7, 264.0], [52.8, 264.0], [52.9, 264.0], [53.0, 264.0], [53.1, 264.0], [53.2, 264.0], [53.3, 264.0], [53.4, 264.0], [53.5, 264.0], [53.6, 264.0], [53.7, 264.0], [53.8, 264.0], [53.9, 264.0], [54.0, 264.0], [54.1, 264.0], [54.2, 264.0], [54.3, 264.0], [54.4, 264.0], [54.5, 264.0], [54.6, 264.0], [54.7, 264.0], [54.8, 264.0], [54.9, 264.0], [55.0, 264.0], [55.1, 264.0], [55.2, 265.0], [55.3, 265.0], [55.4, 265.0], [55.5, 265.0], [55.6, 265.0], [55.7, 265.0], [55.8, 265.0], [55.9, 265.0], [56.0, 265.0], [56.1, 265.0], [56.2, 265.0], [56.3, 265.0], [56.4, 265.0], [56.5, 265.0], [56.6, 265.0], [56.7, 265.0], [56.8, 265.0], [56.9, 265.0], [57.0, 265.0], [57.1, 265.0], [57.2, 265.0], [57.3, 265.0], [57.4, 265.0], [57.5, 265.0], [57.6, 265.0], [57.7, 265.0], [57.8, 265.0], [57.9, 265.0], [58.0, 265.0], [58.1, 265.0], [58.2, 265.0], [58.3, 265.0], [58.4, 266.0], [58.5, 266.0], [58.6, 266.0], [58.7, 266.0], [58.8, 266.0], [58.9, 266.0], [59.0, 266.0], [59.1, 266.0], [59.2, 266.0], [59.3, 266.0], [59.4, 266.0], [59.5, 266.0], [59.6, 266.0], [59.7, 266.0], [59.8, 266.0], [59.9, 266.0], [60.0, 266.0], [60.1, 266.0], [60.2, 266.0], [60.3, 266.0], [60.4, 266.0], [60.5, 266.0], [60.6, 267.0], [60.7, 267.0], [60.8, 267.0], [60.9, 267.0], [61.0, 267.0], [61.1, 267.0], [61.2, 267.0], [61.3, 267.0], [61.4, 267.0], [61.5, 267.0], [61.6, 267.0], [61.7, 267.0], [61.8, 267.0], [61.9, 268.0], [62.0, 268.0], [62.1, 268.0], [62.2, 268.0], [62.3, 268.0], [62.4, 268.0], [62.5, 268.0], [62.6, 268.0], [62.7, 268.0], [62.8, 268.0], [62.9, 268.0], [63.0, 268.0], [63.1, 268.0], [63.2, 268.0], [63.3, 268.0], [63.4, 268.0], [63.5, 268.0], [63.6, 268.0], [63.7, 268.0], [63.8, 268.0], [63.9, 268.0], [64.0, 269.0], [64.1, 269.0], [64.2, 269.0], [64.3, 269.0], [64.4, 269.0], [64.5, 269.0], [64.6, 269.0], [64.7, 269.0], [64.8, 269.0], [64.9, 269.0], [65.0, 269.0], [65.1, 269.0], [65.2, 269.0], [65.3, 269.0], [65.4, 269.0], [65.5, 269.0], [65.6, 269.0], [65.7, 269.0], [65.8, 269.0], [65.9, 269.0], [66.0, 270.0], [66.1, 270.0], [66.2, 270.0], [66.3, 270.0], [66.4, 270.0], [66.5, 270.0], [66.6, 270.0], [66.7, 270.0], [66.8, 270.0], [66.9, 270.0], [67.0, 270.0], [67.1, 270.0], [67.2, 270.0], [67.3, 270.0], [67.4, 270.0], [67.5, 270.0], [67.6, 270.0], [67.7, 270.0], [67.8, 271.0], [67.9, 271.0], [68.0, 271.0], [68.1, 271.0], [68.2, 271.0], [68.3, 271.0], [68.4, 271.0], [68.5, 271.0], [68.6, 271.0], [68.7, 271.0], [68.8, 271.0], [68.9, 271.0], [69.0, 271.0], [69.1, 271.0], [69.2, 271.0], [69.3, 271.0], [69.4, 271.0], [69.5, 272.0], [69.6, 272.0], [69.7, 272.0], [69.8, 272.0], [69.9, 272.0], [70.0, 272.0], [70.1, 272.0], [70.2, 272.0], [70.3, 272.0], [70.4, 272.0], [70.5, 273.0], [70.6, 273.0], [70.7, 273.0], [70.8, 273.0], [70.9, 273.0], [71.0, 273.0], [71.1, 273.0], [71.2, 273.0], [71.3, 273.0], [71.4, 273.0], [71.5, 273.0], [71.6, 273.0], [71.7, 273.0], [71.8, 273.0], [71.9, 273.0], [72.0, 273.0], [72.1, 273.0], [72.2, 273.0], [72.3, 273.0], [72.4, 274.0], [72.5, 274.0], [72.6, 274.0], [72.7, 274.0], [72.8, 274.0], [72.9, 274.0], [73.0, 274.0], [73.1, 274.0], [73.2, 274.0], [73.3, 274.0], [73.4, 274.0], [73.5, 275.0], [73.6, 275.0], [73.7, 275.0], [73.8, 275.0], [73.9, 275.0], [74.0, 275.0], [74.1, 275.0], [74.2, 275.0], [74.3, 275.0], [74.4, 276.0], [74.5, 276.0], [74.6, 276.0], [74.7, 276.0], [74.8, 276.0], [74.9, 276.0], [75.0, 276.0], [75.1, 276.0], [75.2, 276.0], [75.3, 276.0], [75.4, 276.0], [75.5, 276.0], [75.6, 276.0], [75.7, 276.0], [75.8, 276.0], [75.9, 276.0], [76.0, 276.0], [76.1, 276.0], [76.2, 276.0], [76.3, 276.0], [76.4, 276.0], [76.5, 276.0], [76.6, 277.0], [76.7, 277.0], [76.8, 277.0], [76.9, 277.0], [77.0, 277.0], [77.1, 277.0], [77.2, 277.0], [77.3, 277.0], [77.4, 277.0], [77.5, 277.0], [77.6, 277.0], [77.7, 278.0], [77.8, 278.0], [77.9, 278.0], [78.0, 278.0], [78.1, 278.0], [78.2, 278.0], [78.3, 278.0], [78.4, 278.0], [78.5, 278.0], [78.6, 278.0], [78.7, 279.0], [78.8, 279.0], [78.9, 279.0], [79.0, 279.0], [79.1, 279.0], [79.2, 279.0], [79.3, 279.0], [79.4, 279.0], [79.5, 279.0], [79.6, 280.0], [79.7, 280.0], [79.8, 280.0], [79.9, 280.0], [80.0, 280.0], [80.1, 280.0], [80.2, 280.0], [80.3, 281.0], [80.4, 281.0], [80.5, 281.0], [80.6, 281.0], [80.7, 282.0], [80.8, 283.0], [80.9, 283.0], [81.0, 283.0], [81.1, 283.0], [81.2, 283.0], [81.3, 283.0], [81.4, 283.0], [81.5, 284.0], [81.6, 284.0], [81.7, 284.0], [81.8, 284.0], [81.9, 284.0], [82.0, 284.0], [82.1, 284.0], [82.2, 284.0], [82.3, 284.0], [82.4, 285.0], [82.5, 285.0], [82.6, 285.0], [82.7, 285.0], [82.8, 285.0], [82.9, 285.0], [83.0, 285.0], [83.1, 286.0], [83.2, 286.0], [83.3, 286.0], [83.4, 286.0], [83.5, 287.0], [83.6, 287.0], [83.7, 287.0], [83.8, 288.0], [83.9, 288.0], [84.0, 288.0], [84.1, 289.0], [84.2, 289.0], [84.3, 289.0], [84.4, 289.0], [84.5, 290.0], [84.6, 290.0], [84.7, 290.0], [84.8, 291.0], [84.9, 291.0], [85.0, 292.0], [85.1, 292.0], [85.2, 292.0], [85.3, 293.0], [85.4, 293.0], [85.5, 293.0], [85.6, 293.0], [85.7, 295.0], [85.8, 295.0], [85.9, 295.0], [86.0, 295.0], [86.1, 295.0], [86.2, 296.0], [86.3, 296.0], [86.4, 296.0], [86.5, 296.0], [86.6, 296.0], [86.7, 297.0], [86.8, 297.0], [86.9, 297.0], [87.0, 297.0], [87.1, 297.0], [87.2, 297.0], [87.3, 297.0], [87.4, 297.0], [87.5, 297.0], [87.6, 298.0], [87.7, 299.0], [87.8, 299.0], [87.9, 299.0], [88.0, 301.0], [88.1, 301.0], [88.2, 301.0], [88.3, 302.0], [88.4, 303.0], [88.5, 303.0], [88.6, 303.0], [88.7, 304.0], [88.8, 304.0], [88.9, 304.0], [89.0, 304.0], [89.1, 304.0], [89.2, 304.0], [89.3, 305.0], [89.4, 305.0], [89.5, 306.0], [89.6, 306.0], [89.7, 306.0], [89.8, 307.0], [89.9, 307.0], [90.0, 308.0], [90.1, 309.0], [90.2, 309.0], [90.3, 309.0], [90.4, 310.0], [90.5, 312.0], [90.6, 312.0], [90.7, 314.0], [90.8, 314.0], [90.9, 315.0], [91.0, 315.0], [91.1, 316.0], [91.2, 316.0], [91.3, 316.0], [91.4, 318.0], [91.5, 319.0], [91.6, 320.0], [91.7, 320.0], [91.8, 320.0], [91.9, 321.0], [92.0, 321.0], [92.1, 324.0], [92.2, 325.0], [92.3, 325.0], [92.4, 325.0], [92.5, 326.0], [92.6, 327.0], [92.7, 327.0], [92.8, 327.0], [92.9, 327.0], [93.0, 330.0], [93.1, 330.0], [93.2, 331.0], [93.3, 331.0], [93.4, 331.0], [93.5, 334.0], [93.6, 335.0], [93.7, 339.0], [93.8, 339.0], [93.9, 340.0], [94.0, 342.0], [94.1, 342.0], [94.2, 343.0], [94.3, 343.0], [94.4, 345.0], [94.5, 345.0], [94.6, 345.0], [94.7, 346.0], [94.8, 346.0], [94.9, 346.0], [95.0, 346.0], [95.1, 348.0], [95.2, 348.0], [95.3, 348.0], [95.4, 350.0], [95.5, 350.0], [95.6, 351.0], [95.7, 352.0], [95.8, 353.0], [95.9, 353.0], [96.0, 354.0], [96.1, 358.0], [96.2, 358.0], [96.3, 380.0], [96.4, 383.0], [96.5, 387.0], [96.6, 387.0], [96.7, 415.0], [96.8, 664.0], [96.9, 664.0], [97.0, 678.0], [97.1, 680.0], [97.2, 749.0], [97.3, 749.0], [97.4, 756.0], [97.5, 1085.0], [97.6, 1085.0], [97.7, 8280.0], [97.8, 10045.0], [97.9, 10046.0], [98.0, 10046.0], [98.1, 10095.0], [98.2, 11388.0], [98.3, 11388.0], [98.4, 11647.0], [98.5, 11749.0], [98.6, 11925.0], [98.7, 11925.0], [98.8, 12064.0], [98.9, 13567.0], [99.0, 13567.0], [99.1, 15578.0], [99.2, 15838.0], [99.3, 19331.0], [99.4, 19331.0], [99.5, 24365.0], [99.6, 27451.0], [99.7, 27451.0], [99.8, 27706.0], [99.9, 35275.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 627.0, "series": [{"data": [[32900.0, 2.0], [34500.0, 1.0], [33300.0, 1.0], [35300.0, 2.0], [35700.0, 1.0], [36500.0, 1.0], [36100.0, 1.0], [34900.0, 1.0], [38500.0, 2.0], [36900.0, 1.0], [37700.0, 1.0], [41300.0, 1.0], [42900.0, 2.0], [42100.0, 3.0], [43700.0, 1.0], [44100.0, 1.0], [44500.0, 1.0], [46100.0, 1.0], [45700.0, 1.0], [45300.0, 1.0], [47300.0, 1.0], [50100.0, 1.0], [50900.0, 1.0], [49700.0, 1.0], [52500.0, 2.0], [51700.0, 2.0], [200.0, 5.0], [53300.0, 1.0], [54900.0, 1.0], [56100.0, 2.0], [58100.0, 1.0], [58500.0, 1.0], [58900.0, 2.0], [60500.0, 9.0], [60100.0, 1.0], [59700.0, 1.0], [300.0, 73.0], [80200.0, 1.0], [400.0, 38.0], [500.0, 2.0], [600.0, 1.0], [700.0, 1.0], [900.0, 1.0], [1100.0, 1.0], [1300.0, 2.0], [2100.0, 1.0], [2200.0, 1.0], [2900.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4200.0, 1.0], [4600.0, 5.0], [4400.0, 3.0], [4500.0, 3.0], [4800.0, 3.0], [4700.0, 2.0], [4900.0, 3.0], [5100.0, 2.0], [5000.0, 1.0], [5300.0, 11.0], [5200.0, 6.0], [5600.0, 7.0], [5500.0, 6.0], [5400.0, 10.0], [5700.0, 4.0], [5800.0, 1.0], [5900.0, 7.0], [6000.0, 2.0], [6100.0, 1.0], [6200.0, 5.0], [6300.0, 2.0], [6400.0, 2.0], [6600.0, 3.0], [6500.0, 1.0], [6800.0, 4.0], [6900.0, 2.0], [6700.0, 2.0], [7000.0, 4.0], [7100.0, 2.0], [7200.0, 3.0], [7300.0, 1.0], [7400.0, 2.0], [7600.0, 2.0], [7500.0, 1.0], [7900.0, 4.0], [7800.0, 1.0], [8700.0, 2.0], [8500.0, 3.0], [8600.0, 3.0], [8400.0, 3.0], [8300.0, 2.0], [8800.0, 3.0], [9100.0, 3.0], [8900.0, 1.0], [9000.0, 5.0], [9200.0, 4.0], [9700.0, 2.0], [9300.0, 3.0], [9500.0, 1.0], [9400.0, 2.0], [9600.0, 1.0], [10000.0, 2.0], [9900.0, 2.0], [10100.0, 1.0], [10200.0, 1.0], [10500.0, 2.0], [10400.0, 4.0], [10300.0, 1.0], [10800.0, 1.0], [10900.0, 1.0], [11200.0, 1.0], [11000.0, 2.0], [11700.0, 2.0], [11300.0, 1.0], [11600.0, 1.0], [11500.0, 2.0], [12000.0, 4.0], [11800.0, 3.0], [12100.0, 4.0], [11900.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12600.0, 1.0], [12500.0, 1.0], [13100.0, 4.0], [12900.0, 2.0], [13600.0, 1.0], [13400.0, 2.0], [13700.0, 1.0], [14100.0, 2.0], [14000.0, 2.0], [14300.0, 2.0], [14200.0, 2.0], [14400.0, 2.0], [14600.0, 2.0], [15000.0, 2.0], [15100.0, 1.0], [15700.0, 1.0], [15800.0, 1.0], [15900.0, 1.0], [16000.0, 1.0], [16400.0, 3.0], [17200.0, 1.0], [16800.0, 1.0], [18200.0, 2.0], [17600.0, 1.0], [17800.0, 2.0], [18400.0, 1.0], [19000.0, 1.0], [19200.0, 1.0], [20000.0, 2.0], [19600.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [21600.0, 3.0], [22200.0, 1.0], [23400.0, 3.0], [22600.0, 2.0], [23000.0, 2.0], [22800.0, 1.0], [24400.0, 1.0], [24000.0, 2.0], [23600.0, 4.0], [24200.0, 1.0], [23800.0, 1.0], [25400.0, 1.0], [25800.0, 1.0], [26600.0, 1.0], [27000.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [28600.0, 1.0], [29000.0, 2.0], [29800.0, 2.0], [30200.0, 1.0], [31200.0, 2.0], [30800.0, 1.0], [31400.0, 3.0], [31600.0, 1.0], [31000.0, 1.0], [31800.0, 1.0], [32000.0, 1.0], [34400.0, 1.0], [34800.0, 2.0], [33200.0, 1.0], [33600.0, 1.0], [35200.0, 2.0], [35600.0, 1.0], [36400.0, 2.0], [38800.0, 1.0], [37600.0, 1.0], [39600.0, 1.0], [40400.0, 1.0], [39200.0, 1.0], [40800.0, 1.0], [40000.0, 1.0], [41200.0, 2.0], [42000.0, 1.0], [41600.0, 1.0], [43200.0, 1.0], [44000.0, 3.0], [44400.0, 2.0], [44800.0, 2.0], [43600.0, 1.0], [45600.0, 1.0], [46800.0, 1.0], [46400.0, 1.0], [46000.0, 1.0], [47600.0, 1.0], [48400.0, 1.0], [52000.0, 1.0], [51600.0, 1.0], [51200.0, 1.0], [54800.0, 1.0], [55200.0, 1.0], [54000.0, 1.0], [56800.0, 1.0], [57600.0, 1.0], [60400.0, 15.0], [72000.0, 1.0], [33900.0, 1.0], [34700.0, 1.0], [33100.0, 2.0], [33500.0, 1.0], [35500.0, 2.0], [36300.0, 2.0], [35900.0, 2.0], [38700.0, 1.0], [37900.0, 1.0], [37100.0, 1.0], [38300.0, 1.0], [37500.0, 1.0], [41500.0, 2.0], [42700.0, 1.0], [42300.0, 1.0], [41100.0, 1.0], [41900.0, 1.0], [44700.0, 2.0], [43100.0, 2.0], [43900.0, 1.0], [45500.0, 1.0], [46300.0, 2.0], [45900.0, 1.0], [49100.0, 3.0], [48700.0, 1.0], [50300.0, 2.0], [50700.0, 1.0], [51100.0, 1.0], [52700.0, 1.0], [54300.0, 2.0], [56700.0, 1.0], [57100.0, 2.0], [55500.0, 1.0], [55900.0, 2.0], [56300.0, 2.0], [57500.0, 1.0], [59500.0, 1.0], [60300.0, 13.0], [60700.0, 1.0], [75700.0, 1.0], [77300.0, 1.0], [87700.0, 1.0], [16900.0, 1.0], [17300.0, 1.0], [18100.0, 2.0], [18700.0, 1.0], [19300.0, 2.0], [19100.0, 2.0], [18500.0, 1.0], [19500.0, 1.0], [19700.0, 3.0], [20100.0, 1.0], [20300.0, 1.0], [21300.0, 4.0], [20700.0, 3.0], [21100.0, 4.0], [21500.0, 2.0], [22500.0, 2.0], [22300.0, 1.0], [21700.0, 1.0], [21900.0, 1.0], [23100.0, 1.0], [22700.0, 2.0], [23300.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [24500.0, 2.0], [24300.0, 1.0], [25700.0, 2.0], [26300.0, 1.0], [26100.0, 1.0], [25900.0, 2.0], [26700.0, 2.0], [27900.0, 1.0], [28100.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [29100.0, 1.0], [30300.0, 2.0], [30100.0, 1.0], [31300.0, 1.0], [32700.0, 3.0], [32500.0, 1.0], [32100.0, 2.0], [32300.0, 2.0], [33800.0, 3.0], [34200.0, 1.0], [36600.0, 2.0], [35400.0, 1.0], [36200.0, 2.0], [37000.0, 1.0], [39000.0, 3.0], [40600.0, 1.0], [42600.0, 1.0], [43000.0, 1.0], [45000.0, 1.0], [44200.0, 2.0], [44600.0, 1.0], [47000.0, 1.0], [46200.0, 1.0], [45800.0, 1.0], [48200.0, 1.0], [47800.0, 2.0], [51000.0, 1.0], [52600.0, 1.0], [52200.0, 1.0], [55000.0, 1.0], [53800.0, 1.0], [53400.0, 1.0], [56600.0, 2.0], [56200.0, 1.0], [57800.0, 1.0], [58600.0, 1.0], [58200.0, 1.0], [59800.0, 2.0], [59400.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 112.0], [32900.0, 2.0], [34500.0, 2.0], [33300.0, 1.0], [36100.0, 4.0], [38500.0, 1.0], [36900.0, 1.0], [37300.0, 1.0], [40900.0, 1.0], [40100.0, 1.0], [39700.0, 1.0], [42900.0, 1.0], [41700.0, 1.0], [42100.0, 1.0], [41300.0, 1.0], [44100.0, 3.0], [44500.0, 1.0], [43700.0, 1.0], [45300.0, 1.0], [46500.0, 1.0], [45700.0, 1.0], [46100.0, 1.0], [47300.0, 1.0], [48100.0, 1.0], [50900.0, 1.0], [50500.0, 1.0], [51700.0, 1.0], [52100.0, 1.0], [52500.0, 1.0], [200.0, 1.0], [54500.0, 1.0], [53700.0, 1.0], [57300.0, 1.0], [56500.0, 1.0], [56900.0, 1.0], [60100.0, 31.0], [600.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2600.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [3700.0, 1.0], [4000.0, 2.0], [4200.0, 3.0], [4100.0, 4.0], [4300.0, 4.0], [4500.0, 3.0], [4400.0, 2.0], [4600.0, 1.0], [4700.0, 3.0], [4800.0, 3.0], [5000.0, 9.0], [5100.0, 10.0], [4900.0, 3.0], [5300.0, 7.0], [5200.0, 9.0], [5400.0, 5.0], [5600.0, 4.0], [5500.0, 2.0], [5700.0, 4.0], [5800.0, 2.0], [6100.0, 3.0], [5900.0, 4.0], [6000.0, 2.0], [6300.0, 3.0], [6200.0, 1.0], [6500.0, 2.0], [6600.0, 4.0], [6400.0, 1.0], [6800.0, 6.0], [6900.0, 3.0], [6700.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [7300.0, 1.0], [7200.0, 3.0], [7600.0, 4.0], [7500.0, 1.0], [8100.0, 2.0], [8000.0, 1.0], [8400.0, 4.0], [8500.0, 2.0], [8300.0, 3.0], [8700.0, 4.0], [8200.0, 3.0], [8600.0, 1.0], [9000.0, 4.0], [8800.0, 3.0], [8900.0, 5.0], [9200.0, 2.0], [9100.0, 1.0], [9500.0, 1.0], [9600.0, 1.0], [9400.0, 1.0], [9700.0, 2.0], [9300.0, 1.0], [9800.0, 1.0], [10100.0, 4.0], [9900.0, 2.0], [10000.0, 1.0], [10300.0, 2.0], [10600.0, 1.0], [10700.0, 3.0], [11000.0, 2.0], [11200.0, 1.0], [11700.0, 3.0], [11400.0, 2.0], [11500.0, 2.0], [11600.0, 2.0], [11300.0, 2.0], [12100.0, 1.0], [11800.0, 4.0], [11900.0, 2.0], [12200.0, 1.0], [12300.0, 1.0], [12600.0, 1.0], [12700.0, 1.0], [12800.0, 2.0], [12900.0, 2.0], [13100.0, 1.0], [13200.0, 1.0], [13800.0, 2.0], [13600.0, 1.0], [13400.0, 2.0], [13700.0, 1.0], [14100.0, 2.0], [14300.0, 2.0], [14000.0, 2.0], [13900.0, 2.0], [14800.0, 2.0], [14700.0, 1.0], [15700.0, 2.0], [15400.0, 1.0], [15500.0, 1.0], [16100.0, 2.0], [16200.0, 1.0], [17400.0, 1.0], [16600.0, 1.0], [18400.0, 2.0], [18000.0, 1.0], [18200.0, 1.0], [17600.0, 1.0], [19000.0, 1.0], [19200.0, 1.0], [19400.0, 3.0], [18800.0, 1.0], [20400.0, 2.0], [19800.0, 1.0], [20000.0, 1.0], [19600.0, 1.0], [20800.0, 2.0], [21000.0, 3.0], [21200.0, 2.0], [21400.0, 1.0], [22200.0, 1.0], [22400.0, 2.0], [21600.0, 1.0], [22000.0, 2.0], [23200.0, 1.0], [22800.0, 2.0], [23400.0, 1.0], [23000.0, 1.0], [23800.0, 1.0], [24000.0, 1.0], [24200.0, 1.0], [25400.0, 2.0], [26000.0, 1.0], [25800.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [26800.0, 1.0], [27600.0, 1.0], [28400.0, 1.0], [28600.0, 1.0], [27800.0, 1.0], [29600.0, 1.0], [30000.0, 2.0], [29800.0, 1.0], [31000.0, 3.0], [31200.0, 1.0], [31600.0, 1.0], [32600.0, 2.0], [32200.0, 1.0], [31800.0, 1.0], [32000.0, 1.0], [32400.0, 2.0], [34800.0, 1.0], [33600.0, 2.0], [34400.0, 1.0], [33200.0, 1.0], [35600.0, 2.0], [36000.0, 1.0], [35200.0, 1.0], [37600.0, 1.0], [38800.0, 1.0], [38000.0, 1.0], [37200.0, 1.0], [40400.0, 1.0], [40800.0, 1.0], [42800.0, 3.0], [41200.0, 2.0], [42400.0, 1.0], [44400.0, 3.0], [43600.0, 1.0], [44000.0, 1.0], [45200.0, 1.0], [46000.0, 1.0], [48800.0, 3.0], [48400.0, 1.0], [50000.0, 1.0], [50400.0, 1.0], [52400.0, 1.0], [52000.0, 1.0], [54000.0, 1.0], [55200.0, 1.0], [56400.0, 1.0], [56800.0, 1.0], [56000.0, 3.0], [55600.0, 2.0], [57200.0, 1.0], [59200.0, 2.0], [58000.0, 1.0], [33500.0, 1.0], [36300.0, 2.0], [35100.0, 2.0], [35900.0, 2.0], [36700.0, 1.0], [38700.0, 2.0], [37500.0, 1.0], [42700.0, 2.0], [41900.0, 1.0], [42300.0, 1.0], [44700.0, 1.0], [43900.0, 2.0], [46700.0, 1.0], [45500.0, 2.0], [45900.0, 1.0], [45100.0, 1.0], [47900.0, 1.0], [47500.0, 2.0], [50700.0, 1.0], [49900.0, 1.0], [52300.0, 1.0], [53100.0, 1.0], [54700.0, 1.0], [53900.0, 1.0], [53500.0, 1.0], [56300.0, 2.0], [57500.0, 1.0], [58300.0, 2.0], [57900.0, 1.0], [59500.0, 3.0], [17300.0, 1.0], [16900.0, 1.0], [16700.0, 1.0], [17100.0, 1.0], [17900.0, 3.0], [17500.0, 3.0], [17700.0, 2.0], [18900.0, 2.0], [18700.0, 2.0], [19700.0, 2.0], [19900.0, 1.0], [19500.0, 1.0], [20100.0, 1.0], [20700.0, 1.0], [21100.0, 1.0], [20500.0, 1.0], [20900.0, 1.0], [21300.0, 5.0], [22300.0, 3.0], [22100.0, 1.0], [22500.0, 1.0], [21900.0, 1.0], [23100.0, 2.0], [22700.0, 1.0], [23300.0, 3.0], [23500.0, 1.0], [24100.0, 1.0], [23700.0, 3.0], [23900.0, 1.0], [24300.0, 1.0], [25100.0, 1.0], [25500.0, 1.0], [26300.0, 1.0], [26500.0, 1.0], [27700.0, 1.0], [27900.0, 1.0], [28300.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [30100.0, 1.0], [30500.0, 1.0], [31300.0, 1.0], [31100.0, 1.0], [32500.0, 2.0], [32100.0, 1.0], [33400.0, 1.0], [34200.0, 2.0], [33000.0, 1.0], [34600.0, 1.0], [35000.0, 3.0], [35400.0, 2.0], [36600.0, 1.0], [36200.0, 1.0], [38200.0, 2.0], [38600.0, 1.0], [39400.0, 1.0], [39000.0, 1.0], [40600.0, 1.0], [41000.0, 2.0], [42600.0, 1.0], [41800.0, 2.0], [43800.0, 2.0], [43400.0, 1.0], [44600.0, 1.0], [45800.0, 1.0], [46200.0, 1.0], [47000.0, 1.0], [49800.0, 1.0], [50600.0, 1.0], [49400.0, 1.0], [52200.0, 1.0], [51400.0, 3.0], [53000.0, 1.0], [54600.0, 1.0], [55000.0, 1.0], [55800.0, 2.0], [57800.0, 1.0], [58600.0, 2.0], [60200.0, 10.0], [59800.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[8200.0, 1.0], [35200.0, 1.0], [600.0, 3.0], [10000.0, 3.0], [700.0, 2.0], [11600.0, 1.0], [11700.0, 1.0], [11300.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [200.0, 627.0], [13500.0, 1.0], [15800.0, 1.0], [15500.0, 1.0], [1000.0, 1.0], [300.0, 62.0], [19300.0, 1.0], [24300.0, 1.0], [400.0, 1.0], [27400.0, 1.0], [27700.0, 1.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 87700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 565.0, "series": [{"data": [[0.0, 565.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 552.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 296.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68545292E12, "maxY": 25.0, "series": [{"data": [[1.68545364E12, 22.559440559440556], [1.68545334E12, 15.0], [1.68545394E12, 18.06666666666667], [1.68545328E12, 11.978260869565215], [1.68545424E12, 1.0], [1.68545298E12, 5.0], [1.68545406E12, 10.007936507936508], [1.6854534E12, 15.0], [1.6854531E12, 7.897435897435899], [1.68545304E12, 5.0], [1.685454E12, 14.388489208633093], [1.6854537E12, 25.0], [1.68545382E12, 23.30075187969925], [1.68545316E12, 10.0], [1.68545412E12, 7.639175257731961], [1.68545376E12, 25.0], [1.68545346E12, 17.10810810810811], [1.68545292E12, 2.8695652173913047], [1.68545388E12, 20.0], [1.68545358E12, 20.0], [1.68545418E12, 4.772151898734177], [1.68545352E12, 20.0], [1.68545322E12, 10.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545424E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 252.0, "minX": 1.0, "maxY": 33257.799999999996, "series": [{"data": [[2.0, 7359.333333333333], [3.0, 8725.0], [4.0, 8167.8], [5.0, 13209.677419354832], [6.0, 14151.6], [7.0, 20001.75], [8.0, 16545.666666666668], [9.0, 18155.333333333336], [10.0, 18848.253012048182], [11.0, 33257.799999999996], [12.0, 30341.0], [13.0, 33186.0], [14.0, 9940.0], [15.0, 20166.159420289867], [1.0, 5288.5], [16.0, 30388.285714285717], [17.0, 27468.470588235294], [18.0, 27377.136363636364], [19.0, 21757.333333333332], [20.0, 24662.89130434782], [21.0, 26916.666666666668], [22.0, 25990.266666666666], [23.0, 15520.777777777781], [24.0, 23061.250000000004], [25.0, 28520.395348837217]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.59971910112356, 22415.970505617974]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 7102.666666666667], [3.0, 8460.0], [4.0, 9880.0], [5.0, 13153.377049180326], [6.0, 13892.6], [7.0, 19739.5], [8.0, 24391.5], [9.0, 21454.6], [10.0, 18800.841463414625], [11.0, 32979.06666666666], [12.0, 30076.0], [13.0, 32925.5], [14.0, 9673.714285714286], [15.0, 19892.71739130436], [1.0, 4986.5], [16.0, 30120.14285714286], [17.0, 27205.17647058823], [18.0, 27112.454545454544], [19.0, 21493.88888888889], [20.0, 23394.427536231877], [21.0, 25015.249999999996], [22.0, 20295.733333333334], [23.0, 15250.666666666666], [24.0, 25996.428571428572], [25.0, 28472.578125000004]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.643971631205652, 22026.329078014176]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 261.3333333333333], [3.0, 276.0], [4.0, 281.2], [5.0, 266.6031746031746], [6.0, 285.5], [7.0, 282.25], [8.0, 268.0], [9.0, 279.0], [10.0, 274.7469879518072], [11.0, 271.00000000000006], [12.0, 309.5], [13.0, 252.0], [14.0, 271.85714285714283], [15.0, 271.8357142857143], [1.0, 303.5], [16.0, 278.0], [17.0, 266.64705882352945], [18.0, 269.95454545454544], [19.0, 271.55555555555554], [20.0, 268.1870503597119], [21.0, 290.1666666666667], [22.0, 296.57142857142867], [23.0, 5901.038461538461], [24.0, 1519.8999999999999], [25.0, 1222.7750000000003]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.57643758765779, 654.8162692847123]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 37.1, "minX": 1.68545292E12, "maxY": 8041.833333333333, "series": [{"data": [[1.68545364E12, 2022.6833333333334], [1.68545334E12, 2251.0833333333335], [1.68545394E12, 2518.133333333333], [1.68545328E12, 933.2166666666667], [1.68545424E12, 37.1], [1.68545298E12, 807.2166666666667], [1.68545406E12, 3045.8166666666666], [1.6854534E12, 1887.6666666666667], [1.6854531E12, 988.6333333333333], [1.68545304E12, 1100.75], [1.685454E12, 3377.266666666667], [1.6854537E12, 2635.0833333333335], [1.68545382E12, 2980.2833333333333], [1.68545316E12, 953.9833333333333], [1.68545412E12, 2275.7], [1.68545376E12, 2581.35], [1.68545346E12, 2749.8333333333335], [1.68545292E12, 621.7166666666667], [1.68545388E12, 3049.0], [1.68545358E12, 2127.3], [1.68545418E12, 1908.7833333333333], [1.68545352E12, 2716.0], [1.68545322E12, 880.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68545364E12, 5883.383333333333], [1.68545334E12, 7947.733333333334], [1.68545394E12, 6809.083333333333], [1.68545328E12, 1595.0333333333333], [1.68545424E12, 85.63333333333334], [1.68545298E12, 1575.0333333333333], [1.68545406E12, 5939.316666666667], [1.6854534E12, 5231.633333333333], [1.6854531E12, 1161.4833333333333], [1.68545304E12, 2009.2166666666667], [1.685454E12, 6454.1], [1.6854537E12, 7491.5], [1.68545382E12, 6631.7], [1.68545316E12, 2019.7333333333333], [1.68545412E12, 4540.683333333333], [1.68545376E12, 6772.85], [1.68545346E12, 4769.95], [1.68545292E12, 787.0833333333334], [1.68545388E12, 8041.833333333333], [1.68545358E12, 3396.983333333333], [1.68545418E12, 4832.616666666667], [1.68545352E12, 6131.283333333334], [1.68545322E12, 1937.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545424E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 259.8, "minX": 1.68545292E12, "maxY": 36897.583333333336, "series": [{"data": [[1.68545364E12, 24483.64], [1.68545334E12, 13896.09090909091], [1.68545394E12, 22815.70731707317], [1.68545328E12, 29564.066666666666], [1.68545298E12, 18782.5], [1.68545406E12, 11322.046511627907], [1.6854534E12, 26494.777777777777], [1.6854531E12, 26334.333333333332], [1.68545304E12, 20765.833333333332], [1.685454E12, 20302.72340425532], [1.6854537E12, 25561.519230769238], [1.68545382E12, 26957.897959183672], [1.68545316E12, 36897.583333333336], [1.68545412E12, 8913.685714285713], [1.68545376E12, 28678.18181818182], [1.68545346E12, 27023.083333333325], [1.68545292E12, 9238.166666666668], [1.68545388E12, 21383.352941176465], [1.68545358E12, 35355.46428571427], [1.68545418E12, 7627.185185185184], [1.68545352E12, 27140.65714285714], [1.68545322E12, 36533.91666666666]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545364E12, 23407.386363636368], [1.68545334E12, 13153.43859649123], [1.68545394E12, 23359.95238095238], [1.68545328E12, 33765.92307692308], [1.68545424E12, 5691.0], [1.68545298E12, 18028.0], [1.68545406E12, 11454.714285714286], [1.6854534E12, 27087.382352941175], [1.6854531E12, 25126.0], [1.68545304E12, 20444.2], [1.685454E12, 20424.250000000004], [1.6854537E12, 26244.381818181824], [1.68545382E12, 27193.395348837206], [1.68545316E12, 36596.0], [1.68545412E12, 8779.09375], [1.68545376E12, 27017.652173913048], [1.68545346E12, 26826.000000000004], [1.68545292E12, 8960.333333333334], [1.68545388E12, 17614.94230769231], [1.68545358E12, 35079.42857142857], [1.68545418E12, 8684.814814814814], [1.68545352E12, 25970.157894736847], [1.68545322E12, 36238.166666666664]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545364E12, 263.265306122449], [1.68545334E12, 268.92982456140356], [1.68545394E12, 265.4054054054054], [1.68545328E12, 274.7222222222223], [1.68545298E12, 268.54545454545456], [1.68545406E12, 268.9268292682927], [1.6854534E12, 290.02941176470586], [1.6854531E12, 279.87499999999994], [1.68545304E12, 271.4666666666667], [1.685454E12, 262.0454545454546], [1.6854537E12, 269.9230769230769], [1.68545382E12, 6966.146341463415], [1.68545316E12, 295.38461538461536], [1.68545412E12, 265.66666666666674], [1.68545376E12, 262.2040816326531], [1.68545346E12, 274.17499999999995], [1.68545292E12, 283.9090909090909], [1.68545388E12, 260.48076923076917], [1.68545358E12, 275.2], [1.68545418E12, 259.8], [1.68545352E12, 272.88888888888886], [1.68545322E12, 287.75]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545424E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 259.72, "minX": 1.68545292E12, "maxY": 36895.91666666666, "series": [{"data": [[1.68545364E12, 24483.12], [1.68545334E12, 13895.400000000005], [1.68545394E12, 22814.73170731707], [1.68545328E12, 29563.6], [1.68545298E12, 18781.857142857145], [1.68545406E12, 11321.604651162792], [1.6854534E12, 26494.33333333333], [1.6854531E12, 26333.333333333336], [1.68545304E12, 20764.166666666664], [1.685454E12, 20302.021276595748], [1.6854537E12, 25560.749999999993], [1.68545382E12, 26957.448979591834], [1.68545316E12, 36895.91666666666], [1.68545412E12, 8913.285714285712], [1.68545376E12, 28677.5], [1.68545346E12, 27022.38888888889], [1.68545292E12, 9235.333333333332], [1.68545388E12, 21383.078431372545], [1.68545358E12, 35354.28571428572], [1.68545418E12, 7626.666666666665], [1.68545352E12, 27138.800000000007], [1.68545322E12, 36532.83333333333]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545364E12, 23407.249999999996], [1.68545334E12, 13153.315789473683], [1.68545394E12, 23359.190476190477], [1.68545328E12, 33765.692307692305], [1.68545424E12, 5691.0], [1.68545298E12, 18027.727272727272], [1.68545406E12, 11454.404761904763], [1.6854534E12, 27087.264705882353], [1.6854531E12, 25125.636363636364], [1.68545304E12, 20443.6], [1.685454E12, 20424.04166666667], [1.6854537E12, 26244.254545454547], [1.68545382E12, 27193.232558139538], [1.68545316E12, 36595.61538461538], [1.68545412E12, 8778.8125], [1.68545376E12, 27017.47826086957], [1.68545346E12, 26825.714285714286], [1.68545292E12, 8959.5], [1.68545388E12, 17614.826923076922], [1.68545358E12, 35079.10714285714], [1.68545418E12, 8684.444444444442], [1.68545352E12, 25968.868421052633], [1.68545322E12, 36237.416666666664]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545364E12, 263.00000000000006], [1.68545334E12, 268.3684210526317], [1.68545394E12, 264.945945945946], [1.68545328E12, 274.4444444444444], [1.68545298E12, 268.3636363636364], [1.68545406E12, 268.8048780487805], [1.6854534E12, 289.82352941176475], [1.6854531E12, 279.31250000000006], [1.68545304E12, 270.4666666666667], [1.685454E12, 261.75], [1.6854537E12, 269.2692307692308], [1.68545382E12, 6965.90243902439], [1.68545316E12, 294.07692307692304], [1.68545412E12, 265.4999999999999], [1.68545376E12, 261.89795918367344], [1.68545346E12, 273.675], [1.68545292E12, 282.7272727272727], [1.68545388E12, 260.2307692307692], [1.68545358E12, 274.0], [1.68545418E12, 259.72], [1.68545352E12, 272.4722222222222], [1.68545322E12, 287.41666666666674]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545424E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545292E12, "maxY": 6710.195121951219, "series": [{"data": [[1.68545364E12, 128.26], [1.68545334E12, 128.45454545454547], [1.68545394E12, 129.46341463414635], [1.68545328E12, 133.26666666666665], [1.68545298E12, 131.5], [1.68545406E12, 128.18604651162795], [1.6854534E12, 130.91666666666666], [1.6854531E12, 129.91666666666666], [1.68545304E12, 141.41666666666669], [1.685454E12, 127.12765957446808], [1.6854537E12, 129.673076923077], [1.68545382E12, 2861.6938775510203], [1.68545316E12, 128.5], [1.68545412E12, 127.25714285714284], [1.68545376E12, 127.93181818181819], [1.68545346E12, 128.44444444444446], [1.68545292E12, 138.0], [1.68545388E12, 2108.9803921568628], [1.68545358E12, 128.92857142857142], [1.68545418E12, 129.4444444444444], [1.68545352E12, 129.28571428571428], [1.68545322E12, 131.91666666666666]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545364E12, 0.0], [1.68545334E12, 0.0], [1.68545394E12, 0.0], [1.68545328E12, 0.0], [1.68545424E12, 0.0], [1.68545298E12, 0.0], [1.68545406E12, 0.0], [1.6854534E12, 0.0], [1.6854531E12, 0.0], [1.68545304E12, 0.0], [1.685454E12, 0.0], [1.6854537E12, 0.0], [1.68545382E12, 0.0], [1.68545316E12, 0.0], [1.68545412E12, 0.0], [1.68545376E12, 0.0], [1.68545346E12, 0.0], [1.68545292E12, 0.0], [1.68545388E12, 0.0], [1.68545358E12, 0.0], [1.68545418E12, 0.0], [1.68545352E12, 0.0], [1.68545322E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545364E12, 127.69387755102039], [1.68545334E12, 128.71929824561406], [1.68545394E12, 129.0540540540541], [1.68545328E12, 132.33333333333331], [1.68545298E12, 130.0], [1.68545406E12, 128.26829268292684], [1.6854534E12, 130.20588235294122], [1.6854531E12, 129.0625], [1.68545304E12, 139.26666666666668], [1.685454E12, 127.43181818181816], [1.6854537E12, 130.2115384615385], [1.68545382E12, 6710.195121951219], [1.68545316E12, 129.23076923076925], [1.68545412E12, 127.16666666666666], [1.68545376E12, 128.9591836734694], [1.68545346E12, 130.025], [1.68545292E12, 135.72727272727272], [1.68545388E12, 129.0769230769231], [1.68545358E12, 129.40000000000003], [1.68545418E12, 129.59999999999997], [1.68545352E12, 127.52777777777779], [1.68545322E12, 131.25]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545424E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 248.0, "minX": 1.68545292E12, "maxY": 59890.0, "series": [{"data": [[1.68545364E12, 59277.0], [1.68545334E12, 57392.0], [1.68545394E12, 59587.0], [1.68545328E12, 46702.0], [1.68545424E12, 5691.0], [1.68545298E12, 24195.0], [1.68545406E12, 23747.0], [1.6854534E12, 57887.0], [1.6854531E12, 31014.0], [1.68545304E12, 22357.0], [1.685454E12, 56929.0], [1.6854537E12, 58337.0], [1.68545382E12, 54676.0], [1.68545316E12, 44465.0], [1.68545412E12, 14848.0], [1.68545376E12, 59890.0], [1.68545346E12, 46083.0], [1.68545292E12, 12886.0], [1.68545388E12, 58068.0], [1.68545358E12, 55280.0], [1.68545418E12, 17554.0], [1.68545352E12, 45587.0], [1.68545322E12, 44733.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68545364E12, 48846.09999999994], [1.68545334E12, 56336.4], [1.68545394E12, 54096.5], [1.68545328E12, 45664.6], [1.68545424E12, 5691.0], [1.68545298E12, 23572.1], [1.68545406E12, 16423.200000000004], [1.6854534E12, 56175.0], [1.6854531E12, 28205.6], [1.68545304E12, 21337.1], [1.685454E12, 41588.90000000001], [1.6854537E12, 50251.00000000001], [1.68545382E12, 38240.6], [1.68545316E12, 41527.3], [1.68545412E12, 11748.7], [1.68545376E12, 55722.299999999996], [1.68545346E12, 40504.600000000006], [1.68545292E12, 11986.8], [1.68545388E12, 11494.5], [1.68545358E12, 48465.2], [1.68545418E12, 13399.1], [1.68545352E12, 33323.0], [1.68545322E12, 43979.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68545364E12, 59277.0], [1.68545334E12, 57392.0], [1.68545394E12, 59587.0], [1.68545328E12, 46702.0], [1.68545424E12, 5691.0], [1.68545298E12, 24195.0], [1.68545406E12, 23747.0], [1.6854534E12, 57887.0], [1.6854531E12, 31014.0], [1.68545304E12, 22357.0], [1.685454E12, 56929.0], [1.6854537E12, 58337.0], [1.68545382E12, 54676.0], [1.68545316E12, 44465.0], [1.68545412E12, 14848.0], [1.68545376E12, 59890.0], [1.68545346E12, 46083.0], [1.68545292E12, 12886.0], [1.68545388E12, 58068.0], [1.68545358E12, 55280.0], [1.68545418E12, 17554.0], [1.68545352E12, 45587.0], [1.68545322E12, 44733.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68545364E12, 58260.94999999999], [1.68545334E12, 56582.6], [1.68545394E12, 58482.25], [1.68545328E12, 46530.2], [1.68545424E12, 5691.0], [1.68545298E12, 24125.1], [1.68545406E12, 20888.799999999996], [1.6854534E12, 57378.25], [1.6854531E12, 30651.6], [1.68545304E12, 22338.3], [1.685454E12, 49539.949999999975], [1.6854537E12, 55715.3], [1.68545382E12, 43856.4], [1.68545316E12, 43939.299999999996], [1.68545412E12, 13963.849999999993], [1.68545376E12, 59201.85], [1.68545346E12, 43105.4], [1.68545292E12, 12886.0], [1.68545388E12, 51029.75], [1.68545358E12, 50806.7], [1.68545418E12, 15122.749999999982], [1.68545352E12, 36962.5], [1.68545322E12, 44586.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68545364E12, 250.0], [1.68545334E12, 254.0], [1.68545394E12, 248.0], [1.68545328E12, 254.0], [1.68545424E12, 5691.0], [1.68545298E12, 249.0], [1.68545406E12, 248.0], [1.6854534E12, 251.0], [1.6854531E12, 251.0], [1.68545304E12, 251.0], [1.685454E12, 248.0], [1.6854537E12, 249.0], [1.68545382E12, 252.0], [1.68545316E12, 253.0], [1.68545412E12, 250.0], [1.68545376E12, 249.0], [1.68545346E12, 251.0], [1.68545292E12, 255.0], [1.68545388E12, 249.0], [1.68545358E12, 251.0], [1.68545418E12, 249.0], [1.68545352E12, 248.0], [1.68545322E12, 254.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68545364E12, 276.5], [1.68545334E12, 299.5], [1.68545394E12, 309.5], [1.68545328E12, 290.0], [1.68545424E12, 5691.0], [1.68545298E12, 4426.5], [1.68545406E12, 5145.0], [1.6854534E12, 7454.0], [1.6854531E12, 301.0], [1.68545304E12, 9540.0], [1.685454E12, 4462.5], [1.6854537E12, 25281.0], [1.68545382E12, 15708.0], [1.68545316E12, 14430.0], [1.68545412E12, 4906.0], [1.68545376E12, 273.5], [1.68545346E12, 334.0], [1.68545292E12, 304.0], [1.68545388E12, 268.0], [1.68545358E12, 321.5], [1.68545418E12, 4411.5], [1.68545352E12, 8654.0], [1.68545322E12, 9874.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545424E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 53421.0, "series": [{"data": [[2.0, 2069.0], [8.0, 5646.0], [9.0, 275.0], [10.0, 356.0], [3.0, 285.5], [12.0, 39414.5], [13.0, 53421.0], [1.0, 415.0], [4.0, 285.0], [17.0, 11647.0], [5.0, 365.5], [6.0, 7574.0], [7.0, 312.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 256.0], [2.0, 251.0], [4.0, 252.0], [8.0, 253.0], [9.0, 133.0], [5.0, 257.0], [10.0, 254.0], [3.0, 247.5], [6.0, 245.5], [13.0, 251.0], [7.0, 256.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 53421.0, "series": [{"data": [[2.0, 2059.5], [8.0, 5646.0], [9.0, 275.0], [10.0, 356.0], [3.0, 284.5], [12.0, 39414.0], [13.0, 53421.0], [1.0, 415.0], [4.0, 282.0], [17.0, 11646.0], [5.0, 364.0], [6.0, 7574.0], [7.0, 312.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 256.0], [2.0, 251.0], [4.0, 252.0], [8.0, 253.0], [9.0, 133.0], [5.0, 257.0], [10.0, 254.0], [3.0, 247.5], [6.0, 245.5], [13.0, 251.0], [7.0, 256.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.68545292E12, "maxY": 1.9333333333333333, "series": [{"data": [[1.68545364E12, 1.6], [1.68545334E12, 1.9333333333333333], [1.68545394E12, 1.25], [1.68545328E12, 0.5666666666666667], [1.68545298E12, 0.38333333333333336], [1.68545406E12, 1.3833333333333333], [1.6854534E12, 1.1166666666666667], [1.6854531E12, 0.5], [1.68545304E12, 0.5], [1.685454E12, 1.45], [1.6854537E12, 1.7666666666666666], [1.68545382E12, 1.3666666666666667], [1.68545316E12, 0.4666666666666667], [1.68545412E12, 0.9833333333333333], [1.68545376E12, 1.6], [1.68545346E12, 1.3333333333333333], [1.68545292E12, 0.35], [1.68545388E12, 1.7], [1.68545358E12, 0.95], [1.68545418E12, 0.8], [1.68545352E12, 1.2333333333333334], [1.68545322E12, 0.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545418E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545292E12, "maxY": 1.5333333333333334, "series": [{"data": [[1.68545364E12, 0.6666666666666666], [1.68545334E12, 0.6333333333333333], [1.68545394E12, 1.0666666666666667], [1.68545328E12, 0.38333333333333336], [1.68545424E12, 0.016666666666666666], [1.68545298E12, 0.36666666666666664], [1.68545406E12, 1.3833333333333333], [1.6854534E12, 0.7333333333333333], [1.6854531E12, 0.45], [1.68545304E12, 0.5], [1.685454E12, 1.5333333333333334], [1.6854537E12, 0.9333333333333333], [1.68545382E12, 1.3333333333333333], [1.68545316E12, 0.43333333333333335], [1.68545412E12, 1.0333333333333334], [1.68545376E12, 1.0], [1.68545346E12, 1.25], [1.68545292E12, 0.2833333333333333], [1.68545388E12, 1.2333333333333334], [1.68545358E12, 0.9666666666666667], [1.68545418E12, 0.8666666666666667], [1.68545352E12, 1.2333333333333334], [1.68545322E12, 0.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68545364E12, 0.18333333333333332], [1.68545376E12, 0.06666666666666667], [1.68545388E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68545382E12, 0.03333333333333333], [1.68545364E12, 0.5], [1.68545334E12, 1.2666666666666666], [1.68545394E12, 0.13333333333333333], [1.68545328E12, 0.13333333333333333], [1.68545376E12, 0.36666666666666664], [1.6854534E12, 0.4], [1.68545388E12, 0.35], [1.6854537E12, 0.8]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68545382E12, 0.03333333333333333], [1.68545364E12, 0.2], [1.68545394E12, 0.11666666666666667], [1.68545376E12, 0.15], [1.68545388E12, 0.13333333333333333], [1.6854537E12, 0.05]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545424E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545292E12, "maxY": 0.8, "series": [{"data": [[1.68545364E12, 0.5], [1.68545334E12, 0.38333333333333336], [1.68545394E12, 0.5666666666666667], [1.68545328E12, 0.21666666666666667], [1.68545298E12, 0.18333333333333332], [1.68545406E12, 0.6833333333333333], [1.6854534E12, 0.3333333333333333], [1.6854531E12, 0.26666666666666666], [1.68545304E12, 0.25], [1.685454E12, 0.7333333333333333], [1.6854537E12, 0.4166666666666667], [1.68545382E12, 0.6833333333333333], [1.68545316E12, 0.21666666666666667], [1.68545412E12, 0.5], [1.68545376E12, 0.5833333333333334], [1.68545346E12, 0.6666666666666666], [1.68545292E12, 0.18333333333333332], [1.68545388E12, 0.7], [1.68545358E12, 0.5], [1.68545418E12, 0.4166666666666667], [1.68545352E12, 0.6], [1.68545322E12, 0.2]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68545364E12, 0.31666666666666665], [1.68545334E12, 0.5666666666666667], [1.68545394E12, 0.05], [1.68545328E12, 0.08333333333333333], [1.68545376E12, 0.23333333333333334], [1.6854534E12, 0.23333333333333334], [1.68545388E12, 0.16666666666666666], [1.6854537E12, 0.45]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68545382E12, 0.06666666666666667], [1.68545364E12, 0.5666666666666667], [1.68545334E12, 0.7], [1.68545394E12, 0.2], [1.68545328E12, 0.05], [1.68545376E12, 0.35], [1.6854534E12, 0.16666666666666666], [1.68545388E12, 0.3333333333333333], [1.6854537E12, 0.4]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68545364E12, 0.16666666666666666], [1.68545334E12, 0.2], [1.68545394E12, 0.4166666666666667], [1.68545328E12, 0.16666666666666666], [1.68545298E12, 0.23333333333333334], [1.68545406E12, 0.7166666666666667], [1.6854534E12, 0.23333333333333334], [1.6854531E12, 0.2], [1.68545304E12, 0.2], [1.685454E12, 0.7666666666666667], [1.6854537E12, 0.21666666666666667], [1.68545382E12, 0.75], [1.68545316E12, 0.2], [1.68545412E12, 0.5833333333333334], [1.68545376E12, 0.23333333333333334], [1.68545346E12, 0.5333333333333333], [1.68545292E12, 0.1], [1.68545388E12, 0.38333333333333336], [1.68545358E12, 0.4666666666666667], [1.68545418E12, 0.45], [1.68545352E12, 0.5833333333333334], [1.68545322E12, 0.2]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545382E12, 0.06666666666666667], [1.68545364E12, 0.6666666666666666], [1.68545334E12, 0.7166666666666667], [1.68545394E12, 0.26666666666666666], [1.68545328E12, 0.08333333333333333], [1.68545376E12, 0.5], [1.68545346E12, 0.06666666666666667], [1.6854534E12, 0.36666666666666664], [1.68545388E12, 0.4666666666666667], [1.685454E12, 0.016666666666666666], [1.6854537E12, 0.65]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68545364E12, 0.16666666666666666], [1.68545334E12, 0.25], [1.68545394E12, 0.5], [1.68545328E12, 0.16666666666666666], [1.68545424E12, 0.016666666666666666], [1.68545298E12, 0.18333333333333332], [1.68545406E12, 0.7], [1.6854534E12, 0.4], [1.6854531E12, 0.18333333333333332], [1.68545304E12, 0.25], [1.685454E12, 0.8], [1.6854537E12, 0.5166666666666667], [1.68545382E12, 0.65], [1.68545316E12, 0.21666666666666667], [1.68545412E12, 0.5333333333333333], [1.68545376E12, 0.4166666666666667], [1.68545346E12, 0.5833333333333334], [1.68545292E12, 0.1], [1.68545388E12, 0.5333333333333333], [1.68545358E12, 0.4666666666666667], [1.68545418E12, 0.45], [1.68545352E12, 0.6333333333333333], [1.68545322E12, 0.2]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545424E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545292E12, "maxY": 2.3, "series": [{"data": [[1.68545364E12, 0.8333333333333334], [1.68545334E12, 0.8333333333333334], [1.68545394E12, 1.4833333333333334], [1.68545328E12, 0.55], [1.68545424E12, 0.016666666666666666], [1.68545298E12, 0.6], [1.68545406E12, 2.1], [1.6854534E12, 0.9666666666666667], [1.6854531E12, 0.65], [1.68545304E12, 0.7], [1.685454E12, 2.3], [1.6854537E12, 1.15], [1.68545382E12, 2.0833333333333335], [1.68545316E12, 0.6333333333333333], [1.68545412E12, 1.6166666666666667], [1.68545376E12, 1.2333333333333334], [1.68545346E12, 1.7833333333333334], [1.68545292E12, 0.38333333333333336], [1.68545388E12, 1.6166666666666667], [1.68545358E12, 1.4333333333333333], [1.68545418E12, 1.3166666666666667], [1.68545352E12, 1.8166666666666667], [1.68545322E12, 0.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545382E12, 0.13333333333333333], [1.68545364E12, 1.55], [1.68545334E12, 1.9833333333333334], [1.68545394E12, 0.5166666666666667], [1.68545328E12, 0.21666666666666667], [1.68545376E12, 1.0833333333333333], [1.68545346E12, 0.06666666666666667], [1.6854534E12, 0.7666666666666667], [1.68545388E12, 0.9666666666666667], [1.685454E12, 0.016666666666666666], [1.6854537E12, 1.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545424E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

