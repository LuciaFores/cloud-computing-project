/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 123.0, "minX": 0.0, "maxY": 60539.0, "series": [{"data": [[0.0, 249.0], [0.1, 249.0], [0.2, 260.0], [0.3, 261.0], [0.4, 273.0], [0.5, 278.0], [0.6, 279.0], [0.7, 279.0], [0.8, 369.0], [0.9, 369.0], [1.0, 372.0], [1.1, 372.0], [1.2, 372.0], [1.3, 372.0], [1.4, 373.0], [1.5, 374.0], [1.6, 374.0], [1.7, 374.0], [1.8, 375.0], [1.9, 375.0], [2.0, 375.0], [2.1, 375.0], [2.2, 375.0], [2.3, 376.0], [2.4, 376.0], [2.5, 376.0], [2.6, 376.0], [2.7, 376.0], [2.8, 376.0], [2.9, 376.0], [3.0, 377.0], [3.1, 377.0], [3.2, 378.0], [3.3, 378.0], [3.4, 378.0], [3.5, 378.0], [3.6, 379.0], [3.7, 379.0], [3.8, 379.0], [3.9, 379.0], [4.0, 379.0], [4.1, 380.0], [4.2, 380.0], [4.3, 380.0], [4.4, 380.0], [4.5, 381.0], [4.6, 382.0], [4.7, 382.0], [4.8, 383.0], [4.9, 383.0], [5.0, 383.0], [5.1, 383.0], [5.2, 383.0], [5.3, 384.0], [5.4, 384.0], [5.5, 384.0], [5.6, 384.0], [5.7, 385.0], [5.8, 385.0], [5.9, 385.0], [6.0, 385.0], [6.1, 386.0], [6.2, 386.0], [6.3, 386.0], [6.4, 386.0], [6.5, 386.0], [6.6, 387.0], [6.7, 387.0], [6.8, 387.0], [6.9, 387.0], [7.0, 388.0], [7.1, 388.0], [7.2, 388.0], [7.3, 389.0], [7.4, 389.0], [7.5, 389.0], [7.6, 390.0], [7.7, 391.0], [7.8, 391.0], [7.9, 391.0], [8.0, 391.0], [8.1, 392.0], [8.2, 392.0], [8.3, 392.0], [8.4, 392.0], [8.5, 392.0], [8.6, 392.0], [8.7, 392.0], [8.8, 392.0], [8.9, 393.0], [9.0, 393.0], [9.1, 394.0], [9.2, 394.0], [9.3, 394.0], [9.4, 394.0], [9.5, 394.0], [9.6, 394.0], [9.7, 394.0], [9.8, 394.0], [9.9, 394.0], [10.0, 395.0], [10.1, 395.0], [10.2, 395.0], [10.3, 395.0], [10.4, 396.0], [10.5, 396.0], [10.6, 396.0], [10.7, 396.0], [10.8, 396.0], [10.9, 396.0], [11.0, 396.0], [11.1, 396.0], [11.2, 397.0], [11.3, 398.0], [11.4, 398.0], [11.5, 399.0], [11.6, 399.0], [11.7, 399.0], [11.8, 399.0], [11.9, 400.0], [12.0, 400.0], [12.1, 401.0], [12.2, 402.0], [12.3, 402.0], [12.4, 402.0], [12.5, 403.0], [12.6, 403.0], [12.7, 403.0], [12.8, 403.0], [12.9, 403.0], [13.0, 403.0], [13.1, 406.0], [13.2, 406.0], [13.3, 406.0], [13.4, 406.0], [13.5, 406.0], [13.6, 407.0], [13.7, 407.0], [13.8, 408.0], [13.9, 408.0], [14.0, 408.0], [14.1, 409.0], [14.2, 409.0], [14.3, 409.0], [14.4, 411.0], [14.5, 413.0], [14.6, 413.0], [14.7, 417.0], [14.8, 417.0], [14.9, 418.0], [15.0, 424.0], [15.1, 426.0], [15.2, 430.0], [15.3, 434.0], [15.4, 434.0], [15.5, 434.0], [15.6, 443.0], [15.7, 443.0], [15.8, 446.0], [15.9, 449.0], [16.0, 449.0], [16.1, 453.0], [16.2, 456.0], [16.3, 459.0], [16.4, 475.0], [16.5, 508.0], [16.6, 508.0], [16.7, 570.0], [16.8, 584.0], [16.9, 660.0], [17.0, 2609.0], [17.1, 3960.0], [17.2, 3960.0], [17.3, 4038.0], [17.4, 4049.0], [17.5, 4051.0], [17.6, 4083.0], [17.7, 4129.0], [17.8, 4129.0], [17.9, 4424.0], [18.0, 4429.0], [18.1, 4431.0], [18.2, 4433.0], [18.3, 4457.0], [18.4, 4600.0], [18.5, 4600.0], [18.6, 4638.0], [18.7, 4664.0], [18.8, 4679.0], [18.9, 4693.0], [19.0, 4699.0], [19.1, 4699.0], [19.2, 4703.0], [19.3, 4805.0], [19.4, 4874.0], [19.5, 4877.0], [19.6, 4921.0], [19.7, 4921.0], [19.8, 4936.0], [19.9, 4937.0], [20.0, 4940.0], [20.1, 4943.0], [20.2, 4958.0], [20.3, 4958.0], [20.4, 5071.0], [20.5, 5182.0], [20.6, 5190.0], [20.7, 5246.0], [20.8, 5344.0], [20.9, 5344.0], [21.0, 5351.0], [21.1, 5388.0], [21.2, 5390.0], [21.3, 5402.0], [21.4, 5412.0], [21.5, 5412.0], [21.6, 5413.0], [21.7, 5431.0], [21.8, 5433.0], [21.9, 5439.0], [22.0, 5468.0], [22.1, 5468.0], [22.2, 5470.0], [22.3, 5472.0], [22.4, 5474.0], [22.5, 5478.0], [22.6, 5500.0], [22.7, 5500.0], [22.8, 5510.0], [22.9, 5512.0], [23.0, 5514.0], [23.1, 5526.0], [23.2, 5536.0], [23.3, 5546.0], [23.4, 5546.0], [23.5, 5546.0], [23.6, 5583.0], [23.7, 5590.0], [23.8, 5619.0], [23.9, 5661.0], [24.0, 5661.0], [24.1, 5674.0], [24.2, 5681.0], [24.3, 5686.0], [24.4, 5763.0], [24.5, 5772.0], [24.6, 5772.0], [24.7, 5804.0], [24.8, 5838.0], [24.9, 5874.0], [25.0, 5893.0], [25.1, 5982.0], [25.2, 5982.0], [25.3, 5990.0], [25.4, 6000.0], [25.5, 6029.0], [25.6, 6076.0], [25.7, 6079.0], [25.8, 6079.0], [25.9, 6086.0], [26.0, 6100.0], [26.1, 6146.0], [26.2, 6181.0], [26.3, 6185.0], [26.4, 6185.0], [26.5, 6261.0], [26.6, 6296.0], [26.7, 6317.0], [26.8, 6366.0], [26.9, 6379.0], [27.0, 6379.0], [27.1, 6384.0], [27.2, 6405.0], [27.3, 6448.0], [27.4, 6497.0], [27.5, 6498.0], [27.6, 6527.0], [27.7, 6527.0], [27.8, 6557.0], [27.9, 6581.0], [28.0, 6657.0], [28.1, 6713.0], [28.2, 6719.0], [28.3, 6719.0], [28.4, 6756.0], [28.5, 6760.0], [28.6, 6774.0], [28.7, 6814.0], [28.8, 6820.0], [28.9, 6820.0], [29.0, 6899.0], [29.1, 6901.0], [29.2, 6908.0], [29.3, 6924.0], [29.4, 6929.0], [29.5, 6929.0], [29.6, 7118.0], [29.7, 7204.0], [29.8, 7280.0], [29.9, 7291.0], [30.0, 7453.0], [30.1, 7453.0], [30.2, 7459.0], [30.3, 7511.0], [30.4, 7528.0], [30.5, 7540.0], [30.6, 7566.0], [30.7, 7566.0], [30.8, 7656.0], [30.9, 7782.0], [31.0, 7789.0], [31.1, 7793.0], [31.2, 7806.0], [31.3, 7806.0], [31.4, 7876.0], [31.5, 7946.0], [31.6, 7946.0], [31.7, 8105.0], [31.8, 8147.0], [31.9, 8156.0], [32.0, 8156.0], [32.1, 8305.0], [32.2, 8326.0], [32.3, 8352.0], [32.4, 8363.0], [32.5, 8363.0], [32.6, 8363.0], [32.7, 8466.0], [32.8, 8475.0], [32.9, 8554.0], [33.0, 8620.0], [33.1, 8649.0], [33.2, 8649.0], [33.3, 8653.0], [33.4, 8721.0], [33.5, 8727.0], [33.6, 8736.0], [33.7, 8742.0], [33.8, 8742.0], [33.9, 8745.0], [34.0, 8754.0], [34.1, 8773.0], [34.2, 8807.0], [34.3, 8851.0], [34.4, 8851.0], [34.5, 8862.0], [34.6, 8865.0], [34.7, 8867.0], [34.8, 8897.0], [34.9, 8994.0], [35.0, 8994.0], [35.1, 9059.0], [35.2, 9107.0], [35.3, 9166.0], [35.4, 9187.0], [35.5, 9198.0], [35.6, 9198.0], [35.7, 9216.0], [35.8, 9249.0], [35.9, 9283.0], [36.0, 9301.0], [36.1, 9325.0], [36.2, 9325.0], [36.3, 9365.0], [36.4, 9367.0], [36.5, 9381.0], [36.6, 9390.0], [36.7, 9392.0], [36.8, 9401.0], [36.9, 9401.0], [37.0, 9416.0], [37.1, 9429.0], [37.2, 9431.0], [37.3, 9493.0], [37.4, 9535.0], [37.5, 9535.0], [37.6, 9560.0], [37.7, 9608.0], [37.8, 9630.0], [37.9, 9774.0], [38.0, 9779.0], [38.1, 9779.0], [38.2, 9841.0], [38.3, 9889.0], [38.4, 10019.0], [38.5, 10134.0], [38.6, 10165.0], [38.7, 10165.0], [38.8, 10182.0], [38.9, 10217.0], [39.0, 10275.0], [39.1, 10283.0], [39.2, 10292.0], [39.3, 10292.0], [39.4, 10292.0], [39.5, 10302.0], [39.6, 10306.0], [39.7, 10361.0], [39.8, 10381.0], [39.9, 10381.0], [40.0, 10382.0], [40.1, 10423.0], [40.2, 10445.0], [40.3, 10449.0], [40.4, 10644.0], [40.5, 10644.0], [40.6, 10676.0], [40.7, 10737.0], [40.8, 10774.0], [40.9, 10886.0], [41.0, 10893.0], [41.1, 10976.0], [41.2, 10976.0], [41.3, 11055.0], [41.4, 11100.0], [41.5, 11138.0], [41.6, 11142.0], [41.7, 11349.0], [41.8, 11349.0], [41.9, 11376.0], [42.0, 11427.0], [42.1, 11435.0], [42.2, 11458.0], [42.3, 11500.0], [42.4, 11500.0], [42.5, 11510.0], [42.6, 11693.0], [42.7, 11724.0], [42.8, 11730.0], [42.9, 11797.0], [43.0, 11797.0], [43.1, 11799.0], [43.2, 11867.0], [43.3, 11870.0], [43.4, 11919.0], [43.5, 12009.0], [43.6, 12009.0], [43.7, 12045.0], [43.8, 12195.0], [43.9, 12284.0], [44.0, 12379.0], [44.1, 12381.0], [44.2, 12381.0], [44.3, 12421.0], [44.4, 12434.0], [44.5, 12451.0], [44.6, 12538.0], [44.7, 12815.0], [44.8, 12815.0], [44.9, 12958.0], [45.0, 13008.0], [45.1, 13010.0], [45.2, 13034.0], [45.3, 13120.0], [45.4, 13120.0], [45.5, 13134.0], [45.6, 13187.0], [45.7, 13331.0], [45.8, 13372.0], [45.9, 13425.0], [46.0, 13426.0], [46.1, 13426.0], [46.2, 13427.0], [46.3, 13441.0], [46.4, 13444.0], [46.5, 13489.0], [46.6, 13539.0], [46.7, 13539.0], [46.8, 13592.0], [46.9, 13645.0], [47.0, 13697.0], [47.1, 13700.0], [47.2, 13724.0], [47.3, 13724.0], [47.4, 13732.0], [47.5, 13848.0], [47.6, 13858.0], [47.7, 13915.0], [47.8, 13988.0], [47.9, 13988.0], [48.0, 14010.0], [48.1, 14060.0], [48.2, 14122.0], [48.3, 14261.0], [48.4, 14262.0], [48.5, 14262.0], [48.6, 14281.0], [48.7, 14475.0], [48.8, 14477.0], [48.9, 14483.0], [49.0, 14656.0], [49.1, 14656.0], [49.2, 14740.0], [49.3, 14770.0], [49.4, 14825.0], [49.5, 14911.0], [49.6, 14930.0], [49.7, 14930.0], [49.8, 14970.0], [49.9, 14971.0], [50.0, 15120.0], [50.1, 15157.0], [50.2, 15201.0], [50.3, 15389.0], [50.4, 15389.0], [50.5, 15584.0], [50.6, 15604.0], [50.7, 15620.0], [50.8, 15647.0], [50.9, 15648.0], [51.0, 15648.0], [51.1, 15648.0], [51.2, 15663.0], [51.3, 15701.0], [51.4, 15750.0], [51.5, 15896.0], [51.6, 15896.0], [51.7, 15917.0], [51.8, 15924.0], [51.9, 15980.0], [52.0, 15981.0], [52.1, 16103.0], [52.2, 16103.0], [52.3, 16175.0], [52.4, 16187.0], [52.5, 16208.0], [52.6, 16223.0], [52.7, 16236.0], [52.8, 16236.0], [52.9, 16279.0], [53.0, 16298.0], [53.1, 16308.0], [53.2, 16329.0], [53.3, 16330.0], [53.4, 16330.0], [53.5, 16356.0], [53.6, 16436.0], [53.7, 16438.0], [53.8, 16462.0], [53.9, 16525.0], [54.0, 16525.0], [54.1, 16533.0], [54.2, 16555.0], [54.3, 16631.0], [54.4, 16672.0], [54.5, 16701.0], [54.6, 16763.0], [54.7, 16763.0], [54.8, 16799.0], [54.9, 16898.0], [55.0, 16954.0], [55.1, 16970.0], [55.2, 17013.0], [55.3, 17013.0], [55.4, 17088.0], [55.5, 17092.0], [55.6, 17177.0], [55.7, 17211.0], [55.8, 17260.0], [55.9, 17260.0], [56.0, 17318.0], [56.1, 17362.0], [56.2, 17414.0], [56.3, 17467.0], [56.4, 17471.0], [56.5, 17471.0], [56.6, 17627.0], [56.7, 17647.0], [56.8, 17757.0], [56.9, 17785.0], [57.0, 17826.0], [57.1, 17826.0], [57.2, 17906.0], [57.3, 18039.0], [57.4, 18042.0], [57.5, 18058.0], [57.6, 18139.0], [57.7, 18139.0], [57.8, 18179.0], [57.9, 18270.0], [58.0, 18289.0], [58.1, 18320.0], [58.2, 18334.0], [58.3, 18334.0], [58.4, 18414.0], [58.5, 18537.0], [58.6, 18565.0], [58.7, 18598.0], [58.8, 18679.0], [58.9, 18679.0], [59.0, 18899.0], [59.1, 18956.0], [59.2, 18976.0], [59.3, 18995.0], [59.4, 19085.0], [59.5, 19121.0], [59.6, 19121.0], [59.7, 19138.0], [59.8, 19140.0], [59.9, 19163.0], [60.0, 19232.0], [60.1, 19250.0], [60.2, 19250.0], [60.3, 19278.0], [60.4, 19379.0], [60.5, 19518.0], [60.6, 19600.0], [60.7, 19677.0], [60.8, 19677.0], [60.9, 19686.0], [61.0, 19841.0], [61.1, 19903.0], [61.2, 19908.0], [61.3, 19941.0], [61.4, 19941.0], [61.5, 20057.0], [61.6, 20334.0], [61.7, 20404.0], [61.8, 20415.0], [61.9, 20493.0], [62.0, 20493.0], [62.1, 20608.0], [62.2, 20620.0], [62.3, 20737.0], [62.4, 20761.0], [62.5, 20848.0], [62.6, 20848.0], [62.7, 20976.0], [62.8, 21009.0], [62.9, 21113.0], [63.0, 21139.0], [63.1, 21170.0], [63.2, 21170.0], [63.3, 21334.0], [63.4, 21445.0], [63.5, 21492.0], [63.6, 21510.0], [63.7, 21516.0], [63.8, 21533.0], [63.9, 21533.0], [64.0, 21584.0], [64.1, 21637.0], [64.2, 21724.0], [64.3, 21738.0], [64.4, 21770.0], [64.5, 21770.0], [64.6, 21939.0], [64.7, 21951.0], [64.8, 21974.0], [64.9, 21985.0], [65.0, 21991.0], [65.1, 21991.0], [65.2, 22160.0], [65.3, 22180.0], [65.4, 22208.0], [65.5, 22325.0], [65.6, 22355.0], [65.7, 22355.0], [65.8, 22441.0], [65.9, 22451.0], [66.0, 22520.0], [66.1, 22603.0], [66.2, 22633.0], [66.3, 22633.0], [66.4, 22645.0], [66.5, 22672.0], [66.6, 22708.0], [66.7, 22714.0], [66.8, 22830.0], [66.9, 22830.0], [67.0, 22837.0], [67.1, 23129.0], [67.2, 23137.0], [67.3, 23141.0], [67.4, 23216.0], [67.5, 23216.0], [67.6, 23328.0], [67.7, 23437.0], [67.8, 23509.0], [67.9, 23559.0], [68.0, 23769.0], [68.1, 23769.0], [68.2, 23783.0], [68.3, 23801.0], [68.4, 23881.0], [68.5, 23911.0], [68.6, 23955.0], [68.7, 24123.0], [68.8, 24123.0], [68.9, 24125.0], [69.0, 24228.0], [69.1, 24248.0], [69.2, 24277.0], [69.3, 24348.0], [69.4, 24348.0], [69.5, 24360.0], [69.6, 24410.0], [69.7, 24470.0], [69.8, 24502.0], [69.9, 24520.0], [70.0, 24520.0], [70.1, 24589.0], [70.2, 24800.0], [70.3, 24837.0], [70.4, 24857.0], [70.5, 24863.0], [70.6, 24863.0], [70.7, 24918.0], [70.8, 24935.0], [70.9, 25059.0], [71.0, 25071.0], [71.1, 25248.0], [71.2, 25248.0], [71.3, 25295.0], [71.4, 25629.0], [71.5, 25666.0], [71.6, 25722.0], [71.7, 25734.0], [71.8, 25734.0], [71.9, 25845.0], [72.0, 25889.0], [72.1, 26372.0], [72.2, 26406.0], [72.3, 26439.0], [72.4, 26439.0], [72.5, 26494.0], [72.6, 26662.0], [72.7, 26731.0], [72.8, 26780.0], [72.9, 27004.0], [73.0, 27296.0], [73.1, 27296.0], [73.2, 27430.0], [73.3, 27468.0], [73.4, 27685.0], [73.5, 27754.0], [73.6, 28196.0], [73.7, 28196.0], [73.8, 28199.0], [73.9, 28207.0], [74.0, 28213.0], [74.1, 28270.0], [74.2, 28435.0], [74.3, 28435.0], [74.4, 28600.0], [74.5, 28787.0], [74.6, 29374.0], [74.7, 29422.0], [74.8, 29550.0], [74.9, 29550.0], [75.0, 29634.0], [75.1, 29878.0], [75.2, 29881.0], [75.3, 29886.0], [75.4, 29888.0], [75.5, 29888.0], [75.6, 30009.0], [75.7, 30056.0], [75.8, 30107.0], [75.9, 30208.0], [76.0, 30212.0], [76.1, 30212.0], [76.2, 30291.0], [76.3, 30419.0], [76.4, 30437.0], [76.5, 30539.0], [76.6, 30591.0], [76.7, 30591.0], [76.8, 30638.0], [76.9, 30838.0], [77.0, 30861.0], [77.1, 30880.0], [77.2, 30993.0], [77.3, 31256.0], [77.4, 31256.0], [77.5, 31294.0], [77.6, 31334.0], [77.7, 31430.0], [77.8, 31651.0], [77.9, 31681.0], [78.0, 31681.0], [78.1, 31796.0], [78.2, 31830.0], [78.3, 31901.0], [78.4, 31946.0], [78.5, 31968.0], [78.6, 31968.0], [78.7, 31984.0], [78.8, 32018.0], [78.9, 32130.0], [79.0, 32348.0], [79.1, 32438.0], [79.2, 32438.0], [79.3, 32517.0], [79.4, 32659.0], [79.5, 32709.0], [79.6, 32719.0], [79.7, 32755.0], [79.8, 32755.0], [79.9, 32787.0], [80.0, 32926.0], [80.1, 32953.0], [80.2, 32954.0], [80.3, 32982.0], [80.4, 32982.0], [80.5, 33066.0], [80.6, 33265.0], [80.7, 33293.0], [80.8, 33312.0], [80.9, 33375.0], [81.0, 33375.0], [81.1, 33391.0], [81.2, 33411.0], [81.3, 33538.0], [81.4, 33583.0], [81.5, 33638.0], [81.6, 33638.0], [81.7, 33652.0], [81.8, 33950.0], [81.9, 33997.0], [82.0, 34189.0], [82.1, 34441.0], [82.2, 34499.0], [82.3, 34499.0], [82.4, 34518.0], [82.5, 34649.0], [82.6, 34678.0], [82.7, 34678.0], [82.8, 34707.0], [82.9, 34707.0], [83.0, 34729.0], [83.1, 34886.0], [83.2, 35088.0], [83.3, 35093.0], [83.4, 35094.0], [83.5, 35094.0], [83.6, 35212.0], [83.7, 35230.0], [83.8, 35312.0], [83.9, 35442.0], [84.0, 35483.0], [84.1, 35483.0], [84.2, 35505.0], [84.3, 35508.0], [84.4, 35536.0], [84.5, 35554.0], [84.6, 35662.0], [84.7, 35662.0], [84.8, 35704.0], [84.9, 35725.0], [85.0, 35736.0], [85.1, 35750.0], [85.2, 35758.0], [85.3, 35758.0], [85.4, 35825.0], [85.5, 35861.0], [85.6, 35907.0], [85.7, 36003.0], [85.8, 36087.0], [85.9, 36087.0], [86.0, 36470.0], [86.1, 36489.0], [86.2, 36512.0], [86.3, 36564.0], [86.4, 36622.0], [86.5, 36665.0], [86.6, 36665.0], [86.7, 36849.0], [86.8, 37042.0], [86.9, 37133.0], [87.0, 37265.0], [87.1, 37281.0], [87.2, 37281.0], [87.3, 37425.0], [87.4, 37539.0], [87.5, 37987.0], [87.6, 38162.0], [87.7, 38278.0], [87.8, 38278.0], [87.9, 38363.0], [88.0, 38462.0], [88.1, 38506.0], [88.2, 38841.0], [88.3, 38905.0], [88.4, 38905.0], [88.5, 39026.0], [88.6, 39041.0], [88.7, 39044.0], [88.8, 39062.0], [88.9, 39137.0], [89.0, 39137.0], [89.1, 39349.0], [89.2, 39350.0], [89.3, 39515.0], [89.4, 39866.0], [89.5, 39945.0], [89.6, 39945.0], [89.7, 39977.0], [89.8, 39998.0], [89.9, 40111.0], [90.0, 40561.0], [90.1, 40609.0], [90.2, 40609.0], [90.3, 40854.0], [90.4, 41049.0], [90.5, 41142.0], [90.6, 41158.0], [90.7, 41344.0], [90.8, 41344.0], [90.9, 41430.0], [91.0, 41508.0], [91.1, 41602.0], [91.2, 41740.0], [91.3, 41811.0], [91.4, 41830.0], [91.5, 41830.0], [91.6, 41875.0], [91.7, 41896.0], [91.8, 41937.0], [91.9, 42014.0], [92.0, 42039.0], [92.1, 42039.0], [92.2, 42053.0], [92.3, 42141.0], [92.4, 42289.0], [92.5, 42343.0], [92.6, 42354.0], [92.7, 42354.0], [92.8, 42485.0], [92.9, 42928.0], [93.0, 43196.0], [93.1, 43204.0], [93.2, 43387.0], [93.3, 43387.0], [93.4, 43488.0], [93.5, 43813.0], [93.6, 44755.0], [93.7, 44761.0], [93.8, 44902.0], [93.9, 44902.0], [94.0, 45150.0], [94.1, 45299.0], [94.2, 45418.0], [94.3, 45940.0], [94.4, 46161.0], [94.5, 46161.0], [94.6, 46277.0], [94.7, 46390.0], [94.8, 47317.0], [94.9, 47431.0], [95.0, 47438.0], [95.1, 47438.0], [95.2, 47834.0], [95.3, 48039.0], [95.4, 48831.0], [95.5, 48924.0], [95.6, 48986.0], [95.7, 49536.0], [95.8, 49536.0], [95.9, 49643.0], [96.0, 49741.0], [96.1, 50621.0], [96.2, 51695.0], [96.3, 51794.0], [96.4, 51794.0], [96.5, 52610.0], [96.6, 52664.0], [96.7, 52975.0], [96.8, 53579.0], [96.9, 53629.0], [97.0, 53629.0], [97.1, 54358.0], [97.2, 54869.0], [97.3, 55092.0], [97.4, 55346.0], [97.5, 55765.0], [97.6, 55765.0], [97.7, 56991.0], [97.8, 57240.0], [97.9, 57972.0], [98.0, 58393.0], [98.1, 58405.0], [98.2, 58405.0], [98.3, 59418.0], [98.4, 60192.0], [98.5, 60335.0], [98.6, 60380.0], [98.7, 60381.0], [98.8, 60381.0], [98.9, 60386.0], [99.0, 60391.0], [99.1, 60393.0], [99.2, 60397.0], [99.3, 60400.0], [99.4, 60400.0], [99.5, 60409.0], [99.6, 60423.0], [99.7, 60502.0], [99.8, 60517.0], [99.9, 60539.0], [100.0, 60539.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 123.0], [0.1, 123.0], [0.2, 123.0], [0.3, 123.0], [0.4, 124.0], [0.5, 124.0], [0.6, 124.0], [0.7, 124.0], [0.8, 124.0], [0.9, 124.0], [1.0, 124.0], [1.1, 124.0], [1.2, 124.0], [1.3, 125.0], [1.4, 125.0], [1.5, 125.0], [1.6, 125.0], [1.7, 125.0], [1.8, 125.0], [1.9, 125.0], [2.0, 125.0], [2.1, 125.0], [2.2, 125.0], [2.3, 125.0], [2.4, 125.0], [2.5, 125.0], [2.6, 126.0], [2.7, 126.0], [2.8, 126.0], [2.9, 126.0], [3.0, 126.0], [3.1, 126.0], [3.2, 126.0], [3.3, 126.0], [3.4, 126.0], [3.5, 126.0], [3.6, 126.0], [3.7, 126.0], [3.8, 126.0], [3.9, 126.0], [4.0, 126.0], [4.1, 126.0], [4.2, 126.0], [4.3, 126.0], [4.4, 127.0], [4.5, 127.0], [4.6, 127.0], [4.7, 127.0], [4.8, 127.0], [4.9, 127.0], [5.0, 127.0], [5.1, 127.0], [5.2, 127.0], [5.3, 127.0], [5.4, 127.0], [5.5, 127.0], [5.6, 127.0], [5.7, 127.0], [5.8, 127.0], [5.9, 127.0], [6.0, 127.0], [6.1, 127.0], [6.2, 127.0], [6.3, 128.0], [6.4, 128.0], [6.5, 128.0], [6.6, 128.0], [6.7, 128.0], [6.8, 128.0], [6.9, 128.0], [7.0, 128.0], [7.1, 128.0], [7.2, 128.0], [7.3, 128.0], [7.4, 128.0], [7.5, 128.0], [7.6, 129.0], [7.7, 129.0], [7.8, 129.0], [7.9, 129.0], [8.0, 129.0], [8.1, 129.0], [8.2, 129.0], [8.3, 129.0], [8.4, 129.0], [8.5, 129.0], [8.6, 129.0], [8.7, 129.0], [8.8, 129.0], [8.9, 129.0], [9.0, 129.0], [9.1, 129.0], [9.2, 129.0], [9.3, 129.0], [9.4, 129.0], [9.5, 130.0], [9.6, 130.0], [9.7, 130.0], [9.8, 130.0], [9.9, 130.0], [10.0, 130.0], [10.1, 130.0], [10.2, 130.0], [10.3, 130.0], [10.4, 130.0], [10.5, 130.0], [10.6, 130.0], [10.7, 130.0], [10.8, 130.0], [10.9, 130.0], [11.0, 130.0], [11.1, 131.0], [11.2, 131.0], [11.3, 131.0], [11.4, 131.0], [11.5, 131.0], [11.6, 131.0], [11.7, 131.0], [11.8, 131.0], [11.9, 131.0], [12.0, 131.0], [12.1, 131.0], [12.2, 131.0], [12.3, 131.0], [12.4, 131.0], [12.5, 131.0], [12.6, 131.0], [12.7, 131.0], [12.8, 131.0], [12.9, 131.0], [13.0, 131.0], [13.1, 132.0], [13.2, 132.0], [13.3, 132.0], [13.4, 132.0], [13.5, 132.0], [13.6, 132.0], [13.7, 132.0], [13.8, 132.0], [13.9, 132.0], [14.0, 132.0], [14.1, 132.0], [14.2, 132.0], [14.3, 132.0], [14.4, 132.0], [14.5, 133.0], [14.6, 133.0], [14.7, 133.0], [14.8, 133.0], [14.9, 134.0], [15.0, 134.0], [15.1, 134.0], [15.2, 134.0], [15.3, 134.0], [15.4, 135.0], [15.5, 136.0], [15.6, 136.0], [15.7, 136.0], [15.8, 136.0], [15.9, 137.0], [16.0, 138.0], [16.1, 141.0], [16.2, 1076.0], [16.3, 3701.0], [16.4, 3701.0], [16.5, 3780.0], [16.6, 3788.0], [16.7, 3797.0], [16.8, 3800.0], [16.9, 3816.0], [17.0, 3816.0], [17.1, 3865.0], [17.2, 4161.0], [17.3, 4164.0], [17.4, 4166.0], [17.5, 4181.0], [17.6, 4181.0], [17.7, 4317.0], [17.8, 4343.0], [17.9, 4370.0], [18.0, 4372.0], [18.1, 4419.0], [18.2, 4419.0], [18.3, 4421.0], [18.4, 4434.0], [18.5, 4436.0], [18.6, 4554.0], [18.7, 4620.0], [18.8, 4620.0], [18.9, 4658.0], [19.0, 4665.0], [19.1, 4669.0], [19.2, 4671.0], [19.3, 4671.0], [19.4, 4689.0], [19.5, 4694.0], [19.6, 4789.0], [19.7, 4850.0], [19.8, 4870.0], [19.9, 4870.0], [20.0, 4931.0], [20.1, 5077.0], [20.2, 5089.0], [20.3, 5135.0], [20.4, 5135.0], [20.5, 5135.0], [20.6, 5136.0], [20.7, 5140.0], [20.8, 5153.0], [20.9, 5164.0], [21.0, 5170.0], [21.1, 5170.0], [21.2, 5171.0], [21.3, 5174.0], [21.4, 5203.0], [21.5, 5206.0], [21.6, 5219.0], [21.7, 5219.0], [21.8, 5228.0], [21.9, 5234.0], [22.0, 5245.0], [22.1, 5252.0], [22.2, 5254.0], [22.3, 5254.0], [22.4, 5265.0], [22.5, 5281.0], [22.6, 5284.0], [22.7, 5290.0], [22.8, 5290.0], [22.9, 5290.0], [23.0, 5305.0], [23.1, 5317.0], [23.2, 5350.0], [23.3, 5359.0], [23.4, 5359.0], [23.5, 5381.0], [23.6, 5383.0], [23.7, 5411.0], [23.8, 5416.0], [23.9, 5419.0], [24.0, 5419.0], [24.1, 5448.0], [24.2, 5472.0], [24.3, 5484.0], [24.4, 5499.0], [24.5, 5500.0], [24.6, 5500.0], [24.7, 5589.0], [24.8, 5621.0], [24.9, 5623.0], [25.0, 5673.0], [25.1, 5683.0], [25.2, 5683.0], [25.3, 5723.0], [25.4, 5746.0], [25.5, 5776.0], [25.6, 5806.0], [25.7, 5815.0], [25.8, 5815.0], [25.9, 5827.0], [26.0, 5856.0], [26.1, 5861.0], [26.2, 5883.0], [26.3, 5897.0], [26.4, 5897.0], [26.5, 5990.0], [26.6, 6120.0], [26.7, 6172.0], [26.8, 6220.0], [26.9, 6240.0], [27.0, 6240.0], [27.1, 6243.0], [27.2, 6248.0], [27.3, 6301.0], [27.4, 6307.0], [27.5, 6307.0], [27.6, 6313.0], [27.7, 6448.0], [27.8, 6459.0], [27.9, 6497.0], [28.0, 6503.0], [28.1, 6503.0], [28.2, 6515.0], [28.3, 6554.0], [28.4, 6597.0], [28.5, 6610.0], [28.6, 6639.0], [28.7, 6639.0], [28.8, 6658.0], [28.9, 6678.0], [29.0, 6871.0], [29.1, 6948.0], [29.2, 7020.0], [29.3, 7020.0], [29.4, 7191.0], [29.5, 7201.0], [29.6, 7246.0], [29.7, 7277.0], [29.8, 7277.0], [29.9, 7277.0], [30.0, 7303.0], [30.1, 7331.0], [30.2, 7394.0], [30.3, 7509.0], [30.4, 7517.0], [30.5, 7517.0], [30.6, 7520.0], [30.7, 7522.0], [30.8, 7559.0], [30.9, 7617.0], [31.0, 7617.0], [31.1, 7680.0], [31.2, 7683.0], [31.3, 7859.0], [31.4, 7896.0], [31.5, 8039.0], [31.6, 8039.0], [31.7, 8076.0], [31.8, 8076.0], [31.9, 8089.0], [32.0, 8108.0], [32.1, 8137.0], [32.2, 8137.0], [32.3, 8206.0], [32.4, 8209.0], [32.5, 8294.0], [32.6, 8369.0], [32.7, 8387.0], [32.8, 8387.0], [32.9, 8391.0], [33.0, 8400.0], [33.1, 8445.0], [33.2, 8460.0], [33.3, 8464.0], [33.4, 8464.0], [33.5, 8479.0], [33.6, 8482.0], [33.7, 8498.0], [33.8, 8557.0], [33.9, 8557.0], [34.0, 8557.0], [34.1, 8594.0], [34.2, 8599.0], [34.3, 8599.0], [34.4, 8605.0], [34.5, 8706.0], [34.6, 8706.0], [34.7, 8810.0], [34.8, 8859.0], [34.9, 8922.0], [35.0, 8924.0], [35.1, 8924.0], [35.2, 8967.0], [35.3, 8971.0], [35.4, 8982.0], [35.5, 8988.0], [35.6, 9052.0], [35.7, 9052.0], [35.8, 9054.0], [35.9, 9059.0], [36.0, 9090.0], [36.1, 9101.0], [36.2, 9129.0], [36.3, 9129.0], [36.4, 9131.0], [36.5, 9146.0], [36.6, 9159.0], [36.7, 9183.0], [36.8, 9245.0], [36.9, 9245.0], [37.0, 9271.0], [37.1, 9325.0], [37.2, 9376.0], [37.3, 9519.0], [37.4, 9531.0], [37.5, 9531.0], [37.6, 9579.0], [37.7, 9622.0], [37.8, 9695.0], [37.9, 9759.0], [38.0, 9885.0], [38.1, 9885.0], [38.2, 9895.0], [38.3, 9949.0], [38.4, 9970.0], [38.5, 9996.0], [38.6, 9996.0], [38.7, 10004.0], [38.8, 10030.0], [38.9, 10037.0], [39.0, 10038.0], [39.1, 10055.0], [39.2, 10055.0], [39.3, 10091.0], [39.4, 10127.0], [39.5, 10169.0], [39.6, 10174.0], [39.7, 10175.0], [39.8, 10175.0], [39.9, 10358.0], [40.0, 10359.0], [40.1, 10457.0], [40.2, 10511.0], [40.3, 10583.0], [40.4, 10583.0], [40.5, 10611.0], [40.6, 10700.0], [40.7, 10791.0], [40.8, 10827.0], [40.9, 10829.0], [41.0, 10829.0], [41.1, 10847.0], [41.2, 11052.0], [41.3, 11092.0], [41.4, 11104.0], [41.5, 11157.0], [41.6, 11157.0], [41.7, 11178.0], [41.8, 11194.0], [41.9, 11214.0], [42.0, 11239.0], [42.1, 11309.0], [42.2, 11309.0], [42.3, 11427.0], [42.4, 11464.0], [42.5, 11536.0], [42.6, 11540.0], [42.7, 11540.0], [42.8, 11601.0], [42.9, 11654.0], [43.0, 11749.0], [43.1, 11787.0], [43.2, 11879.0], [43.3, 11879.0], [43.4, 11945.0], [43.5, 12109.0], [43.6, 12113.0], [43.7, 12143.0], [43.8, 12163.0], [43.9, 12163.0], [44.0, 12190.0], [44.1, 12275.0], [44.2, 12540.0], [44.3, 12701.0], [44.4, 12748.0], [44.5, 12748.0], [44.6, 12757.0], [44.7, 12770.0], [44.8, 12818.0], [44.9, 12868.0], [45.0, 12882.0], [45.1, 12882.0], [45.2, 12940.0], [45.3, 13031.0], [45.4, 13069.0], [45.5, 13162.0], [45.6, 13173.0], [45.7, 13173.0], [45.8, 13180.0], [45.9, 13184.0], [46.0, 13229.0], [46.1, 13270.0], [46.2, 13270.0], [46.3, 13343.0], [46.4, 13379.0], [46.5, 13395.0], [46.6, 13443.0], [46.7, 13445.0], [46.8, 13445.0], [46.9, 13460.0], [47.0, 13475.0], [47.1, 13590.0], [47.2, 13644.0], [47.3, 13714.0], [47.4, 13714.0], [47.5, 13731.0], [47.6, 13736.0], [47.7, 13762.0], [47.8, 13969.0], [47.9, 13987.0], [48.0, 13987.0], [48.1, 14019.0], [48.2, 14161.0], [48.3, 14204.0], [48.4, 14233.0], [48.5, 14377.0], [48.6, 14377.0], [48.7, 14487.0], [48.8, 14509.0], [48.9, 14512.0], [49.0, 14545.0], [49.1, 14561.0], [49.2, 14561.0], [49.3, 14613.0], [49.4, 14673.0], [49.5, 14713.0], [49.6, 14835.0], [49.7, 14927.0], [49.8, 14927.0], [49.9, 15110.0], [50.0, 15189.0], [50.1, 15311.0], [50.2, 15356.0], [50.3, 15356.0], [50.4, 15374.0], [50.5, 15383.0], [50.6, 15397.0], [50.7, 15400.0], [50.8, 15438.0], [50.9, 15438.0], [51.0, 15442.0], [51.1, 15624.0], [51.2, 15661.0], [51.3, 15665.0], [51.4, 15674.0], [51.5, 15674.0], [51.6, 15687.0], [51.7, 15723.0], [51.8, 15865.0], [51.9, 15894.0], [52.0, 15928.0], [52.1, 15928.0], [52.2, 15945.0], [52.3, 15953.0], [52.4, 15955.0], [52.5, 16001.0], [52.6, 16002.0], [52.7, 16002.0], [52.8, 16028.0], [52.9, 16040.0], [53.0, 16070.0], [53.1, 16080.0], [53.2, 16087.0], [53.3, 16087.0], [53.4, 16165.0], [53.5, 16176.0], [53.6, 16199.0], [53.7, 16236.0], [53.8, 16301.0], [53.9, 16301.0], [54.0, 16379.0], [54.1, 16403.0], [54.2, 16504.0], [54.3, 16534.0], [54.4, 16534.0], [54.5, 16637.0], [54.6, 16705.0], [54.7, 16720.0], [54.8, 16752.0], [54.9, 16803.0], [55.0, 16803.0], [55.1, 16835.0], [55.2, 16922.0], [55.3, 16954.0], [55.4, 16999.0], [55.5, 17063.0], [55.6, 17063.0], [55.7, 17086.0], [55.8, 17159.0], [55.9, 17200.0], [56.0, 17220.0], [56.1, 17361.0], [56.2, 17361.0], [56.3, 17383.0], [56.4, 17507.0], [56.5, 17525.0], [56.6, 17566.0], [56.7, 17642.0], [56.8, 17642.0], [56.9, 17774.0], [57.0, 17792.0], [57.1, 17799.0], [57.2, 17830.0], [57.3, 17873.0], [57.4, 17873.0], [57.5, 17975.0], [57.6, 17984.0], [57.7, 18046.0], [57.8, 18047.0], [57.9, 18047.0], [58.0, 18069.0], [58.1, 18157.0], [58.2, 18272.0], [58.3, 18307.0], [58.4, 18345.0], [58.5, 18345.0], [58.6, 18419.0], [58.7, 18631.0], [58.8, 18673.0], [58.9, 18723.0], [59.0, 18730.0], [59.1, 18730.0], [59.2, 18848.0], [59.3, 18874.0], [59.4, 18878.0], [59.5, 18914.0], [59.6, 18967.0], [59.7, 18967.0], [59.8, 18977.0], [59.9, 18997.0], [60.0, 19105.0], [60.1, 19268.0], [60.2, 19348.0], [60.3, 19348.0], [60.4, 19413.0], [60.5, 19421.0], [60.6, 19524.0], [60.7, 19590.0], [60.8, 19642.0], [60.9, 19642.0], [61.0, 19689.0], [61.1, 19800.0], [61.2, 20087.0], [61.3, 20142.0], [61.4, 20161.0], [61.5, 20161.0], [61.6, 20233.0], [61.7, 20284.0], [61.8, 20368.0], [61.9, 20476.0], [62.0, 20476.0], [62.1, 20507.0], [62.2, 20548.0], [62.3, 20710.0], [62.4, 20753.0], [62.5, 20862.0], [62.6, 20862.0], [62.7, 20872.0], [62.8, 20907.0], [62.9, 21042.0], [63.0, 21194.0], [63.1, 21230.0], [63.2, 21230.0], [63.3, 21239.0], [63.4, 21244.0], [63.5, 21247.0], [63.6, 21319.0], [63.7, 21370.0], [63.8, 21370.0], [63.9, 21457.0], [64.0, 21460.0], [64.1, 21508.0], [64.2, 21679.0], [64.3, 21686.0], [64.4, 21686.0], [64.5, 21714.0], [64.6, 21722.0], [64.7, 21734.0], [64.8, 21889.0], [64.9, 21927.0], [65.0, 21927.0], [65.1, 21943.0], [65.2, 22025.0], [65.3, 22094.0], [65.4, 22163.0], [65.5, 22163.0], [65.6, 22183.0], [65.7, 22247.0], [65.8, 22335.0], [65.9, 22353.0], [66.0, 22370.0], [66.1, 22370.0], [66.2, 22387.0], [66.3, 22393.0], [66.4, 22451.0], [66.5, 22500.0], [66.6, 22569.0], [66.7, 22569.0], [66.8, 22588.0], [66.9, 22845.0], [67.0, 22873.0], [67.1, 22877.0], [67.2, 23073.0], [67.3, 23073.0], [67.4, 23189.0], [67.5, 23224.0], [67.6, 23273.0], [67.7, 23481.0], [67.8, 23522.0], [67.9, 23522.0], [68.0, 23533.0], [68.1, 23629.0], [68.2, 23649.0], [68.3, 23699.0], [68.4, 23760.0], [68.5, 23760.0], [68.6, 23820.0], [68.7, 23845.0], [68.8, 23943.0], [68.9, 23989.0], [69.0, 24026.0], [69.1, 24026.0], [69.2, 24061.0], [69.3, 24061.0], [69.4, 24148.0], [69.5, 24212.0], [69.6, 24212.0], [69.7, 24248.0], [69.8, 24325.0], [69.9, 24521.0], [70.0, 24585.0], [70.1, 24586.0], [70.2, 24586.0], [70.3, 24611.0], [70.4, 24655.0], [70.5, 24671.0], [70.6, 24793.0], [70.7, 24813.0], [70.8, 24813.0], [70.9, 24999.0], [71.0, 25030.0], [71.1, 25379.0], [71.2, 25403.0], [71.3, 25470.0], [71.4, 25470.0], [71.5, 25474.0], [71.6, 25586.0], [71.7, 25630.0], [71.8, 26109.0], [71.9, 26130.0], [72.0, 26130.0], [72.1, 26136.0], [72.2, 26245.0], [72.3, 26363.0], [72.4, 26465.0], [72.5, 26493.0], [72.6, 26493.0], [72.7, 26737.0], [72.8, 27035.0], [72.9, 27178.0], [73.0, 27204.0], [73.1, 27204.0], [73.2, 27430.0], [73.3, 27473.0], [73.4, 27894.0], [73.5, 27940.0], [73.6, 27944.0], [73.7, 27944.0], [73.8, 27961.0], [73.9, 28005.0], [74.0, 28159.0], [74.1, 28347.0], [74.2, 28531.0], [74.3, 28531.0], [74.4, 29103.0], [74.5, 29161.0], [74.6, 29286.0], [74.7, 29372.0], [74.8, 29614.0], [74.9, 29614.0], [75.0, 29619.0], [75.1, 29622.0], [75.2, 29629.0], [75.3, 29757.0], [75.4, 29778.0], [75.5, 29778.0], [75.6, 29858.0], [75.7, 29942.0], [75.8, 29945.0], [75.9, 30024.0], [76.0, 30078.0], [76.1, 30078.0], [76.2, 30157.0], [76.3, 30166.0], [76.4, 30265.0], [76.5, 30354.0], [76.6, 30574.0], [76.7, 30574.0], [76.8, 30575.0], [76.9, 30597.0], [77.0, 30684.0], [77.1, 30979.0], [77.2, 30979.0], [77.3, 31034.0], [77.4, 31063.0], [77.5, 31071.0], [77.6, 31200.0], [77.7, 31368.0], [77.8, 31368.0], [77.9, 31421.0], [78.0, 31539.0], [78.1, 31572.0], [78.2, 31585.0], [78.3, 31681.0], [78.4, 31681.0], [78.5, 31705.0], [78.6, 31729.0], [78.7, 31861.0], [78.8, 31970.0], [78.9, 32183.0], [79.0, 32183.0], [79.1, 32249.0], [79.2, 32395.0], [79.3, 32407.0], [79.4, 32453.0], [79.5, 32454.0], [79.6, 32454.0], [79.7, 32532.0], [79.8, 32672.0], [79.9, 32692.0], [80.0, 32701.0], [80.1, 32702.0], [80.2, 32702.0], [80.3, 32790.0], [80.4, 32927.0], [80.5, 32990.0], [80.6, 33031.0], [80.7, 33088.0], [80.8, 33088.0], [80.9, 33110.0], [81.0, 33118.0], [81.1, 33251.0], [81.2, 33313.0], [81.3, 33313.0], [81.4, 33375.0], [81.5, 33402.0], [81.6, 33687.0], [81.7, 33728.0], [81.8, 33870.0], [81.9, 33870.0], [82.0, 34116.0], [82.1, 34205.0], [82.2, 34242.0], [82.3, 34253.0], [82.4, 34370.0], [82.5, 34370.0], [82.6, 34398.0], [82.7, 34406.0], [82.8, 34458.0], [82.9, 34633.0], [83.0, 34808.0], [83.1, 34808.0], [83.2, 34829.0], [83.3, 34833.0], [83.4, 34943.0], [83.5, 34961.0], [83.6, 35002.0], [83.7, 35002.0], [83.8, 35080.0], [83.9, 35096.0], [84.0, 35147.0], [84.1, 35192.0], [84.2, 35229.0], [84.3, 35229.0], [84.4, 35237.0], [84.5, 35244.0], [84.6, 35278.0], [84.7, 35447.0], [84.8, 35447.0], [84.9, 35470.0], [85.0, 35479.0], [85.1, 35481.0], [85.2, 35498.0], [85.3, 35574.0], [85.4, 35574.0], [85.5, 35648.0], [85.6, 35743.0], [85.7, 35826.0], [85.8, 36211.0], [85.9, 36222.0], [86.0, 36222.0], [86.1, 36229.0], [86.2, 36301.0], [86.3, 36361.0], [86.4, 36412.0], [86.5, 36554.0], [86.6, 36554.0], [86.7, 36587.0], [86.8, 36783.0], [86.9, 36858.0], [87.0, 36996.0], [87.1, 37175.0], [87.2, 37175.0], [87.3, 37246.0], [87.4, 37633.0], [87.5, 37664.0], [87.6, 37728.0], [87.7, 37856.0], [87.8, 37856.0], [87.9, 38106.0], [88.0, 38178.0], [88.1, 38560.0], [88.2, 38645.0], [88.3, 38776.0], [88.4, 38776.0], [88.5, 38788.0], [88.6, 38790.0], [88.7, 38802.0], [88.8, 38886.0], [88.9, 38886.0], [89.0, 39064.0], [89.1, 39083.0], [89.2, 39202.0], [89.3, 39604.0], [89.4, 39693.0], [89.5, 39693.0], [89.6, 39718.0], [89.7, 39735.0], [89.8, 39841.0], [89.9, 40305.0], [90.0, 40332.0], [90.1, 40332.0], [90.2, 40546.0], [90.3, 40599.0], [90.4, 40768.0], [90.5, 40829.0], [90.6, 40892.0], [90.7, 40892.0], [90.8, 41024.0], [90.9, 41083.0], [91.0, 41180.0], [91.1, 41301.0], [91.2, 41342.0], [91.3, 41342.0], [91.4, 41567.0], [91.5, 41618.0], [91.6, 41629.0], [91.7, 41645.0], [91.8, 41677.0], [91.9, 41677.0], [92.0, 41743.0], [92.1, 41773.0], [92.2, 41888.0], [92.3, 42015.0], [92.4, 42015.0], [92.5, 42054.0], [92.6, 42085.0], [92.7, 42233.0], [92.8, 42668.0], [92.9, 42870.0], [93.0, 42870.0], [93.1, 42948.0], [93.2, 43128.0], [93.3, 43239.0], [93.4, 43550.0], [93.5, 44483.0], [93.6, 44483.0], [93.7, 44496.0], [93.8, 44653.0], [93.9, 44902.0], [94.0, 44992.0], [94.1, 45159.0], [94.2, 45159.0], [94.3, 45559.0], [94.4, 45602.0], [94.5, 45689.0], [94.6, 45891.0], [94.7, 47056.0], [94.8, 47056.0], [94.9, 47125.0], [95.0, 47176.0], [95.1, 47584.0], [95.2, 47774.0], [95.3, 48244.0], [95.4, 48244.0], [95.5, 48350.0], [95.6, 48663.0], [95.7, 49272.0], [95.8, 49326.0], [95.9, 49489.0], [96.0, 49489.0], [96.1, 50368.0], [96.2, 51422.0], [96.3, 51524.0], [96.4, 52329.0], [96.5, 52329.0], [96.6, 52380.0], [96.7, 52708.0], [96.8, 53296.0], [96.9, 53337.0], [97.0, 54099.0], [97.1, 54099.0], [97.2, 54604.0], [97.3, 54787.0], [97.4, 55098.0], [97.5, 55475.0], [97.6, 56714.0], [97.7, 56714.0], [97.8, 56981.0], [97.9, 57719.0], [98.0, 58127.0], [98.1, 58143.0], [98.2, 59166.0], [98.3, 59166.0], [98.4, 59940.0], [98.5, 60081.0], [98.6, 60128.0], [98.7, 60128.0], [98.8, 60131.0], [98.9, 60131.0], [99.0, 60133.0], [99.1, 60133.0], [99.2, 60133.0], [99.3, 60133.0], [99.4, 60133.0], [99.5, 60133.0], [99.6, 60134.0], [99.7, 60249.0], [99.8, 60250.0], [99.9, 60264.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 245.0], [0.1, 245.0], [0.2, 246.0], [0.3, 246.0], [0.4, 246.0], [0.5, 246.0], [0.6, 246.0], [0.7, 246.0], [0.8, 247.0], [0.9, 247.0], [1.0, 247.0], [1.1, 247.0], [1.2, 247.0], [1.3, 247.0], [1.4, 247.0], [1.5, 247.0], [1.6, 248.0], [1.7, 248.0], [1.8, 248.0], [1.9, 248.0], [2.0, 248.0], [2.1, 248.0], [2.2, 248.0], [2.3, 248.0], [2.4, 248.0], [2.5, 248.0], [2.6, 248.0], [2.7, 249.0], [2.8, 249.0], [2.9, 249.0], [3.0, 249.0], [3.1, 249.0], [3.2, 249.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 249.0], [4.5, 249.0], [4.6, 249.0], [4.7, 249.0], [4.8, 249.0], [4.9, 249.0], [5.0, 249.0], [5.1, 249.0], [5.2, 249.0], [5.3, 249.0], [5.4, 249.0], [5.5, 249.0], [5.6, 249.0], [5.7, 249.0], [5.8, 250.0], [5.9, 250.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 250.0], [6.9, 250.0], [7.0, 250.0], [7.1, 250.0], [7.2, 250.0], [7.3, 250.0], [7.4, 250.0], [7.5, 250.0], [7.6, 250.0], [7.7, 250.0], [7.8, 250.0], [7.9, 250.0], [8.0, 250.0], [8.1, 250.0], [8.2, 250.0], [8.3, 250.0], [8.4, 250.0], [8.5, 250.0], [8.6, 250.0], [8.7, 250.0], [8.8, 250.0], [8.9, 250.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 251.0], [10.2, 251.0], [10.3, 251.0], [10.4, 251.0], [10.5, 251.0], [10.6, 251.0], [10.7, 251.0], [10.8, 251.0], [10.9, 251.0], [11.0, 251.0], [11.1, 251.0], [11.2, 251.0], [11.3, 251.0], [11.4, 251.0], [11.5, 251.0], [11.6, 251.0], [11.7, 251.0], [11.8, 251.0], [11.9, 251.0], [12.0, 251.0], [12.1, 251.0], [12.2, 252.0], [12.3, 252.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 252.0], [13.1, 252.0], [13.2, 252.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 252.0], [14.2, 252.0], [14.3, 252.0], [14.4, 252.0], [14.5, 252.0], [14.6, 252.0], [14.7, 252.0], [14.8, 252.0], [14.9, 252.0], [15.0, 252.0], [15.1, 252.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 253.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 253.0], [17.1, 253.0], [17.2, 253.0], [17.3, 253.0], [17.4, 253.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 253.0], [17.9, 253.0], [18.0, 253.0], [18.1, 253.0], [18.2, 254.0], [18.3, 254.0], [18.4, 254.0], [18.5, 254.0], [18.6, 254.0], [18.7, 254.0], [18.8, 254.0], [18.9, 254.0], [19.0, 254.0], [19.1, 254.0], [19.2, 254.0], [19.3, 254.0], [19.4, 254.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 254.0], [19.9, 254.0], [20.0, 254.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 254.0], [20.5, 255.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 255.0], [21.1, 255.0], [21.2, 255.0], [21.3, 255.0], [21.4, 255.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 256.0], [22.7, 256.0], [22.8, 256.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 256.0], [24.9, 257.0], [25.0, 257.0], [25.1, 257.0], [25.2, 257.0], [25.3, 257.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 257.0], [25.8, 257.0], [25.9, 257.0], [26.0, 257.0], [26.1, 257.0], [26.2, 257.0], [26.3, 257.0], [26.4, 257.0], [26.5, 257.0], [26.6, 257.0], [26.7, 257.0], [26.8, 257.0], [26.9, 257.0], [27.0, 257.0], [27.1, 257.0], [27.2, 257.0], [27.3, 257.0], [27.4, 257.0], [27.5, 258.0], [27.6, 258.0], [27.7, 258.0], [27.8, 258.0], [27.9, 258.0], [28.0, 258.0], [28.1, 258.0], [28.2, 258.0], [28.3, 258.0], [28.4, 258.0], [28.5, 258.0], [28.6, 258.0], [28.7, 258.0], [28.8, 258.0], [28.9, 258.0], [29.0, 258.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 259.0], [29.9, 259.0], [30.0, 259.0], [30.1, 259.0], [30.2, 259.0], [30.3, 259.0], [30.4, 259.0], [30.5, 259.0], [30.6, 259.0], [30.7, 259.0], [30.8, 259.0], [30.9, 259.0], [31.0, 259.0], [31.1, 259.0], [31.2, 259.0], [31.3, 259.0], [31.4, 259.0], [31.5, 259.0], [31.6, 259.0], [31.7, 259.0], [31.8, 259.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 260.0], [33.6, 260.0], [33.7, 260.0], [33.8, 260.0], [33.9, 260.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 260.0], [36.3, 260.0], [36.4, 260.0], [36.5, 260.0], [36.6, 260.0], [36.7, 260.0], [36.8, 260.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 261.0], [38.3, 261.0], [38.4, 261.0], [38.5, 261.0], [38.6, 261.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 261.0], [40.4, 261.0], [40.5, 261.0], [40.6, 261.0], [40.7, 261.0], [40.8, 261.0], [40.9, 261.0], [41.0, 261.0], [41.1, 261.0], [41.2, 261.0], [41.3, 262.0], [41.4, 262.0], [41.5, 262.0], [41.6, 262.0], [41.7, 262.0], [41.8, 262.0], [41.9, 262.0], [42.0, 262.0], [42.1, 262.0], [42.2, 262.0], [42.3, 262.0], [42.4, 262.0], [42.5, 262.0], [42.6, 262.0], [42.7, 262.0], [42.8, 262.0], [42.9, 262.0], [43.0, 262.0], [43.1, 262.0], [43.2, 262.0], [43.3, 262.0], [43.4, 262.0], [43.5, 262.0], [43.6, 262.0], [43.7, 262.0], [43.8, 262.0], [43.9, 262.0], [44.0, 262.0], [44.1, 262.0], [44.2, 262.0], [44.3, 262.0], [44.4, 262.0], [44.5, 262.0], [44.6, 262.0], [44.7, 262.0], [44.8, 262.0], [44.9, 262.0], [45.0, 262.0], [45.1, 263.0], [45.2, 263.0], [45.3, 263.0], [45.4, 263.0], [45.5, 263.0], [45.6, 263.0], [45.7, 263.0], [45.8, 263.0], [45.9, 263.0], [46.0, 263.0], [46.1, 263.0], [46.2, 263.0], [46.3, 263.0], [46.4, 263.0], [46.5, 263.0], [46.6, 263.0], [46.7, 263.0], [46.8, 263.0], [46.9, 263.0], [47.0, 263.0], [47.1, 263.0], [47.2, 263.0], [47.3, 263.0], [47.4, 263.0], [47.5, 263.0], [47.6, 263.0], [47.7, 263.0], [47.8, 263.0], [47.9, 263.0], [48.0, 263.0], [48.1, 263.0], [48.2, 263.0], [48.3, 263.0], [48.4, 263.0], [48.5, 263.0], [48.6, 263.0], [48.7, 264.0], [48.8, 264.0], [48.9, 264.0], [49.0, 264.0], [49.1, 264.0], [49.2, 264.0], [49.3, 264.0], [49.4, 264.0], [49.5, 264.0], [49.6, 264.0], [49.7, 264.0], [49.8, 264.0], [49.9, 264.0], [50.0, 264.0], [50.1, 264.0], [50.2, 264.0], [50.3, 264.0], [50.4, 264.0], [50.5, 264.0], [50.6, 264.0], [50.7, 264.0], [50.8, 264.0], [50.9, 264.0], [51.0, 264.0], [51.1, 264.0], [51.2, 264.0], [51.3, 264.0], [51.4, 264.0], [51.5, 264.0], [51.6, 264.0], [51.7, 264.0], [51.8, 264.0], [51.9, 264.0], [52.0, 265.0], [52.1, 265.0], [52.2, 265.0], [52.3, 265.0], [52.4, 265.0], [52.5, 265.0], [52.6, 265.0], [52.7, 265.0], [52.8, 265.0], [52.9, 265.0], [53.0, 265.0], [53.1, 265.0], [53.2, 265.0], [53.3, 265.0], [53.4, 265.0], [53.5, 265.0], [53.6, 265.0], [53.7, 265.0], [53.8, 265.0], [53.9, 265.0], [54.0, 265.0], [54.1, 265.0], [54.2, 265.0], [54.3, 265.0], [54.4, 265.0], [54.5, 265.0], [54.6, 265.0], [54.7, 265.0], [54.8, 265.0], [54.9, 265.0], [55.0, 265.0], [55.1, 265.0], [55.2, 265.0], [55.3, 265.0], [55.4, 265.0], [55.5, 265.0], [55.6, 265.0], [55.7, 266.0], [55.8, 266.0], [55.9, 266.0], [56.0, 266.0], [56.1, 266.0], [56.2, 266.0], [56.3, 266.0], [56.4, 266.0], [56.5, 266.0], [56.6, 266.0], [56.7, 266.0], [56.8, 266.0], [56.9, 266.0], [57.0, 266.0], [57.1, 266.0], [57.2, 266.0], [57.3, 266.0], [57.4, 266.0], [57.5, 266.0], [57.6, 266.0], [57.7, 266.0], [57.8, 266.0], [57.9, 266.0], [58.0, 266.0], [58.1, 266.0], [58.2, 267.0], [58.3, 267.0], [58.4, 267.0], [58.5, 267.0], [58.6, 267.0], [58.7, 267.0], [58.8, 267.0], [58.9, 267.0], [59.0, 267.0], [59.1, 267.0], [59.2, 267.0], [59.3, 267.0], [59.4, 267.0], [59.5, 267.0], [59.6, 267.0], [59.7, 267.0], [59.8, 267.0], [59.9, 267.0], [60.0, 267.0], [60.1, 268.0], [60.2, 268.0], [60.3, 268.0], [60.4, 268.0], [60.5, 268.0], [60.6, 268.0], [60.7, 268.0], [60.8, 268.0], [60.9, 268.0], [61.0, 268.0], [61.1, 268.0], [61.2, 268.0], [61.3, 268.0], [61.4, 268.0], [61.5, 268.0], [61.6, 268.0], [61.7, 268.0], [61.8, 268.0], [61.9, 268.0], [62.0, 268.0], [62.1, 269.0], [62.2, 269.0], [62.3, 269.0], [62.4, 269.0], [62.5, 269.0], [62.6, 269.0], [62.7, 269.0], [62.8, 269.0], [62.9, 269.0], [63.0, 269.0], [63.1, 269.0], [63.2, 269.0], [63.3, 269.0], [63.4, 270.0], [63.5, 270.0], [63.6, 270.0], [63.7, 270.0], [63.8, 270.0], [63.9, 270.0], [64.0, 270.0], [64.1, 270.0], [64.2, 270.0], [64.3, 270.0], [64.4, 270.0], [64.5, 270.0], [64.6, 270.0], [64.7, 270.0], [64.8, 271.0], [64.9, 271.0], [65.0, 271.0], [65.1, 271.0], [65.2, 271.0], [65.3, 271.0], [65.4, 271.0], [65.5, 271.0], [65.6, 271.0], [65.7, 271.0], [65.8, 271.0], [65.9, 271.0], [66.0, 271.0], [66.1, 271.0], [66.2, 271.0], [66.3, 271.0], [66.4, 271.0], [66.5, 271.0], [66.6, 271.0], [66.7, 271.0], [66.8, 272.0], [66.9, 272.0], [67.0, 272.0], [67.1, 272.0], [67.2, 272.0], [67.3, 272.0], [67.4, 272.0], [67.5, 272.0], [67.6, 272.0], [67.7, 272.0], [67.8, 272.0], [67.9, 273.0], [68.0, 273.0], [68.1, 273.0], [68.2, 273.0], [68.3, 273.0], [68.4, 273.0], [68.5, 273.0], [68.6, 273.0], [68.7, 273.0], [68.8, 273.0], [68.9, 273.0], [69.0, 273.0], [69.1, 273.0], [69.2, 273.0], [69.3, 274.0], [69.4, 274.0], [69.5, 274.0], [69.6, 274.0], [69.7, 274.0], [69.8, 274.0], [69.9, 274.0], [70.0, 274.0], [70.1, 274.0], [70.2, 274.0], [70.3, 275.0], [70.4, 275.0], [70.5, 275.0], [70.6, 275.0], [70.7, 275.0], [70.8, 275.0], [70.9, 275.0], [71.0, 275.0], [71.1, 275.0], [71.2, 275.0], [71.3, 275.0], [71.4, 276.0], [71.5, 276.0], [71.6, 276.0], [71.7, 276.0], [71.8, 276.0], [71.9, 276.0], [72.0, 276.0], [72.1, 276.0], [72.2, 276.0], [72.3, 276.0], [72.4, 276.0], [72.5, 276.0], [72.6, 276.0], [72.7, 276.0], [72.8, 276.0], [72.9, 277.0], [73.0, 277.0], [73.1, 277.0], [73.2, 277.0], [73.3, 277.0], [73.4, 277.0], [73.5, 278.0], [73.6, 278.0], [73.7, 278.0], [73.8, 278.0], [73.9, 278.0], [74.0, 278.0], [74.1, 278.0], [74.2, 278.0], [74.3, 278.0], [74.4, 278.0], [74.5, 278.0], [74.6, 278.0], [74.7, 278.0], [74.8, 278.0], [74.9, 278.0], [75.0, 278.0], [75.1, 278.0], [75.2, 279.0], [75.3, 279.0], [75.4, 279.0], [75.5, 279.0], [75.6, 279.0], [75.7, 279.0], [75.8, 279.0], [75.9, 279.0], [76.0, 279.0], [76.1, 279.0], [76.2, 279.0], [76.3, 280.0], [76.4, 280.0], [76.5, 280.0], [76.6, 281.0], [76.7, 281.0], [76.8, 281.0], [76.9, 281.0], [77.0, 281.0], [77.1, 281.0], [77.2, 281.0], [77.3, 281.0], [77.4, 281.0], [77.5, 281.0], [77.6, 281.0], [77.7, 281.0], [77.8, 282.0], [77.9, 282.0], [78.0, 282.0], [78.1, 282.0], [78.2, 283.0], [78.3, 283.0], [78.4, 283.0], [78.5, 283.0], [78.6, 283.0], [78.7, 283.0], [78.8, 283.0], [78.9, 283.0], [79.0, 284.0], [79.1, 284.0], [79.2, 284.0], [79.3, 284.0], [79.4, 285.0], [79.5, 285.0], [79.6, 285.0], [79.7, 285.0], [79.8, 285.0], [79.9, 286.0], [80.0, 286.0], [80.1, 286.0], [80.2, 286.0], [80.3, 286.0], [80.4, 286.0], [80.5, 287.0], [80.6, 287.0], [80.7, 287.0], [80.8, 287.0], [80.9, 287.0], [81.0, 287.0], [81.1, 287.0], [81.2, 287.0], [81.3, 287.0], [81.4, 288.0], [81.5, 288.0], [81.6, 288.0], [81.7, 288.0], [81.8, 289.0], [81.9, 289.0], [82.0, 290.0], [82.1, 290.0], [82.2, 290.0], [82.3, 290.0], [82.4, 290.0], [82.5, 291.0], [82.6, 292.0], [82.7, 292.0], [82.8, 292.0], [82.9, 292.0], [83.0, 292.0], [83.1, 292.0], [83.2, 293.0], [83.3, 294.0], [83.4, 295.0], [83.5, 295.0], [83.6, 295.0], [83.7, 296.0], [83.8, 296.0], [83.9, 296.0], [84.0, 298.0], [84.1, 298.0], [84.2, 298.0], [84.3, 298.0], [84.4, 299.0], [84.5, 299.0], [84.6, 300.0], [84.7, 300.0], [84.8, 300.0], [84.9, 300.0], [85.0, 300.0], [85.1, 300.0], [85.2, 300.0], [85.3, 300.0], [85.4, 301.0], [85.5, 301.0], [85.6, 302.0], [85.7, 303.0], [85.8, 303.0], [85.9, 303.0], [86.0, 305.0], [86.1, 305.0], [86.2, 306.0], [86.3, 307.0], [86.4, 307.0], [86.5, 307.0], [86.6, 307.0], [86.7, 309.0], [86.8, 309.0], [86.9, 310.0], [87.0, 310.0], [87.1, 311.0], [87.2, 311.0], [87.3, 312.0], [87.4, 312.0], [87.5, 312.0], [87.6, 313.0], [87.7, 313.0], [87.8, 313.0], [87.9, 313.0], [88.0, 313.0], [88.1, 314.0], [88.2, 314.0], [88.3, 315.0], [88.4, 315.0], [88.5, 315.0], [88.6, 315.0], [88.7, 316.0], [88.8, 316.0], [88.9, 316.0], [89.0, 316.0], [89.1, 316.0], [89.2, 317.0], [89.3, 317.0], [89.4, 317.0], [89.5, 319.0], [89.6, 319.0], [89.7, 319.0], [89.8, 320.0], [89.9, 320.0], [90.0, 322.0], [90.1, 322.0], [90.2, 322.0], [90.3, 323.0], [90.4, 323.0], [90.5, 324.0], [90.6, 325.0], [90.7, 326.0], [90.8, 326.0], [90.9, 328.0], [91.0, 328.0], [91.1, 328.0], [91.2, 339.0], [91.3, 345.0], [91.4, 348.0], [91.5, 348.0], [91.6, 349.0], [91.7, 355.0], [91.8, 367.0], [91.9, 378.0], [92.0, 378.0], [92.1, 378.0], [92.2, 380.0], [92.3, 384.0], [92.4, 385.0], [92.5, 391.0], [92.6, 396.0], [92.7, 396.0], [92.8, 405.0], [92.9, 409.0], [93.0, 410.0], [93.1, 411.0], [93.2, 414.0], [93.3, 414.0], [93.4, 415.0], [93.5, 415.0], [93.6, 416.0], [93.7, 424.0], [93.8, 441.0], [93.9, 441.0], [94.0, 458.0], [94.1, 463.0], [94.2, 470.0], [94.3, 473.0], [94.4, 481.0], [94.5, 481.0], [94.6, 483.0], [94.7, 510.0], [94.8, 510.0], [94.9, 511.0], [95.0, 512.0], [95.1, 512.0], [95.2, 513.0], [95.3, 515.0], [95.4, 532.0], [95.5, 549.0], [95.6, 560.0], [95.7, 575.0], [95.8, 575.0], [95.9, 584.0], [96.0, 600.0], [96.1, 607.0], [96.2, 608.0], [96.3, 609.0], [96.4, 609.0], [96.5, 609.0], [96.6, 612.0], [96.7, 613.0], [96.8, 613.0], [96.9, 614.0], [97.0, 614.0], [97.1, 614.0], [97.2, 614.0], [97.3, 616.0], [97.4, 617.0], [97.5, 639.0], [97.6, 639.0], [97.7, 660.0], [97.8, 660.0], [97.9, 675.0], [98.0, 680.0], [98.1, 716.0], [98.2, 716.0], [98.3, 716.0], [98.4, 727.0], [98.5, 781.0], [98.6, 818.0], [98.7, 818.0], [98.8, 818.0], [98.9, 831.0], [99.0, 831.0], [99.1, 873.0], [99.2, 923.0], [99.3, 936.0], [99.4, 936.0], [99.5, 1021.0], [99.6, 1036.0], [99.7, 1038.0], [99.8, 1276.0], [99.9, 1533.0], [100.0, 1533.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 708.0, "series": [{"data": [[34100.0, 1.0], [34500.0, 1.0], [32900.0, 4.0], [33300.0, 3.0], [36500.0, 2.0], [35700.0, 5.0], [35300.0, 1.0], [38900.0, 1.0], [38100.0, 1.0], [38500.0, 1.0], [40100.0, 1.0], [39300.0, 2.0], [40500.0, 1.0], [42100.0, 1.0], [42900.0, 1.0], [41300.0, 1.0], [41700.0, 1.0], [44900.0, 1.0], [43300.0, 1.0], [46100.0, 1.0], [48900.0, 2.0], [47300.0, 1.0], [49700.0, 1.0], [51700.0, 1.0], [52900.0, 1.0], [200.0, 6.0], [56900.0, 1.0], [55300.0, 1.0], [55700.0, 1.0], [60500.0, 3.0], [60100.0, 1.0], [300.0, 93.0], [400.0, 39.0], [500.0, 3.0], [600.0, 1.0], [2600.0, 1.0], [3900.0, 1.0], [4000.0, 4.0], [4100.0, 1.0], [4600.0, 6.0], [4400.0, 5.0], [4800.0, 3.0], [4700.0, 1.0], [4900.0, 6.0], [5000.0, 1.0], [5100.0, 2.0], [5200.0, 1.0], [5300.0, 4.0], [5600.0, 5.0], [5500.0, 10.0], [5400.0, 11.0], [5700.0, 2.0], [5800.0, 4.0], [6000.0, 5.0], [6100.0, 4.0], [5900.0, 2.0], [6300.0, 4.0], [6200.0, 2.0], [6400.0, 4.0], [6500.0, 3.0], [6600.0, 1.0], [6700.0, 5.0], [6900.0, 4.0], [6800.0, 3.0], [7100.0, 1.0], [7400.0, 2.0], [7200.0, 3.0], [7500.0, 4.0], [7600.0, 1.0], [7900.0, 2.0], [7700.0, 3.0], [7800.0, 2.0], [8100.0, 3.0], [8500.0, 1.0], [8300.0, 5.0], [8600.0, 3.0], [8700.0, 7.0], [8400.0, 2.0], [8800.0, 6.0], [8900.0, 1.0], [9100.0, 4.0], [9000.0, 1.0], [9200.0, 3.0], [9400.0, 5.0], [9300.0, 7.0], [9500.0, 2.0], [9700.0, 2.0], [9600.0, 2.0], [9800.0, 2.0], [10200.0, 5.0], [10100.0, 3.0], [10000.0, 1.0], [10300.0, 5.0], [10400.0, 3.0], [10600.0, 2.0], [10700.0, 2.0], [11100.0, 3.0], [11000.0, 1.0], [10800.0, 2.0], [10900.0, 1.0], [11300.0, 2.0], [11600.0, 1.0], [11400.0, 3.0], [11500.0, 2.0], [11700.0, 4.0], [12100.0, 1.0], [12000.0, 2.0], [11800.0, 2.0], [12200.0, 1.0], [11900.0, 1.0], [12500.0, 1.0], [12300.0, 2.0], [12400.0, 3.0], [13000.0, 3.0], [12800.0, 1.0], [13100.0, 3.0], [13300.0, 2.0], [12900.0, 1.0], [13600.0, 2.0], [13700.0, 3.0], [13500.0, 2.0], [13400.0, 6.0], [13800.0, 2.0], [14000.0, 2.0], [14200.0, 3.0], [13900.0, 2.0], [14100.0, 1.0], [14400.0, 3.0], [14700.0, 2.0], [14800.0, 1.0], [14600.0, 1.0], [15300.0, 1.0], [15200.0, 1.0], [14900.0, 4.0], [15100.0, 2.0], [15600.0, 6.0], [15500.0, 1.0], [15700.0, 2.0], [15800.0, 1.0], [16100.0, 3.0], [15900.0, 4.0], [16200.0, 5.0], [16300.0, 4.0], [17400.0, 3.0], [16400.0, 3.0], [17000.0, 3.0], [16800.0, 1.0], [17200.0, 2.0], [16600.0, 2.0], [17800.0, 1.0], [18400.0, 1.0], [17600.0, 2.0], [18200.0, 2.0], [18000.0, 3.0], [18800.0, 1.0], [18600.0, 1.0], [19200.0, 3.0], [19000.0, 1.0], [20400.0, 3.0], [20000.0, 1.0], [19600.0, 3.0], [19800.0, 1.0], [21400.0, 2.0], [20600.0, 2.0], [20800.0, 1.0], [21000.0, 1.0], [22200.0, 1.0], [21600.0, 1.0], [22400.0, 2.0], [22600.0, 4.0], [23400.0, 1.0], [22800.0, 2.0], [23200.0, 1.0], [23800.0, 2.0], [24200.0, 3.0], [24400.0, 2.0], [25200.0, 2.0], [25000.0, 2.0], [24800.0, 4.0], [26400.0, 3.0], [25800.0, 2.0], [25600.0, 2.0], [26600.0, 1.0], [27400.0, 2.0], [27000.0, 1.0], [27600.0, 1.0], [27200.0, 1.0], [28200.0, 3.0], [28400.0, 1.0], [28600.0, 1.0], [29400.0, 1.0], [29600.0, 1.0], [30200.0, 3.0], [30600.0, 1.0], [30000.0, 2.0], [29800.0, 4.0], [30400.0, 2.0], [30800.0, 3.0], [31200.0, 2.0], [31600.0, 2.0], [31400.0, 1.0], [32600.0, 1.0], [31800.0, 1.0], [32400.0, 1.0], [32000.0, 1.0], [33200.0, 2.0], [34800.0, 1.0], [33600.0, 2.0], [34400.0, 2.0], [35200.0, 2.0], [36400.0, 2.0], [36800.0, 1.0], [36000.0, 2.0], [35600.0, 1.0], [38800.0, 1.0], [38400.0, 1.0], [37200.0, 2.0], [40800.0, 1.0], [41600.0, 1.0], [42400.0, 1.0], [42000.0, 3.0], [43200.0, 1.0], [45200.0, 1.0], [48000.0, 1.0], [48800.0, 1.0], [49600.0, 1.0], [51600.0, 1.0], [53600.0, 1.0], [54800.0, 1.0], [57200.0, 1.0], [58400.0, 1.0], [60400.0, 3.0], [33500.0, 2.0], [34700.0, 2.0], [33900.0, 2.0], [35500.0, 4.0], [35900.0, 1.0], [37500.0, 1.0], [37100.0, 1.0], [38300.0, 1.0], [37900.0, 1.0], [39900.0, 3.0], [39100.0, 1.0], [39500.0, 1.0], [42300.0, 2.0], [41100.0, 2.0], [41900.0, 1.0], [41500.0, 1.0], [44700.0, 2.0], [43100.0, 1.0], [45900.0, 1.0], [45100.0, 1.0], [46300.0, 1.0], [49500.0, 1.0], [53500.0, 1.0], [54300.0, 1.0], [57900.0, 1.0], [58300.0, 1.0], [60300.0, 7.0], [16700.0, 3.0], [16500.0, 3.0], [16900.0, 2.0], [17100.0, 1.0], [17300.0, 2.0], [18300.0, 2.0], [17700.0, 2.0], [17900.0, 1.0], [18100.0, 2.0], [19100.0, 4.0], [19300.0, 1.0], [18500.0, 3.0], [18900.0, 3.0], [19900.0, 3.0], [19500.0, 1.0], [20300.0, 1.0], [21500.0, 4.0], [21100.0, 3.0], [20900.0, 1.0], [20700.0, 2.0], [21300.0, 1.0], [21900.0, 5.0], [22100.0, 2.0], [22300.0, 2.0], [21700.0, 3.0], [22500.0, 1.0], [23100.0, 3.0], [23300.0, 1.0], [23500.0, 2.0], [22700.0, 2.0], [24500.0, 3.0], [23700.0, 2.0], [24100.0, 2.0], [23900.0, 2.0], [24300.0, 2.0], [24900.0, 2.0], [25700.0, 2.0], [26300.0, 1.0], [26700.0, 2.0], [28100.0, 2.0], [27700.0, 1.0], [28700.0, 1.0], [29300.0, 1.0], [29500.0, 1.0], [30100.0, 1.0], [30500.0, 2.0], [31700.0, 1.0], [31300.0, 1.0], [30900.0, 1.0], [31900.0, 4.0], [32700.0, 4.0], [32300.0, 1.0], [32500.0, 1.0], [32100.0, 1.0], [34600.0, 3.0], [33000.0, 1.0], [33400.0, 1.0], [35800.0, 2.0], [36600.0, 2.0], [35400.0, 2.0], [35000.0, 3.0], [37400.0, 1.0], [37000.0, 1.0], [38200.0, 1.0], [39000.0, 4.0], [39800.0, 1.0], [40600.0, 1.0], [42200.0, 1.0], [41800.0, 4.0], [41000.0, 1.0], [41400.0, 1.0], [43400.0, 1.0], [43800.0, 1.0], [45400.0, 1.0], [46200.0, 1.0], [47400.0, 2.0], [47800.0, 1.0], [50600.0, 1.0], [52600.0, 2.0], [55000.0, 1.0], [59400.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 134.0], [33300.0, 2.0], [34100.0, 1.0], [32900.0, 2.0], [33700.0, 1.0], [34900.0, 2.0], [36500.0, 2.0], [35700.0, 1.0], [38500.0, 1.0], [38100.0, 2.0], [36900.0, 1.0], [37700.0, 1.0], [39700.0, 2.0], [40500.0, 2.0], [41300.0, 2.0], [42900.0, 1.0], [41700.0, 2.0], [44900.0, 2.0], [47700.0, 1.0], [49300.0, 1.0], [53300.0, 1.0], [56900.0, 1.0], [57700.0, 1.0], [58100.0, 2.0], [60100.0, 9.0], [1000.0, 1.0], [3700.0, 4.0], [3800.0, 3.0], [4300.0, 4.0], [4100.0, 4.0], [4400.0, 4.0], [4600.0, 7.0], [4500.0, 1.0], [4800.0, 2.0], [4700.0, 1.0], [5100.0, 9.0], [5000.0, 2.0], [4900.0, 1.0], [5200.0, 13.0], [5300.0, 6.0], [5500.0, 2.0], [5400.0, 7.0], [5600.0, 4.0], [5700.0, 3.0], [5800.0, 7.0], [6100.0, 2.0], [5900.0, 1.0], [6200.0, 4.0], [6300.0, 3.0], [6500.0, 4.0], [6400.0, 3.0], [6600.0, 4.0], [6800.0, 1.0], [6900.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7200.0, 4.0], [7300.0, 3.0], [7600.0, 3.0], [7500.0, 5.0], [7800.0, 2.0], [8000.0, 4.0], [8100.0, 2.0], [8500.0, 5.0], [8200.0, 3.0], [8700.0, 1.0], [8300.0, 3.0], [8400.0, 7.0], [8600.0, 1.0], [9100.0, 6.0], [9000.0, 4.0], [8900.0, 6.0], [9200.0, 2.0], [8800.0, 2.0], [9500.0, 3.0], [9600.0, 2.0], [9300.0, 2.0], [9700.0, 1.0], [10000.0, 6.0], [10100.0, 4.0], [9900.0, 3.0], [9800.0, 2.0], [10300.0, 2.0], [10700.0, 2.0], [10500.0, 2.0], [10600.0, 1.0], [10400.0, 1.0], [11100.0, 4.0], [10800.0, 3.0], [11200.0, 2.0], [11000.0, 2.0], [11400.0, 2.0], [11700.0, 2.0], [11600.0, 2.0], [11500.0, 2.0], [11300.0, 1.0], [11900.0, 1.0], [12200.0, 1.0], [12100.0, 5.0], [11800.0, 1.0], [12700.0, 4.0], [12500.0, 1.0], [13300.0, 3.0], [13200.0, 2.0], [12800.0, 3.0], [13000.0, 2.0], [13100.0, 4.0], [12900.0, 1.0], [13700.0, 4.0], [13400.0, 4.0], [13600.0, 1.0], [13500.0, 1.0], [14200.0, 2.0], [13900.0, 2.0], [14100.0, 1.0], [14300.0, 1.0], [14000.0, 1.0], [14500.0, 4.0], [14600.0, 2.0], [14700.0, 1.0], [14800.0, 1.0], [14400.0, 1.0], [15300.0, 5.0], [15100.0, 2.0], [14900.0, 1.0], [15800.0, 2.0], [15600.0, 5.0], [15700.0, 1.0], [15400.0, 3.0], [16100.0, 3.0], [16000.0, 7.0], [16200.0, 1.0], [16300.0, 2.0], [15900.0, 4.0], [17200.0, 2.0], [16800.0, 2.0], [16600.0, 1.0], [17000.0, 2.0], [16400.0, 1.0], [18400.0, 1.0], [18000.0, 3.0], [17600.0, 1.0], [17800.0, 2.0], [18200.0, 1.0], [18800.0, 3.0], [18600.0, 2.0], [19400.0, 2.0], [19200.0, 1.0], [20200.0, 2.0], [19800.0, 1.0], [19600.0, 2.0], [20000.0, 1.0], [20400.0, 1.0], [21200.0, 4.0], [20800.0, 2.0], [21400.0, 2.0], [21000.0, 1.0], [22000.0, 2.0], [21800.0, 1.0], [21600.0, 2.0], [22400.0, 1.0], [22200.0, 1.0], [22800.0, 3.0], [23400.0, 1.0], [23000.0, 1.0], [23200.0, 2.0], [23600.0, 3.0], [23800.0, 2.0], [24000.0, 3.0], [24200.0, 2.0], [24600.0, 3.0], [25400.0, 3.0], [24800.0, 1.0], [25000.0, 1.0], [25600.0, 1.0], [26200.0, 1.0], [26400.0, 2.0], [27200.0, 1.0], [27400.0, 2.0], [27000.0, 1.0], [28000.0, 1.0], [27800.0, 1.0], [29600.0, 4.0], [29200.0, 1.0], [29800.0, 1.0], [30200.0, 1.0], [30000.0, 2.0], [30600.0, 1.0], [31000.0, 3.0], [31600.0, 1.0], [31400.0, 1.0], [31200.0, 1.0], [32400.0, 3.0], [32200.0, 1.0], [32600.0, 2.0], [31800.0, 1.0], [33200.0, 1.0], [34400.0, 2.0], [33600.0, 1.0], [34800.0, 3.0], [35200.0, 4.0], [36800.0, 1.0], [35600.0, 1.0], [36400.0, 1.0], [38800.0, 2.0], [37200.0, 1.0], [37600.0, 2.0], [39200.0, 1.0], [39600.0, 2.0], [40800.0, 2.0], [42000.0, 3.0], [41600.0, 4.0], [42800.0, 1.0], [44400.0, 2.0], [43200.0, 1.0], [45600.0, 2.0], [49200.0, 1.0], [53200.0, 1.0], [54000.0, 1.0], [60000.0, 1.0], [34300.0, 2.0], [33100.0, 2.0], [35500.0, 1.0], [36300.0, 2.0], [35100.0, 2.0], [36700.0, 1.0], [38700.0, 3.0], [37100.0, 1.0], [40700.0, 1.0], [40300.0, 2.0], [41500.0, 1.0], [41100.0, 1.0], [43500.0, 1.0], [43100.0, 1.0], [47100.0, 2.0], [45100.0, 1.0], [45500.0, 1.0], [47500.0, 1.0], [48300.0, 1.0], [50300.0, 1.0], [51500.0, 1.0], [52300.0, 2.0], [52700.0, 1.0], [54700.0, 1.0], [56700.0, 1.0], [59100.0, 1.0], [59900.0, 1.0], [17300.0, 2.0], [17100.0, 1.0], [16500.0, 2.0], [16700.0, 3.0], [16900.0, 3.0], [17500.0, 3.0], [18100.0, 1.0], [17900.0, 2.0], [17700.0, 3.0], [18300.0, 2.0], [18900.0, 4.0], [19100.0, 1.0], [18700.0, 2.0], [19300.0, 1.0], [20300.0, 1.0], [19500.0, 2.0], [20100.0, 2.0], [21300.0, 2.0], [21100.0, 1.0], [20500.0, 2.0], [20700.0, 2.0], [20900.0, 1.0], [21500.0, 1.0], [22300.0, 5.0], [21700.0, 3.0], [21900.0, 2.0], [22500.0, 3.0], [22100.0, 2.0], [23500.0, 2.0], [23100.0, 1.0], [24300.0, 1.0], [23900.0, 2.0], [24500.0, 3.0], [24100.0, 1.0], [23700.0, 1.0], [24900.0, 1.0], [25300.0, 1.0], [25500.0, 1.0], [24700.0, 1.0], [26100.0, 3.0], [26300.0, 1.0], [27100.0, 1.0], [26700.0, 1.0], [28500.0, 1.0], [27900.0, 3.0], [28100.0, 1.0], [28300.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [30500.0, 3.0], [29900.0, 2.0], [30300.0, 1.0], [29700.0, 2.0], [30100.0, 2.0], [31500.0, 3.0], [30900.0, 1.0], [31700.0, 2.0], [31300.0, 1.0], [32300.0, 1.0], [32500.0, 1.0], [31900.0, 1.0], [32700.0, 3.0], [32100.0, 1.0], [33000.0, 2.0], [34600.0, 1.0], [33800.0, 1.0], [34200.0, 3.0], [33400.0, 1.0], [36200.0, 3.0], [35400.0, 5.0], [35800.0, 1.0], [35000.0, 3.0], [38600.0, 1.0], [37800.0, 1.0], [39800.0, 1.0], [39000.0, 2.0], [41800.0, 1.0], [42600.0, 1.0], [42200.0, 1.0], [41000.0, 2.0], [44600.0, 1.0], [47000.0, 1.0], [45800.0, 1.0], [48600.0, 1.0], [48200.0, 1.0], [49400.0, 1.0], [51400.0, 1.0], [55000.0, 1.0], [54600.0, 1.0], [55400.0, 1.0], [60200.0, 3.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 68.0], [600.0, 18.0], [1200.0, 1.0], [700.0, 4.0], [1500.0, 1.0], [200.0, 708.0], [400.0, 16.0], [800.0, 5.0], [900.0, 2.0], [500.0, 11.0], [1000.0, 3.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 682.0, "series": [{"data": [[0.0, 649.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 43.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 682.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 292.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.8, "minX": 1.6854462E12, "maxY": 25.0, "series": [{"data": [[1.68544638E12, 6.789473684210526], [1.68544752E12, 3.5], [1.68544734E12, 10.060975609756099], [1.68544668E12, 15.0], [1.68544698E12, 24.95930232558139], [1.68544632E12, 5.0], [1.68544728E12, 14.571428571428575], [1.68544662E12, 14.958333333333334], [1.68544692E12, 22.000000000000007], [1.68544626E12, 4.909090909090907], [1.68544722E12, 16.902255639097746], [1.68544656E12, 11.476923076923075], [1.68544686E12, 20.0], [1.6854462E12, 2.8], [1.68544716E12, 20.0], [1.6854465E12, 10.0], [1.68544746E12, 5.0], [1.6854468E12, 19.982608695652175], [1.6854471E12, 23.466666666666665], [1.68544644E12, 9.989010989010985], [1.6854474E12, 7.532110091743118], [1.68544674E12, 17.209302325581394], [1.68544704E12, 25.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544752E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 256.0, "minX": 1.0, "maxY": 39461.6, "series": [{"data": [[2.0, 6853.5], [3.0, 8177.25], [4.0, 7700.25], [5.0, 12211.041095890409], [6.0, 21985.0], [7.0, 8707.666666666666], [8.0, 21213.333333333336], [9.0, 20971.5], [10.0, 10826.886075949371], [11.0, 8707.125], [12.0, 19106.6], [13.0, 18370.666666666664], [14.0, 34579.2], [15.0, 22000.801886792447], [1.0, 6994.0], [16.0, 17876.57142857143], [17.0, 39461.6], [18.0, 25557.777777777777], [19.0, 25946.666666666668], [20.0, 20504.441340782112], [21.0, 20329.384615384613], [22.0, 18031.571428571428], [23.0, 24059.11111111111], [24.0, 24203.866666666672], [25.0, 20166.58895705521]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.419354838709673, 18334.853046595]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 6601.0], [3.0, 7912.75], [4.0, 9893.333333333334], [5.0, 12112.472222222223], [6.0, 21734.0], [7.0, 8423.0], [8.0, 20946.166666666668], [9.0, 27605.333333333332], [10.0, 10605.585987261153], [11.0, 8396.625], [12.0, 18623.4], [13.0, 18001.666666666668], [14.0, 38098.22222222222], [15.0, 21787.047619047622], [1.0, 6664.5], [16.0, 17559.14285714286], [17.0, 39188.6], [18.0, 25289.888888888883], [19.0, 28011.454545454544], [20.0, 20349.07865168539], [21.0, 20050.23076923077], [22.0, 17765.357142857145], [23.0, 23793.333333333332], [24.0, 23934.133333333335], [25.0, 19898.472392638032]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.462002412545225, 18213.17852834738]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 259.5], [3.0, 283.0], [4.0, 277.1666666666667], [5.0, 264.7605633802818], [6.0, 256.0], [7.0, 267.75], [8.0, 268.2], [9.0, 282.25], [10.0, 266.3164556962024], [11.0, 258.5], [12.0, 434.3], [13.0, 264.66666666666663], [14.0, 294.45454545454544], [15.0, 430.92452830188665], [1.0, 326.5], [16.0, 320.8333333333333], [17.0, 330.8], [18.0, 431.94736842105266], [19.0, 266.5454545454545], [20.0, 268.2808988764044], [21.0, 277.14285714285717], [22.0, 268.5714285714286], [23.0, 260.4], [24.0, 268.93333333333334], [25.0, 269.04320987654313]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.410991636798098, 295.7526881720435]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 331.45, "minX": 1.6854462E12, "maxY": 10675.583333333334, "series": [{"data": [[1.68544638E12, 952.35], [1.68544752E12, 331.45], [1.68544734E12, 3405.266666666667], [1.68544668E12, 1687.8166666666666], [1.68544698E12, 3901.8], [1.68544632E12, 1174.1333333333334], [1.68544728E12, 2481.383333333333], [1.68544662E12, 2384.55], [1.68544692E12, 3887.6833333333334], [1.68544626E12, 696.7333333333333], [1.68544722E12, 3120.016666666667], [1.68544656E12, 2121.233333333333], [1.68544686E12, 2903.6833333333334], [1.6854462E12, 658.8166666666667], [1.68544716E12, 4329.616666666667], [1.6854465E12, 1601.3666666666666], [1.68544746E12, 1834.5833333333333], [1.6854468E12, 1657.8333333333333], [1.6854471E12, 4507.3], [1.68544644E12, 1425.7833333333333], [1.6854474E12, 2505.65], [1.68544674E12, 2001.0833333333333], [1.68544704E12, 4143.183333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68544638E12, 1734.0], [1.68544752E12, 858.4], [1.68544734E12, 9232.4], [1.68544668E12, 3540.5333333333333], [1.68544698E12, 8745.533333333333], [1.68544632E12, 2296.5333333333333], [1.68544728E12, 4837.233333333334], [1.68544662E12, 4149.116666666667], [1.68544692E12, 7028.7], [1.68544626E12, 1225.5166666666667], [1.68544722E12, 6894.683333333333], [1.68544656E12, 6475.566666666667], [1.68544686E12, 7617.233333333334], [1.6854462E12, 1004.5333333333333], [1.68544716E12, 8536.733333333334], [1.6854465E12, 5911.35], [1.68544746E12, 2791.9166666666665], [1.6854468E12, 4854.75], [1.6854471E12, 10675.583333333334], [1.68544644E12, 5021.05], [1.6854474E12, 5746.183333333333], [1.68544674E12, 3621.15], [1.68544704E12, 8964.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544752E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 261.3191489361702, "minX": 1.6854462E12, "maxY": 36212.370370370365, "series": [{"data": [[1.68544638E12, 25230.083333333336], [1.68544752E12, 4792.0], [1.68544734E12, 11077.035714285714], [1.68544668E12, 29448.347826086956], [1.68544698E12, 20296.26785714286], [1.68544632E12, 18271.818181818187], [1.68544728E12, 20472.47222222222], [1.68544662E12, 21784.83870967742], [1.68544692E12, 21354.333333333332], [1.68544626E12, 19618.14285714286], [1.68544722E12, 17770.41666666667], [1.68544656E12, 14146.439024390244], [1.68544686E12, 23322.901960784307], [1.6854462E12, 8118.571428571428], [1.68544716E12, 16141.736842105258], [1.6854465E12, 10528.767441860466], [1.68544746E12, 6568.2962962962965], [1.6854468E12, 25092.225000000002], [1.6854471E12, 20379.484848484848], [1.68544644E12, 14873.200000000003], [1.6854474E12, 9100.763157894738], [1.68544674E12, 33712.35714285715], [1.68544704E12, 19608.060606060604]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544638E12, 24504.909090909092], [1.68544752E12, 9178.666666666668], [1.68544734E12, 11487.490909090902], [1.68544668E12, 28957.608695652176], [1.68544698E12, 20367.034482758623], [1.68544632E12, 19819.499999999996], [1.68544728E12, 20255.085714285717], [1.68544662E12, 21674.062499999996], [1.68544692E12, 20805.784313725486], [1.68544626E12, 16868.777777777777], [1.68544722E12, 18148.477272727276], [1.68544656E12, 13342.642857142859], [1.68544686E12, 25861.288461538454], [1.6854462E12, 7835.428571428572], [1.68544716E12, 16311.847457627111], [1.6854465E12, 9439.51219512195], [1.68544746E12, 5690.0], [1.6854468E12, 19980.513513513513], [1.6854471E12, 20232.029850746272], [1.68544644E12, 15596.633333333333], [1.6854474E12, 9239.216216216217], [1.68544674E12, 36212.370370370365], [1.68544704E12, 18921.73846153846]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544638E12, 273.53333333333336], [1.68544752E12, 264.6666666666667], [1.68544734E12, 267.3773584905661], [1.68544668E12, 274.13043478260875], [1.68544698E12, 269.155172413793], [1.68544632E12, 265.875], [1.68544728E12, 666.4411764705883], [1.68544662E12, 269.3030303030303], [1.68544692E12, 268.0363636363638], [1.68544626E12, 263.1], [1.68544722E12, 498.4634146341464], [1.68544656E12, 261.3191489361702], [1.68544686E12, 265.9999999999999], [1.6854462E12, 287.8181818181818], [1.68544716E12, 274.50847457627117], [1.6854465E12, 270.3750000000001], [1.68544746E12, 263.87999999999994], [1.6854468E12, 265.02631578947364], [1.6854471E12, 269.91935483870964], [1.68544644E12, 266.67741935483866], [1.6854474E12, 263.29411764705895], [1.68544674E12, 270.7096774193548], [1.68544704E12, 267.3636363636363]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544752E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 261.1702127659575, "minX": 1.6854462E12, "maxY": 36212.1111111111, "series": [{"data": [[1.68544638E12, 25229.833333333336], [1.68544752E12, 4791.6], [1.68544734E12, 11076.464285714288], [1.68544668E12, 29447.608695652176], [1.68544698E12, 20295.374999999996], [1.68544632E12, 18270.90909090909], [1.68544728E12, 20472.361111111102], [1.68544662E12, 21784.096774193546], [1.68544692E12, 21353.70588235294], [1.68544626E12, 19617.714285714286], [1.68544722E12, 17754.291666666675], [1.68544656E12, 14146.09756097561], [1.68544686E12, 23322.392156862745], [1.6854462E12, 8116.428571428572], [1.68544716E12, 16140.736842105267], [1.6854465E12, 10528.441860465113], [1.68544746E12, 6567.074074074075], [1.6854468E12, 25091.925], [1.6854471E12, 20378.696969696975], [1.68544644E12, 14872.899999999998], [1.6854474E12, 9100.131578947368], [1.68544674E12, 33711.85714285714], [1.68544704E12, 19607.303030303032]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544638E12, 24504.818181818184], [1.68544752E12, 9178.333333333334], [1.68544734E12, 11487.236363636363], [1.68544668E12, 28957.347826086952], [1.68544698E12, 20366.62068965517], [1.68544632E12, 19819.312499999996], [1.68544728E12, 20254.97142857143], [1.68544662E12, 21673.71875], [1.68544692E12, 20805.60784313725], [1.68544626E12, 16868.666666666668], [1.68544722E12, 18131.340909090908], [1.68544656E12, 13342.45238095238], [1.68544686E12, 25861.096153846145], [1.6854462E12, 7835.142857142857], [1.68544716E12, 16311.38983050847], [1.6854465E12, 9439.317073170734], [1.68544746E12, 5689.719999999999], [1.6854468E12, 19980.486486486483], [1.6854471E12, 20231.761194029845], [1.68544644E12, 15596.533333333338], [1.6854474E12, 9238.918918918918], [1.68544674E12, 36212.1111111111], [1.68544704E12, 18921.41538461539]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544638E12, 273.20000000000005], [1.68544752E12, 264.6666666666667], [1.68544734E12, 267.0377358490566], [1.68544668E12, 273.5652173913043], [1.68544698E12, 268.6724137931035], [1.68544632E12, 265.4375000000001], [1.68544728E12, 666.4411764705883], [1.68544662E12, 268.93939393939394], [1.68544692E12, 267.5454545454545], [1.68544626E12, 262.7], [1.68544722E12, 498.3414634146342], [1.68544656E12, 261.1702127659575], [1.68544686E12, 265.6923076923077], [1.6854462E12, 286.54545454545456], [1.68544716E12, 273.86440677966095], [1.6854465E12, 270.20000000000005], [1.68544746E12, 262.88], [1.6854468E12, 264.9210526315789], [1.6854471E12, 269.4354838709677], [1.68544644E12, 266.5806451612903], [1.6854474E12, 262.88235294117646], [1.68544674E12, 270.2903225806451], [1.68544704E12, 266.9242424242424]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544752E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6854462E12, "maxY": 334.8529411764705, "series": [{"data": [[1.68544638E12, 133.91666666666669], [1.68544752E12, 127.2], [1.68544734E12, 171.125], [1.68544668E12, 127.7391304347826], [1.68544698E12, 127.46428571428572], [1.68544632E12, 127.99999999999999], [1.68544728E12, 322.55555555555566], [1.68544662E12, 128.58064516129033], [1.68544692E12, 128.2549019607843], [1.68544626E12, 128.78571428571428], [1.68544722E12, 187.85416666666669], [1.68544656E12, 130.07317073170734], [1.68544686E12, 128.9019607843137], [1.6854462E12, 144.28571428571428], [1.68544716E12, 127.6140350877193], [1.6854465E12, 131.4651162790698], [1.68544746E12, 130.6296296296296], [1.6854468E12, 128.14999999999998], [1.6854471E12, 129.01515151515147], [1.68544644E12, 128.23333333333335], [1.6854474E12, 129.65789473684208], [1.68544674E12, 134.85714285714286], [1.68544704E12, 129.19696969696966]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544638E12, 0.0], [1.68544752E12, 0.0], [1.68544734E12, 0.0], [1.68544668E12, 0.0], [1.68544698E12, 0.0], [1.68544632E12, 0.0], [1.68544728E12, 0.0], [1.68544662E12, 0.0], [1.68544692E12, 0.0], [1.68544626E12, 0.0], [1.68544722E12, 0.0], [1.68544656E12, 0.0], [1.68544686E12, 0.0], [1.6854462E12, 0.0], [1.68544716E12, 0.0], [1.6854465E12, 0.0], [1.68544746E12, 0.0], [1.6854468E12, 0.0], [1.6854471E12, 0.0], [1.68544644E12, 0.0], [1.6854474E12, 0.0], [1.68544674E12, 0.0], [1.68544704E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544638E12, 132.6], [1.68544752E12, 127.66666666666667], [1.68544734E12, 130.0566037735849], [1.68544668E12, 134.52173913043478], [1.68544698E12, 127.5862068965517], [1.68544632E12, 127.8125], [1.68544728E12, 334.8529411764705], [1.68544662E12, 128.33333333333334], [1.68544692E12, 128.0181818181819], [1.68544626E12, 128.7], [1.68544722E12, 254.1951219512195], [1.68544656E12, 129.5106382978723], [1.68544686E12, 128.36538461538456], [1.6854462E12, 138.72727272727275], [1.68544716E12, 127.55932203389833], [1.6854465E12, 132.04999999999998], [1.68544746E12, 130.95999999999995], [1.6854468E12, 128.3684210526316], [1.6854471E12, 128.69354838709674], [1.68544644E12, 128.12903225806448], [1.6854474E12, 129.61764705882354], [1.68544674E12, 130.1612903225806], [1.68544704E12, 129.439393939394]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544752E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 247.0, "minX": 1.6854462E12, "maxY": 60081.0, "series": [{"data": [[1.68544638E12, 32395.0], [1.68544752E12, 13162.0], [1.68544734E12, 48350.0], [1.68544668E12, 51524.0], [1.68544698E12, 44496.0], [1.68544632E12, 24671.0], [1.68544728E12, 45602.0], [1.68544662E12, 40768.0], [1.68544692E12, 35743.0], [1.68544626E12, 22877.0], [1.68544722E12, 42054.0], [1.68544656E12, 42948.0], [1.68544686E12, 59166.0], [1.6854462E12, 10175.0], [1.68544716E12, 33110.0], [1.6854465E12, 36222.0], [1.68544746E12, 9759.0], [1.6854468E12, 59940.0], [1.6854471E12, 40332.0], [1.68544644E12, 42015.0], [1.6854474E12, 21734.0], [1.68544674E12, 60081.0], [1.68544704E12, 50368.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68544638E12, 29150.800000000003], [1.68544752E12, 13162.0], [1.68544734E12, 18388.89999999998], [1.68544668E12, 42129.4], [1.68544698E12, 34600.4], [1.68544632E12, 23596.9], [1.68544728E12, 37639.2], [1.68544662E12, 34082.6], [1.68544692E12, 29619.9], [1.68544626E12, 22335.0], [1.68544722E12, 30838.400000000012], [1.68544656E12, 40114.0], [1.68544686E12, 47967.8], [1.6854462E12, 10067.0], [1.68544716E12, 22183.7], [1.6854465E12, 35310.0], [1.68544746E12, 7497.5], [1.6854468E12, 55268.6], [1.6854471E12, 33115.0], [1.68544644E12, 41618.0], [1.6854474E12, 14930.600000000006], [1.68544674E12, 54097.200000000004], [1.68544704E12, 39122.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68544638E12, 32395.0], [1.68544752E12, 13162.0], [1.68544734E12, 48350.0], [1.68544668E12, 51524.0], [1.68544698E12, 44337.17999999999], [1.68544632E12, 24671.0], [1.68544728E12, 45602.0], [1.68544662E12, 40768.0], [1.68544692E12, 35724.659999999996], [1.68544626E12, 22877.0], [1.68544722E12, 42054.0], [1.68544656E12, 42948.0], [1.68544686E12, 59166.0], [1.6854462E12, 10175.0], [1.68544716E12, 32872.69], [1.6854465E12, 36222.0], [1.68544746E12, 9759.0], [1.6854468E12, 59940.0], [1.6854471E12, 40326.33], [1.68544644E12, 42015.0], [1.6854474E12, 21734.0], [1.68544674E12, 60081.0], [1.68544704E12, 50173.41999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68544638E12, 31765.699999999997], [1.68544752E12, 13162.0], [1.68544734E12, 39373.69999999996], [1.68544668E12, 47595.84999999999], [1.68544698E12, 37753.85], [1.68544632E12, 24446.1], [1.68544728E12, 41387.0], [1.68544662E12, 36721.59999999999], [1.68544692E12, 32732.399999999983], [1.68544626E12, 22877.0], [1.68544722E12, 38849.40000000001], [1.68544656E12, 42392.75], [1.68544686E12, 55684.09999999999], [1.6854462E12, 10175.0], [1.68544716E12, 25048.649999999998], [1.6854465E12, 35962.799999999996], [1.68544746E12, 8874.399999999996], [1.6854468E12, 58771.95], [1.6854471E12, 36966.799999999996], [1.68544644E12, 41951.5], [1.6854474E12, 17409.199999999993], [1.68544674E12, 57015.5], [1.68544704E12, 41565.99999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68544638E12, 253.0], [1.68544752E12, 260.0], [1.68544734E12, 247.0], [1.68544668E12, 248.0], [1.68544698E12, 249.0], [1.68544632E12, 250.0], [1.68544728E12, 309.0], [1.68544662E12, 251.0], [1.68544692E12, 250.0], [1.68544626E12, 252.0], [1.68544722E12, 249.0], [1.68544656E12, 248.0], [1.68544686E12, 251.0], [1.6854462E12, 251.0], [1.68544716E12, 249.0], [1.6854465E12, 254.0], [1.68544746E12, 248.0], [1.6854468E12, 250.0], [1.6854471E12, 247.0], [1.68544644E12, 252.0], [1.6854474E12, 249.0], [1.68544674E12, 252.0], [1.68544704E12, 250.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68544638E12, 297.0], [1.68544752E12, 6554.0], [1.68544734E12, 4432.5], [1.68544668E12, 3036.0], [1.68544698E12, 4437.5], [1.68544632E12, 3745.5], [1.68544728E12, 3797.0], [1.68544662E12, 293.0], [1.68544692E12, 305.5], [1.68544626E12, 279.0], [1.68544722E12, 5281.0], [1.68544656E12, 274.5], [1.68544686E12, 2848.0], [1.6854462E12, 319.5], [1.68544716E12, 2585.5], [1.6854465E12, 378.0], [1.68544746E12, 2050.0], [1.6854468E12, 309.5], [1.6854471E12, 5931.0], [1.68544644E12, 328.0], [1.6854474E12, 4419.0], [1.68544674E12, 316.0], [1.68544704E12, 299.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544752E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 126.0, "minX": 1.0, "maxY": 15438.0, "series": [{"data": [[1.0, 614.0], [2.0, 614.0], [4.0, 4779.5], [8.0, 5206.0], [9.0, 300.0], [5.0, 5284.0], [10.0, 15438.0], [11.0, 6503.0], [3.0, 660.0], [6.0, 9095.5], [13.0, 280.0], [7.0, 300.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 251.0], [4.0, 249.5], [2.0, 134.0], [1.0, 138.0], [9.0, 253.0], [5.0, 130.0], [10.0, 252.0], [11.0, 249.0], [3.0, 249.0], [6.0, 250.5], [13.0, 126.0], [7.0, 256.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 126.0, "minX": 1.0, "maxY": 15438.0, "series": [{"data": [[1.0, 614.0], [2.0, 614.0], [4.0, 4777.5], [8.0, 5206.0], [9.0, 299.0], [5.0, 5284.0], [10.0, 15438.0], [11.0, 6503.0], [3.0, 660.0], [6.0, 9095.5], [13.0, 280.0], [7.0, 300.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 251.0], [4.0, 249.5], [2.0, 134.0], [1.0, 138.0], [9.0, 253.0], [5.0, 130.0], [10.0, 251.0], [11.0, 249.0], [3.0, 249.0], [6.0, 250.5], [13.0, 126.0], [7.0, 256.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.6854462E12, "maxY": 2.183333333333333, "series": [{"data": [[1.68544638E12, 0.5], [1.68544752E12, 0.1], [1.68544734E12, 1.75], [1.68544668E12, 0.8666666666666667], [1.68544698E12, 2.0166666666666666], [1.68544632E12, 0.5333333333333333], [1.68544728E12, 1.0833333333333333], [1.68544662E12, 1.0333333333333334], [1.68544692E12, 1.75], [1.68544626E12, 0.35], [1.68544722E12, 1.3833333333333333], [1.68544656E12, 1.5333333333333334], [1.68544686E12, 1.7166666666666666], [1.6854462E12, 0.35], [1.68544716E12, 1.9833333333333334], [1.6854465E12, 1.35], [1.68544746E12, 0.8833333333333333], [1.6854468E12, 1.3833333333333333], [1.6854471E12, 2.0166666666666666], [1.68544644E12, 1.0], [1.6854474E12, 1.0833333333333333], [1.68544674E12, 0.9166666666666666], [1.68544704E12, 2.183333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544752E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6854462E12, "maxY": 2.0, "series": [{"data": [[1.68544638E12, 0.43333333333333335], [1.68544752E12, 0.15], [1.68544734E12, 1.4333333333333333], [1.68544668E12, 0.7666666666666667], [1.68544698E12, 1.7], [1.68544632E12, 0.5333333333333333], [1.68544728E12, 1.1166666666666667], [1.68544662E12, 1.0833333333333333], [1.68544692E12, 1.7666666666666666], [1.68544626E12, 0.31666666666666665], [1.68544722E12, 1.4166666666666667], [1.68544656E12, 0.7333333333333333], [1.68544686E12, 1.1333333333333333], [1.6854462E12, 0.3], [1.68544716E12, 1.9666666666666666], [1.6854465E12, 0.45], [1.68544746E12, 0.8333333333333334], [1.6854468E12, 0.5333333333333333], [1.6854471E12, 2.0], [1.68544644E12, 0.48333333333333334], [1.6854474E12, 1.1166666666666667], [1.68544674E12, 0.8833333333333333], [1.68544704E12, 1.75]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6854468E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68544686E12, 0.5166666666666667], [1.68544734E12, 0.36666666666666664], [1.6854465E12, 0.9], [1.68544698E12, 0.23333333333333334], [1.6854468E12, 0.6], [1.68544728E12, 0.03333333333333333], [1.6854471E12, 0.15], [1.68544644E12, 0.5333333333333333], [1.6854474E12, 0.06666666666666667], [1.68544674E12, 0.06666666666666667], [1.68544656E12, 0.75], [1.68544704E12, 0.43333333333333335]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68544686E12, 0.08333333333333333], [1.6854468E12, 0.1], [1.68544674E12, 0.016666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544752E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6854462E12, "maxY": 1.05, "series": [{"data": [[1.68544638E12, 0.25], [1.68544752E12, 0.05], [1.68544734E12, 0.7], [1.68544668E12, 0.38333333333333336], [1.68544698E12, 0.8333333333333334], [1.68544632E12, 0.26666666666666666], [1.68544728E12, 0.55], [1.68544662E12, 0.55], [1.68544692E12, 0.9166666666666666], [1.68544626E12, 0.16666666666666666], [1.68544722E12, 0.6833333333333333], [1.68544656E12, 0.4166666666666667], [1.68544686E12, 0.5666666666666667], [1.6854462E12, 0.18333333333333332], [1.68544716E12, 0.9833333333333333], [1.6854465E12, 0.23333333333333334], [1.68544746E12, 0.4166666666666667], [1.6854468E12, 0.2833333333333333], [1.6854471E12, 0.95], [1.68544644E12, 0.25], [1.6854474E12, 0.5166666666666667], [1.68544674E12, 0.45], [1.68544704E12, 0.95]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68544686E12, 0.3], [1.68544734E12, 0.18333333333333332], [1.6854465E12, 0.43333333333333335], [1.68544698E12, 0.13333333333333333], [1.6854468E12, 0.35], [1.68544728E12, 0.016666666666666666], [1.6854471E12, 0.08333333333333333], [1.68544644E12, 0.26666666666666666], [1.6854474E12, 0.05], [1.68544674E12, 0.06666666666666667], [1.68544656E12, 0.36666666666666664], [1.68544704E12, 0.15]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68544686E12, 0.3], [1.68544734E12, 0.18333333333333332], [1.6854465E12, 0.4666666666666667], [1.68544698E12, 0.1], [1.6854468E12, 0.36666666666666664], [1.68544728E12, 0.016666666666666666], [1.6854471E12, 0.06666666666666667], [1.68544644E12, 0.26666666666666666], [1.6854474E12, 0.016666666666666666], [1.68544674E12, 0.016666666666666666], [1.68544656E12, 0.38333333333333336], [1.68544704E12, 0.2833333333333333]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68544638E12, 0.2], [1.68544752E12, 0.08333333333333333], [1.68544734E12, 0.5833333333333334], [1.68544668E12, 0.38333333333333336], [1.68544698E12, 0.7833333333333333], [1.68544632E12, 0.18333333333333332], [1.68544728E12, 0.5666666666666667], [1.68544662E12, 0.5166666666666667], [1.68544692E12, 0.8166666666666667], [1.68544626E12, 0.23333333333333334], [1.68544722E12, 0.8], [1.68544656E12, 0.06666666666666667], [1.68544686E12, 0.3333333333333333], [1.6854462E12, 0.11666666666666667], [1.68544716E12, 0.95], [1.6854465E12, 0.06666666666666667], [1.68544746E12, 0.45], [1.6854468E12, 0.13333333333333333], [1.6854471E12, 0.9], [1.68544644E12, 0.21666666666666667], [1.6854474E12, 0.5666666666666667], [1.68544674E12, 0.4166666666666667], [1.68544704E12, 0.65]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68544734E12, 0.35], [1.68544698E12, 0.15], [1.68544728E12, 0.03333333333333333], [1.68544692E12, 0.03333333333333333], [1.68544656E12, 0.6166666666666667], [1.68544686E12, 0.5166666666666667], [1.6854465E12, 0.65], [1.6854468E12, 0.5333333333333333], [1.6854471E12, 0.2], [1.68544644E12, 0.2833333333333333], [1.6854474E12, 0.06666666666666667], [1.68544674E12, 0.05], [1.68544704E12, 0.45]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68544638E12, 0.18333333333333332], [1.68544752E12, 0.1], [1.68544734E12, 0.7333333333333333], [1.68544668E12, 0.38333333333333336], [1.68544698E12, 0.8666666666666667], [1.68544632E12, 0.26666666666666666], [1.68544728E12, 0.5666666666666667], [1.68544662E12, 0.5333333333333333], [1.68544692E12, 0.85], [1.68544626E12, 0.15], [1.68544722E12, 0.7333333333333333], [1.68544656E12, 0.31666666666666665], [1.68544686E12, 0.5666666666666667], [1.6854462E12, 0.11666666666666667], [1.68544716E12, 0.9833333333333333], [1.6854465E12, 0.21666666666666667], [1.68544746E12, 0.4166666666666667], [1.6854468E12, 0.25], [1.6854471E12, 1.05], [1.68544644E12, 0.23333333333333334], [1.6854474E12, 0.6], [1.68544674E12, 0.43333333333333335], [1.68544704E12, 0.8]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544752E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6854462E12, "maxY": 2.9166666666666665, "series": [{"data": [[1.68544638E12, 0.6333333333333333], [1.68544752E12, 0.23333333333333334], [1.68544734E12, 2.0166666666666666], [1.68544668E12, 1.15], [1.68544698E12, 2.4833333333333334], [1.68544632E12, 0.7166666666666667], [1.68544728E12, 1.6833333333333333], [1.68544662E12, 1.6], [1.68544692E12, 2.5833333333333335], [1.68544626E12, 0.55], [1.68544722E12, 2.216666666666667], [1.68544656E12, 0.8], [1.68544686E12, 1.4666666666666666], [1.6854462E12, 0.4166666666666667], [1.68544716E12, 2.9166666666666665], [1.6854465E12, 0.5166666666666667], [1.68544746E12, 1.2833333333333334], [1.6854468E12, 0.6666666666666666], [1.6854471E12, 2.9], [1.68544644E12, 0.7], [1.6854474E12, 1.6833333333333333], [1.68544674E12, 1.3], [1.68544704E12, 2.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68544734E12, 0.7166666666666667], [1.68544698E12, 0.38333333333333336], [1.68544728E12, 0.06666666666666667], [1.68544692E12, 0.03333333333333333], [1.68544656E12, 1.3666666666666667], [1.68544686E12, 1.1166666666666667], [1.6854465E12, 1.55], [1.6854468E12, 1.25], [1.6854471E12, 0.35], [1.68544644E12, 0.8166666666666667], [1.6854474E12, 0.13333333333333333], [1.68544674E12, 0.13333333333333333], [1.68544704E12, 0.8833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544752E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

