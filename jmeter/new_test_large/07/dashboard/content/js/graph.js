/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 123.0, "minX": 0.0, "maxY": 75538.0, "series": [{"data": [[0.0, 252.0], [0.1, 252.0], [0.2, 252.0], [0.3, 261.0], [0.4, 267.0], [0.5, 267.0], [0.6, 271.0], [0.7, 275.0], [0.8, 366.0], [0.9, 370.0], [1.0, 370.0], [1.1, 371.0], [1.2, 372.0], [1.3, 373.0], [1.4, 373.0], [1.5, 375.0], [1.6, 375.0], [1.7, 376.0], [1.8, 376.0], [1.9, 376.0], [2.0, 377.0], [2.1, 378.0], [2.2, 378.0], [2.3, 378.0], [2.4, 378.0], [2.5, 378.0], [2.6, 378.0], [2.7, 379.0], [2.8, 379.0], [2.9, 379.0], [3.0, 380.0], [3.1, 380.0], [3.2, 380.0], [3.3, 381.0], [3.4, 381.0], [3.5, 382.0], [3.6, 382.0], [3.7, 382.0], [3.8, 382.0], [3.9, 383.0], [4.0, 383.0], [4.1, 383.0], [4.2, 383.0], [4.3, 384.0], [4.4, 384.0], [4.5, 385.0], [4.6, 385.0], [4.7, 386.0], [4.8, 388.0], [4.9, 388.0], [5.0, 388.0], [5.1, 389.0], [5.2, 389.0], [5.3, 389.0], [5.4, 390.0], [5.5, 390.0], [5.6, 390.0], [5.7, 390.0], [5.8, 390.0], [5.9, 390.0], [6.0, 391.0], [6.1, 391.0], [6.2, 391.0], [6.3, 391.0], [6.4, 391.0], [6.5, 391.0], [6.6, 392.0], [6.7, 393.0], [6.8, 393.0], [6.9, 393.0], [7.0, 393.0], [7.1, 394.0], [7.2, 394.0], [7.3, 394.0], [7.4, 394.0], [7.5, 394.0], [7.6, 394.0], [7.7, 394.0], [7.8, 395.0], [7.9, 395.0], [8.0, 395.0], [8.1, 395.0], [8.2, 395.0], [8.3, 395.0], [8.4, 396.0], [8.5, 396.0], [8.6, 396.0], [8.7, 396.0], [8.8, 396.0], [8.9, 397.0], [9.0, 397.0], [9.1, 397.0], [9.2, 397.0], [9.3, 397.0], [9.4, 398.0], [9.5, 398.0], [9.6, 398.0], [9.7, 398.0], [9.8, 398.0], [9.9, 398.0], [10.0, 398.0], [10.1, 399.0], [10.2, 399.0], [10.3, 399.0], [10.4, 399.0], [10.5, 399.0], [10.6, 399.0], [10.7, 399.0], [10.8, 399.0], [10.9, 399.0], [11.0, 400.0], [11.1, 400.0], [11.2, 400.0], [11.3, 400.0], [11.4, 402.0], [11.5, 402.0], [11.6, 402.0], [11.7, 403.0], [11.8, 403.0], [11.9, 403.0], [12.0, 404.0], [12.1, 405.0], [12.2, 405.0], [12.3, 406.0], [12.4, 406.0], [12.5, 408.0], [12.6, 411.0], [12.7, 411.0], [12.8, 411.0], [12.9, 411.0], [13.0, 414.0], [13.1, 414.0], [13.2, 415.0], [13.3, 415.0], [13.4, 416.0], [13.5, 417.0], [13.6, 417.0], [13.7, 419.0], [13.8, 419.0], [13.9, 419.0], [14.0, 419.0], [14.1, 423.0], [14.2, 425.0], [14.3, 427.0], [14.4, 430.0], [14.5, 430.0], [14.6, 432.0], [14.7, 438.0], [14.8, 446.0], [14.9, 446.0], [15.0, 447.0], [15.1, 447.0], [15.2, 451.0], [15.3, 452.0], [15.4, 452.0], [15.5, 453.0], [15.6, 460.0], [15.7, 467.0], [15.8, 467.0], [15.9, 474.0], [16.0, 487.0], [16.1, 593.0], [16.2, 4577.0], [16.3, 4577.0], [16.4, 4618.0], [16.5, 4630.0], [16.6, 4822.0], [16.7, 4822.0], [16.8, 4835.0], [16.9, 4932.0], [17.0, 5027.0], [17.1, 5130.0], [17.2, 5130.0], [17.3, 5135.0], [17.4, 5163.0], [17.5, 5329.0], [17.6, 5329.0], [17.7, 5339.0], [17.8, 5343.0], [17.9, 5346.0], [18.0, 5374.0], [18.1, 5374.0], [18.2, 5382.0], [18.3, 5385.0], [18.4, 5391.0], [18.5, 5391.0], [18.6, 5410.0], [18.7, 5460.0], [18.8, 5465.0], [18.9, 5471.0], [19.0, 5471.0], [19.1, 5475.0], [19.2, 5477.0], [19.3, 5478.0], [19.4, 5478.0], [19.5, 5483.0], [19.6, 5494.0], [19.7, 5508.0], [19.8, 5512.0], [19.9, 5512.0], [20.0, 5516.0], [20.1, 5532.0], [20.2, 5533.0], [20.3, 5533.0], [20.4, 5566.0], [20.5, 5567.0], [20.6, 5609.0], [20.7, 5649.0], [20.8, 5649.0], [20.9, 5677.0], [21.0, 5730.0], [21.1, 5822.0], [21.2, 5822.0], [21.3, 5836.0], [21.4, 5889.0], [21.5, 5890.0], [21.6, 5965.0], [21.7, 5965.0], [21.8, 6136.0], [21.9, 6140.0], [22.0, 6155.0], [22.1, 6155.0], [22.2, 6182.0], [22.3, 6184.0], [22.4, 6193.0], [22.5, 6222.0], [22.6, 6222.0], [22.7, 6270.0], [22.8, 6278.0], [22.9, 6291.0], [23.0, 6291.0], [23.1, 6486.0], [23.2, 6633.0], [23.3, 6674.0], [23.4, 6738.0], [23.5, 6738.0], [23.6, 6759.0], [23.7, 6827.0], [23.8, 6879.0], [23.9, 6879.0], [24.0, 6986.0], [24.1, 7046.0], [24.2, 7116.0], [24.3, 7419.0], [24.4, 7419.0], [24.5, 7550.0], [24.6, 7576.0], [24.7, 7677.0], [24.8, 7677.0], [24.9, 7734.0], [25.0, 7738.0], [25.1, 7807.0], [25.2, 7826.0], [25.3, 7826.0], [25.4, 7862.0], [25.5, 7870.0], [25.6, 7907.0], [25.7, 7907.0], [25.8, 7926.0], [25.9, 7967.0], [26.0, 8058.0], [26.1, 8118.0], [26.2, 8118.0], [26.3, 8145.0], [26.4, 8162.0], [26.5, 8232.0], [26.6, 8232.0], [26.7, 8328.0], [26.8, 8338.0], [26.9, 8377.0], [27.0, 8398.0], [27.1, 8398.0], [27.2, 8410.0], [27.3, 8420.0], [27.4, 8572.0], [27.5, 8572.0], [27.6, 8640.0], [27.7, 8649.0], [27.8, 8687.0], [27.9, 8733.0], [28.0, 8733.0], [28.1, 8838.0], [28.2, 8839.0], [28.3, 9192.0], [28.4, 9192.0], [28.5, 9221.0], [28.6, 9263.0], [28.7, 9413.0], [28.8, 9482.0], [28.9, 9482.0], [29.0, 9482.0], [29.1, 9493.0], [29.2, 9501.0], [29.3, 9501.0], [29.4, 9540.0], [29.5, 9585.0], [29.6, 9671.0], [29.7, 9672.0], [29.8, 9672.0], [29.9, 9698.0], [30.0, 9713.0], [30.1, 9714.0], [30.2, 9714.0], [30.3, 9729.0], [30.4, 9824.0], [30.5, 9836.0], [30.6, 9865.0], [30.7, 9865.0], [30.8, 9872.0], [30.9, 9877.0], [31.0, 10029.0], [31.1, 10029.0], [31.2, 10037.0], [31.3, 10135.0], [31.4, 10139.0], [31.5, 10158.0], [31.6, 10158.0], [31.7, 10249.0], [31.8, 10345.0], [31.9, 10353.0], [32.0, 10353.0], [32.1, 10416.0], [32.2, 10502.0], [32.3, 10557.0], [32.4, 10656.0], [32.5, 10656.0], [32.6, 10672.0], [32.7, 10754.0], [32.8, 10764.0], [32.9, 10764.0], [33.0, 10790.0], [33.1, 10833.0], [33.2, 10866.0], [33.3, 10935.0], [33.4, 10935.0], [33.5, 11031.0], [33.6, 11066.0], [33.7, 11170.0], [33.8, 11170.0], [33.9, 11180.0], [34.0, 11230.0], [34.1, 11380.0], [34.2, 11411.0], [34.3, 11411.0], [34.4, 11413.0], [34.5, 11434.0], [34.6, 11558.0], [34.7, 11558.0], [34.8, 11594.0], [34.9, 11624.0], [35.0, 11633.0], [35.1, 11642.0], [35.2, 11642.0], [35.3, 11683.0], [35.4, 11744.0], [35.5, 11774.0], [35.6, 11774.0], [35.7, 11872.0], [35.8, 12047.0], [35.9, 12071.0], [36.0, 12095.0], [36.1, 12095.0], [36.2, 12197.0], [36.3, 12199.0], [36.4, 12213.0], [36.5, 12213.0], [36.6, 12227.0], [36.7, 12304.0], [36.8, 12558.0], [36.9, 12613.0], [37.0, 12613.0], [37.1, 12713.0], [37.2, 12716.0], [37.3, 12720.0], [37.4, 12720.0], [37.5, 12726.0], [37.6, 12748.0], [37.7, 12821.0], [37.8, 12822.0], [37.9, 12822.0], [38.0, 12886.0], [38.1, 12911.0], [38.2, 12914.0], [38.3, 12914.0], [38.4, 12914.0], [38.5, 12947.0], [38.6, 12959.0], [38.7, 12979.0], [38.8, 12979.0], [38.9, 13026.0], [39.0, 13033.0], [39.1, 13159.0], [39.2, 13159.0], [39.3, 13186.0], [39.4, 13252.0], [39.5, 13454.0], [39.6, 13464.0], [39.7, 13464.0], [39.8, 13466.0], [39.9, 13558.0], [40.0, 13569.0], [40.1, 13569.0], [40.2, 13708.0], [40.3, 13716.0], [40.4, 13737.0], [40.5, 13739.0], [40.6, 13739.0], [40.7, 13782.0], [40.8, 13814.0], [40.9, 13976.0], [41.0, 13976.0], [41.1, 14042.0], [41.2, 14127.0], [41.3, 14169.0], [41.4, 14179.0], [41.5, 14179.0], [41.6, 14195.0], [41.7, 14218.0], [41.8, 14237.0], [41.9, 14237.0], [42.0, 14489.0], [42.1, 14492.0], [42.2, 14538.0], [42.3, 14682.0], [42.4, 14682.0], [42.5, 14729.0], [42.6, 14759.0], [42.7, 14770.0], [42.8, 14770.0], [42.9, 14885.0], [43.0, 14903.0], [43.1, 14949.0], [43.2, 15049.0], [43.3, 15049.0], [43.4, 15098.0], [43.5, 15149.0], [43.6, 15163.0], [43.7, 15163.0], [43.8, 15166.0], [43.9, 15172.0], [44.0, 15182.0], [44.1, 15264.0], [44.2, 15264.0], [44.3, 15270.0], [44.4, 15288.0], [44.5, 15294.0], [44.6, 15294.0], [44.7, 15330.0], [44.8, 15472.0], [44.9, 15476.0], [45.0, 15537.0], [45.1, 15537.0], [45.2, 15566.0], [45.3, 15569.0], [45.4, 15584.0], [45.5, 15584.0], [45.6, 15622.0], [45.7, 15687.0], [45.8, 15945.0], [45.9, 15994.0], [46.0, 15994.0], [46.1, 16007.0], [46.2, 16094.0], [46.3, 16107.0], [46.4, 16107.0], [46.5, 16166.0], [46.6, 16181.0], [46.7, 16194.0], [46.8, 16220.0], [46.9, 16220.0], [47.0, 16390.0], [47.1, 16408.0], [47.2, 16435.0], [47.3, 16435.0], [47.4, 16529.0], [47.5, 16545.0], [47.6, 16793.0], [47.7, 16827.0], [47.8, 16827.0], [47.9, 16871.0], [48.0, 16871.0], [48.1, 16915.0], [48.2, 16915.0], [48.3, 16963.0], [48.4, 17009.0], [48.5, 17063.0], [48.6, 17086.0], [48.7, 17086.0], [48.8, 17177.0], [48.9, 17311.0], [49.0, 17472.0], [49.1, 17472.0], [49.2, 17677.0], [49.3, 17689.0], [49.4, 17731.0], [49.5, 17743.0], [49.6, 17743.0], [49.7, 17799.0], [49.8, 17842.0], [49.9, 17887.0], [50.0, 17887.0], [50.1, 17893.0], [50.2, 17906.0], [50.3, 17950.0], [50.4, 18157.0], [50.5, 18157.0], [50.6, 18330.0], [50.7, 18335.0], [50.8, 18340.0], [50.9, 18545.0], [51.0, 18545.0], [51.1, 18576.0], [51.2, 18581.0], [51.3, 18588.0], [51.4, 18588.0], [51.5, 18615.0], [51.6, 18644.0], [51.7, 18747.0], [51.8, 18786.0], [51.9, 18786.0], [52.0, 18833.0], [52.1, 18906.0], [52.2, 18910.0], [52.3, 18910.0], [52.4, 19022.0], [52.5, 19045.0], [52.6, 19056.0], [52.7, 19082.0], [52.8, 19082.0], [52.9, 19106.0], [53.0, 19138.0], [53.1, 19159.0], [53.2, 19159.0], [53.3, 19160.0], [53.4, 19174.0], [53.5, 19209.0], [53.6, 19220.0], [53.7, 19220.0], [53.8, 19229.0], [53.9, 19232.0], [54.0, 19263.0], [54.1, 19263.0], [54.2, 19264.0], [54.3, 19297.0], [54.4, 19358.0], [54.5, 19442.0], [54.6, 19442.0], [54.7, 19465.0], [54.8, 19535.0], [54.9, 19698.0], [55.0, 19698.0], [55.1, 19759.0], [55.2, 19795.0], [55.3, 19854.0], [55.4, 20135.0], [55.5, 20135.0], [55.6, 20263.0], [55.7, 20502.0], [55.8, 20579.0], [55.9, 20579.0], [56.0, 20630.0], [56.1, 20648.0], [56.2, 20846.0], [56.3, 20988.0], [56.4, 20988.0], [56.5, 21161.0], [56.6, 21255.0], [56.7, 21290.0], [56.8, 21290.0], [56.9, 21359.0], [57.0, 21373.0], [57.1, 21526.0], [57.2, 21576.0], [57.3, 21576.0], [57.4, 21588.0], [57.5, 21661.0], [57.6, 21693.0], [57.7, 21693.0], [57.8, 21696.0], [57.9, 21715.0], [58.0, 21764.0], [58.1, 21839.0], [58.2, 21839.0], [58.3, 21912.0], [58.4, 22025.0], [58.5, 22082.0], [58.6, 22082.0], [58.7, 22358.0], [58.8, 22463.0], [58.9, 22528.0], [59.0, 22552.0], [59.1, 22552.0], [59.2, 22568.0], [59.3, 22748.0], [59.4, 22841.0], [59.5, 22841.0], [59.6, 22957.0], [59.7, 22987.0], [59.8, 23029.0], [59.9, 23033.0], [60.0, 23033.0], [60.1, 23153.0], [60.2, 23196.0], [60.3, 23212.0], [60.4, 23212.0], [60.5, 23226.0], [60.6, 23239.0], [60.7, 23239.0], [60.8, 23279.0], [60.9, 23279.0], [61.0, 23319.0], [61.1, 23324.0], [61.2, 23326.0], [61.3, 23326.0], [61.4, 23398.0], [61.5, 23456.0], [61.6, 23544.0], [61.7, 23570.0], [61.8, 23570.0], [61.9, 23580.0], [62.0, 23670.0], [62.1, 23764.0], [62.2, 23764.0], [62.3, 23861.0], [62.4, 23899.0], [62.5, 23917.0], [62.6, 23918.0], [62.7, 23918.0], [62.8, 23963.0], [62.9, 24139.0], [63.0, 24287.0], [63.1, 24287.0], [63.2, 24336.0], [63.3, 24337.0], [63.4, 24383.0], [63.5, 24414.0], [63.6, 24414.0], [63.7, 24424.0], [63.8, 24430.0], [63.9, 24609.0], [64.0, 24609.0], [64.1, 24675.0], [64.2, 24690.0], [64.3, 24698.0], [64.4, 24702.0], [64.5, 24702.0], [64.6, 24755.0], [64.7, 24760.0], [64.8, 24812.0], [64.9, 24812.0], [65.0, 24821.0], [65.1, 24912.0], [65.2, 24919.0], [65.3, 24947.0], [65.4, 24947.0], [65.5, 25173.0], [65.6, 25226.0], [65.7, 25311.0], [65.8, 25311.0], [65.9, 25372.0], [66.0, 25479.0], [66.1, 25551.0], [66.2, 25588.0], [66.3, 25588.0], [66.4, 25696.0], [66.5, 25753.0], [66.6, 25763.0], [66.7, 25763.0], [66.8, 25768.0], [66.9, 25794.0], [67.0, 25919.0], [67.1, 25972.0], [67.2, 25972.0], [67.3, 26076.0], [67.4, 26094.0], [67.5, 26097.0], [67.6, 26097.0], [67.7, 26243.0], [67.8, 26276.0], [67.9, 26285.0], [68.0, 26344.0], [68.1, 26344.0], [68.2, 26472.0], [68.3, 26484.0], [68.4, 26496.0], [68.5, 26496.0], [68.6, 26533.0], [68.7, 26602.0], [68.8, 26703.0], [68.9, 26898.0], [69.0, 26898.0], [69.1, 26970.0], [69.2, 27005.0], [69.3, 27151.0], [69.4, 27151.0], [69.5, 27261.0], [69.6, 27450.0], [69.7, 27871.0], [69.8, 27970.0], [69.9, 27970.0], [70.0, 28005.0], [70.1, 28087.0], [70.2, 28117.0], [70.3, 28117.0], [70.4, 28178.0], [70.5, 28198.0], [70.6, 28261.0], [70.7, 28378.0], [70.8, 28378.0], [70.9, 28415.0], [71.0, 28460.0], [71.1, 28477.0], [71.2, 28477.0], [71.3, 28752.0], [71.4, 28754.0], [71.5, 29108.0], [71.6, 29133.0], [71.7, 29133.0], [71.8, 29271.0], [71.9, 29483.0], [72.0, 29642.0], [72.1, 29642.0], [72.2, 29668.0], [72.3, 29724.0], [72.4, 29818.0], [72.5, 29912.0], [72.6, 29912.0], [72.7, 29954.0], [72.8, 30026.0], [72.9, 30075.0], [73.0, 30075.0], [73.1, 30162.0], [73.2, 30168.0], [73.3, 30320.0], [73.4, 30334.0], [73.5, 30334.0], [73.6, 30344.0], [73.7, 30348.0], [73.8, 30508.0], [73.9, 30508.0], [74.0, 30546.0], [74.1, 30610.0], [74.2, 31030.0], [74.3, 31057.0], [74.4, 31057.0], [74.5, 31071.0], [74.6, 31124.0], [74.7, 31152.0], [74.8, 31152.0], [74.9, 31220.0], [75.0, 31421.0], [75.1, 31432.0], [75.2, 31544.0], [75.3, 31544.0], [75.4, 31565.0], [75.5, 31637.0], [75.6, 31646.0], [75.7, 31646.0], [75.8, 31749.0], [75.9, 31751.0], [76.0, 31876.0], [76.1, 32076.0], [76.2, 32076.0], [76.3, 32159.0], [76.4, 32242.0], [76.5, 32284.0], [76.6, 32284.0], [76.7, 32400.0], [76.8, 32408.0], [76.9, 32522.0], [77.0, 32572.0], [77.1, 32572.0], [77.2, 32651.0], [77.3, 33124.0], [77.4, 33215.0], [77.5, 33215.0], [77.6, 33268.0], [77.7, 33294.0], [77.8, 33319.0], [77.9, 33343.0], [78.0, 33343.0], [78.1, 33386.0], [78.2, 33560.0], [78.3, 33654.0], [78.4, 33654.0], [78.5, 33686.0], [78.6, 33708.0], [78.7, 33768.0], [78.8, 33787.0], [78.9, 33787.0], [79.0, 33808.0], [79.1, 33938.0], [79.2, 34020.0], [79.3, 34020.0], [79.4, 34040.0], [79.5, 34048.0], [79.6, 34206.0], [79.7, 34223.0], [79.8, 34223.0], [79.9, 34254.0], [80.0, 34348.0], [80.1, 34400.0], [80.2, 34400.0], [80.3, 34411.0], [80.4, 34526.0], [80.5, 34563.0], [80.6, 34662.0], [80.7, 34662.0], [80.8, 34783.0], [80.9, 34839.0], [81.0, 34953.0], [81.1, 34953.0], [81.2, 34976.0], [81.3, 34988.0], [81.4, 35020.0], [81.5, 35068.0], [81.6, 35068.0], [81.7, 35226.0], [81.8, 35392.0], [81.9, 35625.0], [82.0, 35625.0], [82.1, 35630.0], [82.2, 35652.0], [82.3, 35666.0], [82.4, 35775.0], [82.5, 35775.0], [82.6, 35816.0], [82.7, 36022.0], [82.8, 36032.0], [82.9, 36032.0], [83.0, 36053.0], [83.1, 36151.0], [83.2, 36266.0], [83.3, 36268.0], [83.4, 36268.0], [83.5, 36308.0], [83.6, 36346.0], [83.7, 36446.0], [83.8, 36446.0], [83.9, 36462.0], [84.0, 36543.0], [84.1, 36545.0], [84.2, 36577.0], [84.3, 36577.0], [84.4, 36639.0], [84.5, 36761.0], [84.6, 36957.0], [84.7, 36957.0], [84.8, 37145.0], [84.9, 37149.0], [85.0, 37349.0], [85.1, 37502.0], [85.2, 37502.0], [85.3, 37526.0], [85.4, 37551.0], [85.5, 37759.0], [85.6, 37759.0], [85.7, 38176.0], [85.8, 38205.0], [85.9, 38624.0], [86.0, 38659.0], [86.1, 38659.0], [86.2, 38664.0], [86.3, 39046.0], [86.4, 39126.0], [86.5, 39126.0], [86.6, 39182.0], [86.7, 39196.0], [86.8, 39337.0], [86.9, 39411.0], [87.0, 39411.0], [87.1, 39495.0], [87.2, 39658.0], [87.3, 39660.0], [87.4, 39660.0], [87.5, 39750.0], [87.6, 40035.0], [87.7, 40238.0], [87.8, 40317.0], [87.9, 40317.0], [88.0, 40318.0], [88.1, 40585.0], [88.2, 40848.0], [88.3, 40848.0], [88.4, 40984.0], [88.5, 41130.0], [88.6, 41138.0], [88.7, 41144.0], [88.8, 41144.0], [88.9, 41149.0], [89.0, 41222.0], [89.1, 41318.0], [89.2, 41318.0], [89.3, 41517.0], [89.4, 41520.0], [89.5, 41639.0], [89.6, 41657.0], [89.7, 41657.0], [89.8, 41660.0], [89.9, 41760.0], [90.0, 42073.0], [90.1, 42073.0], [90.2, 42157.0], [90.3, 42180.0], [90.4, 42376.0], [90.5, 42496.0], [90.6, 42496.0], [90.7, 42726.0], [90.8, 42750.0], [90.9, 42793.0], [91.0, 42793.0], [91.1, 43080.0], [91.2, 43127.0], [91.3, 43207.0], [91.4, 43280.0], [91.5, 43280.0], [91.6, 43312.0], [91.7, 43433.0], [91.8, 43530.0], [91.9, 43530.0], [92.0, 43538.0], [92.1, 43540.0], [92.2, 43617.0], [92.3, 43687.0], [92.4, 43687.0], [92.5, 43722.0], [92.6, 44063.0], [92.7, 44074.0], [92.8, 44074.0], [92.9, 44133.0], [93.0, 44444.0], [93.1, 44717.0], [93.2, 44728.0], [93.3, 44728.0], [93.4, 44900.0], [93.5, 44974.0], [93.6, 45322.0], [93.7, 45322.0], [93.8, 45399.0], [93.9, 45464.0], [94.0, 45787.0], [94.1, 45822.0], [94.2, 45822.0], [94.3, 45895.0], [94.4, 46137.0], [94.5, 46491.0], [94.6, 46491.0], [94.7, 46501.0], [94.8, 46631.0], [94.9, 46739.0], [95.0, 46973.0], [95.1, 46973.0], [95.2, 47073.0], [95.3, 47231.0], [95.4, 47497.0], [95.5, 47497.0], [95.6, 47564.0], [95.7, 47814.0], [95.8, 48503.0], [95.9, 48633.0], [96.0, 48633.0], [96.1, 48862.0], [96.2, 48987.0], [96.3, 49241.0], [96.4, 49241.0], [96.5, 49251.0], [96.6, 49335.0], [96.7, 49559.0], [96.8, 49619.0], [96.9, 49619.0], [97.0, 49794.0], [97.1, 50272.0], [97.2, 51023.0], [97.3, 51023.0], [97.4, 51606.0], [97.5, 51972.0], [97.6, 52008.0], [97.7, 52523.0], [97.8, 52523.0], [97.9, 53018.0], [98.0, 53358.0], [98.1, 53682.0], [98.2, 53682.0], [98.3, 54222.0], [98.4, 54478.0], [98.5, 54494.0], [98.6, 54825.0], [98.7, 54825.0], [98.8, 55048.0], [98.9, 55726.0], [99.0, 55747.0], [99.1, 55747.0], [99.2, 56125.0], [99.3, 56603.0], [99.4, 58377.0], [99.5, 58511.0], [99.6, 58511.0], [99.7, 60016.0], [99.8, 60400.0], [99.9, 75538.0], [100.0, 75538.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 123.0], [0.1, 123.0], [0.2, 124.0], [0.3, 124.0], [0.4, 125.0], [0.5, 125.0], [0.6, 125.0], [0.7, 125.0], [0.8, 125.0], [0.9, 125.0], [1.0, 125.0], [1.1, 126.0], [1.2, 126.0], [1.3, 126.0], [1.4, 126.0], [1.5, 126.0], [1.6, 126.0], [1.7, 127.0], [1.8, 127.0], [1.9, 127.0], [2.0, 127.0], [2.1, 127.0], [2.2, 127.0], [2.3, 127.0], [2.4, 127.0], [2.5, 128.0], [2.6, 128.0], [2.7, 128.0], [2.8, 128.0], [2.9, 128.0], [3.0, 128.0], [3.1, 128.0], [3.2, 128.0], [3.3, 128.0], [3.4, 128.0], [3.5, 129.0], [3.6, 129.0], [3.7, 129.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 130.0], [4.2, 130.0], [4.3, 130.0], [4.4, 130.0], [4.5, 130.0], [4.6, 130.0], [4.7, 130.0], [4.8, 130.0], [4.9, 130.0], [5.0, 130.0], [5.1, 130.0], [5.2, 130.0], [5.3, 130.0], [5.4, 131.0], [5.5, 131.0], [5.6, 131.0], [5.7, 131.0], [5.8, 131.0], [5.9, 131.0], [6.0, 131.0], [6.1, 131.0], [6.2, 131.0], [6.3, 131.0], [6.4, 131.0], [6.5, 132.0], [6.6, 132.0], [6.7, 132.0], [6.8, 132.0], [6.9, 132.0], [7.0, 132.0], [7.1, 132.0], [7.2, 132.0], [7.3, 132.0], [7.4, 132.0], [7.5, 132.0], [7.6, 132.0], [7.7, 132.0], [7.8, 132.0], [7.9, 132.0], [8.0, 133.0], [8.1, 133.0], [8.2, 133.0], [8.3, 133.0], [8.4, 133.0], [8.5, 133.0], [8.6, 133.0], [8.7, 133.0], [8.8, 133.0], [8.9, 133.0], [9.0, 133.0], [9.1, 133.0], [9.2, 133.0], [9.3, 133.0], [9.4, 133.0], [9.5, 133.0], [9.6, 133.0], [9.7, 133.0], [9.8, 133.0], [9.9, 133.0], [10.0, 133.0], [10.1, 133.0], [10.2, 133.0], [10.3, 134.0], [10.4, 134.0], [10.5, 134.0], [10.6, 134.0], [10.7, 134.0], [10.8, 134.0], [10.9, 134.0], [11.0, 134.0], [11.1, 134.0], [11.2, 134.0], [11.3, 134.0], [11.4, 134.0], [11.5, 134.0], [11.6, 134.0], [11.7, 134.0], [11.8, 134.0], [11.9, 134.0], [12.0, 134.0], [12.1, 135.0], [12.2, 135.0], [12.3, 135.0], [12.4, 135.0], [12.5, 135.0], [12.6, 135.0], [12.7, 135.0], [12.8, 135.0], [12.9, 136.0], [13.0, 136.0], [13.1, 136.0], [13.2, 136.0], [13.3, 136.0], [13.4, 136.0], [13.5, 136.0], [13.6, 136.0], [13.7, 136.0], [13.8, 136.0], [13.9, 136.0], [14.0, 137.0], [14.1, 137.0], [14.2, 137.0], [14.3, 137.0], [14.4, 137.0], [14.5, 137.0], [14.6, 138.0], [14.7, 138.0], [14.8, 138.0], [14.9, 139.0], [15.0, 139.0], [15.1, 139.0], [15.2, 139.0], [15.3, 140.0], [15.4, 140.0], [15.5, 266.0], [15.6, 325.0], [15.7, 4308.0], [15.8, 4308.0], [15.9, 4365.0], [16.0, 4376.0], [16.1, 4472.0], [16.2, 4555.0], [16.3, 4555.0], [16.4, 4657.0], [16.5, 4748.0], [16.6, 4870.0], [16.7, 4870.0], [16.8, 4880.0], [16.9, 4887.0], [17.0, 5068.0], [17.1, 5079.0], [17.2, 5079.0], [17.3, 5091.0], [17.4, 5091.0], [17.5, 5111.0], [17.6, 5111.0], [17.7, 5121.0], [17.8, 5126.0], [17.9, 5140.0], [18.0, 5140.0], [18.1, 5154.0], [18.2, 5183.0], [18.3, 5202.0], [18.4, 5208.0], [18.5, 5208.0], [18.6, 5208.0], [18.7, 5210.0], [18.8, 5215.0], [18.9, 5215.0], [19.0, 5217.0], [19.1, 5222.0], [19.2, 5241.0], [19.3, 5241.0], [19.4, 5252.0], [19.5, 5263.0], [19.6, 5266.0], [19.7, 5280.0], [19.8, 5280.0], [19.9, 5305.0], [20.0, 5312.0], [20.1, 5353.0], [20.2, 5353.0], [20.3, 5383.0], [20.4, 5413.0], [20.5, 5465.0], [20.6, 5509.0], [20.7, 5509.0], [20.8, 5584.0], [20.9, 5624.0], [21.0, 5626.0], [21.1, 5626.0], [21.2, 5699.0], [21.3, 5880.0], [21.4, 5890.0], [21.5, 5890.0], [21.6, 5893.0], [21.7, 5902.0], [21.8, 5918.0], [21.9, 5919.0], [22.0, 5919.0], [22.1, 5971.0], [22.2, 6006.0], [22.3, 6025.0], [22.4, 6025.0], [22.5, 6038.0], [22.6, 6205.0], [22.7, 6379.0], [22.8, 6380.0], [22.9, 6380.0], [23.0, 6449.0], [23.1, 6503.0], [23.2, 6562.0], [23.3, 6562.0], [23.4, 6588.0], [23.5, 6598.0], [23.6, 6722.0], [23.7, 6722.0], [23.8, 6778.0], [23.9, 6831.0], [24.0, 7141.0], [24.1, 7259.0], [24.2, 7259.0], [24.3, 7300.0], [24.4, 7411.0], [24.5, 7459.0], [24.6, 7459.0], [24.7, 7480.0], [24.8, 7556.0], [24.9, 7571.0], [25.0, 7571.0], [25.1, 7605.0], [25.2, 7647.0], [25.3, 7670.0], [25.4, 7710.0], [25.5, 7710.0], [25.6, 7806.0], [25.7, 7862.0], [25.8, 7875.0], [25.9, 7875.0], [26.0, 7899.0], [26.1, 7980.0], [26.2, 8058.0], [26.3, 8067.0], [26.4, 8067.0], [26.5, 8126.0], [26.6, 8133.0], [26.7, 8154.0], [26.8, 8154.0], [26.9, 8161.0], [27.0, 8295.0], [27.1, 8366.0], [27.2, 8366.0], [27.3, 8371.0], [27.4, 8425.0], [27.5, 8478.0], [27.6, 8568.0], [27.7, 8568.0], [27.8, 8588.0], [27.9, 8860.0], [28.0, 8931.0], [28.1, 8931.0], [28.2, 8956.0], [28.3, 8995.0], [28.4, 9132.0], [28.5, 9192.0], [28.6, 9192.0], [28.7, 9216.0], [28.8, 9222.0], [28.9, 9232.0], [29.0, 9232.0], [29.1, 9275.0], [29.2, 9324.0], [29.3, 9344.0], [29.4, 9344.0], [29.5, 9400.0], [29.6, 9441.0], [29.7, 9462.0], [29.8, 9464.0], [29.9, 9464.0], [30.0, 9563.0], [30.1, 9573.0], [30.2, 9607.0], [30.3, 9607.0], [30.4, 9613.0], [30.5, 9614.0], [30.6, 9765.0], [30.7, 9775.0], [30.8, 9775.0], [30.9, 9838.0], [31.0, 9843.0], [31.1, 9871.0], [31.2, 9871.0], [31.3, 9942.0], [31.4, 10084.0], [31.5, 10091.0], [31.6, 10091.0], [31.7, 10161.0], [31.8, 10240.0], [31.9, 10302.0], [32.0, 10378.0], [32.1, 10378.0], [32.2, 10390.0], [32.3, 10407.0], [32.4, 10478.0], [32.5, 10478.0], [32.6, 10496.0], [32.7, 10536.0], [32.8, 10576.0], [32.9, 10576.0], [33.0, 10602.0], [33.1, 10667.0], [33.2, 10767.0], [33.3, 10815.0], [33.4, 10815.0], [33.5, 10911.0], [33.6, 10917.0], [33.7, 11129.0], [33.8, 11129.0], [33.9, 11130.0], [34.0, 11150.0], [34.1, 11171.0], [34.2, 11305.0], [34.3, 11305.0], [34.4, 11330.0], [34.5, 11339.0], [34.6, 11341.0], [34.7, 11341.0], [34.8, 11370.0], [34.9, 11412.0], [35.0, 11482.0], [35.1, 11482.0], [35.2, 11523.0], [35.3, 11608.0], [35.4, 11784.0], [35.5, 11814.0], [35.6, 11814.0], [35.7, 11836.0], [35.8, 11917.0], [35.9, 11933.0], [36.0, 11933.0], [36.1, 11941.0], [36.2, 11957.0], [36.3, 12040.0], [36.4, 12285.0], [36.5, 12285.0], [36.6, 12317.0], [36.7, 12403.0], [36.8, 12424.0], [36.9, 12424.0], [37.0, 12463.0], [37.1, 12467.0], [37.2, 12476.0], [37.3, 12476.0], [37.4, 12519.0], [37.5, 12572.0], [37.6, 12584.0], [37.7, 12632.0], [37.8, 12632.0], [37.9, 12649.0], [38.0, 12653.0], [38.1, 12673.0], [38.2, 12673.0], [38.3, 12688.0], [38.4, 12715.0], [38.5, 12755.0], [38.6, 12755.0], [38.7, 12779.0], [38.8, 12890.0], [38.9, 12936.0], [39.0, 12997.0], [39.1, 12997.0], [39.2, 13125.0], [39.3, 13193.0], [39.4, 13205.0], [39.5, 13205.0], [39.6, 13278.0], [39.7, 13295.0], [39.8, 13417.0], [39.9, 13420.0], [40.0, 13420.0], [40.1, 13453.0], [40.2, 13471.0], [40.3, 13517.0], [40.4, 13517.0], [40.5, 13521.0], [40.6, 13708.0], [40.7, 13784.0], [40.8, 13784.0], [40.9, 13866.0], [41.0, 13902.0], [41.1, 13909.0], [41.2, 13945.0], [41.3, 13945.0], [41.4, 13950.0], [41.5, 13974.0], [41.6, 14222.0], [41.7, 14222.0], [41.8, 14243.0], [41.9, 14259.0], [42.0, 14429.0], [42.1, 14442.0], [42.2, 14442.0], [42.3, 14473.0], [42.4, 14494.0], [42.5, 14517.0], [42.6, 14517.0], [42.7, 14630.0], [42.8, 14688.0], [42.9, 14772.0], [43.0, 14772.0], [43.1, 14807.0], [43.2, 14885.0], [43.3, 14888.0], [43.4, 14901.0], [43.5, 14901.0], [43.6, 14903.0], [43.7, 14923.0], [43.8, 14924.0], [43.9, 14924.0], [44.0, 14991.0], [44.1, 15012.0], [44.2, 15019.0], [44.3, 15019.0], [44.4, 15072.0], [44.5, 15200.0], [44.6, 15202.0], [44.7, 15272.0], [44.8, 15272.0], [44.9, 15305.0], [45.0, 15306.0], [45.1, 15323.0], [45.2, 15323.0], [45.3, 15334.0], [45.4, 15371.0], [45.5, 15609.0], [45.6, 15719.0], [45.7, 15719.0], [45.8, 15749.0], [45.9, 15825.0], [46.0, 15836.0], [46.1, 15836.0], [46.2, 15852.0], [46.3, 15882.0], [46.4, 15937.0], [46.5, 15937.0], [46.6, 15956.0], [46.7, 16131.0], [46.8, 16139.0], [46.9, 16188.0], [47.0, 16188.0], [47.1, 16262.0], [47.2, 16277.0], [47.3, 16539.0], [47.4, 16539.0], [47.5, 16554.0], [47.6, 16582.0], [47.7, 16620.0], [47.8, 16669.0], [47.9, 16669.0], [48.0, 16708.0], [48.1, 16755.0], [48.2, 16779.0], [48.3, 16779.0], [48.4, 16794.0], [48.5, 16876.0], [48.6, 17043.0], [48.7, 17043.0], [48.8, 17221.0], [48.9, 17405.0], [49.0, 17441.0], [49.1, 17458.0], [49.2, 17458.0], [49.3, 17470.0], [49.4, 17507.0], [49.5, 17565.0], [49.6, 17565.0], [49.7, 17615.0], [49.8, 17637.0], [49.9, 17641.0], [50.0, 17680.0], [50.1, 17680.0], [50.2, 17864.0], [50.3, 17939.0], [50.4, 18071.0], [50.5, 18071.0], [50.6, 18090.0], [50.7, 18265.0], [50.8, 18265.0], [50.9, 18265.0], [51.0, 18311.0], [51.1, 18328.0], [51.2, 18358.0], [51.3, 18387.0], [51.4, 18387.0], [51.5, 18488.0], [51.6, 18513.0], [51.7, 18571.0], [51.8, 18571.0], [51.9, 18656.0], [52.0, 18658.0], [52.1, 18767.0], [52.2, 18767.0], [52.3, 18782.0], [52.4, 18803.0], [52.5, 18805.0], [52.6, 18854.0], [52.7, 18854.0], [52.8, 18879.0], [52.9, 18896.0], [53.0, 18908.0], [53.1, 18908.0], [53.2, 18909.0], [53.3, 18935.0], [53.4, 18950.0], [53.5, 18951.0], [53.6, 18951.0], [53.7, 18966.0], [53.8, 18981.0], [53.9, 19004.0], [54.0, 19004.0], [54.1, 19018.0], [54.2, 19099.0], [54.3, 19183.0], [54.4, 19183.0], [54.5, 19218.0], [54.6, 19265.0], [54.7, 19434.0], [54.8, 19483.0], [54.9, 19483.0], [55.0, 19532.0], [55.1, 19593.0], [55.2, 19864.0], [55.3, 19864.0], [55.4, 20010.0], [55.5, 20217.0], [55.6, 20318.0], [55.7, 20368.0], [55.8, 20368.0], [55.9, 20377.0], [56.0, 20592.0], [56.1, 20710.0], [56.2, 20710.0], [56.3, 20889.0], [56.4, 21002.0], [56.5, 21031.0], [56.6, 21031.0], [56.7, 21102.0], [56.8, 21118.0], [56.9, 21271.0], [57.0, 21309.0], [57.1, 21309.0], [57.2, 21324.0], [57.3, 21369.0], [57.4, 21433.0], [57.5, 21433.0], [57.6, 21440.0], [57.7, 21444.0], [57.8, 21513.0], [57.9, 21513.0], [58.0, 21589.0], [58.1, 21652.0], [58.2, 21712.0], [58.3, 21819.0], [58.4, 21819.0], [58.5, 22074.0], [58.6, 22183.0], [58.7, 22267.0], [58.8, 22267.0], [58.9, 22287.0], [59.0, 22315.0], [59.1, 22479.0], [59.2, 22558.0], [59.3, 22558.0], [59.4, 22682.0], [59.5, 22737.0], [59.6, 22738.0], [59.7, 22738.0], [59.8, 22746.0], [59.9, 22874.0], [60.0, 22938.0], [60.1, 22938.0], [60.2, 22941.0], [60.3, 22943.0], [60.4, 22978.0], [60.5, 22992.0], [60.6, 22992.0], [60.7, 23005.0], [60.8, 23055.0], [60.9, 23060.0], [61.0, 23060.0], [61.1, 23071.0], [61.2, 23136.0], [61.3, 23190.0], [61.4, 23277.0], [61.5, 23277.0], [61.6, 23321.0], [61.7, 23332.0], [61.8, 23386.0], [61.9, 23386.0], [62.0, 23513.0], [62.1, 23578.0], [62.2, 23612.0], [62.3, 23612.0], [62.4, 23642.0], [62.5, 23649.0], [62.6, 23708.0], [62.7, 23875.0], [62.8, 23875.0], [62.9, 23999.0], [63.0, 24054.0], [63.1, 24086.0], [63.2, 24086.0], [63.3, 24098.0], [63.4, 24133.0], [63.5, 24166.0], [63.6, 24166.0], [63.7, 24167.0], [63.8, 24333.0], [63.9, 24381.0], [64.0, 24395.0], [64.1, 24395.0], [64.2, 24424.0], [64.3, 24427.0], [64.4, 24440.0], [64.5, 24440.0], [64.6, 24508.0], [64.7, 24543.0], [64.8, 24570.0], [64.9, 24649.0], [65.0, 24649.0], [65.1, 24657.0], [65.2, 24689.0], [65.3, 24904.0], [65.4, 24904.0], [65.5, 24974.0], [65.6, 25050.0], [65.7, 25090.0], [65.8, 25090.0], [65.9, 25214.0], [66.0, 25289.0], [66.1, 25299.0], [66.2, 25362.0], [66.3, 25362.0], [66.4, 25473.0], [66.5, 25477.0], [66.6, 25513.0], [66.7, 25513.0], [66.8, 25534.0], [66.9, 25650.0], [67.0, 25715.0], [67.1, 25806.0], [67.2, 25806.0], [67.3, 25841.0], [67.4, 25846.0], [67.5, 25989.0], [67.6, 25989.0], [67.7, 26013.0], [67.8, 26020.0], [67.9, 26054.0], [68.0, 26054.0], [68.1, 26182.0], [68.2, 26204.0], [68.3, 26229.0], [68.4, 26254.0], [68.5, 26254.0], [68.6, 26330.0], [68.7, 26446.0], [68.8, 26637.0], [68.9, 26637.0], [69.0, 26704.0], [69.1, 26739.0], [69.2, 26883.0], [69.3, 26883.0], [69.4, 27008.0], [69.5, 27135.0], [69.6, 27602.0], [69.7, 27706.0], [69.8, 27706.0], [69.9, 27732.0], [70.0, 27764.0], [70.1, 27842.0], [70.2, 27842.0], [70.3, 27918.0], [70.4, 27928.0], [70.5, 28010.0], [70.6, 28048.0], [70.7, 28048.0], [70.8, 28099.0], [70.9, 28196.0], [71.0, 28222.0], [71.1, 28222.0], [71.2, 28482.0], [71.3, 28495.0], [71.4, 28844.0], [71.5, 28844.0], [71.6, 28874.0], [71.7, 28963.0], [71.8, 29210.0], [71.9, 29330.0], [72.0, 29330.0], [72.1, 29412.0], [72.2, 29475.0], [72.3, 29547.0], [72.4, 29547.0], [72.5, 29633.0], [72.6, 29705.0], [72.7, 29759.0], [72.8, 29811.0], [72.9, 29811.0], [73.0, 29865.0], [73.1, 29890.0], [73.2, 30007.0], [73.3, 30007.0], [73.4, 30051.0], [73.5, 30093.0], [73.6, 30096.0], [73.7, 30096.0], [73.8, 30222.0], [73.9, 30286.0], [74.0, 30354.0], [74.1, 30739.0], [74.2, 30739.0], [74.3, 30764.0], [74.4, 30803.0], [74.5, 30819.0], [74.6, 30819.0], [74.7, 30885.0], [74.8, 30946.0], [74.9, 31143.0], [75.0, 31174.0], [75.1, 31174.0], [75.2, 31278.0], [75.3, 31293.0], [75.4, 31372.0], [75.5, 31372.0], [75.6, 31379.0], [75.7, 31488.0], [75.8, 31489.0], [75.9, 31489.0], [76.0, 31606.0], [76.1, 31800.0], [76.2, 31806.0], [76.3, 31883.0], [76.4, 31883.0], [76.5, 32020.0], [76.6, 32135.0], [76.7, 32140.0], [76.8, 32140.0], [76.9, 32244.0], [77.0, 32316.0], [77.1, 32379.0], [77.2, 32379.0], [77.3, 32794.0], [77.4, 32892.0], [77.5, 33011.0], [77.6, 33015.0], [77.7, 33015.0], [77.8, 33060.0], [77.9, 33063.0], [78.0, 33104.0], [78.1, 33104.0], [78.2, 33293.0], [78.3, 33384.0], [78.4, 33415.0], [78.5, 33426.0], [78.6, 33426.0], [78.7, 33498.0], [78.8, 33521.0], [78.9, 33556.0], [79.0, 33556.0], [79.1, 33688.0], [79.2, 33751.0], [79.3, 33779.0], [79.4, 33779.0], [79.5, 33798.0], [79.6, 33942.0], [79.7, 33964.0], [79.8, 33993.0], [79.9, 33993.0], [80.0, 33993.0], [80.1, 34139.0], [80.2, 34167.0], [80.3, 34167.0], [80.4, 34265.0], [80.5, 34305.0], [80.6, 34392.0], [80.7, 34508.0], [80.8, 34508.0], [80.9, 34585.0], [81.0, 34650.0], [81.1, 34687.0], [81.2, 34687.0], [81.3, 34714.0], [81.4, 34725.0], [81.5, 34810.0], [81.6, 34810.0], [81.7, 34967.0], [81.8, 35137.0], [81.9, 35356.0], [82.0, 35376.0], [82.1, 35376.0], [82.2, 35382.0], [82.3, 35401.0], [82.4, 35510.0], [82.5, 35510.0], [82.6, 35540.0], [82.7, 35766.0], [82.8, 35767.0], [82.9, 35767.0], [83.0, 35771.0], [83.1, 35897.0], [83.2, 36001.0], [83.3, 36008.0], [83.4, 36008.0], [83.5, 36009.0], [83.6, 36081.0], [83.7, 36170.0], [83.8, 36170.0], [83.9, 36182.0], [84.0, 36271.0], [84.1, 36293.0], [84.2, 36329.0], [84.3, 36329.0], [84.4, 36381.0], [84.5, 36507.0], [84.6, 36699.0], [84.7, 36699.0], [84.8, 36804.0], [84.9, 36894.0], [85.0, 37090.0], [85.1, 37090.0], [85.2, 37222.0], [85.3, 37267.0], [85.4, 37273.0], [85.5, 37503.0], [85.6, 37503.0], [85.7, 37907.0], [85.8, 37953.0], [85.9, 38355.0], [86.0, 38355.0], [86.1, 38360.0], [86.2, 38411.0], [86.3, 38792.0], [86.4, 38834.0], [86.5, 38834.0], [86.6, 38913.0], [86.7, 38926.0], [86.8, 39069.0], [86.9, 39069.0], [87.0, 39099.0], [87.1, 39231.0], [87.2, 39391.0], [87.3, 39391.0], [87.4, 39393.0], [87.5, 39424.0], [87.6, 39768.0], [87.7, 39971.0], [87.8, 39971.0], [87.9, 40053.0], [88.0, 40057.0], [88.1, 40298.0], [88.2, 40298.0], [88.3, 40593.0], [88.4, 40736.0], [88.5, 40774.0], [88.6, 40774.0], [88.7, 40876.0], [88.8, 40892.0], [88.9, 40894.0], [89.0, 40958.0], [89.1, 40958.0], [89.2, 41057.0], [89.3, 41233.0], [89.4, 41245.0], [89.5, 41245.0], [89.6, 41335.0], [89.7, 41392.0], [89.8, 41396.0], [89.9, 41429.0], [90.0, 41429.0], [90.1, 41825.0], [90.2, 41861.0], [90.3, 41890.0], [90.4, 41890.0], [90.5, 42117.0], [90.6, 42246.0], [90.7, 42463.0], [90.8, 42463.0], [90.9, 42499.0], [91.0, 42526.0], [91.1, 42821.0], [91.2, 42867.0], [91.3, 42867.0], [91.4, 42944.0], [91.5, 43025.0], [91.6, 43050.0], [91.7, 43050.0], [91.8, 43178.0], [91.9, 43272.0], [92.0, 43277.0], [92.1, 43295.0], [92.2, 43295.0], [92.3, 43365.0], [92.4, 43394.0], [92.5, 43458.0], [92.6, 43458.0], [92.7, 43787.0], [92.8, 43807.0], [92.9, 43847.0], [93.0, 43847.0], [93.1, 44176.0], [93.2, 44470.0], [93.3, 44473.0], [93.4, 44595.0], [93.5, 44595.0], [93.6, 44723.0], [93.7, 45055.0], [93.8, 45152.0], [93.9, 45152.0], [94.0, 45213.0], [94.1, 45523.0], [94.2, 45540.0], [94.3, 45540.0], [94.4, 45631.0], [94.5, 45870.0], [94.6, 46230.0], [94.7, 46251.0], [94.8, 46251.0], [94.9, 46351.0], [95.0, 46474.0], [95.1, 46699.0], [95.2, 46699.0], [95.3, 46770.0], [95.4, 46931.0], [95.5, 47251.0], [95.6, 47299.0], [95.7, 47299.0], [95.8, 47558.0], [95.9, 47565.0], [96.0, 48240.0], [96.1, 48240.0], [96.2, 48306.0], [96.3, 48366.0], [96.4, 48592.0], [96.5, 48592.0], [96.6, 48942.0], [96.7, 48976.0], [96.8, 49046.0], [96.9, 49368.0], [97.0, 49368.0], [97.1, 49538.0], [97.2, 50014.0], [97.3, 50734.0], [97.4, 50734.0], [97.5, 51349.0], [97.6, 51685.0], [97.7, 51746.0], [97.8, 52266.0], [97.9, 52266.0], [98.0, 52761.0], [98.1, 53086.0], [98.2, 53420.0], [98.3, 53420.0], [98.4, 53954.0], [98.5, 54220.0], [98.6, 54239.0], [98.7, 54239.0], [98.8, 54535.0], [98.9, 54795.0], [99.0, 55474.0], [99.1, 55475.0], [99.2, 55475.0], [99.3, 55873.0], [99.4, 56293.0], [99.5, 58120.0], [99.6, 58120.0], [99.7, 58241.0], [99.8, 59742.0], [99.9, 60128.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 243.0], [0.1, 243.0], [0.2, 244.0], [0.3, 244.0], [0.4, 245.0], [0.5, 245.0], [0.6, 246.0], [0.7, 246.0], [0.8, 246.0], [0.9, 246.0], [1.0, 246.0], [1.1, 247.0], [1.2, 247.0], [1.3, 247.0], [1.4, 247.0], [1.5, 247.0], [1.6, 247.0], [1.7, 247.0], [1.8, 247.0], [1.9, 247.0], [2.0, 247.0], [2.1, 247.0], [2.2, 248.0], [2.3, 248.0], [2.4, 248.0], [2.5, 248.0], [2.6, 248.0], [2.7, 248.0], [2.8, 248.0], [2.9, 248.0], [3.0, 248.0], [3.1, 248.0], [3.2, 248.0], [3.3, 248.0], [3.4, 248.0], [3.5, 248.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 249.0], [4.5, 249.0], [4.6, 249.0], [4.7, 249.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 250.0], [6.9, 251.0], [7.0, 251.0], [7.1, 251.0], [7.2, 251.0], [7.3, 251.0], [7.4, 251.0], [7.5, 251.0], [7.6, 251.0], [7.7, 251.0], [7.8, 251.0], [7.9, 251.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 251.0], [10.2, 251.0], [10.3, 251.0], [10.4, 251.0], [10.5, 251.0], [10.6, 251.0], [10.7, 251.0], [10.8, 252.0], [10.9, 252.0], [11.0, 252.0], [11.1, 252.0], [11.2, 252.0], [11.3, 252.0], [11.4, 252.0], [11.5, 252.0], [11.6, 252.0], [11.7, 252.0], [11.8, 252.0], [11.9, 252.0], [12.0, 252.0], [12.1, 252.0], [12.2, 252.0], [12.3, 252.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 252.0], [13.1, 252.0], [13.2, 252.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 254.0], [16.9, 254.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 254.0], [17.4, 254.0], [17.5, 254.0], [17.6, 254.0], [17.7, 254.0], [17.8, 254.0], [17.9, 254.0], [18.0, 254.0], [18.1, 254.0], [18.2, 254.0], [18.3, 254.0], [18.4, 254.0], [18.5, 254.0], [18.6, 254.0], [18.7, 254.0], [18.8, 254.0], [18.9, 255.0], [19.0, 255.0], [19.1, 255.0], [19.2, 255.0], [19.3, 255.0], [19.4, 255.0], [19.5, 255.0], [19.6, 255.0], [19.7, 255.0], [19.8, 255.0], [19.9, 255.0], [20.0, 255.0], [20.1, 255.0], [20.2, 255.0], [20.3, 255.0], [20.4, 255.0], [20.5, 255.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 255.0], [21.1, 255.0], [21.2, 255.0], [21.3, 255.0], [21.4, 255.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 255.0], [22.7, 255.0], [22.8, 256.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 256.0], [24.9, 256.0], [25.0, 256.0], [25.1, 256.0], [25.2, 257.0], [25.3, 257.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 257.0], [25.8, 257.0], [25.9, 257.0], [26.0, 257.0], [26.1, 257.0], [26.2, 257.0], [26.3, 257.0], [26.4, 257.0], [26.5, 257.0], [26.6, 257.0], [26.7, 257.0], [26.8, 257.0], [26.9, 257.0], [27.0, 257.0], [27.1, 257.0], [27.2, 257.0], [27.3, 257.0], [27.4, 257.0], [27.5, 258.0], [27.6, 258.0], [27.7, 258.0], [27.8, 258.0], [27.9, 258.0], [28.0, 258.0], [28.1, 258.0], [28.2, 258.0], [28.3, 258.0], [28.4, 258.0], [28.5, 258.0], [28.6, 258.0], [28.7, 258.0], [28.8, 258.0], [28.9, 258.0], [29.0, 258.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 259.0], [30.4, 259.0], [30.5, 259.0], [30.6, 259.0], [30.7, 259.0], [30.8, 259.0], [30.9, 259.0], [31.0, 259.0], [31.1, 259.0], [31.2, 259.0], [31.3, 259.0], [31.4, 259.0], [31.5, 259.0], [31.6, 259.0], [31.7, 259.0], [31.8, 259.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 260.0], [33.5, 260.0], [33.6, 260.0], [33.7, 260.0], [33.8, 260.0], [33.9, 260.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 261.0], [36.2, 261.0], [36.3, 261.0], [36.4, 261.0], [36.5, 261.0], [36.6, 261.0], [36.7, 261.0], [36.8, 261.0], [36.9, 261.0], [37.0, 261.0], [37.1, 261.0], [37.2, 261.0], [37.3, 261.0], [37.4, 261.0], [37.5, 261.0], [37.6, 261.0], [37.7, 261.0], [37.8, 261.0], [37.9, 261.0], [38.0, 261.0], [38.1, 261.0], [38.2, 261.0], [38.3, 261.0], [38.4, 261.0], [38.5, 261.0], [38.6, 261.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 262.0], [40.2, 262.0], [40.3, 262.0], [40.4, 262.0], [40.5, 262.0], [40.6, 262.0], [40.7, 262.0], [40.8, 262.0], [40.9, 262.0], [41.0, 262.0], [41.1, 262.0], [41.2, 262.0], [41.3, 262.0], [41.4, 262.0], [41.5, 262.0], [41.6, 262.0], [41.7, 262.0], [41.8, 262.0], [41.9, 262.0], [42.0, 262.0], [42.1, 262.0], [42.2, 262.0], [42.3, 262.0], [42.4, 262.0], [42.5, 263.0], [42.6, 263.0], [42.7, 263.0], [42.8, 263.0], [42.9, 263.0], [43.0, 263.0], [43.1, 263.0], [43.2, 263.0], [43.3, 263.0], [43.4, 263.0], [43.5, 263.0], [43.6, 263.0], [43.7, 263.0], [43.8, 263.0], [43.9, 263.0], [44.0, 263.0], [44.1, 263.0], [44.2, 263.0], [44.3, 263.0], [44.4, 263.0], [44.5, 263.0], [44.6, 263.0], [44.7, 263.0], [44.8, 263.0], [44.9, 263.0], [45.0, 263.0], [45.1, 263.0], [45.2, 263.0], [45.3, 263.0], [45.4, 263.0], [45.5, 263.0], [45.6, 263.0], [45.7, 263.0], [45.8, 263.0], [45.9, 263.0], [46.0, 263.0], [46.1, 263.0], [46.2, 263.0], [46.3, 263.0], [46.4, 263.0], [46.5, 263.0], [46.6, 263.0], [46.7, 263.0], [46.8, 264.0], [46.9, 264.0], [47.0, 264.0], [47.1, 264.0], [47.2, 264.0], [47.3, 264.0], [47.4, 264.0], [47.5, 264.0], [47.6, 264.0], [47.7, 264.0], [47.8, 264.0], [47.9, 264.0], [48.0, 264.0], [48.1, 264.0], [48.2, 264.0], [48.3, 264.0], [48.4, 264.0], [48.5, 264.0], [48.6, 264.0], [48.7, 264.0], [48.8, 264.0], [48.9, 264.0], [49.0, 264.0], [49.1, 264.0], [49.2, 264.0], [49.3, 264.0], [49.4, 264.0], [49.5, 264.0], [49.6, 264.0], [49.7, 264.0], [49.8, 264.0], [49.9, 264.0], [50.0, 264.0], [50.1, 264.0], [50.2, 264.0], [50.3, 264.0], [50.4, 264.0], [50.5, 264.0], [50.6, 264.0], [50.7, 264.0], [50.8, 264.0], [50.9, 265.0], [51.0, 265.0], [51.1, 265.0], [51.2, 265.0], [51.3, 265.0], [51.4, 265.0], [51.5, 265.0], [51.6, 265.0], [51.7, 265.0], [51.8, 265.0], [51.9, 265.0], [52.0, 265.0], [52.1, 265.0], [52.2, 265.0], [52.3, 265.0], [52.4, 265.0], [52.5, 265.0], [52.6, 265.0], [52.7, 265.0], [52.8, 265.0], [52.9, 265.0], [53.0, 265.0], [53.1, 265.0], [53.2, 265.0], [53.3, 265.0], [53.4, 265.0], [53.5, 265.0], [53.6, 265.0], [53.7, 265.0], [53.8, 265.0], [53.9, 265.0], [54.0, 265.0], [54.1, 265.0], [54.2, 265.0], [54.3, 265.0], [54.4, 265.0], [54.5, 265.0], [54.6, 265.0], [54.7, 265.0], [54.8, 265.0], [54.9, 265.0], [55.0, 265.0], [55.1, 265.0], [55.2, 266.0], [55.3, 266.0], [55.4, 266.0], [55.5, 266.0], [55.6, 266.0], [55.7, 266.0], [55.8, 266.0], [55.9, 266.0], [56.0, 266.0], [56.1, 266.0], [56.2, 266.0], [56.3, 266.0], [56.4, 266.0], [56.5, 266.0], [56.6, 266.0], [56.7, 266.0], [56.8, 266.0], [56.9, 266.0], [57.0, 266.0], [57.1, 266.0], [57.2, 266.0], [57.3, 266.0], [57.4, 266.0], [57.5, 266.0], [57.6, 266.0], [57.7, 266.0], [57.8, 266.0], [57.9, 267.0], [58.0, 267.0], [58.1, 267.0], [58.2, 267.0], [58.3, 267.0], [58.4, 267.0], [58.5, 267.0], [58.6, 267.0], [58.7, 267.0], [58.8, 267.0], [58.9, 267.0], [59.0, 267.0], [59.1, 267.0], [59.2, 267.0], [59.3, 267.0], [59.4, 267.0], [59.5, 267.0], [59.6, 267.0], [59.7, 267.0], [59.8, 267.0], [59.9, 267.0], [60.0, 267.0], [60.1, 267.0], [60.2, 267.0], [60.3, 267.0], [60.4, 267.0], [60.5, 267.0], [60.6, 267.0], [60.7, 267.0], [60.8, 268.0], [60.9, 268.0], [61.0, 268.0], [61.1, 268.0], [61.2, 268.0], [61.3, 268.0], [61.4, 268.0], [61.5, 268.0], [61.6, 268.0], [61.7, 268.0], [61.8, 268.0], [61.9, 268.0], [62.0, 268.0], [62.1, 268.0], [62.2, 268.0], [62.3, 268.0], [62.4, 268.0], [62.5, 268.0], [62.6, 268.0], [62.7, 268.0], [62.8, 268.0], [62.9, 268.0], [63.0, 268.0], [63.1, 269.0], [63.2, 269.0], [63.3, 269.0], [63.4, 269.0], [63.5, 269.0], [63.6, 269.0], [63.7, 269.0], [63.8, 269.0], [63.9, 269.0], [64.0, 269.0], [64.1, 269.0], [64.2, 269.0], [64.3, 269.0], [64.4, 269.0], [64.5, 269.0], [64.6, 269.0], [64.7, 269.0], [64.8, 269.0], [64.9, 269.0], [65.0, 269.0], [65.1, 269.0], [65.2, 269.0], [65.3, 269.0], [65.4, 269.0], [65.5, 269.0], [65.6, 269.0], [65.7, 269.0], [65.8, 269.0], [65.9, 270.0], [66.0, 270.0], [66.1, 270.0], [66.2, 270.0], [66.3, 270.0], [66.4, 270.0], [66.5, 270.0], [66.6, 270.0], [66.7, 270.0], [66.8, 270.0], [66.9, 270.0], [67.0, 270.0], [67.1, 270.0], [67.2, 270.0], [67.3, 270.0], [67.4, 270.0], [67.5, 270.0], [67.6, 270.0], [67.7, 270.0], [67.8, 270.0], [67.9, 270.0], [68.0, 270.0], [68.1, 270.0], [68.2, 270.0], [68.3, 270.0], [68.4, 270.0], [68.5, 271.0], [68.6, 271.0], [68.7, 271.0], [68.8, 271.0], [68.9, 271.0], [69.0, 271.0], [69.1, 271.0], [69.2, 271.0], [69.3, 271.0], [69.4, 271.0], [69.5, 271.0], [69.6, 272.0], [69.7, 272.0], [69.8, 272.0], [69.9, 272.0], [70.0, 272.0], [70.1, 272.0], [70.2, 272.0], [70.3, 272.0], [70.4, 272.0], [70.5, 272.0], [70.6, 272.0], [70.7, 272.0], [70.8, 272.0], [70.9, 272.0], [71.0, 272.0], [71.1, 272.0], [71.2, 272.0], [71.3, 272.0], [71.4, 273.0], [71.5, 273.0], [71.6, 273.0], [71.7, 273.0], [71.8, 273.0], [71.9, 273.0], [72.0, 273.0], [72.1, 273.0], [72.2, 273.0], [72.3, 273.0], [72.4, 273.0], [72.5, 273.0], [72.6, 273.0], [72.7, 273.0], [72.8, 274.0], [72.9, 274.0], [73.0, 274.0], [73.1, 274.0], [73.2, 274.0], [73.3, 274.0], [73.4, 274.0], [73.5, 274.0], [73.6, 274.0], [73.7, 274.0], [73.8, 274.0], [73.9, 274.0], [74.0, 274.0], [74.1, 275.0], [74.2, 275.0], [74.3, 275.0], [74.4, 275.0], [74.5, 275.0], [74.6, 275.0], [74.7, 275.0], [74.8, 275.0], [74.9, 275.0], [75.0, 275.0], [75.1, 275.0], [75.2, 275.0], [75.3, 275.0], [75.4, 275.0], [75.5, 275.0], [75.6, 275.0], [75.7, 276.0], [75.8, 276.0], [75.9, 276.0], [76.0, 276.0], [76.1, 276.0], [76.2, 276.0], [76.3, 276.0], [76.4, 276.0], [76.5, 276.0], [76.6, 276.0], [76.7, 276.0], [76.8, 276.0], [76.9, 277.0], [77.0, 277.0], [77.1, 277.0], [77.2, 277.0], [77.3, 277.0], [77.4, 277.0], [77.5, 277.0], [77.6, 277.0], [77.7, 278.0], [77.8, 278.0], [77.9, 278.0], [78.0, 278.0], [78.1, 278.0], [78.2, 278.0], [78.3, 278.0], [78.4, 278.0], [78.5, 279.0], [78.6, 279.0], [78.7, 279.0], [78.8, 279.0], [78.9, 279.0], [79.0, 279.0], [79.1, 279.0], [79.2, 279.0], [79.3, 279.0], [79.4, 279.0], [79.5, 279.0], [79.6, 279.0], [79.7, 279.0], [79.8, 280.0], [79.9, 280.0], [80.0, 280.0], [80.1, 280.0], [80.2, 280.0], [80.3, 280.0], [80.4, 280.0], [80.5, 280.0], [80.6, 280.0], [80.7, 280.0], [80.8, 280.0], [80.9, 280.0], [81.0, 280.0], [81.1, 280.0], [81.2, 281.0], [81.3, 281.0], [81.4, 281.0], [81.5, 281.0], [81.6, 281.0], [81.7, 282.0], [81.8, 282.0], [81.9, 282.0], [82.0, 282.0], [82.1, 282.0], [82.2, 282.0], [82.3, 282.0], [82.4, 282.0], [82.5, 282.0], [82.6, 282.0], [82.7, 282.0], [82.8, 283.0], [82.9, 283.0], [83.0, 283.0], [83.1, 283.0], [83.2, 283.0], [83.3, 283.0], [83.4, 283.0], [83.5, 284.0], [83.6, 284.0], [83.7, 284.0], [83.8, 284.0], [83.9, 284.0], [84.0, 285.0], [84.1, 285.0], [84.2, 285.0], [84.3, 285.0], [84.4, 285.0], [84.5, 286.0], [84.6, 286.0], [84.7, 286.0], [84.8, 286.0], [84.9, 286.0], [85.0, 286.0], [85.1, 286.0], [85.2, 286.0], [85.3, 286.0], [85.4, 287.0], [85.5, 287.0], [85.6, 287.0], [85.7, 287.0], [85.8, 288.0], [85.9, 288.0], [86.0, 288.0], [86.1, 289.0], [86.2, 289.0], [86.3, 289.0], [86.4, 289.0], [86.5, 289.0], [86.6, 289.0], [86.7, 289.0], [86.8, 289.0], [86.9, 289.0], [87.0, 290.0], [87.1, 290.0], [87.2, 290.0], [87.3, 291.0], [87.4, 291.0], [87.5, 291.0], [87.6, 291.0], [87.7, 291.0], [87.8, 291.0], [87.9, 292.0], [88.0, 292.0], [88.1, 292.0], [88.2, 292.0], [88.3, 292.0], [88.4, 292.0], [88.5, 293.0], [88.6, 293.0], [88.7, 293.0], [88.8, 293.0], [88.9, 293.0], [89.0, 294.0], [89.1, 294.0], [89.2, 294.0], [89.3, 295.0], [89.4, 295.0], [89.5, 296.0], [89.6, 296.0], [89.7, 296.0], [89.8, 297.0], [89.9, 297.0], [90.0, 297.0], [90.1, 297.0], [90.2, 299.0], [90.3, 299.0], [90.4, 300.0], [90.5, 300.0], [90.6, 300.0], [90.7, 300.0], [90.8, 301.0], [90.9, 302.0], [91.0, 302.0], [91.1, 302.0], [91.2, 302.0], [91.3, 302.0], [91.4, 303.0], [91.5, 303.0], [91.6, 304.0], [91.7, 305.0], [91.8, 305.0], [91.9, 305.0], [92.0, 306.0], [92.1, 307.0], [92.2, 307.0], [92.3, 307.0], [92.4, 307.0], [92.5, 308.0], [92.6, 309.0], [92.7, 309.0], [92.8, 309.0], [92.9, 309.0], [93.0, 310.0], [93.1, 312.0], [93.2, 312.0], [93.3, 312.0], [93.4, 312.0], [93.5, 313.0], [93.6, 313.0], [93.7, 313.0], [93.8, 313.0], [93.9, 313.0], [94.0, 313.0], [94.1, 314.0], [94.2, 314.0], [94.3, 315.0], [94.4, 315.0], [94.5, 316.0], [94.6, 316.0], [94.7, 316.0], [94.8, 316.0], [94.9, 316.0], [95.0, 316.0], [95.1, 316.0], [95.2, 317.0], [95.3, 318.0], [95.4, 319.0], [95.5, 319.0], [95.6, 319.0], [95.7, 320.0], [95.8, 323.0], [95.9, 323.0], [96.0, 323.0], [96.1, 323.0], [96.2, 326.0], [96.3, 327.0], [96.4, 327.0], [96.5, 328.0], [96.6, 328.0], [96.7, 330.0], [96.8, 330.0], [96.9, 330.0], [97.0, 331.0], [97.1, 334.0], [97.2, 336.0], [97.3, 336.0], [97.4, 340.0], [97.5, 340.0], [97.6, 341.0], [97.7, 341.0], [97.8, 341.0], [97.9, 345.0], [98.0, 350.0], [98.1, 355.0], [98.2, 355.0], [98.3, 357.0], [98.4, 364.0], [98.5, 370.0], [98.6, 370.0], [98.7, 370.0], [98.8, 391.0], [98.9, 442.0], [99.0, 443.0], [99.1, 443.0], [99.2, 852.0], [99.3, 853.0], [99.4, 1253.0], [99.5, 1273.0], [99.6, 1273.0], [99.7, 1274.0], [99.8, 1422.0], [99.9, 75272.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 704.0, "series": [{"data": [[75500.0, 1.0], [33700.0, 3.0], [33300.0, 3.0], [34500.0, 2.0], [35300.0, 1.0], [36500.0, 3.0], [36100.0, 1.0], [34900.0, 3.0], [35700.0, 1.0], [37700.0, 1.0], [36900.0, 1.0], [38100.0, 1.0], [37300.0, 1.0], [40500.0, 1.0], [40900.0, 1.0], [39300.0, 1.0], [39700.0, 1.0], [41700.0, 1.0], [42100.0, 2.0], [41300.0, 1.0], [43300.0, 1.0], [43700.0, 1.0], [44100.0, 1.0], [44900.0, 2.0], [46500.0, 1.0], [45300.0, 2.0], [46900.0, 1.0], [46100.0, 1.0], [45700.0, 1.0], [48900.0, 1.0], [48500.0, 1.0], [49700.0, 1.0], [49300.0, 1.0], [52500.0, 1.0], [200.0, 6.0], [53300.0, 1.0], [56100.0, 1.0], [55700.0, 2.0], [58500.0, 1.0], [300.0, 79.0], [400.0, 40.0], [500.0, 1.0], [4600.0, 2.0], [4500.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5000.0, 1.0], [5100.0, 3.0], [5300.0, 8.0], [5500.0, 7.0], [5600.0, 3.0], [5400.0, 9.0], [5700.0, 1.0], [5800.0, 4.0], [6100.0, 6.0], [5900.0, 1.0], [6200.0, 4.0], [6400.0, 1.0], [6600.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7400.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 4.0], [7900.0, 3.0], [7700.0, 2.0], [8000.0, 1.0], [8100.0, 3.0], [8300.0, 4.0], [8400.0, 2.0], [8500.0, 1.0], [8600.0, 3.0], [8700.0, 1.0], [8200.0, 1.0], [9200.0, 2.0], [8800.0, 2.0], [9100.0, 1.0], [9600.0, 3.0], [9700.0, 3.0], [9400.0, 4.0], [9500.0, 3.0], [10100.0, 3.0], [10200.0, 1.0], [9800.0, 5.0], [10000.0, 2.0], [10700.0, 3.0], [10600.0, 2.0], [10500.0, 2.0], [10300.0, 2.0], [10400.0, 1.0], [11100.0, 2.0], [11000.0, 2.0], [10800.0, 2.0], [10900.0, 1.0], [11200.0, 1.0], [11600.0, 4.0], [11400.0, 3.0], [11700.0, 2.0], [11500.0, 2.0], [11300.0, 1.0], [12000.0, 3.0], [11800.0, 1.0], [12100.0, 2.0], [12200.0, 2.0], [12700.0, 5.0], [12500.0, 1.0], [12300.0, 1.0], [12600.0, 1.0], [12800.0, 3.0], [12900.0, 6.0], [13000.0, 2.0], [13100.0, 2.0], [13200.0, 1.0], [13400.0, 3.0], [13700.0, 5.0], [13800.0, 1.0], [13500.0, 2.0], [14100.0, 4.0], [13900.0, 1.0], [14200.0, 2.0], [14000.0, 1.0], [14600.0, 1.0], [14700.0, 3.0], [14400.0, 2.0], [14800.0, 1.0], [14500.0, 1.0], [15100.0, 5.0], [15200.0, 4.0], [14900.0, 2.0], [15000.0, 2.0], [15300.0, 1.0], [15500.0, 4.0], [15600.0, 2.0], [15400.0, 2.0], [16200.0, 1.0], [16000.0, 2.0], [15900.0, 2.0], [16100.0, 4.0], [16300.0, 1.0], [17400.0, 1.0], [16400.0, 2.0], [16800.0, 3.0], [17000.0, 3.0], [17800.0, 3.0], [17600.0, 2.0], [19200.0, 7.0], [18600.0, 2.0], [18800.0, 1.0], [19000.0, 4.0], [19400.0, 2.0], [19600.0, 1.0], [19800.0, 1.0], [20200.0, 1.0], [21200.0, 2.0], [20600.0, 2.0], [20800.0, 1.0], [21600.0, 3.0], [22000.0, 2.0], [21800.0, 1.0], [22400.0, 1.0], [23200.0, 5.0], [23000.0, 2.0], [23400.0, 1.0], [22800.0, 1.0], [23800.0, 2.0], [24400.0, 3.0], [23600.0, 1.0], [24200.0, 1.0], [24600.0, 4.0], [25200.0, 1.0], [24800.0, 2.0], [25400.0, 1.0], [26400.0, 3.0], [25600.0, 1.0], [26200.0, 3.0], [26600.0, 1.0], [26000.0, 3.0], [26800.0, 1.0], [27400.0, 1.0], [27000.0, 1.0], [27200.0, 1.0], [28400.0, 3.0], [28000.0, 2.0], [28200.0, 1.0], [27800.0, 1.0], [29600.0, 2.0], [29200.0, 1.0], [29400.0, 1.0], [30000.0, 2.0], [30600.0, 1.0], [29800.0, 1.0], [31000.0, 3.0], [31400.0, 2.0], [31600.0, 2.0], [31200.0, 1.0], [32000.0, 1.0], [32400.0, 2.0], [32200.0, 2.0], [32600.0, 1.0], [31800.0, 1.0], [33200.0, 3.0], [34000.0, 3.0], [34400.0, 2.0], [34800.0, 1.0], [33600.0, 2.0], [35200.0, 1.0], [36000.0, 3.0], [36400.0, 2.0], [35600.0, 4.0], [39600.0, 2.0], [40800.0, 1.0], [40000.0, 1.0], [41600.0, 3.0], [42400.0, 1.0], [42000.0, 1.0], [41200.0, 1.0], [43600.0, 2.0], [44000.0, 2.0], [43200.0, 2.0], [44400.0, 1.0], [46400.0, 1.0], [48800.0, 1.0], [47200.0, 1.0], [49200.0, 2.0], [49600.0, 1.0], [51600.0, 1.0], [52000.0, 1.0], [54400.0, 2.0], [53600.0, 1.0], [54800.0, 1.0], [60000.0, 1.0], [60400.0, 1.0], [33500.0, 1.0], [34300.0, 1.0], [33100.0, 1.0], [34700.0, 1.0], [33900.0, 1.0], [36300.0, 2.0], [36700.0, 1.0], [37500.0, 3.0], [37100.0, 2.0], [39100.0, 3.0], [40300.0, 2.0], [42700.0, 3.0], [42300.0, 1.0], [41500.0, 2.0], [41100.0, 4.0], [44700.0, 2.0], [43100.0, 1.0], [43500.0, 3.0], [46700.0, 1.0], [47500.0, 1.0], [49500.0, 1.0], [51900.0, 1.0], [58300.0, 1.0], [17100.0, 1.0], [16500.0, 2.0], [17300.0, 1.0], [16700.0, 1.0], [16900.0, 2.0], [17900.0, 2.0], [17700.0, 3.0], [18100.0, 1.0], [18300.0, 3.0], [19100.0, 5.0], [18500.0, 4.0], [18900.0, 2.0], [18700.0, 2.0], [19300.0, 1.0], [20100.0, 1.0], [19500.0, 1.0], [19700.0, 2.0], [20500.0, 2.0], [21100.0, 1.0], [21500.0, 3.0], [20900.0, 1.0], [21300.0, 2.0], [22500.0, 3.0], [21700.0, 2.0], [22300.0, 1.0], [21900.0, 1.0], [23300.0, 4.0], [22900.0, 2.0], [23500.0, 3.0], [23100.0, 2.0], [22700.0, 1.0], [23700.0, 1.0], [23900.0, 3.0], [24300.0, 3.0], [24100.0, 1.0], [25300.0, 2.0], [24900.0, 3.0], [24700.0, 3.0], [25500.0, 2.0], [25100.0, 1.0], [25900.0, 2.0], [25700.0, 4.0], [26500.0, 1.0], [26300.0, 1.0], [27100.0, 1.0], [26900.0, 1.0], [26700.0, 1.0], [28100.0, 3.0], [27900.0, 1.0], [28300.0, 1.0], [29100.0, 2.0], [28700.0, 2.0], [29900.0, 2.0], [29700.0, 1.0], [30500.0, 2.0], [30100.0, 2.0], [30300.0, 4.0], [31700.0, 2.0], [31100.0, 2.0], [31500.0, 2.0], [32500.0, 2.0], [32100.0, 1.0], [34600.0, 1.0], [34200.0, 3.0], [33800.0, 1.0], [35800.0, 1.0], [36200.0, 2.0], [36600.0, 1.0], [35000.0, 2.0], [38600.0, 3.0], [38200.0, 1.0], [39000.0, 1.0], [39400.0, 2.0], [40200.0, 1.0], [43000.0, 1.0], [43400.0, 1.0], [45400.0, 1.0], [46600.0, 1.0], [45800.0, 2.0], [47000.0, 1.0], [47400.0, 1.0], [47800.0, 1.0], [48600.0, 1.0], [51000.0, 1.0], [50200.0, 1.0], [53000.0, 1.0], [54200.0, 1.0], [55000.0, 1.0], [56600.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 119.0], [33700.0, 3.0], [34100.0, 2.0], [34500.0, 2.0], [33300.0, 1.0], [34900.0, 1.0], [35700.0, 3.0], [36100.0, 2.0], [36500.0, 1.0], [35300.0, 3.0], [38900.0, 2.0], [39300.0, 2.0], [40500.0, 1.0], [39700.0, 1.0], [40900.0, 1.0], [41300.0, 3.0], [42100.0, 1.0], [42500.0, 1.0], [42900.0, 1.0], [43300.0, 2.0], [44500.0, 1.0], [44100.0, 1.0], [43700.0, 1.0], [46900.0, 1.0], [48900.0, 2.0], [48500.0, 1.0], [49300.0, 1.0], [51300.0, 1.0], [200.0, 1.0], [51700.0, 1.0], [54500.0, 1.0], [58100.0, 1.0], [59700.0, 1.0], [60100.0, 1.0], [300.0, 1.0], [4300.0, 3.0], [4400.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [4700.0, 1.0], [4800.0, 3.0], [5100.0, 6.0], [5000.0, 4.0], [5200.0, 12.0], [5300.0, 4.0], [5400.0, 2.0], [5600.0, 3.0], [5500.0, 2.0], [5800.0, 3.0], [6000.0, 3.0], [5900.0, 4.0], [6200.0, 1.0], [6300.0, 2.0], [6500.0, 4.0], [6400.0, 1.0], [6700.0, 2.0], [6800.0, 1.0], [7100.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7400.0, 3.0], [7600.0, 3.0], [7500.0, 2.0], [7800.0, 4.0], [7700.0, 1.0], [7900.0, 1.0], [8100.0, 4.0], [8000.0, 2.0], [8500.0, 2.0], [8200.0, 1.0], [8300.0, 2.0], [8400.0, 2.0], [8900.0, 3.0], [9200.0, 4.0], [9100.0, 2.0], [8800.0, 1.0], [9300.0, 2.0], [9400.0, 4.0], [9500.0, 2.0], [9600.0, 3.0], [9700.0, 2.0], [9800.0, 3.0], [9900.0, 1.0], [10000.0, 2.0], [10200.0, 1.0], [10100.0, 1.0], [10400.0, 3.0], [10300.0, 3.0], [10700.0, 1.0], [10600.0, 2.0], [10500.0, 2.0], [11100.0, 4.0], [10900.0, 2.0], [10800.0, 1.0], [11300.0, 5.0], [11500.0, 1.0], [11400.0, 2.0], [11600.0, 1.0], [11700.0, 1.0], [11800.0, 2.0], [12200.0, 1.0], [12000.0, 1.0], [11900.0, 4.0], [12500.0, 3.0], [12700.0, 3.0], [12400.0, 5.0], [12600.0, 5.0], [12300.0, 1.0], [13100.0, 2.0], [13200.0, 3.0], [12900.0, 2.0], [12800.0, 1.0], [13700.0, 2.0], [13400.0, 4.0], [13800.0, 1.0], [13500.0, 2.0], [13900.0, 5.0], [14200.0, 3.0], [14400.0, 4.0], [14800.0, 3.0], [14600.0, 2.0], [14500.0, 1.0], [14700.0, 1.0], [14900.0, 5.0], [15300.0, 5.0], [15200.0, 3.0], [15000.0, 3.0], [15700.0, 2.0], [15800.0, 4.0], [15600.0, 1.0], [15900.0, 2.0], [16100.0, 3.0], [16200.0, 2.0], [17200.0, 1.0], [17400.0, 4.0], [16800.0, 1.0], [17000.0, 1.0], [16600.0, 2.0], [17600.0, 4.0], [18200.0, 2.0], [17800.0, 1.0], [18000.0, 2.0], [18400.0, 1.0], [18800.0, 5.0], [19200.0, 2.0], [18600.0, 2.0], [19400.0, 2.0], [19000.0, 3.0], [19800.0, 1.0], [20200.0, 1.0], [20000.0, 1.0], [21000.0, 2.0], [21400.0, 3.0], [20800.0, 1.0], [21200.0, 1.0], [21800.0, 1.0], [22200.0, 2.0], [22400.0, 1.0], [22000.0, 1.0], [21600.0, 1.0], [23000.0, 4.0], [22600.0, 1.0], [22800.0, 1.0], [23200.0, 1.0], [23600.0, 3.0], [24000.0, 3.0], [24400.0, 3.0], [23800.0, 1.0], [25000.0, 2.0], [24600.0, 3.0], [25400.0, 2.0], [25200.0, 3.0], [25600.0, 1.0], [26200.0, 3.0], [26000.0, 3.0], [26600.0, 1.0], [25800.0, 3.0], [26400.0, 1.0], [26800.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [28200.0, 1.0], [28000.0, 3.0], [28400.0, 2.0], [27800.0, 1.0], [29400.0, 2.0], [29600.0, 1.0], [28800.0, 2.0], [29200.0, 1.0], [29800.0, 3.0], [30200.0, 2.0], [30000.0, 4.0], [30800.0, 3.0], [31400.0, 2.0], [31600.0, 1.0], [31200.0, 2.0], [31800.0, 3.0], [32200.0, 1.0], [32000.0, 1.0], [33200.0, 1.0], [32800.0, 1.0], [34800.0, 1.0], [33600.0, 1.0], [36000.0, 4.0], [36800.0, 2.0], [37200.0, 3.0], [38400.0, 1.0], [38800.0, 1.0], [39200.0, 1.0], [40800.0, 3.0], [40000.0, 2.0], [42800.0, 2.0], [42400.0, 2.0], [41200.0, 2.0], [44400.0, 2.0], [43200.0, 3.0], [45200.0, 1.0], [46400.0, 1.0], [45600.0, 1.0], [47200.0, 2.0], [50000.0, 1.0], [51600.0, 1.0], [33900.0, 4.0], [34300.0, 2.0], [34700.0, 2.0], [33500.0, 2.0], [33100.0, 1.0], [35500.0, 2.0], [35100.0, 1.0], [36300.0, 2.0], [38700.0, 1.0], [37500.0, 1.0], [38300.0, 2.0], [37900.0, 2.0], [40700.0, 2.0], [39900.0, 1.0], [43100.0, 1.0], [44700.0, 1.0], [45100.0, 1.0], [46300.0, 1.0], [45500.0, 2.0], [46700.0, 1.0], [47500.0, 2.0], [48300.0, 2.0], [49500.0, 1.0], [50700.0, 1.0], [52700.0, 1.0], [53900.0, 1.0], [54700.0, 1.0], [16500.0, 3.0], [16700.0, 4.0], [18300.0, 4.0], [17500.0, 2.0], [17900.0, 1.0], [18900.0, 7.0], [18500.0, 2.0], [18700.0, 2.0], [19100.0, 1.0], [20300.0, 3.0], [19500.0, 2.0], [21300.0, 3.0], [21500.0, 2.0], [20500.0, 1.0], [20700.0, 1.0], [21100.0, 2.0], [21700.0, 1.0], [22300.0, 1.0], [22500.0, 1.0], [22100.0, 1.0], [23100.0, 2.0], [23500.0, 2.0], [23300.0, 3.0], [22900.0, 5.0], [22700.0, 3.0], [23700.0, 1.0], [24100.0, 3.0], [24300.0, 3.0], [23900.0, 1.0], [24500.0, 3.0], [25300.0, 1.0], [25500.0, 2.0], [24900.0, 2.0], [26100.0, 1.0], [26300.0, 1.0], [25900.0, 1.0], [25700.0, 1.0], [26700.0, 2.0], [27100.0, 1.0], [27900.0, 2.0], [28100.0, 1.0], [27700.0, 3.0], [29300.0, 1.0], [28900.0, 1.0], [29500.0, 1.0], [29700.0, 2.0], [30700.0, 2.0], [30300.0, 1.0], [31100.0, 2.0], [31300.0, 2.0], [30900.0, 1.0], [32100.0, 2.0], [32700.0, 1.0], [32300.0, 2.0], [33000.0, 4.0], [33400.0, 3.0], [34600.0, 2.0], [34200.0, 1.0], [36200.0, 2.0], [35800.0, 1.0], [36600.0, 1.0], [35400.0, 1.0], [37000.0, 1.0], [40200.0, 1.0], [39000.0, 2.0], [39400.0, 1.0], [41400.0, 1.0], [41800.0, 3.0], [41000.0, 1.0], [43000.0, 2.0], [42200.0, 1.0], [43800.0, 2.0], [43400.0, 1.0], [45000.0, 1.0], [46200.0, 2.0], [46600.0, 1.0], [45800.0, 1.0], [48200.0, 1.0], [49000.0, 1.0], [52200.0, 1.0], [53000.0, 1.0], [54200.0, 2.0], [53400.0, 1.0], [55800.0, 1.0], [55400.0, 2.0], [56200.0, 1.0], [58200.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 66.0], [1200.0, 3.0], [75200.0, 1.0], [1400.0, 1.0], [200.0, 704.0], [400.0, 2.0], [800.0, 2.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 75500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 651.0, "series": [{"data": [[0.0, 644.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 651.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 255.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.2857142857142856, "minX": 1.68545742E12, "maxY": 25.0, "series": [{"data": [[1.68545802E12, 19.78106508875741], [1.68545832E12, 25.0], [1.68545838E12, 21.21186440677966], [1.68545772E12, 10.0], [1.68545868E12, 5.0], [1.68545742E12, 2.2857142857142856], [1.68545826E12, 25.0], [1.6854576E12, 6.545454545454545], [1.68545856E12, 10.29452054794521], [1.68545862E12, 8.364485981308409], [1.68545796E12, 16.180851063829795], [1.68545766E12, 9.962962962962964], [1.6854585E12, 14.938775510204081], [1.68545784E12, 14.837837837837839], [1.68545754E12, 5.0], [1.6854582E12, 24.85161290322581], [1.6854579E12, 15.0], [1.68545874E12, 4.0], [1.68545808E12, 20.0], [1.68545778E12, 10.940000000000005], [1.68545814E12, 21.356687898089177], [1.68545748E12, 4.76470588235294], [1.68545844E12, 17.5875]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545874E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 251.0, "minX": 1.0, "maxY": 28754.250000000004, "series": [{"data": [[2.0, 8398.0], [3.0, 9787.5], [4.0, 12347.0], [5.0, 12714.0], [6.0, 12821.0], [7.0, 19930.333333333332], [8.0, 27194.800000000003], [9.0, 12905.75], [10.0, 14148.040322580642], [11.0, 2296.7692307692305], [12.0, 18167.125], [13.0, 14624.666666666668], [14.0, 19037.5], [15.0, 21546.9296875], [1.0, 7007.0], [16.0, 17295.68], [17.0, 16037.76923076923], [18.0, 19106.272727272728], [19.0, 17506.777777777785], [20.0, 22216.238095238095], [21.0, 21429.76470588235], [22.0, 21679.42857142857], [23.0, 28754.250000000004], [24.0, 27039.35714285714], [25.0, 27338.962686567163]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.271208226221056, 20032.15809768636]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 8140.0], [3.0, 9532.0], [4.0, 12094.0], [5.0, 12627.484374999996], [6.0, 12519.0], [7.0, 19656.666666666668], [8.0, 26917.7], [9.0, 16841.0], [10.0, 13996.19512195122], [11.0, 2034.076923076923], [12.0, 17905.874999999996], [13.0, 14181.5], [14.0, 21463.57142857143], [15.0, 21443.708661417313], [1.0, 6701.5], [16.0, 17021.84], [17.0, 15770.846153846152], [18.0, 12023.090909090908], [19.0, 17241.72222222222], [20.0, 22077.294520547955], [21.0, 21150.882352941175], [22.0, 21411.999999999996], [23.0, 28474.75], [24.0, 26771.35714285714], [25.0, 27067.544776119397]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.30310880829012, 19813.25259067357]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 251.0], [3.0, 251.5], [4.0, 257.5], [5.0, 283.17910447761176], [6.0, 530.25], [7.0, 294.0], [8.0, 266.33333333333337], [9.0, 279.75], [10.0, 262.99999999999994], [11.0, 260.83333333333337], [12.0, 613.6666666666666], [13.0, 263.33333333333337], [14.0, 265.125], [15.0, 269.98461538461527], [1.0, 307.5], [16.0, 273.2380952380953], [17.0, 5627.214285714285], [18.0, 264.4545454545455], [19.0, 265.47058823529414], [20.0, 278.82781456953643], [21.0, 373.0625], [22.0, 264.0], [23.0, 277.25], [24.0, 273.61538461538464], [25.0, 271.95454545454544]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.22978177150193, 372.8639281129656]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 365.28333333333336, "minX": 1.68545742E12, "maxY": 8390.783333333333, "series": [{"data": [[1.68545802E12, 3428.95], [1.68545832E12, 2495.0333333333333], [1.68545838E12, 2974.0666666666666], [1.68545772E12, 1256.7333333333333], [1.68545868E12, 1761.2], [1.68545742E12, 365.28333333333336], [1.68545826E12, 3631.25], [1.6854576E12, 1099.1166666666666], [1.68545856E12, 2346.2833333333333], [1.68545862E12, 2038.4], [1.68545796E12, 3292.2166666666667], [1.68545766E12, 978.6], [1.6854585E12, 2170.483333333333], [1.68545784E12, 2678.0833333333335], [1.68545754E12, 1174.1333333333334], [1.6854582E12, 3743.366666666667], [1.6854579E12, 2699.2], [1.68545874E12, 441.93333333333334], [1.68545808E12, 3669.1666666666665], [1.68545778E12, 1555.75], [1.68545814E12, 3961.0666666666666], [1.68545748E12, 770.1166666666667], [1.68545844E12, 1909.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68545802E12, 7931.4], [1.68545832E12, 4377.05], [1.68545838E12, 5809.7], [1.68545772E12, 4103.233333333334], [1.68545868E12, 4016.5833333333335], [1.68545742E12, 368.21666666666664], [1.68545826E12, 5980.133333333333], [1.6854576E12, 1938.2], [1.68545856E12, 6636.8], [1.68545862E12, 5122.6], [1.68545796E12, 8390.783333333333], [1.68545766E12, 2198.016666666667], [1.6854585E12, 4589.016666666666], [1.68545784E12, 5106.516666666666], [1.68545754E12, 2098.0666666666666], [1.6854582E12, 7683.383333333333], [1.6854579E12, 5632.683333333333], [1.68545874E12, 1018.6166666666667], [1.68545808E12, 6865.55], [1.68545778E12, 4233.633333333333], [1.68545814E12, 6757.483333333334], [1.68545748E12, 1439.5], [1.68545844E12, 4667.516666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545874E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 256.0, "minX": 1.68545742E12, "maxY": 35915.06976744187, "series": [{"data": [[1.68545802E12, 14734.307692307691], [1.68545832E12, 30936.976190476194], [1.68545838E12, 34579.08108108109], [1.68545772E12, 13056.96875], [1.68545868E12, 8165.739130434782], [1.68545742E12, 7814.25], [1.68545826E12, 28659.395348837206], [1.6854576E12, 23109.214285714286], [1.68545856E12, 11158.137254901967], [1.68545862E12, 10417.459459459456], [1.68545796E12, 11676.784615384619], [1.68545766E12, 26483.235294117643], [1.6854585E12, 26585.08823529412], [1.68545784E12, 24941.71052631579], [1.68545754E12, 19092.833333333336], [1.6854582E12, 22508.05660377358], [1.6854579E12, 18697.54054054054], [1.68545874E12, 9347.125], [1.68545808E12, 23375.105263157908], [1.68545778E12, 12730.0], [1.68545814E12, 19276.83673469388], [1.68545748E12, 17777.615384615383], [1.68545844E12, 33137.28571428571]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 15415.982758620692], [1.68545832E12, 28006.676470588238], [1.68545838E12, 35915.06976744187], [1.68545772E12, 12791.624999999993], [1.68545868E12, 7898.125000000001], [1.68545742E12, 5072.333333333333], [1.68545826E12, 27452.083333333325], [1.6854576E12, 22827.846153846152], [1.68545856E12, 11006.0], [1.68545862E12, 11272.666666666666], [1.68545796E12, 8891.338983050846], [1.68545766E12, 26016.222222222223], [1.6854585E12, 28841.062499999996], [1.68545784E12, 25574.749999999996], [1.68545754E12, 19303.8125], [1.6854582E12, 22894.92307692308], [1.6854579E12, 17916.20512820513], [1.68545874E12, 10243.875], [1.68545808E12, 23463.34], [1.68545778E12, 12436.468750000004], [1.68545814E12, 18556.48076923077], [1.68545748E12, 15973.5], [1.68545844E12, 32824.321428571435]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 282.11864406779654], [1.68545832E12, 271.0588235294118], [1.68545838E12, 318.5], [1.68545772E12, 262.2812500000001], [1.68545868E12, 260.37500000000006], [1.68545742E12, 269.14285714285717], [1.68545826E12, 273.45098039215674], [1.6854576E12, 286.58823529411757], [1.68545856E12, 263.45652173913044], [1.68545862E12, 326.8529411764706], [1.68545796E12, 1442.0], [1.68545766E12, 268.3684210526316], [1.6854585E12, 265.59375000000006], [1.68545784E12, 271.67567567567573], [1.68545754E12, 265.75], [1.6854582E12, 270.87999999999994], [1.6854579E12, 272.6578947368421], [1.68545874E12, 256.0], [1.68545808E12, 271.8], [1.68545778E12, 289.8055555555555], [1.68545814E12, 274.1964285714285], [1.68545748E12, 262.3636363636364], [1.68545844E12, 272.4166666666666]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545874E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 256.0, "minX": 1.68545742E12, "maxY": 35914.651162790695, "series": [{"data": [[1.68545802E12, 14733.96153846154], [1.68545832E12, 30936.45238095238], [1.68545838E12, 34578.10810810811], [1.68545772E12, 13056.656250000002], [1.68545868E12, 8165.260869565217], [1.68545742E12, 7811.75], [1.68545826E12, 28658.41860465116], [1.6854576E12, 23108.92857142857], [1.68545856E12, 11157.647058823526], [1.68545862E12, 10417.000000000007], [1.68545796E12, 11676.338461538462], [1.68545766E12, 26482.52941176471], [1.6854585E12, 26584.470588235286], [1.68545784E12, 24941.07894736842], [1.68545754E12, 19092.166666666664], [1.6854582E12, 22507.45283018868], [1.6854579E12, 18696.810810810814], [1.68545874E12, 9346.875], [1.68545808E12, 23374.40350877193], [1.68545778E12, 12729.687499999996], [1.68545814E12, 19275.775510204083], [1.68545748E12, 17776.53846153846], [1.68545844E12, 33136.892857142855]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 15415.862068965518], [1.68545832E12, 28006.470588235294], [1.68545838E12, 35914.651162790695], [1.68545772E12, 12791.499999999998], [1.68545868E12, 7897.708333333334], [1.68545742E12, 5070.666666666667], [1.68545826E12, 27451.708333333332], [1.6854576E12, 22827.69230769231], [1.68545856E12, 11005.653061224488], [1.68545862E12, 11272.5], [1.68545796E12, 8891.27118644068], [1.68545766E12, 26015.777777777774], [1.6854585E12, 28840.718749999996], [1.68545784E12, 25574.527777777774], [1.68545754E12, 19303.4375], [1.6854582E12, 22894.673076923074], [1.6854579E12, 17916.025641025637], [1.68545874E12, 10243.625], [1.68545808E12, 23462.820000000007], [1.68545778E12, 12436.187500000004], [1.68545814E12, 18555.961538461543], [1.68545748E12, 15973.2], [1.68545844E12, 32824.14285714287]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 281.8813559322034], [1.68545832E12, 270.88235294117663], [1.68545838E12, 318.0], [1.68545772E12, 262.15625], [1.68545868E12, 260.20833333333337], [1.68545742E12, 268.2857142857143], [1.68545826E12, 273.07843137254895], [1.6854576E12, 286.4705882352941], [1.68545856E12, 263.23913043478257], [1.68545862E12, 326.6470588235294], [1.68545796E12, 1441.5937499999998], [1.68545766E12, 268.05263157894734], [1.6854585E12, 265.375], [1.68545784E12, 270.97297297297297], [1.68545754E12, 265.4375], [1.6854582E12, 270.20000000000005], [1.6854579E12, 272.3947368421052], [1.68545874E12, 256.0], [1.68545808E12, 271.56], [1.68545778E12, 289.77777777777777], [1.68545814E12, 273.8214285714286], [1.68545748E12, 261.6363636363636], [1.68545844E12, 272.125]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545874E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545742E12, "maxY": 1300.640625, "series": [{"data": [[1.68545802E12, 129.44230769230774], [1.68545832E12, 126.88095238095238], [1.68545838E12, 129.32432432432435], [1.68545772E12, 128.9375], [1.68545868E12, 128.21739130434784], [1.68545742E12, 144.25], [1.68545826E12, 126.34883720930232], [1.6854576E12, 126.99999999999999], [1.68545856E12, 128.50980392156862], [1.68545862E12, 129.3513513513514], [1.68545796E12, 1285.4615384615383], [1.68545766E12, 130.1764705882353], [1.6854585E12, 128.38235294117646], [1.68545784E12, 128.68421052631584], [1.68545754E12, 132.25], [1.6854582E12, 129.6037735849057], [1.6854579E12, 128.6216216216216], [1.68545874E12, 127.5], [1.68545808E12, 128.43859649122803], [1.68545778E12, 126.65625000000001], [1.68545814E12, 129.46938775510202], [1.68545748E12, 126.84615384615384], [1.68545844E12, 127.9642857142857]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 0.0], [1.68545832E12, 0.0], [1.68545838E12, 0.0], [1.68545772E12, 0.0], [1.68545868E12, 0.0], [1.68545742E12, 0.0], [1.68545826E12, 0.0], [1.6854576E12, 0.0], [1.68545856E12, 0.0], [1.68545862E12, 0.0], [1.68545796E12, 2.3050847457627115], [1.68545766E12, 0.0], [1.6854585E12, 0.0], [1.68545784E12, 0.0], [1.68545754E12, 0.0], [1.6854582E12, 0.0], [1.6854579E12, 0.0], [1.68545874E12, 0.0], [1.68545808E12, 0.0], [1.68545778E12, 0.0], [1.68545814E12, 0.0], [1.68545748E12, 0.0], [1.68545844E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 129.11864406779654], [1.68545832E12, 128.1764705882353], [1.68545838E12, 129.0526315789474], [1.68545772E12, 128.53124999999997], [1.68545868E12, 128.41666666666669], [1.68545742E12, 136.71428571428572], [1.68545826E12, 126.6078431372549], [1.6854576E12, 129.35294117647058], [1.68545856E12, 128.84782608695647], [1.68545862E12, 129.1470588235294], [1.68545796E12, 1300.640625], [1.68545766E12, 127.31578947368422], [1.6854585E12, 127.43749999999997], [1.68545784E12, 129.75675675675674], [1.68545754E12, 131.18750000000003], [1.6854582E12, 128.44], [1.6854579E12, 130.15789473684214], [1.68545874E12, 126.5], [1.68545808E12, 129.33999999999995], [1.68545778E12, 126.52777777777779], [1.68545814E12, 129.08928571428575], [1.68545748E12, 127.18181818181819], [1.68545844E12, 128.16666666666669]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545874E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 247.0, "minX": 1.68545742E12, "maxY": 75272.0, "series": [{"data": [[1.68545802E12, 52761.0], [1.68545832E12, 45870.0], [1.68545838E12, 53954.0], [1.68545772E12, 43365.0], [1.68545868E12, 12890.0], [1.68545742E12, 5465.0], [1.68545826E12, 46699.0], [1.6854576E12, 33993.0], [1.68545856E12, 31883.0], [1.68545862E12, 27602.0], [1.68545796E12, 75272.0], [1.68545766E12, 46251.0], [1.6854585E12, 56293.0], [1.68545784E12, 54239.0], [1.68545754E12, 23708.0], [1.6854582E12, 35766.0], [1.6854579E12, 38411.0], [1.68545874E12, 13784.0], [1.68545808E12, 55873.0], [1.68545778E12, 42867.0], [1.68545814E12, 40876.0], [1.68545748E12, 21031.0], [1.68545844E12, 59742.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68545802E12, 36112.4], [1.68545832E12, 37335.3], [1.68545838E12, 45515.799999999996], [1.68545772E12, 42939.8], [1.68545868E12, 10346.500000000002], [1.68545742E12, 5446.5], [1.68545826E12, 36081.0], [1.6854576E12, 33002.7], [1.68545856E12, 25828.4], [1.68545862E12, 18879.0], [1.68545796E12, 24216.800000000003], [1.68545766E12, 44990.1], [1.6854585E12, 44134.200000000004], [1.68545784E12, 44206.600000000006], [1.68545754E12, 23265.5], [1.6854582E12, 32271.3], [1.6854579E12, 29201.900000000005], [1.68545874E12, 13547.900000000001], [1.68545808E12, 47777.90000000003], [1.68545778E12, 40467.0], [1.68545814E12, 29338.2], [1.68545748E12, 18862.2], [1.68545844E12, 54282.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68545802E12, 52761.0], [1.68545832E12, 45870.0], [1.68545838E12, 53954.0], [1.68545772E12, 43365.0], [1.68545868E12, 12890.0], [1.68545742E12, 5465.0], [1.68545826E12, 46699.0], [1.6854576E12, 33993.0], [1.68545856E12, 31883.0], [1.68545862E12, 27602.0], [1.68545796E12, 75272.0], [1.68545766E12, 46251.0], [1.6854585E12, 56293.0], [1.68545784E12, 54239.0], [1.68545754E12, 23708.0], [1.6854582E12, 35755.05], [1.6854579E12, 38411.0], [1.68545874E12, 13784.0], [1.68545808E12, 55869.02], [1.68545778E12, 42867.0], [1.68545814E12, 40727.95], [1.68545748E12, 21031.0], [1.68545844E12, 59742.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68545802E12, 43769.2], [1.68545832E12, 39504.45], [1.68545838E12, 47262.2], [1.68545772E12, 43333.5], [1.68545868E12, 12090.649999999998], [1.68545742E12, 5465.0], [1.68545826E12, 40593.0], [1.6854576E12, 33608.0], [1.68545856E12, 29156.899999999987], [1.68545862E12, 25758.0], [1.68545796E12, 26022.800000000007], [1.68545766E12, 46095.299999999996], [1.6854585E12, 54251.5], [1.68545784E12, 48151.99999999999], [1.68545754E12, 23581.25], [1.6854582E12, 33988.65], [1.6854579E12, 35984.5], [1.68545874E12, 13784.0], [1.68545808E12, 51637.44999999999], [1.68545778E12, 42241.799999999996], [1.68545814E12, 34131.6], [1.68545748E12, 20825.999999999996], [1.68545844E12, 58162.35]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68545802E12, 252.0], [1.68545832E12, 251.0], [1.68545838E12, 253.0], [1.68545772E12, 248.0], [1.68545868E12, 251.0], [1.68545742E12, 249.0], [1.68545826E12, 248.0], [1.6854576E12, 250.0], [1.68545856E12, 254.0], [1.68545862E12, 252.0], [1.68545796E12, 249.0], [1.68545766E12, 259.0], [1.6854585E12, 248.0], [1.68545784E12, 249.0], [1.68545754E12, 247.0], [1.6854582E12, 249.0], [1.6854579E12, 249.0], [1.68545874E12, 251.0], [1.68545808E12, 250.0], [1.68545778E12, 253.0], [1.68545814E12, 251.0], [1.68545748E12, 251.0], [1.68545844E12, 252.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68545802E12, 316.0], [1.68545832E12, 4018.0], [1.68545838E12, 15836.0], [1.68545772E12, 323.0], [1.68545868E12, 2708.5], [1.68545742E12, 264.5], [1.68545826E12, 320.0], [1.6854576E12, 328.5], [1.68545856E12, 8116.5], [1.68545862E12, 6038.0], [1.68545796E12, 319.0], [1.68545766E12, 24049.5], [1.6854585E12, 300.0], [1.68545784E12, 328.0], [1.68545754E12, 4648.5], [1.6854582E12, 6382.0], [1.6854579E12, 5035.0], [1.68545874E12, 8678.0], [1.68545808E12, 2375.5], [1.68545778E12, 317.0], [1.68545814E12, 324.0], [1.68545748E12, 277.0], [1.68545844E12, 5337.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545874E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 38913.0, "series": [{"data": [[2.0, 312.0], [8.0, 14885.0], [9.0, 13125.0], [10.0, 10471.5], [3.0, 5260.5], [12.0, 9324.0], [1.0, 309.5], [4.0, 319.0], [16.0, 34652.0], [17.0, 38913.0], [5.0, 9463.0], [6.0, 5699.0], [7.0, 297.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 139.0], [1.0, 136.0], [4.0, 244.0], [16.0, 246.0], [8.0, 250.0], [17.0, 255.5], [5.0, 246.0], [10.0, 249.5], [6.0, 251.0], [3.0, 136.0], [12.0, 256.0], [7.0, 133.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 133.0, "minX": 1.0, "maxY": 38913.0, "series": [{"data": [[2.0, 312.0], [8.0, 14885.0], [9.0, 13125.0], [10.0, 10471.5], [3.0, 5260.5], [12.0, 9324.0], [1.0, 306.0], [4.0, 317.0], [16.0, 34651.5], [17.0, 38913.0], [5.0, 9462.5], [6.0, 5699.0], [7.0, 297.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 139.0], [1.0, 136.0], [4.0, 244.0], [16.0, 246.0], [8.0, 250.0], [17.0, 255.5], [5.0, 246.0], [10.0, 249.5], [6.0, 251.0], [3.0, 136.0], [12.0, 256.0], [7.0, 133.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.68545742E12, "maxY": 2.0833333333333335, "series": [{"data": [[1.68545802E12, 1.85], [1.68545832E12, 1.1166666666666667], [1.68545838E12, 1.2666666666666666], [1.68545772E12, 1.0666666666666667], [1.68545868E12, 0.8166666666666667], [1.68545742E12, 0.21666666666666667], [1.68545826E12, 1.6833333333333333], [1.6854576E12, 0.5333333333333333], [1.68545856E12, 1.5333333333333334], [1.68545862E12, 1.05], [1.68545796E12, 2.0833333333333335], [1.68545766E12, 0.7], [1.6854585E12, 1.0833333333333333], [1.68545784E12, 1.2333333333333334], [1.68545754E12, 0.5], [1.6854582E12, 1.8333333333333333], [1.6854579E12, 1.3166666666666667], [1.68545874E12, 0.13333333333333333], [1.68545808E12, 1.6333333333333333], [1.68545778E12, 1.1666666666666667], [1.68545814E12, 1.8666666666666667], [1.68545748E12, 0.38333333333333336], [1.68545844E12, 0.7833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545874E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545742E12, "maxY": 1.8, "series": [{"data": [[1.68545802E12, 1.3833333333333333], [1.68545832E12, 1.1333333333333333], [1.68545838E12, 1.35], [1.68545772E12, 0.35], [1.68545868E12, 0.8], [1.68545742E12, 0.16666666666666666], [1.68545826E12, 1.65], [1.6854576E12, 0.5], [1.68545856E12, 0.8333333333333334], [1.68545862E12, 0.8166666666666667], [1.68545796E12, 1.25], [1.68545766E12, 0.36666666666666664], [1.6854585E12, 0.95], [1.68545784E12, 1.2166666666666666], [1.68545754E12, 0.5333333333333333], [1.6854582E12, 1.7], [1.6854579E12, 1.2], [1.68545874E12, 0.2], [1.68545808E12, 1.6666666666666667], [1.68545778E12, 0.5166666666666667], [1.68545814E12, 1.8], [1.68545748E12, 0.35], [1.68545844E12, 0.8666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68545802E12, 0.5666666666666667], [1.6854585E12, 0.1], [1.68545772E12, 0.7166666666666667], [1.6854579E12, 0.08333333333333333], [1.68545856E12, 0.75], [1.68545778E12, 0.6166666666666667], [1.68545862E12, 0.35], [1.68545796E12, 0.8], [1.68545766E12, 0.25]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.6854585E12, 0.016666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545874E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545742E12, "maxY": 0.9333333333333333, "series": [{"data": [[1.68545802E12, 0.7166666666666667], [1.68545832E12, 0.5666666666666667], [1.68545838E12, 0.6333333333333333], [1.68545772E12, 0.18333333333333332], [1.68545868E12, 0.4], [1.68545742E12, 0.11666666666666667], [1.68545826E12, 0.85], [1.6854576E12, 0.2833333333333333], [1.68545856E12, 0.36666666666666664], [1.68545862E12, 0.35], [1.68545796E12, 0.6833333333333333], [1.68545766E12, 0.15], [1.6854585E12, 0.48333333333333334], [1.68545784E12, 0.6166666666666667], [1.68545754E12, 0.26666666666666666], [1.6854582E12, 0.8333333333333334], [1.6854579E12, 0.5833333333333334], [1.68545874E12, 0.06666666666666667], [1.68545808E12, 0.8333333333333334], [1.68545778E12, 0.26666666666666666], [1.68545814E12, 0.9333333333333333], [1.68545748E12, 0.18333333333333332], [1.68545844E12, 0.4]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68545802E12, 0.26666666666666666], [1.6854585E12, 0.05], [1.68545772E12, 0.35], [1.6854579E12, 0.05], [1.68545856E12, 0.4], [1.68545778E12, 0.3333333333333333], [1.68545862E12, 0.21666666666666667], [1.68545796E12, 0.38333333333333336], [1.68545766E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68545802E12, 0.3], [1.6854585E12, 0.06666666666666667], [1.68545772E12, 0.36666666666666664], [1.6854579E12, 0.03333333333333333], [1.68545856E12, 0.35], [1.68545778E12, 0.2833333333333333], [1.68545862E12, 0.13333333333333333], [1.68545796E12, 0.4166666666666667], [1.68545766E12, 0.08333333333333333]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68545802E12, 0.36666666666666664], [1.68545832E12, 0.7], [1.68545838E12, 0.6166666666666667], [1.68545772E12, 0.06666666666666667], [1.68545868E12, 0.38333333333333336], [1.68545742E12, 0.06666666666666667], [1.68545826E12, 0.7166666666666667], [1.6854576E12, 0.23333333333333334], [1.68545856E12, 0.25], [1.68545862E12, 0.26666666666666666], [1.68545796E12, 0.4666666666666667], [1.68545766E12, 0.2], [1.6854585E12, 0.5], [1.68545784E12, 0.5], [1.68545754E12, 0.2], [1.6854582E12, 0.8833333333333333], [1.6854579E12, 0.5833333333333334], [1.68545874E12, 0.13333333333333333], [1.68545808E12, 0.8666666666666667], [1.68545778E12, 0.11666666666666667], [1.68545814E12, 0.8166666666666667], [1.68545748E12, 0.21666666666666667], [1.68545844E12, 0.45]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545802E12, 0.5], [1.6854585E12, 0.06666666666666667], [1.68545784E12, 0.13333333333333333], [1.68545772E12, 0.4666666666666667], [1.6854579E12, 0.03333333333333333], [1.68545808E12, 0.08333333333333333], [1.68545856E12, 0.6], [1.68545778E12, 0.4166666666666667], [1.68545862E12, 0.35], [1.68545796E12, 0.6166666666666667], [1.68545844E12, 0.016666666666666666], [1.68545766E12, 0.08333333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68545802E12, 0.6666666666666666], [1.68545832E12, 0.5666666666666667], [1.68545838E12, 0.7166666666666667], [1.68545772E12, 0.16666666666666666], [1.68545868E12, 0.4], [1.68545742E12, 0.05], [1.68545826E12, 0.8], [1.6854576E12, 0.21666666666666667], [1.68545856E12, 0.4666666666666667], [1.68545862E12, 0.4666666666666667], [1.68545796E12, 0.5666666666666667], [1.68545766E12, 0.21666666666666667], [1.6854585E12, 0.4666666666666667], [1.68545784E12, 0.6], [1.68545754E12, 0.26666666666666666], [1.6854582E12, 0.8666666666666667], [1.6854579E12, 0.6166666666666667], [1.68545874E12, 0.13333333333333333], [1.68545808E12, 0.8333333333333334], [1.68545778E12, 0.25], [1.68545814E12, 0.8666666666666667], [1.68545748E12, 0.16666666666666666], [1.68545844E12, 0.4666666666666667]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545874E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545742E12, "maxY": 2.6166666666666667, "series": [{"data": [[1.68545802E12, 1.75], [1.68545832E12, 1.8333333333333333], [1.68545838E12, 1.9666666666666666], [1.68545772E12, 0.4166666666666667], [1.68545868E12, 1.1833333333333333], [1.68545742E12, 0.23333333333333334], [1.68545826E12, 2.3666666666666667], [1.6854576E12, 0.7333333333333333], [1.68545856E12, 1.0833333333333333], [1.68545862E12, 1.0833333333333333], [1.68545796E12, 1.7166666666666666], [1.68545766E12, 0.5666666666666667], [1.6854585E12, 1.45], [1.68545784E12, 1.7166666666666666], [1.68545754E12, 0.7333333333333333], [1.6854582E12, 2.5833333333333335], [1.6854579E12, 1.7833333333333334], [1.68545874E12, 0.3333333333333333], [1.68545808E12, 2.533333333333333], [1.68545778E12, 0.6333333333333333], [1.68545814E12, 2.6166666666666667], [1.68545748E12, 0.5666666666666667], [1.68545844E12, 1.3166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545802E12, 1.0666666666666667], [1.6854585E12, 0.18333333333333332], [1.68545784E12, 0.13333333333333333], [1.68545772E12, 1.1833333333333333], [1.6854579E12, 0.11666666666666667], [1.68545808E12, 0.08333333333333333], [1.68545856E12, 1.35], [1.68545778E12, 1.0333333333333334], [1.68545862E12, 0.7], [1.68545796E12, 1.4166666666666667], [1.68545844E12, 0.016666666666666666], [1.68545766E12, 0.3333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545874E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

