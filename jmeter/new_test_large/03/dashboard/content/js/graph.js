/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 125.0, "minX": 0.0, "maxY": 60529.0, "series": [{"data": [[0.0, 305.0], [0.1, 305.0], [0.2, 373.0], [0.3, 373.0], [0.4, 373.0], [0.5, 374.0], [0.6, 374.0], [0.7, 375.0], [0.8, 375.0], [0.9, 375.0], [1.0, 375.0], [1.1, 375.0], [1.2, 375.0], [1.3, 376.0], [1.4, 376.0], [1.5, 377.0], [1.6, 378.0], [1.7, 378.0], [1.8, 378.0], [1.9, 378.0], [2.0, 378.0], [2.1, 380.0], [2.2, 380.0], [2.3, 380.0], [2.4, 381.0], [2.5, 381.0], [2.6, 382.0], [2.7, 383.0], [2.8, 383.0], [2.9, 385.0], [3.0, 385.0], [3.1, 385.0], [3.2, 385.0], [3.3, 386.0], [3.4, 386.0], [3.5, 386.0], [3.6, 386.0], [3.7, 386.0], [3.8, 386.0], [3.9, 386.0], [4.0, 387.0], [4.1, 389.0], [4.2, 389.0], [4.3, 389.0], [4.4, 389.0], [4.5, 389.0], [4.6, 390.0], [4.7, 391.0], [4.8, 391.0], [4.9, 391.0], [5.0, 391.0], [5.1, 391.0], [5.2, 391.0], [5.3, 391.0], [5.4, 392.0], [5.5, 392.0], [5.6, 392.0], [5.7, 393.0], [5.8, 394.0], [5.9, 394.0], [6.0, 394.0], [6.1, 394.0], [6.2, 395.0], [6.3, 395.0], [6.4, 395.0], [6.5, 395.0], [6.6, 395.0], [6.7, 395.0], [6.8, 396.0], [6.9, 396.0], [7.0, 396.0], [7.1, 396.0], [7.2, 396.0], [7.3, 396.0], [7.4, 396.0], [7.5, 396.0], [7.6, 398.0], [7.7, 399.0], [7.8, 399.0], [7.9, 400.0], [8.0, 400.0], [8.1, 400.0], [8.2, 400.0], [8.3, 401.0], [8.4, 401.0], [8.5, 402.0], [8.6, 402.0], [8.7, 402.0], [8.8, 405.0], [8.9, 405.0], [9.0, 405.0], [9.1, 406.0], [9.2, 406.0], [9.3, 406.0], [9.4, 407.0], [9.5, 407.0], [9.6, 407.0], [9.7, 407.0], [9.8, 409.0], [9.9, 412.0], [10.0, 412.0], [10.1, 412.0], [10.2, 413.0], [10.3, 413.0], [10.4, 413.0], [10.5, 413.0], [10.6, 413.0], [10.7, 414.0], [10.8, 415.0], [10.9, 415.0], [11.0, 416.0], [11.1, 416.0], [11.2, 417.0], [11.3, 419.0], [11.4, 419.0], [11.5, 420.0], [11.6, 420.0], [11.7, 420.0], [11.8, 426.0], [11.9, 426.0], [12.0, 426.0], [12.1, 427.0], [12.2, 427.0], [12.3, 431.0], [12.4, 453.0], [12.5, 453.0], [12.6, 454.0], [12.7, 463.0], [12.8, 463.0], [12.9, 506.0], [13.0, 1232.0], [13.1, 1232.0], [13.2, 1670.0], [13.3, 1670.0], [13.4, 3147.0], [13.5, 3487.0], [13.6, 3487.0], [13.7, 4103.0], [13.8, 4862.0], [13.9, 4862.0], [14.0, 4922.0], [14.1, 4962.0], [14.2, 4962.0], [14.3, 4977.0], [14.4, 5307.0], [14.5, 5307.0], [14.6, 5323.0], [14.7, 5323.0], [14.8, 5324.0], [14.9, 5343.0], [15.0, 5343.0], [15.1, 5384.0], [15.2, 5404.0], [15.3, 5404.0], [15.4, 5432.0], [15.5, 5447.0], [15.6, 5447.0], [15.7, 5488.0], [15.8, 5488.0], [15.9, 5520.0], [16.0, 5524.0], [16.1, 5524.0], [16.2, 5528.0], [16.3, 5530.0], [16.4, 5530.0], [16.5, 5538.0], [16.6, 5551.0], [16.7, 5551.0], [16.8, 5616.0], [16.9, 5616.0], [17.0, 5697.0], [17.1, 5742.0], [17.2, 5742.0], [17.3, 5771.0], [17.4, 5905.0], [17.5, 5905.0], [17.6, 5909.0], [17.7, 5922.0], [17.8, 5922.0], [17.9, 5979.0], [18.0, 6013.0], [18.1, 6013.0], [18.2, 6072.0], [18.3, 6072.0], [18.4, 6132.0], [18.5, 6276.0], [18.6, 6276.0], [18.7, 6294.0], [18.8, 6359.0], [18.9, 6359.0], [19.0, 6527.0], [19.1, 6721.0], [19.2, 6721.0], [19.3, 6771.0], [19.4, 6771.0], [19.5, 6772.0], [19.6, 6785.0], [19.7, 6785.0], [19.8, 6954.0], [19.9, 6958.0], [20.0, 6958.0], [20.1, 7047.0], [20.2, 7073.0], [20.3, 7073.0], [20.4, 7152.0], [20.5, 7152.0], [20.6, 7242.0], [20.7, 7258.0], [20.8, 7258.0], [20.9, 7290.0], [21.0, 7481.0], [21.1, 7481.0], [21.2, 7629.0], [21.3, 7635.0], [21.4, 7635.0], [21.5, 7694.0], [21.6, 7871.0], [21.7, 7871.0], [21.8, 7943.0], [21.9, 7943.0], [22.0, 7946.0], [22.1, 8100.0], [22.2, 8100.0], [22.3, 8231.0], [22.4, 8396.0], [22.5, 8396.0], [22.6, 8486.0], [22.7, 8486.0], [22.8, 8486.0], [22.9, 8767.0], [23.0, 8767.0], [23.1, 8923.0], [23.2, 9081.0], [23.3, 9081.0], [23.4, 9081.0], [23.5, 9085.0], [23.6, 9085.0], [23.7, 9137.0], [23.8, 9184.0], [23.9, 9184.0], [24.0, 9240.0], [24.1, 9240.0], [24.2, 9336.0], [24.3, 9475.0], [24.4, 9475.0], [24.5, 9523.0], [24.6, 9648.0], [24.7, 9648.0], [24.8, 9714.0], [24.9, 9730.0], [25.0, 9730.0], [25.1, 9753.0], [25.2, 9765.0], [25.3, 9765.0], [25.4, 9765.0], [25.5, 9765.0], [25.6, 10011.0], [25.7, 10052.0], [25.8, 10052.0], [25.9, 10140.0], [26.0, 10155.0], [26.1, 10155.0], [26.2, 10183.0], [26.3, 10406.0], [26.4, 10406.0], [26.5, 10420.0], [26.6, 10420.0], [26.7, 10440.0], [26.8, 10660.0], [26.9, 10660.0], [27.0, 10728.0], [27.1, 10907.0], [27.2, 10907.0], [27.3, 10963.0], [27.4, 10972.0], [27.5, 10972.0], [27.6, 10996.0], [27.7, 11112.0], [27.8, 11112.0], [27.9, 11245.0], [28.0, 11245.0], [28.1, 11321.0], [28.2, 11404.0], [28.3, 11404.0], [28.4, 11521.0], [28.5, 11655.0], [28.6, 11655.0], [28.7, 11707.0], [28.8, 11919.0], [28.9, 11919.0], [29.0, 11922.0], [29.1, 11922.0], [29.2, 12240.0], [29.3, 12301.0], [29.4, 12301.0], [29.5, 12517.0], [29.6, 12756.0], [29.7, 12756.0], [29.8, 12778.0], [29.9, 12939.0], [30.0, 12939.0], [30.1, 13005.0], [30.2, 13005.0], [30.3, 13101.0], [30.4, 13125.0], [30.5, 13125.0], [30.6, 13141.0], [30.7, 13157.0], [30.8, 13157.0], [30.9, 13181.0], [31.0, 13344.0], [31.1, 13344.0], [31.2, 13499.0], [31.3, 13515.0], [31.4, 13515.0], [31.5, 13712.0], [31.6, 13712.0], [31.7, 13866.0], [31.8, 13874.0], [31.9, 13874.0], [32.0, 13939.0], [32.1, 13981.0], [32.2, 13981.0], [32.3, 14080.0], [32.4, 14101.0], [32.5, 14101.0], [32.6, 14132.0], [32.7, 14132.0], [32.8, 14248.0], [32.9, 14264.0], [33.0, 14264.0], [33.1, 14343.0], [33.2, 14373.0], [33.3, 14373.0], [33.4, 14439.0], [33.5, 14478.0], [33.6, 14478.0], [33.7, 14554.0], [33.8, 14554.0], [33.9, 14589.0], [34.0, 14649.0], [34.1, 14649.0], [34.2, 14657.0], [34.3, 14772.0], [34.4, 14772.0], [34.5, 14780.0], [34.6, 15152.0], [34.7, 15152.0], [34.8, 15437.0], [34.9, 15443.0], [35.0, 15443.0], [35.1, 15483.0], [35.2, 15483.0], [35.3, 15487.0], [35.4, 15492.0], [35.5, 15492.0], [35.6, 15770.0], [35.7, 15772.0], [35.8, 15772.0], [35.9, 15837.0], [36.0, 15915.0], [36.1, 15915.0], [36.2, 16032.0], [36.3, 16032.0], [36.4, 16277.0], [36.5, 16361.0], [36.6, 16361.0], [36.7, 16369.0], [36.8, 16400.0], [36.9, 16400.0], [37.0, 16815.0], [37.1, 16872.0], [37.2, 16872.0], [37.3, 16903.0], [37.4, 16903.0], [37.5, 16988.0], [37.6, 17058.0], [37.7, 17058.0], [37.8, 17379.0], [37.9, 17791.0], [38.0, 17791.0], [38.1, 17818.0], [38.2, 17948.0], [38.3, 17948.0], [38.4, 18044.0], [38.5, 18100.0], [38.6, 18100.0], [38.7, 18344.0], [38.8, 18344.0], [38.9, 18358.0], [39.0, 18365.0], [39.1, 18365.0], [39.2, 18489.0], [39.3, 18633.0], [39.4, 18633.0], [39.5, 18643.0], [39.6, 18661.0], [39.7, 18661.0], [39.8, 18905.0], [39.9, 18905.0], [40.0, 19125.0], [40.1, 19160.0], [40.2, 19160.0], [40.3, 19286.0], [40.4, 19335.0], [40.5, 19335.0], [40.6, 19402.0], [40.7, 19428.0], [40.8, 19428.0], [40.9, 19440.0], [41.0, 19440.0], [41.1, 19660.0], [41.2, 19745.0], [41.3, 19745.0], [41.4, 19748.0], [41.5, 19789.0], [41.6, 19789.0], [41.7, 19908.0], [41.8, 20055.0], [41.9, 20055.0], [42.0, 20169.0], [42.1, 20184.0], [42.2, 20184.0], [42.3, 20201.0], [42.4, 20201.0], [42.5, 20370.0], [42.6, 20375.0], [42.7, 20375.0], [42.8, 20494.0], [42.9, 20519.0], [43.0, 20519.0], [43.1, 20545.0], [43.2, 20620.0], [43.3, 20620.0], [43.4, 20633.0], [43.5, 20633.0], [43.6, 20649.0], [43.7, 20760.0], [43.8, 20760.0], [43.9, 20773.0], [44.0, 21149.0], [44.1, 21149.0], [44.2, 21175.0], [44.3, 21177.0], [44.4, 21177.0], [44.5, 21182.0], [44.6, 21182.0], [44.7, 21190.0], [44.8, 21269.0], [44.9, 21269.0], [45.0, 21415.0], [45.1, 21465.0], [45.2, 21465.0], [45.3, 21652.0], [45.4, 21717.0], [45.5, 21717.0], [45.6, 21745.0], [45.7, 21766.0], [45.8, 21766.0], [45.9, 21833.0], [46.0, 21833.0], [46.1, 21858.0], [46.2, 21910.0], [46.3, 21910.0], [46.4, 22163.0], [46.5, 22194.0], [46.6, 22194.0], [46.7, 22260.0], [46.8, 22297.0], [46.9, 22297.0], [47.0, 22310.0], [47.1, 22310.0], [47.2, 22403.0], [47.3, 22475.0], [47.4, 22475.0], [47.5, 22504.0], [47.6, 22638.0], [47.7, 22638.0], [47.8, 22645.0], [47.9, 22674.0], [48.0, 22674.0], [48.1, 22707.0], [48.2, 22707.0], [48.3, 22723.0], [48.4, 22906.0], [48.5, 22906.0], [48.6, 22957.0], [48.7, 23097.0], [48.8, 23097.0], [48.9, 23282.0], [49.0, 23289.0], [49.1, 23289.0], [49.2, 23391.0], [49.3, 23446.0], [49.4, 23446.0], [49.5, 23539.0], [49.6, 23539.0], [49.7, 23542.0], [49.8, 23668.0], [49.9, 23668.0], [50.0, 23673.0], [50.1, 23727.0], [50.2, 23727.0], [50.3, 23751.0], [50.4, 23807.0], [50.5, 23807.0], [50.6, 24005.0], [50.7, 24005.0], [50.8, 24059.0], [50.9, 24080.0], [51.0, 24080.0], [51.1, 24325.0], [51.2, 24335.0], [51.3, 24335.0], [51.4, 24378.0], [51.5, 24599.0], [51.6, 24599.0], [51.7, 24749.0], [51.8, 24777.0], [51.9, 24777.0], [52.0, 24807.0], [52.1, 24807.0], [52.2, 24821.0], [52.3, 24875.0], [52.4, 24875.0], [52.5, 25283.0], [52.6, 25315.0], [52.7, 25315.0], [52.8, 25403.0], [52.9, 25426.0], [53.0, 25426.0], [53.1, 25512.0], [53.2, 25512.0], [53.3, 25949.0], [53.4, 26011.0], [53.5, 26011.0], [53.6, 26091.0], [53.7, 26156.0], [53.8, 26156.0], [53.9, 26222.0], [54.0, 26403.0], [54.1, 26403.0], [54.2, 26496.0], [54.3, 26496.0], [54.4, 26504.0], [54.5, 26555.0], [54.6, 26555.0], [54.7, 26663.0], [54.8, 26822.0], [54.9, 26822.0], [55.0, 26954.0], [55.1, 27174.0], [55.2, 27174.0], [55.3, 27397.0], [55.4, 27566.0], [55.5, 27566.0], [55.6, 27596.0], [55.7, 27596.0], [55.8, 27727.0], [55.9, 27970.0], [56.0, 27970.0], [56.1, 28025.0], [56.2, 28072.0], [56.3, 28072.0], [56.4, 28082.0], [56.5, 28121.0], [56.6, 28121.0], [56.7, 28272.0], [56.8, 28272.0], [56.9, 28419.0], [57.0, 28606.0], [57.1, 28606.0], [57.2, 28652.0], [57.3, 28682.0], [57.4, 28682.0], [57.5, 28755.0], [57.6, 28970.0], [57.7, 28970.0], [57.8, 29025.0], [57.9, 29025.0], [58.0, 29047.0], [58.1, 29069.0], [58.2, 29069.0], [58.3, 29119.0], [58.4, 29377.0], [58.5, 29377.0], [58.6, 29420.0], [58.7, 29548.0], [58.8, 29548.0], [58.9, 29603.0], [59.0, 29686.0], [59.1, 29686.0], [59.2, 29973.0], [59.3, 29973.0], [59.4, 29999.0], [59.5, 30058.0], [59.6, 30058.0], [59.7, 30084.0], [59.8, 30158.0], [59.9, 30158.0], [60.0, 30208.0], [60.1, 30657.0], [60.2, 30657.0], [60.3, 30663.0], [60.4, 30663.0], [60.5, 30674.0], [60.6, 30827.0], [60.7, 30827.0], [60.8, 30915.0], [60.9, 31029.0], [61.0, 31029.0], [61.1, 31089.0], [61.2, 31203.0], [61.3, 31203.0], [61.4, 31495.0], [61.5, 31495.0], [61.6, 31496.0], [61.7, 31589.0], [61.8, 31589.0], [61.9, 31666.0], [62.0, 31844.0], [62.1, 31844.0], [62.2, 31850.0], [62.3, 32084.0], [62.4, 32084.0], [62.5, 32105.0], [62.6, 32377.0], [62.7, 32377.0], [62.8, 32487.0], [62.9, 32487.0], [63.0, 32608.0], [63.1, 32625.0], [63.2, 32625.0], [63.3, 32807.0], [63.4, 32831.0], [63.5, 32831.0], [63.6, 32890.0], [63.7, 32937.0], [63.8, 32937.0], [63.9, 32943.0], [64.0, 32943.0], [64.1, 33000.0], [64.2, 33095.0], [64.3, 33095.0], [64.4, 33119.0], [64.5, 33246.0], [64.6, 33246.0], [64.7, 33323.0], [64.8, 33346.0], [64.9, 33346.0], [65.0, 33517.0], [65.1, 33517.0], [65.2, 33662.0], [65.3, 33714.0], [65.4, 33714.0], [65.5, 33874.0], [65.6, 33928.0], [65.7, 33928.0], [65.8, 33938.0], [65.9, 33994.0], [66.0, 33994.0], [66.1, 34121.0], [66.2, 34191.0], [66.3, 34191.0], [66.4, 34260.0], [66.5, 34260.0], [66.6, 34332.0], [66.7, 34522.0], [66.8, 34522.0], [66.9, 34654.0], [67.0, 34672.0], [67.1, 34672.0], [67.2, 34689.0], [67.3, 34742.0], [67.4, 34742.0], [67.5, 34837.0], [67.6, 34837.0], [67.7, 34856.0], [67.8, 34868.0], [67.9, 34868.0], [68.0, 35319.0], [68.1, 35480.0], [68.2, 35480.0], [68.3, 35584.0], [68.4, 35643.0], [68.5, 35643.0], [68.6, 35682.0], [68.7, 35682.0], [68.8, 35684.0], [68.9, 35842.0], [69.0, 35842.0], [69.1, 35846.0], [69.2, 35945.0], [69.3, 35945.0], [69.4, 36104.0], [69.5, 36145.0], [69.6, 36145.0], [69.7, 36405.0], [69.8, 36432.0], [69.9, 36432.0], [70.0, 36461.0], [70.1, 36461.0], [70.2, 36626.0], [70.3, 36690.0], [70.4, 36690.0], [70.5, 36834.0], [70.6, 36896.0], [70.7, 36896.0], [70.8, 36925.0], [70.9, 36930.0], [71.0, 36930.0], [71.1, 37054.0], [71.2, 37054.0], [71.3, 37088.0], [71.4, 37198.0], [71.5, 37198.0], [71.6, 37385.0], [71.7, 37459.0], [71.8, 37459.0], [71.9, 37573.0], [72.0, 37861.0], [72.1, 37861.0], [72.2, 38086.0], [72.3, 38086.0], [72.4, 38207.0], [72.5, 38247.0], [72.6, 38247.0], [72.7, 38283.0], [72.8, 38297.0], [72.9, 38297.0], [73.0, 38304.0], [73.1, 38316.0], [73.2, 38316.0], [73.3, 38415.0], [73.4, 38429.0], [73.5, 38429.0], [73.6, 38513.0], [73.7, 38513.0], [73.8, 38521.0], [73.9, 38540.0], [74.0, 38540.0], [74.1, 38620.0], [74.2, 38672.0], [74.3, 38672.0], [74.4, 38776.0], [74.5, 38794.0], [74.6, 38794.0], [74.7, 38806.0], [74.8, 38806.0], [74.9, 38909.0], [75.0, 39049.0], [75.1, 39049.0], [75.2, 39146.0], [75.3, 39229.0], [75.4, 39229.0], [75.5, 39233.0], [75.6, 39319.0], [75.7, 39319.0], [75.8, 39365.0], [75.9, 39375.0], [76.0, 39375.0], [76.1, 39444.0], [76.2, 39444.0], [76.3, 39471.0], [76.4, 39656.0], [76.5, 39656.0], [76.6, 39678.0], [76.7, 39701.0], [76.8, 39701.0], [76.9, 39712.0], [77.0, 40144.0], [77.1, 40144.0], [77.2, 40161.0], [77.3, 40161.0], [77.4, 40175.0], [77.5, 40220.0], [77.6, 40220.0], [77.7, 40266.0], [77.8, 40489.0], [77.9, 40489.0], [78.0, 40557.0], [78.1, 40689.0], [78.2, 40689.0], [78.3, 40692.0], [78.4, 40692.0], [78.5, 41101.0], [78.6, 41145.0], [78.7, 41145.0], [78.8, 41382.0], [78.9, 41387.0], [79.0, 41387.0], [79.1, 41412.0], [79.2, 41485.0], [79.3, 41485.0], [79.4, 41506.0], [79.5, 41526.0], [79.6, 41526.0], [79.7, 41682.0], [79.8, 41682.0], [79.9, 41827.0], [80.0, 41902.0], [80.1, 41902.0], [80.2, 41935.0], [80.3, 42048.0], [80.4, 42048.0], [80.5, 42094.0], [80.6, 42196.0], [80.7, 42196.0], [80.8, 42205.0], [80.9, 42205.0], [81.0, 42207.0], [81.1, 42296.0], [81.2, 42296.0], [81.3, 42384.0], [81.4, 42595.0], [81.5, 42595.0], [81.6, 42740.0], [81.7, 42917.0], [81.8, 42917.0], [81.9, 42999.0], [82.0, 42999.0], [82.1, 43076.0], [82.2, 43150.0], [82.3, 43150.0], [82.4, 43208.0], [82.5, 43212.0], [82.6, 43212.0], [82.7, 43363.0], [82.8, 43371.0], [82.9, 43371.0], [83.0, 43415.0], [83.1, 43462.0], [83.2, 43462.0], [83.3, 43834.0], [83.4, 43834.0], [83.5, 43854.0], [83.6, 43917.0], [83.7, 43917.0], [83.8, 43999.0], [83.9, 44052.0], [84.0, 44052.0], [84.1, 44089.0], [84.2, 44163.0], [84.3, 44163.0], [84.4, 44430.0], [84.5, 44430.0], [84.6, 44530.0], [84.7, 44758.0], [84.8, 44758.0], [84.9, 44837.0], [85.0, 44902.0], [85.1, 44902.0], [85.2, 45032.0], [85.3, 45771.0], [85.4, 45771.0], [85.5, 45889.0], [85.6, 45889.0], [85.7, 46267.0], [85.8, 46337.0], [85.9, 46337.0], [86.0, 46368.0], [86.1, 46516.0], [86.2, 46516.0], [86.3, 46574.0], [86.4, 47011.0], [86.5, 47011.0], [86.6, 47456.0], [86.7, 47826.0], [86.8, 47826.0], [86.9, 48063.0], [87.0, 48063.0], [87.1, 48081.0], [87.2, 48427.0], [87.3, 48427.0], [87.4, 48515.0], [87.5, 49253.0], [87.6, 49253.0], [87.7, 49295.0], [87.8, 49375.0], [87.9, 49375.0], [88.0, 50659.0], [88.1, 50659.0], [88.2, 50848.0], [88.3, 51947.0], [88.4, 51947.0], [88.5, 52429.0], [88.6, 52622.0], [88.7, 52622.0], [88.8, 52893.0], [88.9, 52928.0], [89.0, 52928.0], [89.1, 53123.0], [89.2, 53123.0], [89.3, 53774.0], [89.4, 53813.0], [89.5, 53813.0], [89.6, 53950.0], [89.7, 54332.0], [89.8, 54332.0], [89.9, 54409.0], [90.0, 54468.0], [90.1, 54468.0], [90.2, 54493.0], [90.3, 54771.0], [90.4, 54771.0], [90.5, 54962.0], [90.6, 54962.0], [90.7, 55054.0], [90.8, 55212.0], [90.9, 55212.0], [91.0, 55684.0], [91.1, 55912.0], [91.2, 55912.0], [91.3, 56138.0], [91.4, 56183.0], [91.5, 56183.0], [91.6, 56420.0], [91.7, 56420.0], [91.8, 56500.0], [91.9, 56596.0], [92.0, 56596.0], [92.1, 56855.0], [92.2, 57241.0], [92.3, 57241.0], [92.4, 57719.0], [92.5, 57901.0], [92.6, 57901.0], [92.7, 57927.0], [92.8, 57927.0], [92.9, 58294.0], [93.0, 58353.0], [93.1, 58353.0], [93.2, 58447.0], [93.3, 58472.0], [93.4, 58472.0], [93.5, 58497.0], [93.6, 59118.0], [93.7, 59118.0], [93.8, 59157.0], [93.9, 59303.0], [94.0, 59303.0], [94.1, 59328.0], [94.2, 59328.0], [94.3, 59761.0], [94.4, 60221.0], [94.5, 60221.0], [94.6, 60377.0], [94.7, 60379.0], [94.8, 60379.0], [94.9, 60380.0], [95.0, 60380.0], [95.1, 60380.0], [95.2, 60381.0], [95.3, 60381.0], [95.4, 60381.0], [95.5, 60381.0], [95.6, 60381.0], [95.7, 60384.0], [95.8, 60384.0], [95.9, 60384.0], [96.0, 60385.0], [96.1, 60387.0], [96.2, 60387.0], [96.3, 60390.0], [96.4, 60390.0], [96.5, 60393.0], [96.6, 60393.0], [96.7, 60393.0], [96.8, 60394.0], [96.9, 60394.0], [97.0, 60394.0], [97.1, 60395.0], [97.2, 60395.0], [97.3, 60395.0], [97.4, 60398.0], [97.5, 60400.0], [97.6, 60400.0], [97.7, 60401.0], [97.8, 60401.0], [97.9, 60406.0], [98.0, 60425.0], [98.1, 60425.0], [98.2, 60445.0], [98.3, 60446.0], [98.4, 60446.0], [98.5, 60450.0], [98.6, 60453.0], [98.7, 60453.0], [98.8, 60455.0], [98.9, 60455.0], [99.0, 60474.0], [99.1, 60477.0], [99.2, 60477.0], [99.3, 60504.0], [99.4, 60518.0], [99.5, 60518.0], [99.6, 60523.0], [99.7, 60528.0], [99.8, 60528.0], [99.9, 60529.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 125.0], [0.1, 125.0], [0.2, 125.0], [0.3, 125.0], [0.4, 126.0], [0.5, 126.0], [0.6, 126.0], [0.7, 126.0], [0.8, 126.0], [0.9, 126.0], [1.0, 127.0], [1.1, 127.0], [1.2, 127.0], [1.3, 127.0], [1.4, 127.0], [1.5, 127.0], [1.6, 127.0], [1.7, 127.0], [1.8, 127.0], [1.9, 127.0], [2.0, 127.0], [2.1, 128.0], [2.2, 128.0], [2.3, 128.0], [2.4, 128.0], [2.5, 128.0], [2.6, 128.0], [2.7, 128.0], [2.8, 128.0], [2.9, 128.0], [3.0, 128.0], [3.1, 128.0], [3.2, 128.0], [3.3, 128.0], [3.4, 128.0], [3.5, 128.0], [3.6, 128.0], [3.7, 128.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 129.0], [4.2, 129.0], [4.3, 129.0], [4.4, 129.0], [4.5, 129.0], [4.6, 130.0], [4.7, 130.0], [4.8, 130.0], [4.9, 130.0], [5.0, 130.0], [5.1, 130.0], [5.2, 131.0], [5.3, 131.0], [5.4, 131.0], [5.5, 131.0], [5.6, 131.0], [5.7, 131.0], [5.8, 131.0], [5.9, 131.0], [6.0, 131.0], [6.1, 131.0], [6.2, 131.0], [6.3, 132.0], [6.4, 132.0], [6.5, 132.0], [6.6, 132.0], [6.7, 132.0], [6.8, 132.0], [6.9, 132.0], [7.0, 132.0], [7.1, 132.0], [7.2, 132.0], [7.3, 132.0], [7.4, 132.0], [7.5, 132.0], [7.6, 132.0], [7.7, 133.0], [7.8, 133.0], [7.9, 133.0], [8.0, 133.0], [8.1, 133.0], [8.2, 133.0], [8.3, 133.0], [8.4, 133.0], [8.5, 133.0], [8.6, 133.0], [8.7, 133.0], [8.8, 133.0], [8.9, 133.0], [9.0, 133.0], [9.1, 133.0], [9.2, 133.0], [9.3, 133.0], [9.4, 133.0], [9.5, 133.0], [9.6, 133.0], [9.7, 133.0], [9.8, 133.0], [9.9, 134.0], [10.0, 134.0], [10.1, 134.0], [10.2, 134.0], [10.3, 134.0], [10.4, 134.0], [10.5, 134.0], [10.6, 134.0], [10.7, 134.0], [10.8, 134.0], [10.9, 134.0], [11.0, 135.0], [11.1, 135.0], [11.2, 136.0], [11.3, 137.0], [11.4, 137.0], [11.5, 137.0], [11.6, 138.0], [11.7, 138.0], [11.8, 138.0], [11.9, 138.0], [12.0, 138.0], [12.1, 140.0], [12.2, 140.0], [12.3, 140.0], [12.4, 141.0], [12.5, 141.0], [12.6, 155.0], [12.7, 160.0], [12.8, 160.0], [12.9, 981.0], [13.0, 981.0], [13.1, 1392.0], [13.2, 2845.0], [13.3, 2845.0], [13.4, 3222.0], [13.5, 3821.0], [13.6, 3821.0], [13.7, 4597.0], [13.8, 4659.0], [13.9, 4659.0], [14.0, 4670.0], [14.1, 4670.0], [14.2, 4704.0], [14.3, 5026.0], [14.4, 5026.0], [14.5, 5059.0], [14.6, 5062.0], [14.7, 5062.0], [14.8, 5090.0], [14.9, 5127.0], [15.0, 5127.0], [15.1, 5153.0], [15.2, 5153.0], [15.3, 5174.0], [15.4, 5196.0], [15.5, 5196.0], [15.6, 5199.0], [15.7, 5210.0], [15.8, 5210.0], [15.9, 5225.0], [16.0, 5236.0], [16.1, 5236.0], [16.2, 5246.0], [16.3, 5246.0], [16.4, 5265.0], [16.5, 5280.0], [16.6, 5280.0], [16.7, 5350.0], [16.8, 5438.0], [16.9, 5438.0], [17.0, 5484.0], [17.1, 5492.0], [17.2, 5492.0], [17.3, 5645.0], [17.4, 5649.0], [17.5, 5649.0], [17.6, 5663.0], [17.7, 5663.0], [17.8, 5718.0], [17.9, 5762.0], [18.0, 5762.0], [18.1, 5814.0], [18.2, 5875.0], [18.3, 5875.0], [18.4, 6023.0], [18.5, 6035.0], [18.6, 6035.0], [18.7, 6079.0], [18.8, 6079.0], [18.9, 6187.0], [19.0, 6447.0], [19.1, 6447.0], [19.2, 6489.0], [19.3, 6503.0], [19.4, 6503.0], [19.5, 6514.0], [19.6, 6680.0], [19.7, 6680.0], [19.8, 6698.0], [19.9, 6698.0], [20.0, 6796.0], [20.1, 6813.0], [20.2, 6813.0], [20.3, 6889.0], [20.4, 6979.0], [20.5, 6979.0], [20.6, 7006.0], [20.7, 7022.0], [20.8, 7022.0], [20.9, 7208.0], [21.0, 7208.0], [21.1, 7360.0], [21.2, 7372.0], [21.3, 7372.0], [21.4, 7430.0], [21.5, 7602.0], [21.6, 7602.0], [21.7, 7658.0], [21.8, 7664.0], [21.9, 7664.0], [22.0, 7838.0], [22.1, 7838.0], [22.2, 7945.0], [22.3, 8145.0], [22.4, 8145.0], [22.5, 8201.0], [22.6, 8227.0], [22.7, 8227.0], [22.8, 8483.0], [22.9, 8550.0], [23.0, 8550.0], [23.1, 8661.0], [23.2, 8800.0], [23.3, 8800.0], [23.4, 8801.0], [23.5, 8801.0], [23.6, 8866.0], [23.7, 8925.0], [23.8, 8925.0], [23.9, 8978.0], [24.0, 9081.0], [24.1, 9081.0], [24.2, 9218.0], [24.3, 9259.0], [24.4, 9259.0], [24.5, 9367.0], [24.6, 9367.0], [24.7, 9445.0], [24.8, 9463.0], [24.9, 9463.0], [25.0, 9488.0], [25.1, 9489.0], [25.2, 9489.0], [25.3, 9502.0], [25.4, 9754.0], [25.5, 9754.0], [25.6, 9756.0], [25.7, 9756.0], [25.8, 9869.0], [25.9, 9901.0], [26.0, 9901.0], [26.1, 9917.0], [26.2, 10148.0], [26.3, 10148.0], [26.4, 10157.0], [26.5, 10184.0], [26.6, 10184.0], [26.7, 10392.0], [26.8, 10392.0], [26.9, 10393.0], [27.0, 10651.0], [27.1, 10651.0], [27.2, 10709.0], [27.3, 10717.0], [27.4, 10717.0], [27.5, 10738.0], [27.6, 10851.0], [27.7, 10851.0], [27.8, 10984.0], [27.9, 11046.0], [28.0, 11046.0], [28.1, 11079.0], [28.2, 11079.0], [28.3, 11253.0], [28.4, 11390.0], [28.5, 11390.0], [28.6, 11442.0], [28.7, 11652.0], [28.8, 11652.0], [28.9, 11662.0], [29.0, 11990.0], [29.1, 11990.0], [29.2, 12037.0], [29.3, 12037.0], [29.4, 12252.0], [29.5, 12356.0], [29.6, 12356.0], [29.7, 12527.0], [29.8, 12686.0], [29.9, 12686.0], [30.0, 12756.0], [30.1, 12828.0], [30.2, 12828.0], [30.3, 12847.0], [30.4, 12847.0], [30.5, 12889.0], [30.6, 12896.0], [30.7, 12896.0], [30.8, 12919.0], [30.9, 13046.0], [31.0, 13046.0], [31.1, 13088.0], [31.2, 13257.0], [31.3, 13257.0], [31.4, 13437.0], [31.5, 13437.0], [31.6, 13599.0], [31.7, 13619.0], [31.8, 13619.0], [31.9, 13675.0], [32.0, 13727.0], [32.1, 13727.0], [32.2, 13787.0], [32.3, 13799.0], [32.4, 13799.0], [32.5, 13883.0], [32.6, 13883.0], [32.7, 13973.0], [32.8, 13995.0], [32.9, 13995.0], [33.0, 14076.0], [33.1, 14125.0], [33.2, 14125.0], [33.3, 14170.0], [33.4, 14229.0], [33.5, 14229.0], [33.6, 14290.0], [33.7, 14316.0], [33.8, 14316.0], [33.9, 14391.0], [34.0, 14391.0], [34.1, 14392.0], [34.2, 14502.0], [34.3, 14502.0], [34.4, 14516.0], [34.5, 14870.0], [34.6, 14870.0], [34.7, 15086.0], [34.8, 15172.0], [34.9, 15172.0], [35.0, 15174.0], [35.1, 15174.0], [35.2, 15223.0], [35.3, 15227.0], [35.4, 15227.0], [35.5, 15516.0], [35.6, 15517.0], [35.7, 15517.0], [35.8, 15575.0], [35.9, 15641.0], [36.0, 15641.0], [36.1, 15767.0], [36.2, 15767.0], [36.3, 16027.0], [36.4, 16092.0], [36.5, 16092.0], [36.6, 16112.0], [36.7, 16134.0], [36.8, 16134.0], [36.9, 16551.0], [37.0, 16588.0], [37.1, 16588.0], [37.2, 16641.0], [37.3, 16641.0], [37.4, 16722.0], [37.5, 16810.0], [37.6, 16810.0], [37.7, 17117.0], [37.8, 17540.0], [37.9, 17540.0], [38.0, 17561.0], [38.1, 17612.0], [38.2, 17612.0], [38.3, 17785.0], [38.4, 17785.0], [38.5, 17815.0], [38.6, 17979.0], [38.7, 17979.0], [38.8, 18044.0], [38.9, 18072.0], [39.0, 18072.0], [39.1, 18227.0], [39.2, 18379.0], [39.3, 18379.0], [39.4, 18389.0], [39.5, 18398.0], [39.6, 18398.0], [39.7, 18645.0], [39.8, 18645.0], [39.9, 18797.0], [40.0, 18825.0], [40.1, 18825.0], [40.2, 19028.0], [40.3, 19085.0], [40.4, 19085.0], [40.5, 19122.0], [40.6, 19143.0], [40.7, 19143.0], [40.8, 19166.0], [40.9, 19166.0], [41.0, 19393.0], [41.1, 19479.0], [41.2, 19479.0], [41.3, 19489.0], [41.4, 19529.0], [41.5, 19529.0], [41.6, 19647.0], [41.7, 19733.0], [41.8, 19733.0], [41.9, 19907.0], [42.0, 19907.0], [42.1, 19921.0], [42.2, 19923.0], [42.3, 19923.0], [42.4, 20062.0], [42.5, 20087.0], [42.6, 20087.0], [42.7, 20210.0], [42.8, 20254.0], [42.9, 20254.0], [43.0, 20282.0], [43.1, 20282.0], [43.2, 20357.0], [43.3, 20378.0], [43.4, 20378.0], [43.5, 20383.0], [43.6, 20508.0], [43.7, 20508.0], [43.8, 20522.0], [43.9, 20898.0], [44.0, 20898.0], [44.1, 20914.0], [44.2, 20914.0], [44.3, 20926.0], [44.4, 20930.0], [44.5, 20930.0], [44.6, 20930.0], [44.7, 20972.0], [44.8, 20972.0], [44.9, 21160.0], [45.0, 21205.0], [45.1, 21205.0], [45.2, 21352.0], [45.3, 21468.0], [45.4, 21468.0], [45.5, 21489.0], [45.6, 21489.0], [45.7, 21517.0], [45.8, 21571.0], [45.9, 21571.0], [46.0, 21595.0], [46.1, 21645.0], [46.2, 21645.0], [46.3, 21906.0], [46.4, 21940.0], [46.5, 21940.0], [46.6, 21995.0], [46.7, 21995.0], [46.8, 22012.0], [46.9, 22020.0], [47.0, 22020.0], [47.1, 22140.0], [47.2, 22220.0], [47.3, 22220.0], [47.4, 22237.0], [47.5, 22333.0], [47.6, 22333.0], [47.7, 22371.0], [47.8, 22371.0], [47.9, 22393.0], [48.0, 22406.0], [48.1, 22406.0], [48.2, 22468.0], [48.3, 22639.0], [48.4, 22639.0], [48.5, 22678.0], [48.6, 22831.0], [48.7, 22831.0], [48.8, 22949.0], [48.9, 22949.0], [49.0, 23029.0], [49.1, 23123.0], [49.2, 23123.0], [49.3, 23196.0], [49.4, 23274.0], [49.5, 23274.0], [49.6, 23280.0], [49.7, 23392.0], [49.8, 23392.0], [49.9, 23399.0], [50.0, 23410.0], [50.1, 23410.0], [50.2, 23487.0], [50.3, 23487.0], [50.4, 23537.0], [50.5, 23714.0], [50.6, 23714.0], [50.7, 23799.0], [50.8, 23821.0], [50.9, 23821.0], [51.0, 24061.0], [51.1, 24084.0], [51.2, 24084.0], [51.3, 24102.0], [51.4, 24102.0], [51.5, 24353.0], [51.6, 24480.0], [51.7, 24480.0], [51.8, 24489.0], [51.9, 24526.0], [52.0, 24526.0], [52.1, 24567.0], [52.2, 24611.0], [52.3, 24611.0], [52.4, 25017.0], [52.5, 25017.0], [52.6, 25069.0], [52.7, 25150.0], [52.8, 25150.0], [52.9, 25165.0], [53.0, 25246.0], [53.1, 25246.0], [53.2, 25700.0], [53.3, 25745.0], [53.4, 25745.0], [53.5, 25830.0], [53.6, 25830.0], [53.7, 25906.0], [53.8, 25974.0], [53.9, 25974.0], [54.0, 26076.0], [54.1, 26149.0], [54.2, 26149.0], [54.3, 26256.0], [54.4, 26308.0], [54.5, 26308.0], [54.6, 26401.0], [54.7, 26401.0], [54.8, 26561.0], [54.9, 26700.0], [55.0, 26700.0], [55.1, 26913.0], [55.2, 27093.0], [55.3, 27093.0], [55.4, 27307.0], [55.5, 27347.0], [55.6, 27347.0], [55.7, 27430.0], [55.8, 27677.0], [55.9, 27677.0], [56.0, 27764.0], [56.1, 27764.0], [56.2, 27797.0], [56.3, 27827.0], [56.4, 27827.0], [56.5, 27858.0], [56.6, 28001.0], [56.7, 28001.0], [56.8, 28173.0], [56.9, 28344.0], [57.0, 28344.0], [57.1, 28373.0], [57.2, 28373.0], [57.3, 28422.0], [57.4, 28471.0], [57.5, 28471.0], [57.6, 28656.0], [57.7, 28775.0], [57.8, 28775.0], [57.9, 28779.0], [58.0, 28819.0], [58.1, 28819.0], [58.2, 28866.0], [58.3, 28866.0], [58.4, 29112.0], [58.5, 29161.0], [58.6, 29161.0], [58.7, 29274.0], [58.8, 29289.0], [58.9, 29289.0], [59.0, 29434.0], [59.1, 29699.0], [59.2, 29699.0], [59.3, 29747.0], [59.4, 29747.0], [59.5, 29778.0], [59.6, 29821.0], [59.7, 29821.0], [59.8, 29902.0], [59.9, 29957.0], [60.0, 29957.0], [60.1, 30399.0], [60.2, 30410.0], [60.3, 30410.0], [60.4, 30419.0], [60.5, 30419.0], [60.6, 30565.0], [60.7, 30571.0], [60.8, 30571.0], [60.9, 30661.0], [61.0, 30839.0], [61.1, 30839.0], [61.2, 30872.0], [61.3, 31225.0], [61.4, 31225.0], [61.5, 31233.0], [61.6, 31342.0], [61.7, 31342.0], [61.8, 31399.0], [61.9, 31399.0], [62.0, 31571.0], [62.1, 31591.0], [62.2, 31591.0], [62.3, 31796.0], [62.4, 31820.0], [62.5, 31820.0], [62.6, 32117.0], [62.7, 32206.0], [62.8, 32206.0], [62.9, 32308.0], [63.0, 32308.0], [63.1, 32372.0], [63.2, 32513.0], [63.3, 32513.0], [63.4, 32528.0], [63.5, 32621.0], [63.6, 32621.0], [63.7, 32645.0], [63.8, 32682.0], [63.9, 32682.0], [64.0, 32740.0], [64.1, 32740.0], [64.2, 32811.0], [64.3, 32863.0], [64.4, 32863.0], [64.5, 32977.0], [64.6, 33066.0], [64.7, 33066.0], [64.8, 33069.0], [64.9, 33223.0], [65.0, 33223.0], [65.1, 33397.0], [65.2, 33397.0], [65.3, 33398.0], [65.4, 33450.0], [65.5, 33450.0], [65.6, 33499.0], [65.7, 33651.0], [65.8, 33651.0], [65.9, 33741.0], [66.0, 33869.0], [66.1, 33869.0], [66.2, 33939.0], [66.3, 33939.0], [66.4, 33963.0], [66.5, 34058.0], [66.6, 34058.0], [66.7, 34249.0], [66.8, 34384.0], [66.9, 34384.0], [67.0, 34388.0], [67.1, 34427.0], [67.2, 34427.0], [67.3, 34453.0], [67.4, 34545.0], [67.5, 34545.0], [67.6, 34555.0], [67.7, 34555.0], [67.8, 34595.0], [67.9, 35059.0], [68.0, 35059.0], [68.1, 35203.0], [68.2, 35294.0], [68.3, 35294.0], [68.4, 35370.0], [68.5, 35382.0], [68.6, 35382.0], [68.7, 35402.0], [68.8, 35402.0], [68.9, 35580.0], [69.0, 35583.0], [69.1, 35583.0], [69.2, 35667.0], [69.3, 35761.0], [69.4, 35761.0], [69.5, 35866.0], [69.6, 36115.0], [69.7, 36115.0], [69.8, 36167.0], [69.9, 36167.0], [70.0, 36212.0], [70.1, 36355.0], [70.2, 36355.0], [70.3, 36416.0], [70.4, 36516.0], [70.5, 36516.0], [70.6, 36618.0], [70.7, 36638.0], [70.8, 36638.0], [70.9, 36652.0], [71.0, 36652.0], [71.1, 36669.0], [71.2, 36838.0], [71.3, 36838.0], [71.4, 36935.0], [71.5, 37118.0], [71.6, 37118.0], [71.7, 37185.0], [71.8, 37205.0], [71.9, 37205.0], [72.0, 37609.0], [72.1, 37609.0], [72.2, 37750.0], [72.3, 37959.0], [72.4, 37959.0], [72.5, 37994.0], [72.6, 38021.0], [72.7, 38021.0], [72.8, 38032.0], [72.9, 38035.0], [73.0, 38035.0], [73.1, 38053.0], [73.2, 38128.0], [73.3, 38128.0], [73.4, 38129.0], [73.5, 38129.0], [73.6, 38236.0], [73.7, 38257.0], [73.8, 38257.0], [73.9, 38266.0], [74.0, 38371.0], [74.1, 38371.0], [74.2, 38416.0], [74.3, 38507.0], [74.4, 38507.0], [74.5, 38511.0], [74.6, 38511.0], [74.7, 38517.0], [74.8, 38640.0], [74.9, 38640.0], [75.0, 38758.0], [75.1, 38835.0], [75.2, 38835.0], [75.3, 38920.0], [75.4, 38964.0], [75.5, 38964.0], [75.6, 39043.0], [75.7, 39043.0], [75.8, 39112.0], [75.9, 39117.0], [76.0, 39117.0], [76.1, 39180.0], [76.2, 39218.0], [76.3, 39218.0], [76.4, 39252.0], [76.5, 39376.0], [76.6, 39376.0], [76.7, 39420.0], [76.8, 39420.0], [76.9, 39428.0], [77.0, 39891.0], [77.1, 39891.0], [77.2, 39895.0], [77.3, 39903.0], [77.4, 39903.0], [77.5, 39908.0], [77.6, 39990.0], [77.7, 39990.0], [77.8, 40171.0], [77.9, 40241.0], [78.0, 40241.0], [78.1, 40428.0], [78.2, 40428.0], [78.3, 40443.0], [78.4, 40827.0], [78.5, 40827.0], [78.6, 40880.0], [78.7, 41120.0], [78.8, 41120.0], [78.9, 41128.0], [79.0, 41159.0], [79.1, 41159.0], [79.2, 41233.0], [79.3, 41233.0], [79.4, 41233.0], [79.5, 41236.0], [79.6, 41236.0], [79.7, 41423.0], [79.8, 41562.0], [79.9, 41562.0], [80.0, 41599.0], [80.1, 41665.0], [80.2, 41665.0], [80.3, 41752.0], [80.4, 41752.0], [80.5, 41841.0], [80.6, 41889.0], [80.7, 41889.0], [80.8, 41936.0], [80.9, 41950.0], [81.0, 41950.0], [81.1, 42000.0], [81.2, 42106.0], [81.3, 42106.0], [81.4, 42280.0], [81.5, 42280.0], [81.6, 42484.0], [81.7, 42667.0], [81.8, 42667.0], [81.9, 42743.0], [82.0, 42781.0], [82.1, 42781.0], [82.2, 42866.0], [82.3, 42949.0], [82.4, 42949.0], [82.5, 42957.0], [82.6, 42957.0], [82.7, 43099.0], [82.8, 43112.0], [82.9, 43112.0], [83.0, 43137.0], [83.1, 43211.0], [83.2, 43211.0], [83.3, 43318.0], [83.4, 43571.0], [83.5, 43571.0], [83.6, 43582.0], [83.7, 43741.0], [83.8, 43741.0], [83.9, 43777.0], [84.0, 43777.0], [84.1, 43825.0], [84.2, 43906.0], [84.3, 43906.0], [84.4, 44129.0], [84.5, 44232.0], [84.6, 44232.0], [84.7, 44439.0], [84.8, 44529.0], [84.9, 44529.0], [85.0, 44638.0], [85.1, 44638.0], [85.2, 44757.0], [85.3, 45492.0], [85.4, 45492.0], [85.5, 45629.0], [85.6, 46000.0], [85.7, 46000.0], [85.8, 46079.0], [85.9, 46085.0], [86.0, 46085.0], [86.1, 46226.0], [86.2, 46226.0], [86.3, 46323.0], [86.4, 46754.0], [86.5, 46754.0], [86.6, 47193.0], [86.7, 47561.0], [86.8, 47561.0], [86.9, 47801.0], [87.0, 47814.0], [87.1, 47814.0], [87.2, 48180.0], [87.3, 48180.0], [87.4, 48262.0], [87.5, 48979.0], [87.6, 48979.0], [87.7, 49025.0], [87.8, 49108.0], [87.9, 49108.0], [88.0, 50402.0], [88.1, 50571.0], [88.2, 50571.0], [88.3, 51682.0], [88.4, 51682.0], [88.5, 52165.0], [88.6, 52364.0], [88.7, 52364.0], [88.8, 52644.0], [88.9, 52661.0], [89.0, 52661.0], [89.1, 52877.0], [89.2, 53523.0], [89.3, 53523.0], [89.4, 53557.0], [89.5, 53689.0], [89.6, 53689.0], [89.7, 54063.0], [89.8, 54063.0], [89.9, 54158.0], [90.0, 54183.0], [90.1, 54183.0], [90.2, 54216.0], [90.3, 54498.0], [90.4, 54498.0], [90.5, 54698.0], [90.6, 54795.0], [90.7, 54795.0], [90.8, 54958.0], [90.9, 54958.0], [91.0, 55425.0], [91.1, 55661.0], [91.2, 55661.0], [91.3, 55777.0], [91.4, 55931.0], [91.5, 55931.0], [91.6, 56140.0], [91.7, 56195.0], [91.8, 56195.0], [91.9, 56242.0], [92.0, 56242.0], [92.1, 56604.0], [92.2, 56977.0], [92.3, 56977.0], [92.4, 57471.0], [92.5, 57617.0], [92.6, 57617.0], [92.7, 57665.0], [92.8, 58030.0], [92.9, 58030.0], [93.0, 58054.0], [93.1, 58054.0], [93.2, 58088.0], [93.3, 58144.0], [93.4, 58144.0], [93.5, 58235.0], [93.6, 58849.0], [93.7, 58849.0], [93.8, 58890.0], [93.9, 59052.0], [94.0, 59052.0], [94.1, 59067.0], [94.2, 59067.0], [94.3, 59477.0], [94.4, 59960.0], [94.5, 59960.0], [94.6, 60127.0], [94.7, 60127.0], [94.8, 60127.0], [94.9, 60127.0], [95.0, 60128.0], [95.1, 60128.0], [95.2, 60128.0], [95.3, 60128.0], [95.4, 60128.0], [95.5, 60129.0], [95.6, 60129.0], [95.7, 60129.0], [95.8, 60129.0], [95.9, 60129.0], [96.0, 60130.0], [96.1, 60130.0], [96.2, 60130.0], [96.3, 60131.0], [96.4, 60131.0], [96.5, 60131.0], [96.6, 60132.0], [96.7, 60132.0], [96.8, 60132.0], [96.9, 60132.0], [97.0, 60132.0], [97.1, 60132.0], [97.2, 60132.0], [97.3, 60132.0], [97.4, 60133.0], [97.5, 60134.0], [97.6, 60134.0], [97.7, 60134.0], [97.8, 60134.0], [97.9, 60134.0], [98.0, 60135.0], [98.1, 60135.0], [98.2, 60135.0], [98.3, 60136.0], [98.4, 60136.0], [98.5, 60137.0], [98.6, 60137.0], [98.7, 60137.0], [98.8, 60137.0], [98.9, 60137.0], [99.0, 60137.0], [99.1, 60139.0], [99.2, 60139.0], [99.3, 60249.0], [99.4, 60250.0], [99.5, 60250.0], [99.6, 60257.0], [99.7, 60259.0], [99.8, 60259.0], [99.9, 60263.0], [100.0, 60263.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 245.0], [0.1, 245.0], [0.2, 246.0], [0.3, 246.0], [0.4, 246.0], [0.5, 246.0], [0.6, 246.0], [0.7, 246.0], [0.8, 247.0], [0.9, 247.0], [1.0, 247.0], [1.1, 247.0], [1.2, 247.0], [1.3, 247.0], [1.4, 247.0], [1.5, 247.0], [1.6, 247.0], [1.7, 247.0], [1.8, 247.0], [1.9, 247.0], [2.0, 247.0], [2.1, 248.0], [2.2, 248.0], [2.3, 248.0], [2.4, 248.0], [2.5, 248.0], [2.6, 248.0], [2.7, 248.0], [2.8, 248.0], [2.9, 248.0], [3.0, 248.0], [3.1, 248.0], [3.2, 248.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 249.0], [4.5, 249.0], [4.6, 249.0], [4.7, 249.0], [4.8, 249.0], [4.9, 249.0], [5.0, 249.0], [5.1, 249.0], [5.2, 249.0], [5.3, 249.0], [5.4, 249.0], [5.5, 249.0], [5.6, 249.0], [5.7, 249.0], [5.8, 249.0], [5.9, 249.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 250.0], [6.9, 250.0], [7.0, 250.0], [7.1, 250.0], [7.2, 250.0], [7.3, 250.0], [7.4, 250.0], [7.5, 250.0], [7.6, 250.0], [7.7, 250.0], [7.8, 250.0], [7.9, 250.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 251.0], [10.2, 251.0], [10.3, 251.0], [10.4, 251.0], [10.5, 251.0], [10.6, 251.0], [10.7, 251.0], [10.8, 251.0], [10.9, 251.0], [11.0, 251.0], [11.1, 251.0], [11.2, 251.0], [11.3, 251.0], [11.4, 251.0], [11.5, 251.0], [11.6, 251.0], [11.7, 251.0], [11.8, 251.0], [11.9, 251.0], [12.0, 251.0], [12.1, 251.0], [12.2, 251.0], [12.3, 251.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 252.0], [13.1, 252.0], [13.2, 252.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 252.0], [14.2, 252.0], [14.3, 252.0], [14.4, 252.0], [14.5, 252.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 253.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 253.0], [17.1, 253.0], [17.2, 253.0], [17.3, 253.0], [17.4, 253.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 253.0], [17.9, 253.0], [18.0, 253.0], [18.1, 253.0], [18.2, 253.0], [18.3, 253.0], [18.4, 254.0], [18.5, 254.0], [18.6, 254.0], [18.7, 254.0], [18.8, 254.0], [18.9, 254.0], [19.0, 254.0], [19.1, 254.0], [19.2, 254.0], [19.3, 254.0], [19.4, 254.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 254.0], [19.9, 254.0], [20.0, 254.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 254.0], [20.5, 254.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 255.0], [21.1, 255.0], [21.2, 255.0], [21.3, 255.0], [21.4, 255.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 256.0], [22.4, 256.0], [22.5, 256.0], [22.6, 256.0], [22.7, 256.0], [22.8, 256.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 257.0], [24.9, 257.0], [25.0, 257.0], [25.1, 257.0], [25.2, 257.0], [25.3, 257.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 257.0], [25.8, 257.0], [25.9, 257.0], [26.0, 257.0], [26.1, 257.0], [26.2, 257.0], [26.3, 257.0], [26.4, 257.0], [26.5, 257.0], [26.6, 257.0], [26.7, 257.0], [26.8, 257.0], [26.9, 257.0], [27.0, 258.0], [27.1, 258.0], [27.2, 258.0], [27.3, 258.0], [27.4, 258.0], [27.5, 258.0], [27.6, 258.0], [27.7, 258.0], [27.8, 258.0], [27.9, 258.0], [28.0, 258.0], [28.1, 258.0], [28.2, 258.0], [28.3, 258.0], [28.4, 258.0], [28.5, 258.0], [28.6, 258.0], [28.7, 258.0], [28.8, 258.0], [28.9, 258.0], [29.0, 258.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 259.0], [30.4, 259.0], [30.5, 259.0], [30.6, 259.0], [30.7, 259.0], [30.8, 259.0], [30.9, 259.0], [31.0, 259.0], [31.1, 259.0], [31.2, 259.0], [31.3, 259.0], [31.4, 259.0], [31.5, 259.0], [31.6, 259.0], [31.7, 259.0], [31.8, 259.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 260.0], [33.8, 260.0], [33.9, 260.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 260.0], [36.3, 260.0], [36.4, 260.0], [36.5, 260.0], [36.6, 260.0], [36.7, 260.0], [36.8, 260.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 261.0], [37.6, 261.0], [37.7, 261.0], [37.8, 261.0], [37.9, 261.0], [38.0, 261.0], [38.1, 261.0], [38.2, 261.0], [38.3, 261.0], [38.4, 261.0], [38.5, 261.0], [38.6, 261.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 261.0], [40.4, 261.0], [40.5, 261.0], [40.6, 261.0], [40.7, 261.0], [40.8, 261.0], [40.9, 261.0], [41.0, 261.0], [41.1, 261.0], [41.2, 261.0], [41.3, 261.0], [41.4, 262.0], [41.5, 262.0], [41.6, 262.0], [41.7, 262.0], [41.8, 262.0], [41.9, 262.0], [42.0, 262.0], [42.1, 262.0], [42.2, 262.0], [42.3, 262.0], [42.4, 262.0], [42.5, 262.0], [42.6, 262.0], [42.7, 262.0], [42.8, 262.0], [42.9, 262.0], [43.0, 262.0], [43.1, 262.0], [43.2, 262.0], [43.3, 262.0], [43.4, 262.0], [43.5, 262.0], [43.6, 262.0], [43.7, 262.0], [43.8, 262.0], [43.9, 262.0], [44.0, 262.0], [44.1, 262.0], [44.2, 262.0], [44.3, 262.0], [44.4, 262.0], [44.5, 262.0], [44.6, 262.0], [44.7, 262.0], [44.8, 262.0], [44.9, 262.0], [45.0, 262.0], [45.1, 262.0], [45.2, 262.0], [45.3, 262.0], [45.4, 262.0], [45.5, 262.0], [45.6, 263.0], [45.7, 263.0], [45.8, 263.0], [45.9, 263.0], [46.0, 263.0], [46.1, 263.0], [46.2, 263.0], [46.3, 263.0], [46.4, 263.0], [46.5, 263.0], [46.6, 263.0], [46.7, 263.0], [46.8, 263.0], [46.9, 263.0], [47.0, 263.0], [47.1, 263.0], [47.2, 263.0], [47.3, 263.0], [47.4, 263.0], [47.5, 263.0], [47.6, 263.0], [47.7, 263.0], [47.8, 263.0], [47.9, 263.0], [48.0, 263.0], [48.1, 263.0], [48.2, 263.0], [48.3, 263.0], [48.4, 263.0], [48.5, 263.0], [48.6, 263.0], [48.7, 263.0], [48.8, 263.0], [48.9, 263.0], [49.0, 263.0], [49.1, 263.0], [49.2, 263.0], [49.3, 264.0], [49.4, 264.0], [49.5, 264.0], [49.6, 264.0], [49.7, 264.0], [49.8, 264.0], [49.9, 264.0], [50.0, 264.0], [50.1, 264.0], [50.2, 264.0], [50.3, 264.0], [50.4, 264.0], [50.5, 264.0], [50.6, 264.0], [50.7, 264.0], [50.8, 264.0], [50.9, 264.0], [51.0, 264.0], [51.1, 264.0], [51.2, 264.0], [51.3, 264.0], [51.4, 264.0], [51.5, 264.0], [51.6, 264.0], [51.7, 264.0], [51.8, 264.0], [51.9, 264.0], [52.0, 264.0], [52.1, 264.0], [52.2, 264.0], [52.3, 264.0], [52.4, 264.0], [52.5, 264.0], [52.6, 264.0], [52.7, 264.0], [52.8, 264.0], [52.9, 264.0], [53.0, 264.0], [53.1, 264.0], [53.2, 264.0], [53.3, 265.0], [53.4, 265.0], [53.5, 265.0], [53.6, 265.0], [53.7, 265.0], [53.8, 265.0], [53.9, 265.0], [54.0, 265.0], [54.1, 265.0], [54.2, 265.0], [54.3, 265.0], [54.4, 265.0], [54.5, 265.0], [54.6, 265.0], [54.7, 265.0], [54.8, 265.0], [54.9, 265.0], [55.0, 265.0], [55.1, 265.0], [55.2, 265.0], [55.3, 265.0], [55.4, 265.0], [55.5, 265.0], [55.6, 265.0], [55.7, 265.0], [55.8, 265.0], [55.9, 265.0], [56.0, 265.0], [56.1, 265.0], [56.2, 265.0], [56.3, 265.0], [56.4, 265.0], [56.5, 266.0], [56.6, 266.0], [56.7, 266.0], [56.8, 266.0], [56.9, 266.0], [57.0, 266.0], [57.1, 266.0], [57.2, 266.0], [57.3, 266.0], [57.4, 266.0], [57.5, 266.0], [57.6, 266.0], [57.7, 266.0], [57.8, 266.0], [57.9, 266.0], [58.0, 266.0], [58.1, 266.0], [58.2, 266.0], [58.3, 266.0], [58.4, 266.0], [58.5, 266.0], [58.6, 266.0], [58.7, 267.0], [58.8, 267.0], [58.9, 267.0], [59.0, 267.0], [59.1, 267.0], [59.2, 267.0], [59.3, 267.0], [59.4, 267.0], [59.5, 267.0], [59.6, 267.0], [59.7, 267.0], [59.8, 267.0], [59.9, 267.0], [60.0, 267.0], [60.1, 267.0], [60.2, 267.0], [60.3, 267.0], [60.4, 267.0], [60.5, 267.0], [60.6, 267.0], [60.7, 267.0], [60.8, 267.0], [60.9, 268.0], [61.0, 268.0], [61.1, 268.0], [61.2, 268.0], [61.3, 268.0], [61.4, 268.0], [61.5, 268.0], [61.6, 268.0], [61.7, 268.0], [61.8, 268.0], [61.9, 268.0], [62.0, 269.0], [62.1, 269.0], [62.2, 269.0], [62.3, 269.0], [62.4, 269.0], [62.5, 269.0], [62.6, 269.0], [62.7, 269.0], [62.8, 269.0], [62.9, 269.0], [63.0, 269.0], [63.1, 269.0], [63.2, 269.0], [63.3, 269.0], [63.4, 269.0], [63.5, 269.0], [63.6, 269.0], [63.7, 269.0], [63.8, 269.0], [63.9, 269.0], [64.0, 269.0], [64.1, 270.0], [64.2, 270.0], [64.3, 270.0], [64.4, 270.0], [64.5, 270.0], [64.6, 270.0], [64.7, 270.0], [64.8, 271.0], [64.9, 271.0], [65.0, 271.0], [65.1, 271.0], [65.2, 271.0], [65.3, 271.0], [65.4, 271.0], [65.5, 271.0], [65.6, 271.0], [65.7, 271.0], [65.8, 271.0], [65.9, 271.0], [66.0, 271.0], [66.1, 271.0], [66.2, 272.0], [66.3, 272.0], [66.4, 272.0], [66.5, 272.0], [66.6, 272.0], [66.7, 272.0], [66.8, 272.0], [66.9, 272.0], [67.0, 273.0], [67.1, 273.0], [67.2, 273.0], [67.3, 273.0], [67.4, 273.0], [67.5, 273.0], [67.6, 273.0], [67.7, 273.0], [67.8, 273.0], [67.9, 273.0], [68.0, 273.0], [68.1, 273.0], [68.2, 273.0], [68.3, 273.0], [68.4, 273.0], [68.5, 273.0], [68.6, 274.0], [68.7, 274.0], [68.8, 274.0], [68.9, 274.0], [69.0, 274.0], [69.1, 274.0], [69.2, 274.0], [69.3, 274.0], [69.4, 274.0], [69.5, 274.0], [69.6, 274.0], [69.7, 274.0], [69.8, 274.0], [69.9, 274.0], [70.0, 274.0], [70.1, 274.0], [70.2, 274.0], [70.3, 275.0], [70.4, 275.0], [70.5, 275.0], [70.6, 275.0], [70.7, 275.0], [70.8, 275.0], [70.9, 275.0], [71.0, 275.0], [71.1, 276.0], [71.2, 276.0], [71.3, 276.0], [71.4, 276.0], [71.5, 276.0], [71.6, 276.0], [71.7, 276.0], [71.8, 276.0], [71.9, 276.0], [72.0, 277.0], [72.1, 277.0], [72.2, 277.0], [72.3, 277.0], [72.4, 277.0], [72.5, 277.0], [72.6, 277.0], [72.7, 277.0], [72.8, 277.0], [72.9, 277.0], [73.0, 277.0], [73.1, 277.0], [73.2, 277.0], [73.3, 278.0], [73.4, 278.0], [73.5, 278.0], [73.6, 278.0], [73.7, 278.0], [73.8, 278.0], [73.9, 278.0], [74.0, 278.0], [74.1, 278.0], [74.2, 278.0], [74.3, 278.0], [74.4, 278.0], [74.5, 278.0], [74.6, 278.0], [74.7, 278.0], [74.8, 278.0], [74.9, 279.0], [75.0, 279.0], [75.1, 279.0], [75.2, 279.0], [75.3, 279.0], [75.4, 279.0], [75.5, 279.0], [75.6, 279.0], [75.7, 279.0], [75.8, 279.0], [75.9, 280.0], [76.0, 280.0], [76.1, 280.0], [76.2, 280.0], [76.3, 280.0], [76.4, 280.0], [76.5, 280.0], [76.6, 280.0], [76.7, 280.0], [76.8, 280.0], [76.9, 280.0], [77.0, 281.0], [77.1, 281.0], [77.2, 281.0], [77.3, 281.0], [77.4, 281.0], [77.5, 281.0], [77.6, 281.0], [77.7, 281.0], [77.8, 281.0], [77.9, 281.0], [78.0, 282.0], [78.1, 282.0], [78.2, 282.0], [78.3, 282.0], [78.4, 282.0], [78.5, 282.0], [78.6, 283.0], [78.7, 283.0], [78.8, 283.0], [78.9, 283.0], [79.0, 283.0], [79.1, 284.0], [79.2, 284.0], [79.3, 284.0], [79.4, 284.0], [79.5, 284.0], [79.6, 284.0], [79.7, 284.0], [79.8, 284.0], [79.9, 284.0], [80.0, 284.0], [80.1, 284.0], [80.2, 284.0], [80.3, 284.0], [80.4, 284.0], [80.5, 284.0], [80.6, 284.0], [80.7, 284.0], [80.8, 284.0], [80.9, 284.0], [81.0, 285.0], [81.1, 285.0], [81.2, 285.0], [81.3, 285.0], [81.4, 285.0], [81.5, 285.0], [81.6, 285.0], [81.7, 285.0], [81.8, 285.0], [81.9, 286.0], [82.0, 286.0], [82.1, 286.0], [82.2, 287.0], [82.3, 287.0], [82.4, 287.0], [82.5, 287.0], [82.6, 287.0], [82.7, 287.0], [82.8, 287.0], [82.9, 287.0], [83.0, 288.0], [83.1, 288.0], [83.2, 288.0], [83.3, 288.0], [83.4, 288.0], [83.5, 289.0], [83.6, 290.0], [83.7, 290.0], [83.8, 290.0], [83.9, 290.0], [84.0, 290.0], [84.1, 290.0], [84.2, 291.0], [84.3, 291.0], [84.4, 291.0], [84.5, 291.0], [84.6, 291.0], [84.7, 292.0], [84.8, 292.0], [84.9, 292.0], [85.0, 292.0], [85.1, 292.0], [85.2, 293.0], [85.3, 293.0], [85.4, 293.0], [85.5, 294.0], [85.6, 294.0], [85.7, 294.0], [85.8, 295.0], [85.9, 295.0], [86.0, 295.0], [86.1, 295.0], [86.2, 295.0], [86.3, 296.0], [86.4, 296.0], [86.5, 296.0], [86.6, 296.0], [86.7, 297.0], [86.8, 297.0], [86.9, 297.0], [87.0, 297.0], [87.1, 297.0], [87.2, 298.0], [87.3, 298.0], [87.4, 298.0], [87.5, 298.0], [87.6, 298.0], [87.7, 298.0], [87.8, 300.0], [87.9, 300.0], [88.0, 300.0], [88.1, 300.0], [88.2, 300.0], [88.3, 300.0], [88.4, 300.0], [88.5, 300.0], [88.6, 300.0], [88.7, 300.0], [88.8, 301.0], [88.9, 302.0], [89.0, 302.0], [89.1, 303.0], [89.2, 303.0], [89.3, 303.0], [89.4, 303.0], [89.5, 303.0], [89.6, 303.0], [89.7, 304.0], [89.8, 304.0], [89.9, 305.0], [90.0, 305.0], [90.1, 305.0], [90.2, 308.0], [90.3, 308.0], [90.4, 308.0], [90.5, 308.0], [90.6, 308.0], [90.7, 308.0], [90.8, 309.0], [90.9, 309.0], [91.0, 309.0], [91.1, 311.0], [91.2, 311.0], [91.3, 311.0], [91.4, 311.0], [91.5, 311.0], [91.6, 312.0], [91.7, 312.0], [91.8, 313.0], [91.9, 313.0], [92.0, 313.0], [92.1, 314.0], [92.2, 314.0], [92.3, 314.0], [92.4, 314.0], [92.5, 314.0], [92.6, 314.0], [92.7, 314.0], [92.8, 314.0], [92.9, 315.0], [93.0, 316.0], [93.1, 316.0], [93.2, 316.0], [93.3, 317.0], [93.4, 317.0], [93.5, 318.0], [93.6, 318.0], [93.7, 318.0], [93.8, 318.0], [93.9, 318.0], [94.0, 318.0], [94.1, 319.0], [94.2, 319.0], [94.3, 320.0], [94.4, 322.0], [94.5, 322.0], [94.6, 325.0], [94.7, 325.0], [94.8, 325.0], [94.9, 325.0], [95.0, 327.0], [95.1, 327.0], [95.2, 327.0], [95.3, 327.0], [95.4, 327.0], [95.5, 328.0], [95.6, 328.0], [95.7, 329.0], [95.8, 331.0], [95.9, 331.0], [96.0, 335.0], [96.1, 336.0], [96.2, 336.0], [96.3, 336.0], [96.4, 336.0], [96.5, 340.0], [96.6, 340.0], [96.7, 340.0], [96.8, 342.0], [96.9, 343.0], [97.0, 343.0], [97.1, 346.0], [97.2, 347.0], [97.3, 347.0], [97.4, 351.0], [97.5, 361.0], [97.6, 361.0], [97.7, 363.0], [97.8, 363.0], [97.9, 374.0], [98.0, 379.0], [98.1, 379.0], [98.2, 388.0], [98.3, 400.0], [98.4, 400.0], [98.5, 401.0], [98.6, 416.0], [98.7, 416.0], [98.8, 418.0], [98.9, 418.0], [99.0, 424.0], [99.1, 439.0], [99.2, 439.0], [99.3, 449.0], [99.4, 453.0], [99.5, 453.0], [99.6, 458.0], [99.7, 531.0], [99.8, 531.0], [99.9, 599.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 561.0, "series": [{"data": [[33300.0, 2.0], [34100.0, 2.0], [34500.0, 1.0], [33700.0, 1.0], [32900.0, 2.0], [36100.0, 2.0], [35300.0, 1.0], [38500.0, 3.0], [36900.0, 2.0], [37300.0, 1.0], [38900.0, 1.0], [39300.0, 3.0], [40100.0, 3.0], [39700.0, 2.0], [40500.0, 1.0], [42900.0, 2.0], [41300.0, 2.0], [42100.0, 1.0], [42500.0, 1.0], [44500.0, 1.0], [44100.0, 1.0], [44900.0, 1.0], [43300.0, 2.0], [46500.0, 2.0], [45700.0, 1.0], [48500.0, 1.0], [49300.0, 1.0], [52900.0, 1.0], [54900.0, 1.0], [53700.0, 1.0], [56100.0, 2.0], [56500.0, 2.0], [57700.0, 1.0], [59300.0, 2.0], [60500.0, 5.0], [59700.0, 1.0], [300.0, 50.0], [400.0, 32.0], [500.0, 1.0], [1200.0, 1.0], [1600.0, 1.0], [3100.0, 1.0], [3400.0, 1.0], [4100.0, 1.0], [4800.0, 1.0], [4900.0, 3.0], [5300.0, 5.0], [5500.0, 6.0], [5600.0, 2.0], [5400.0, 4.0], [5700.0, 2.0], [6000.0, 2.0], [5900.0, 4.0], [6100.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [6500.0, 1.0], [6900.0, 2.0], [6700.0, 4.0], [7100.0, 1.0], [7000.0, 2.0], [7200.0, 3.0], [7400.0, 1.0], [7600.0, 3.0], [7800.0, 1.0], [7900.0, 2.0], [8100.0, 1.0], [8400.0, 2.0], [8700.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [9000.0, 3.0], [9100.0, 2.0], [9200.0, 1.0], [8900.0, 1.0], [9400.0, 1.0], [9700.0, 5.0], [9500.0, 1.0], [9300.0, 1.0], [9600.0, 1.0], [10000.0, 2.0], [10100.0, 3.0], [10700.0, 1.0], [10400.0, 3.0], [10600.0, 1.0], [10900.0, 4.0], [11200.0, 1.0], [11100.0, 1.0], [11700.0, 1.0], [11600.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [11300.0, 1.0], [11900.0, 2.0], [12200.0, 1.0], [12700.0, 2.0], [12300.0, 1.0], [12500.0, 1.0], [13100.0, 5.0], [13300.0, 1.0], [13000.0, 1.0], [12900.0, 1.0], [13800.0, 2.0], [13500.0, 1.0], [13700.0, 1.0], [13400.0, 1.0], [14100.0, 2.0], [14200.0, 2.0], [14300.0, 2.0], [13900.0, 2.0], [14000.0, 1.0], [14400.0, 2.0], [14500.0, 2.0], [14600.0, 2.0], [14700.0, 2.0], [15100.0, 1.0], [15400.0, 5.0], [15700.0, 2.0], [15800.0, 1.0], [16300.0, 2.0], [15900.0, 1.0], [16200.0, 1.0], [16000.0, 1.0], [17000.0, 1.0], [16800.0, 2.0], [16400.0, 1.0], [17800.0, 1.0], [18400.0, 1.0], [18000.0, 1.0], [18600.0, 3.0], [19200.0, 1.0], [19400.0, 3.0], [20000.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [21400.0, 2.0], [20600.0, 3.0], [21200.0, 1.0], [21800.0, 2.0], [22200.0, 2.0], [21600.0, 1.0], [22400.0, 2.0], [22600.0, 3.0], [23200.0, 2.0], [23000.0, 1.0], [23400.0, 1.0], [24000.0, 3.0], [23600.0, 2.0], [23800.0, 1.0], [24800.0, 3.0], [25400.0, 2.0], [25200.0, 1.0], [26600.0, 1.0], [26000.0, 2.0], [26200.0, 1.0], [26400.0, 2.0], [26800.0, 1.0], [28000.0, 3.0], [28400.0, 1.0], [28200.0, 1.0], [28600.0, 3.0], [29600.0, 2.0], [29000.0, 3.0], [29400.0, 1.0], [30600.0, 3.0], [30200.0, 1.0], [30000.0, 2.0], [31600.0, 1.0], [31200.0, 1.0], [30800.0, 1.0], [31400.0, 2.0], [31000.0, 2.0], [32600.0, 2.0], [31800.0, 2.0], [32400.0, 1.0], [32000.0, 1.0], [34800.0, 3.0], [33600.0, 1.0], [32800.0, 3.0], [33200.0, 1.0], [36800.0, 2.0], [35600.0, 3.0], [36400.0, 3.0], [38800.0, 1.0], [38400.0, 2.0], [38000.0, 1.0], [39600.0, 2.0], [40400.0, 1.0], [39200.0, 2.0], [42000.0, 2.0], [41600.0, 1.0], [44400.0, 1.0], [43200.0, 2.0], [44000.0, 2.0], [44800.0, 1.0], [48000.0, 2.0], [48400.0, 1.0], [50800.0, 1.0], [49200.0, 2.0], [52800.0, 1.0], [52400.0, 1.0], [54400.0, 3.0], [55200.0, 1.0], [56800.0, 1.0], [55600.0, 1.0], [57200.0, 1.0], [56400.0, 1.0], [58400.0, 3.0], [60400.0, 11.0], [33500.0, 1.0], [34700.0, 1.0], [33100.0, 1.0], [33900.0, 3.0], [34300.0, 1.0], [35900.0, 1.0], [35500.0, 1.0], [37100.0, 1.0], [38700.0, 2.0], [38300.0, 2.0], [37500.0, 1.0], [39100.0, 1.0], [41500.0, 2.0], [42700.0, 1.0], [42300.0, 1.0], [41100.0, 2.0], [41900.0, 2.0], [44700.0, 1.0], [43100.0, 1.0], [43900.0, 2.0], [46300.0, 2.0], [51900.0, 1.0], [53100.0, 1.0], [54700.0, 1.0], [54300.0, 1.0], [53900.0, 1.0], [55900.0, 1.0], [57900.0, 2.0], [58300.0, 1.0], [59100.0, 2.0], [60300.0, 19.0], [16900.0, 2.0], [17300.0, 1.0], [18300.0, 3.0], [18100.0, 1.0], [17700.0, 1.0], [17900.0, 1.0], [19100.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [20100.0, 2.0], [19700.0, 3.0], [20300.0, 2.0], [19900.0, 1.0], [20500.0, 2.0], [21100.0, 5.0], [20700.0, 2.0], [22100.0, 2.0], [22300.0, 1.0], [21700.0, 3.0], [21900.0, 1.0], [22500.0, 1.0], [23500.0, 2.0], [22900.0, 2.0], [22700.0, 2.0], [23300.0, 1.0], [24300.0, 3.0], [23700.0, 2.0], [24500.0, 1.0], [24700.0, 2.0], [25500.0, 1.0], [25300.0, 1.0], [25900.0, 1.0], [26100.0, 1.0], [26500.0, 2.0], [26900.0, 1.0], [27500.0, 2.0], [27100.0, 1.0], [27300.0, 1.0], [27900.0, 1.0], [27700.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [29100.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [29500.0, 1.0], [30100.0, 1.0], [29900.0, 2.0], [31500.0, 1.0], [30900.0, 1.0], [32300.0, 1.0], [32100.0, 1.0], [33000.0, 2.0], [34600.0, 3.0], [34200.0, 1.0], [33800.0, 1.0], [35400.0, 1.0], [36600.0, 2.0], [35800.0, 2.0], [38200.0, 4.0], [37000.0, 2.0], [37400.0, 1.0], [38600.0, 2.0], [37800.0, 1.0], [39000.0, 1.0], [40200.0, 2.0], [40600.0, 2.0], [39400.0, 2.0], [41400.0, 2.0], [42200.0, 3.0], [43000.0, 1.0], [41800.0, 1.0], [43400.0, 2.0], [45000.0, 1.0], [43800.0, 2.0], [47000.0, 1.0], [46200.0, 1.0], [45800.0, 1.0], [47800.0, 1.0], [47400.0, 1.0], [50600.0, 1.0], [52600.0, 1.0], [55000.0, 1.0], [53800.0, 1.0], [58200.0, 1.0], [60200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 82.0], [34500.0, 3.0], [33300.0, 2.0], [33700.0, 1.0], [32900.0, 1.0], [35300.0, 2.0], [36100.0, 2.0], [36500.0, 1.0], [35700.0, 1.0], [38500.0, 3.0], [38100.0, 2.0], [36900.0, 1.0], [38900.0, 2.0], [37700.0, 1.0], [39300.0, 1.0], [40100.0, 1.0], [41700.0, 1.0], [42100.0, 1.0], [42900.0, 2.0], [44100.0, 1.0], [44500.0, 1.0], [43300.0, 1.0], [43700.0, 2.0], [48100.0, 1.0], [48900.0, 1.0], [50500.0, 1.0], [52100.0, 1.0], [54100.0, 2.0], [54900.0, 1.0], [56100.0, 2.0], [56900.0, 1.0], [55700.0, 1.0], [58100.0, 1.0], [60100.0, 30.0], [900.0, 1.0], [1300.0, 1.0], [2800.0, 1.0], [3200.0, 1.0], [3800.0, 1.0], [4600.0, 2.0], [4500.0, 1.0], [4700.0, 1.0], [5100.0, 5.0], [5000.0, 4.0], [5300.0, 1.0], [5200.0, 6.0], [5600.0, 3.0], [5400.0, 3.0], [5800.0, 2.0], [5700.0, 2.0], [6000.0, 3.0], [6100.0, 1.0], [6600.0, 2.0], [6500.0, 2.0], [6400.0, 2.0], [6800.0, 2.0], [6900.0, 1.0], [6700.0, 1.0], [7000.0, 2.0], [7300.0, 2.0], [7400.0, 1.0], [7200.0, 1.0], [7600.0, 3.0], [7800.0, 1.0], [7900.0, 1.0], [8100.0, 1.0], [8200.0, 2.0], [8500.0, 1.0], [8600.0, 1.0], [8400.0, 1.0], [9200.0, 2.0], [9000.0, 1.0], [8900.0, 2.0], [8800.0, 3.0], [9500.0, 1.0], [9700.0, 2.0], [9400.0, 4.0], [9300.0, 1.0], [10100.0, 3.0], [9800.0, 1.0], [9900.0, 2.0], [10300.0, 2.0], [10700.0, 3.0], [10600.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [10800.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11600.0, 2.0], [11300.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [12200.0, 1.0], [12500.0, 1.0], [12300.0, 1.0], [12700.0, 1.0], [12600.0, 1.0], [12800.0, 4.0], [12900.0, 1.0], [13000.0, 2.0], [13200.0, 1.0], [13500.0, 1.0], [13800.0, 1.0], [13700.0, 3.0], [13600.0, 2.0], [13400.0, 1.0], [14100.0, 2.0], [14300.0, 3.0], [13900.0, 2.0], [14000.0, 1.0], [14200.0, 2.0], [14800.0, 1.0], [14500.0, 2.0], [15000.0, 1.0], [15200.0, 2.0], [15100.0, 2.0], [15500.0, 3.0], [15600.0, 1.0], [15700.0, 1.0], [16000.0, 2.0], [16100.0, 2.0], [16600.0, 1.0], [16800.0, 1.0], [18000.0, 2.0], [17800.0, 1.0], [18200.0, 1.0], [17600.0, 1.0], [18800.0, 1.0], [19400.0, 2.0], [19000.0, 2.0], [18600.0, 1.0], [20200.0, 3.0], [20000.0, 2.0], [19600.0, 1.0], [21200.0, 1.0], [21400.0, 2.0], [20800.0, 1.0], [22000.0, 2.0], [22400.0, 2.0], [21600.0, 1.0], [22200.0, 2.0], [23400.0, 2.0], [23200.0, 2.0], [22600.0, 2.0], [22800.0, 1.0], [23000.0, 1.0], [24000.0, 2.0], [24400.0, 2.0], [23800.0, 1.0], [25200.0, 1.0], [25000.0, 2.0], [24600.0, 1.0], [26400.0, 1.0], [25800.0, 1.0], [26200.0, 1.0], [26000.0, 1.0], [27600.0, 1.0], [27400.0, 1.0], [27000.0, 1.0], [27800.0, 2.0], [28000.0, 1.0], [28400.0, 2.0], [28600.0, 1.0], [29400.0, 1.0], [28800.0, 2.0], [29200.0, 2.0], [29600.0, 1.0], [30400.0, 2.0], [29800.0, 1.0], [30600.0, 1.0], [30800.0, 2.0], [31200.0, 2.0], [32600.0, 3.0], [32200.0, 1.0], [31800.0, 1.0], [33200.0, 1.0], [34400.0, 2.0], [32800.0, 2.0], [33600.0, 1.0], [34000.0, 1.0], [35200.0, 2.0], [35600.0, 1.0], [36800.0, 1.0], [36400.0, 1.0], [38000.0, 4.0], [37200.0, 1.0], [38400.0, 1.0], [38800.0, 1.0], [37600.0, 1.0], [40400.0, 2.0], [40800.0, 2.0], [39200.0, 2.0], [41200.0, 3.0], [42400.0, 1.0], [42800.0, 1.0], [42000.0, 1.0], [41600.0, 1.0], [44400.0, 1.0], [43200.0, 1.0], [46000.0, 3.0], [45600.0, 1.0], [50400.0, 1.0], [51600.0, 1.0], [52800.0, 1.0], [54400.0, 1.0], [54000.0, 1.0], [53600.0, 1.0], [55600.0, 1.0], [57600.0, 2.0], [58000.0, 3.0], [58800.0, 2.0], [34300.0, 2.0], [33900.0, 2.0], [35500.0, 2.0], [36300.0, 1.0], [38700.0, 1.0], [37900.0, 2.0], [37100.0, 2.0], [38300.0, 1.0], [39900.0, 3.0], [39100.0, 3.0], [42700.0, 2.0], [41100.0, 3.0], [41900.0, 2.0], [41500.0, 2.0], [43100.0, 2.0], [43900.0, 1.0], [44700.0, 1.0], [43500.0, 2.0], [46700.0, 1.0], [47100.0, 1.0], [46300.0, 1.0], [47500.0, 1.0], [49100.0, 1.0], [52300.0, 1.0], [54700.0, 1.0], [53500.0, 2.0], [55900.0, 1.0], [59900.0, 1.0], [16500.0, 2.0], [16700.0, 1.0], [17100.0, 1.0], [18300.0, 3.0], [17900.0, 1.0], [17500.0, 2.0], [17700.0, 1.0], [19100.0, 3.0], [19300.0, 1.0], [18700.0, 1.0], [19900.0, 3.0], [19700.0, 1.0], [19500.0, 1.0], [20300.0, 3.0], [21500.0, 3.0], [21100.0, 1.0], [20900.0, 5.0], [21300.0, 1.0], [20500.0, 2.0], [21900.0, 3.0], [22300.0, 3.0], [22100.0, 1.0], [22900.0, 1.0], [23100.0, 2.0], [23300.0, 2.0], [23500.0, 1.0], [24100.0, 1.0], [23700.0, 2.0], [24300.0, 1.0], [24500.0, 2.0], [25100.0, 2.0], [25700.0, 2.0], [25900.0, 2.0], [26300.0, 1.0], [26500.0, 1.0], [26100.0, 1.0], [26700.0, 1.0], [27300.0, 2.0], [26900.0, 1.0], [27700.0, 2.0], [28100.0, 1.0], [28300.0, 2.0], [29100.0, 2.0], [28700.0, 2.0], [30500.0, 2.0], [30300.0, 1.0], [29900.0, 2.0], [29700.0, 2.0], [31300.0, 2.0], [31500.0, 2.0], [31700.0, 1.0], [32700.0, 1.0], [32300.0, 2.0], [32100.0, 1.0], [32500.0, 2.0], [33000.0, 2.0], [33800.0, 1.0], [34200.0, 1.0], [33400.0, 2.0], [35800.0, 1.0], [36600.0, 4.0], [35400.0, 1.0], [35000.0, 1.0], [36200.0, 1.0], [38200.0, 3.0], [38600.0, 1.0], [39000.0, 1.0], [39400.0, 2.0], [39800.0, 2.0], [40200.0, 1.0], [41400.0, 1.0], [43000.0, 1.0], [41800.0, 2.0], [42600.0, 1.0], [42200.0, 1.0], [44200.0, 1.0], [43800.0, 1.0], [44600.0, 1.0], [46200.0, 1.0], [45400.0, 1.0], [47800.0, 2.0], [48200.0, 1.0], [49000.0, 1.0], [52600.0, 2.0], [54600.0, 1.0], [54200.0, 1.0], [56200.0, 1.0], [56600.0, 1.0], [55400.0, 1.0], [57400.0, 1.0], [58200.0, 1.0], [59000.0, 2.0], [60200.0, 5.0], [59400.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 67.0], [200.0, 561.0], [400.0, 9.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 548.0, "series": [{"data": [[0.0, 548.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 514.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 213.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.142857142857143, "minX": 1.68544866E12, "maxY": 25.0, "series": [{"data": [[1.68544944E12, 24.37748344370861], [1.68544914E12, 15.0], [1.68544884E12, 5.09375], [1.6854498E12, 12.277777777777773], [1.6854495E12, 25.0], [1.68544986E12, 10.0], [1.6854492E12, 15.774647887323942], [1.6854489E12, 9.166666666666668], [1.68544956E12, 25.0], [1.68544926E12, 19.4010989010989], [1.68544962E12, 21.738317757009348], [1.68544896E12, 10.0], [1.68544992E12, 6.558139534883723], [1.68544866E12, 2.142857142857143], [1.68544998E12, 4.28], [1.68544932E12, 20.0], [1.68544902E12, 10.394736842105264], [1.68544872E12, 4.4117647058823515], [1.68544968E12, 19.913043478260867], [1.68544938E12, 20.499999999999993], [1.68544974E12, 16.838709677419356], [1.68544908E12, 14.784172661870501], [1.68544878E12, 5.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544998E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 258.0, "minX": 1.0, "maxY": 55044.0, "series": [{"data": [[2.0, 13351.5], [3.0, 8382.5], [4.0, 17084.4], [5.0, 19598.925000000003], [6.0, 30050.5], [7.0, 28072.0], [8.0, 29212.454545454544], [9.0, 42894.5], [10.0, 38588.01923076925], [11.0, 55044.0], [12.0, 33780.6], [13.0, 32831.8], [14.0, 35280.5], [15.0, 24565.478260869575], [16.0, 21973.320000000003], [1.0, 12939.0], [17.0, 23016.214285714286], [18.0, 20888.2], [19.0, 11437.916666666668], [20.0, 21252.822784810123], [21.0, 30591.142857142855], [22.0, 20966.583333333336], [23.0, 17458.0], [24.0, 18021.466666666667], [25.0, 31790.132231404954]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.624413145539926, 25610.233176838792]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 13056.5], [3.0, 8120.0], [4.0, 16817.4], [5.0, 19325.275], [6.0, 29788.5], [7.0, 27797.0], [8.0, 28937.18181818182], [9.0, 42623.5], [10.0, 38292.19230769232], [11.0, 54733.0], [12.0, 33515.0], [13.0, 32560.0], [14.0, 35014.833333333336], [15.0, 24293.5652173913], [16.0, 21704.879999999997], [1.0, 12686.0], [17.0, 22734.500000000004], [18.0, 20624.499999999996], [19.0, 11153.333333333334], [20.0, 21115.324840764333], [21.0, 30332.19047619048], [22.0, 20681.416666666668], [23.0, 17191.0], [24.0, 17736.666666666668], [25.0, 31519.38842975206]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.62068965517243, 25376.28840125392]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 262.0], [3.0, 267.0], [4.0, 264.75], [5.0, 269.2142857142856], [6.0, 291.0], [7.0, 258.0], [8.0, 287.45454545454544], [9.0, 294.0], [10.0, 294.38461538461536], [11.0, 279.0], [12.0, 261.2], [13.0, 274.6], [14.0, 264.8333333333333], [15.0, 272.47826086956525], [1.0, 329.0], [16.0, 267.24], [17.0, 266.77777777777777], [18.0, 269.00000000000006], [19.0, 262.4166666666667], [20.0, 273.186335403727], [21.0, 292.7777777777779], [22.0, 266.9166666666667], [23.0, 286.07692307692315], [24.0, 261.0], [25.0, 269.4508196721311]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.60563380281688, 273.6541471048516]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 106.43333333333334, "minX": 1.68544866E12, "maxY": 8452.733333333334, "series": [{"data": [[1.68544944E12, 3551.2833333333333], [1.68544914E12, 1237.5166666666667], [1.68544884E12, 879.7833333333333], [1.6854498E12, 1136.2666666666667], [1.6854495E12, 2676.15], [1.68544986E12, 1100.75], [1.6854492E12, 2921.45], [1.6854489E12, 1356.3666666666666], [1.68544956E12, 3522.4], [1.68544926E12, 3218.133333333333], [1.68544962E12, 2533.766666666667], [1.68544896E12, 807.2166666666667], [1.68544992E12, 919.3333333333334], [1.68544866E12, 145.95], [1.68544998E12, 625.8], [1.68544932E12, 3649.3333333333335], [1.68544902E12, 826.7], [1.68544872E12, 916.0666666666667], [1.68544968E12, 1687.8166666666666], [1.68544938E12, 3851.4], [1.68544974E12, 1235.65], [1.68544908E12, 1812.8833333333334], [1.68544878E12, 807.2166666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68544944E12, 7721.083333333333], [1.68544914E12, 3740.6], [1.68544884E12, 1601.4], [1.6854498E12, 2678.55], [1.6854495E12, 5424.933333333333], [1.68544986E12, 2173.883333333333], [1.6854492E12, 6297.6], [1.6854489E12, 2640.95], [1.68544956E12, 7153.0], [1.68544926E12, 8407.85], [1.68544962E12, 5632.4], [1.68544896E12, 1295.75], [1.68544992E12, 2460.0333333333333], [1.68544866E12, 106.43333333333334], [1.68544998E12, 1524.5833333333333], [1.68544932E12, 8452.733333333334], [1.68544902E12, 1315.4666666666667], [1.68544872E12, 1316.7333333333333], [1.68544968E12, 3226.2833333333333], [1.68544938E12, 7811.4], [1.68544974E12, 2507.383333333333], [1.68544908E12, 6196.45], [1.68544878E12, 1772.2833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544998E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 258.3333333333333, "minX": 1.68544866E12, "maxY": 52193.73684210526, "series": [{"data": [[1.68544944E12, 22375.695652173912], [1.68544914E12, 33159.6], [1.68544884E12, 18517.249999999996], [1.6854498E12, 50654.23809523809], [1.6854495E12, 33160.857142857145], [1.68544986E12, 33650.92307692307], [1.6854492E12, 14877.511111111115], [1.6854489E12, 33797.76470588235], [1.68544956E12, 32826.65217391304], [1.68544926E12, 14197.355932203393], [1.68544962E12, 32037.921052631573], [1.68544896E12, 42214.36363636363], [1.68544992E12, 28125.611111111113], [1.68544866E12, 7431.0], [1.68544998E12, 19283.375], [1.68544932E12, 19495.982456140362], [1.68544902E12, 33705.166666666664], [1.68544872E12, 16999.66666666667], [1.68544968E12, 35876.17391304348], [1.68544938E12, 18485.137254901965], [1.68544974E12, 42171.045454545456], [1.68544908E12, 14926.32608695652], [1.68544878E12, 20816.857142857145]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544944E12, 22303.392156862745], [1.68544914E12, 33335.07407407408], [1.68544884E12, 19118.636363636364], [1.6854498E12, 52193.73684210526], [1.6854495E12, 33886.4], [1.68544986E12, 33283.46666666666], [1.6854492E12, 15771.326086956526], [1.6854489E12, 33521.82352941176], [1.68544956E12, 31739.166666666668], [1.68544926E12, 13583.600000000004], [1.68544962E12, 31701.513513513513], [1.68544896E12, 41937.818181818184], [1.68544992E12, 29566.800000000003], [1.68544866E12, 5199.0], [1.68544998E12, 19087.090909090908], [1.68544932E12, 19322.037037037036], [1.68544902E12, 33431.83333333333], [1.68544872E12, 15163.181818181818], [1.68544968E12, 37076.78260869564], [1.68544938E12, 17373.156862745094], [1.68544974E12, 41884.590909090904], [1.68544908E12, 14984.022222222224], [1.68544878E12, 20288.454545454544]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544944E12, 269.88888888888886], [1.68544914E12, 275.00000000000006], [1.68544884E12, 267.0769230769231], [1.6854498E12, 334.1428571428571], [1.6854495E12, 268.37499999999994], [1.68544986E12, 287.26666666666665], [1.6854492E12, 272.50980392156873], [1.6854489E12, 281.40000000000003], [1.68544956E12, 273.35416666666663], [1.68544926E12, 267.14285714285717], [1.68544962E12, 281.90625000000006], [1.68544896E12, 276.54545454545456], [1.68544992E12, 270.7], [1.68544866E12, 284.3333333333333], [1.68544998E12, 258.3333333333333], [1.68544932E12, 268.4716981132076], [1.68544902E12, 269.7857142857143], [1.68544872E12, 267.0714285714286], [1.68544968E12, 287.6086956521739], [1.68544938E12, 273.3703703703703], [1.68544974E12, 274.05555555555554], [1.68544908E12, 263.12500000000006], [1.68544878E12, 287.45454545454544]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544998E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 257.5, "minX": 1.68544866E12, "maxY": 52193.368421052626, "series": [{"data": [[1.68544944E12, 22374.760869565216], [1.68544914E12, 33158.86666666666], [1.68544884E12, 18516.124999999996], [1.6854498E12, 50653.19047619048], [1.6854495E12, 33160.30952380952], [1.68544986E12, 33650.15384615385], [1.6854492E12, 14876.844444444447], [1.6854489E12, 33797.0], [1.68544956E12, 32825.32608695652], [1.68544926E12, 14196.355932203389], [1.68544962E12, 32037.47368421052], [1.68544896E12, 42213.63636363637], [1.68544992E12, 28125.055555555562], [1.68544866E12, 7427.333333333333], [1.68544998E12, 19282.5], [1.68544932E12, 19495.315789473683], [1.68544902E12, 33704.666666666664], [1.68544872E12, 16997.88888888889], [1.68544968E12, 35874.956521739135], [1.68544938E12, 18484.490196078426], [1.68544974E12, 42170.09090909091], [1.68544908E12, 14926.086956521738], [1.68544878E12, 20816.428571428572]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544944E12, 22302.980392156864], [1.68544914E12, 33334.85185185184], [1.68544884E12, 19118.272727272724], [1.6854498E12, 52193.368421052626], [1.6854495E12, 33886.175], [1.68544986E12, 33283.13333333333], [1.6854492E12, 15771.086956521738], [1.6854489E12, 33521.76470588235], [1.68544956E12, 31738.58333333334], [1.68544926E12, 13583.266666666668], [1.68544962E12, 31701.297297297297], [1.68544896E12, 41937.63636363636], [1.68544992E12, 29566.533333333333], [1.68544866E12, 5198.0], [1.68544998E12, 19086.909090909092], [1.68544932E12, 19321.740740740734], [1.68544902E12, 33431.50000000001], [1.68544872E12, 15162.09090909091], [1.68544968E12, 37076.47826086957], [1.68544938E12, 17372.980392156867], [1.68544974E12, 41884.40909090909], [1.68544908E12, 14983.844444444447], [1.68544878E12, 20288.18181818182]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544944E12, 269.49999999999994], [1.68544914E12, 274.3333333333334], [1.68544884E12, 266.53846153846155], [1.6854498E12, 333.64285714285717], [1.6854495E12, 268.1000000000001], [1.68544986E12, 286.8666666666667], [1.6854492E12, 272.1764705882353], [1.6854489E12, 280.65000000000003], [1.68544956E12, 272.70833333333326], [1.68544926E12, 266.52380952380963], [1.68544962E12, 281.15625000000006], [1.68544896E12, 276.2727272727273], [1.68544992E12, 270.3], [1.68544866E12, 281.6666666666667], [1.68544998E12, 257.5], [1.68544932E12, 267.9811320754717], [1.68544902E12, 269.7857142857143], [1.68544872E12, 266.6428571428571], [1.68544968E12, 286.9130434782609], [1.68544938E12, 272.8333333333333], [1.68544974E12, 273.38888888888897], [1.68544908E12, 263.02083333333337], [1.68544878E12, 287.2727272727273]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544998E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68544866E12, "maxY": 150.63636363636365, "series": [{"data": [[1.68544944E12, 127.6304347826087], [1.68544914E12, 129.73333333333332], [1.68544884E12, 139.25], [1.6854498E12, 129.76190476190476], [1.6854495E12, 128.85714285714292], [1.68544986E12, 150.15384615384616], [1.6854492E12, 130.60000000000002], [1.6854489E12, 129.94117647058823], [1.68544956E12, 127.45652173913042], [1.68544926E12, 127.93220338983048], [1.68544962E12, 128.86842105263162], [1.68544896E12, 129.72727272727272], [1.68544992E12, 133.55555555555554], [1.68544866E12, 149.0], [1.68544998E12, 127.25], [1.68544932E12, 129.1578947368421], [1.68544902E12, 129.33333333333334], [1.68544872E12, 131.22222222222223], [1.68544968E12, 126.82608695652173], [1.68544938E12, 129.13725490196074], [1.68544974E12, 129.18181818181822], [1.68544908E12, 129.2608695652174], [1.68544878E12, 139.92857142857142]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68544944E12, 0.0], [1.68544914E12, 0.0], [1.68544884E12, 0.0], [1.6854498E12, 0.0], [1.6854495E12, 0.0], [1.68544986E12, 0.0], [1.6854492E12, 0.0], [1.6854489E12, 0.0], [1.68544956E12, 0.0], [1.68544926E12, 0.0], [1.68544962E12, 0.0], [1.68544896E12, 0.0], [1.68544992E12, 0.0], [1.68544866E12, 0.0], [1.68544998E12, 0.0], [1.68544932E12, 0.0], [1.68544902E12, 0.0], [1.68544872E12, 0.0], [1.68544968E12, 0.0], [1.68544938E12, 0.0], [1.68544974E12, 0.0], [1.68544908E12, 0.0], [1.68544878E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68544944E12, 127.72222222222221], [1.68544914E12, 130.58333333333334], [1.68544884E12, 128.23076923076923], [1.6854498E12, 146.7857142857143], [1.6854495E12, 128.92499999999998], [1.68544986E12, 135.4], [1.6854492E12, 130.15686274509807], [1.6854489E12, 130.75], [1.68544956E12, 128.77083333333334], [1.68544926E12, 128.26984126984132], [1.68544962E12, 126.68750000000001], [1.68544896E12, 129.81818181818184], [1.68544992E12, 134.5], [1.68544866E12, 149.0], [1.68544998E12, 127.33333333333333], [1.68544932E12, 129.1320754716981], [1.68544902E12, 133.2142857142857], [1.68544872E12, 130.07142857142858], [1.68544968E12, 129.17391304347825], [1.68544938E12, 128.68518518518525], [1.68544974E12, 127.05555555555556], [1.68544908E12, 127.35416666666667], [1.68544878E12, 150.63636363636365]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544998E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 246.0, "minX": 1.68544866E12, "maxY": 59960.0, "series": [{"data": [[1.68544944E12, 59960.0], [1.68544914E12, 56242.0], [1.68544884E12, 24102.0], [1.6854498E12, 59477.0], [1.6854495E12, 58849.0], [1.68544986E12, 39252.0], [1.6854492E12, 38266.0], [1.6854489E12, 46754.0], [1.68544956E12, 46000.0], [1.68544926E12, 41128.0], [1.68544962E12, 59067.0], [1.68544896E12, 50402.0], [1.68544992E12, 43582.0], [1.68544866E12, 5199.0], [1.68544998E12, 22639.0], [1.68544932E12, 47193.0], [1.68544902E12, 46085.0], [1.68544872E12, 24061.0], [1.68544968E12, 43741.0], [1.68544938E12, 44529.0], [1.68544974E12, 55425.0], [1.68544908E12, 58088.0], [1.68544878E12, 22333.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68544944E12, 21528.5], [1.68544914E12, 54260.0], [1.68544884E12, 23374.0], [1.6854498E12, 57553.0], [1.6854495E12, 42989.1], [1.68544986E12, 36625.8], [1.6854492E12, 30779.9], [1.6854489E12, 41488.8], [1.68544956E12, 38802.0], [1.68544926E12, 37094.9], [1.68544962E12, 50571.0], [1.68544896E12, 47729.0], [1.68544992E12, 39776.200000000004], [1.68544866E12, 5199.0], [1.68544998E12, 22502.2], [1.68544932E12, 30372.499999999996], [1.68544902E12, 44942.200000000004], [1.68544872E12, 23362.8], [1.68544968E12, 42396.1], [1.68544938E12, 24457.200000000004], [1.68544974E12, 46031.60000000001], [1.68544908E12, 57343.4], [1.68544878E12, 21812.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68544944E12, 59960.0], [1.68544914E12, 56242.0], [1.68544884E12, 24102.0], [1.6854498E12, 59477.0], [1.6854495E12, 58849.0], [1.68544986E12, 39252.0], [1.6854492E12, 38266.0], [1.6854489E12, 46754.0], [1.68544956E12, 46000.0], [1.68544926E12, 41128.0], [1.68544962E12, 59067.0], [1.68544896E12, 50402.0], [1.68544992E12, 43582.0], [1.68544866E12, 5199.0], [1.68544998E12, 22639.0], [1.68544932E12, 47193.0], [1.68544902E12, 46085.0], [1.68544872E12, 24061.0], [1.68544968E12, 43741.0], [1.68544938E12, 44424.119999999995], [1.68544974E12, 55425.0], [1.68544908E12, 58088.0], [1.68544878E12, 22333.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68544944E12, 58166.75], [1.68544914E12, 55631.6], [1.68544884E12, 24026.25], [1.6854498E12, 58681.15], [1.6854495E12, 48734.55000000002], [1.68544986E12, 38115.15], [1.6854492E12, 35772.39999999998], [1.6854489E12, 44391.50000000001], [1.68544956E12, 40428.69999999998], [1.68544926E12, 39772.799999999996], [1.68544962E12, 54240.5], [1.68544896E12, 50011.84999999999], [1.68544992E12, 43006.9], [1.68544866E12, 5199.0], [1.68544998E12, 22639.0], [1.68544932E12, 37085.59999999996], [1.68544902E12, 46025.7], [1.68544872E12, 23888.8], [1.68544968E12, 43482.45], [1.68544938E12, 39124.39999999999], [1.68544974E12, 54699.6], [1.68544908E12, 57855.35], [1.68544878E12, 22268.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68544944E12, 248.0], [1.68544914E12, 247.0], [1.68544884E12, 252.0], [1.6854498E12, 252.0], [1.6854495E12, 249.0], [1.68544986E12, 250.0], [1.6854492E12, 249.0], [1.6854489E12, 256.0], [1.68544956E12, 249.0], [1.68544926E12, 253.0], [1.68544962E12, 249.0], [1.68544896E12, 252.0], [1.68544992E12, 249.0], [1.68544866E12, 256.0], [1.68544998E12, 251.0], [1.68544932E12, 249.0], [1.68544902E12, 248.0], [1.68544872E12, 254.0], [1.68544968E12, 249.0], [1.68544938E12, 249.0], [1.68544974E12, 246.0], [1.68544908E12, 248.0], [1.68544878E12, 255.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68544944E12, 286.0], [1.68544914E12, 328.0], [1.68544884E12, 288.0], [1.6854498E12, 37161.0], [1.6854495E12, 284.5], [1.68544986E12, 14808.5], [1.6854492E12, 304.0], [1.6854489E12, 314.0], [1.68544956E12, 4146.0], [1.68544926E12, 350.5], [1.68544962E12, 9917.0], [1.68544896E12, 7407.0], [1.68544992E12, 19393.0], [1.68544866E12, 298.5], [1.68544998E12, 17117.0], [1.68544932E12, 5654.0], [1.68544902E12, 401.0], [1.68544872E12, 282.0], [1.68544968E12, 4942.0], [1.68544938E12, 400.0], [1.68544974E12, 284.0], [1.68544908E12, 313.5], [1.68544878E12, 8490.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544998E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 131.0, "minX": 1.0, "maxY": 55931.0, "series": [{"data": [[2.0, 314.5], [8.0, 300.0], [9.0, 12889.0], [10.0, 7634.0], [11.0, 10825.0], [3.0, 5196.0], [12.0, 14499.0], [13.0, 55931.0], [14.0, 17426.5], [15.0, 23123.0], [1.0, 305.0], [4.0, 318.0], [5.0, 9754.0], [6.0, 351.0], [7.0, 6048.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 254.0], [2.0, 249.0], [8.0, 256.0], [4.0, 252.0], [9.0, 131.0], [10.0, 245.5], [5.0, 252.5], [3.0, 253.5], [6.0, 246.0], [13.0, 253.0], [15.0, 248.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 131.0, "minX": 1.0, "maxY": 55930.0, "series": [{"data": [[2.0, 313.5], [8.0, 300.0], [9.0, 12888.0], [10.0, 7631.5], [11.0, 10824.5], [3.0, 5196.0], [12.0, 14499.0], [13.0, 55930.0], [14.0, 17426.5], [15.0, 23123.0], [1.0, 304.0], [4.0, 316.5], [5.0, 9754.0], [6.0, 351.0], [7.0, 6048.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 254.0], [2.0, 249.0], [8.0, 256.0], [4.0, 252.0], [9.0, 131.0], [10.0, 245.5], [5.0, 252.5], [3.0, 253.0], [6.0, 246.0], [13.0, 253.0], [15.0, 248.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68544866E12, "maxY": 2.0833333333333335, "series": [{"data": [[1.68544944E12, 1.7166666666666666], [1.68544914E12, 0.85], [1.68544884E12, 0.43333333333333335], [1.6854498E12, 0.48333333333333334], [1.6854495E12, 1.35], [1.68544986E12, 0.5], [1.6854492E12, 1.6333333333333333], [1.6854489E12, 0.6666666666666666], [1.68544956E12, 1.65], [1.68544926E12, 2.0833333333333335], [1.68544962E12, 1.0666666666666667], [1.68544896E12, 0.36666666666666664], [1.68544992E12, 0.3333333333333333], [1.68544866E12, 0.1], [1.68544998E12, 0.2], [1.68544932E12, 1.8166666666666667], [1.68544902E12, 0.45], [1.68544872E12, 0.4666666666666667], [1.68544968E12, 0.7666666666666667], [1.68544938E12, 1.8], [1.68544974E12, 0.5833333333333334], [1.68544908E12, 1.6], [1.68544878E12, 0.36666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544998E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68544866E12, "maxY": 1.75, "series": [{"data": [[1.68544944E12, 1.5666666666666667], [1.68544914E12, 0.43333333333333335], [1.68544884E12, 0.4], [1.6854498E12, 0.5], [1.6854495E12, 1.1666666666666667], [1.68544986E12, 0.5], [1.6854492E12, 1.2], [1.6854489E12, 0.6166666666666667], [1.68544956E12, 1.6], [1.68544926E12, 1.2], [1.68544962E12, 1.15], [1.68544896E12, 0.36666666666666664], [1.68544992E12, 0.4166666666666667], [1.68544866E12, 0.06666666666666667], [1.68544998E12, 0.2833333333333333], [1.68544932E12, 1.6], [1.68544902E12, 0.35], [1.68544872E12, 0.4166666666666667], [1.68544968E12, 0.7666666666666667], [1.68544938E12, 1.75], [1.68544974E12, 0.5166666666666667], [1.68544908E12, 0.5], [1.68544878E12, 0.36666666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68544944E12, 0.08333333333333333], [1.6854495E12, 0.016666666666666666], [1.68544974E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68544914E12, 0.26666666666666666], [1.68544932E12, 0.18333333333333332], [1.68544902E12, 0.08333333333333333], [1.6854492E12, 0.4166666666666667], [1.68544908E12, 1.05], [1.68544926E12, 0.85]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68544944E12, 0.1], [1.68544914E12, 0.15], [1.6854498E12, 0.05], [1.6854495E12, 0.15], [1.68544974E12, 0.13333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68544998E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68544866E12, "maxY": 0.9, "series": [{"data": [[1.68544944E12, 0.9], [1.68544914E12, 0.25], [1.68544884E12, 0.21666666666666667], [1.6854498E12, 0.23333333333333334], [1.6854495E12, 0.6666666666666666], [1.68544986E12, 0.25], [1.6854492E12, 0.6666666666666666], [1.6854489E12, 0.3333333333333333], [1.68544956E12, 0.8], [1.68544926E12, 0.6166666666666667], [1.68544962E12, 0.5333333333333333], [1.68544896E12, 0.18333333333333332], [1.68544992E12, 0.16666666666666666], [1.68544866E12, 0.05], [1.68544998E12, 0.1], [1.68544932E12, 0.75], [1.68544902E12, 0.18333333333333332], [1.68544872E12, 0.23333333333333334], [1.68544968E12, 0.38333333333333336], [1.68544938E12, 0.9], [1.68544974E12, 0.3], [1.68544908E12, 0.26666666666666666], [1.68544878E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68544914E12, 0.15], [1.68544932E12, 0.13333333333333333], [1.68544902E12, 0.05], [1.6854492E12, 0.18333333333333332], [1.68544908E12, 0.5333333333333333], [1.68544926E12, 0.43333333333333335]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68544944E12, 0.18333333333333332], [1.68544914E12, 0.26666666666666666], [1.68544932E12, 0.05], [1.6854498E12, 0.05], [1.68544902E12, 0.03333333333333333], [1.6854495E12, 0.16666666666666666], [1.6854492E12, 0.23333333333333334], [1.68544974E12, 0.15], [1.68544908E12, 0.5166666666666667], [1.68544926E12, 0.4166666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68544944E12, 0.5833333333333334], [1.68544914E12, 0.1], [1.68544884E12, 0.13333333333333333], [1.6854498E12, 0.3], [1.6854495E12, 0.5333333333333333], [1.68544986E12, 0.21666666666666667], [1.6854492E12, 0.4666666666666667], [1.6854489E12, 0.2833333333333333], [1.68544956E12, 0.7666666666666667], [1.68544926E12, 0.3], [1.68544962E12, 0.6333333333333333], [1.68544896E12, 0.18333333333333332], [1.68544992E12, 0.3], [1.68544866E12, 0.05], [1.68544998E12, 0.13333333333333333], [1.68544932E12, 0.5833333333333334], [1.68544902E12, 0.16666666666666666], [1.68544872E12, 0.15], [1.68544968E12, 0.38333333333333336], [1.68544938E12, 0.85], [1.68544974E12, 0.21666666666666667], [1.68544908E12, 0.2], [1.68544878E12, 0.23333333333333334]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68544944E12, 0.18333333333333332], [1.68544914E12, 0.4], [1.68544932E12, 0.36666666666666664], [1.6854498E12, 0.05], [1.68544902E12, 0.03333333333333333], [1.6854495E12, 0.16666666666666666], [1.6854492E12, 0.2833333333333333], [1.68544974E12, 0.15], [1.68544908E12, 0.5666666666666667], [1.68544926E12, 0.6833333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68544944E12, 0.6666666666666666], [1.68544914E12, 0.18333333333333332], [1.68544884E12, 0.18333333333333332], [1.6854498E12, 0.26666666666666666], [1.6854495E12, 0.5], [1.68544986E12, 0.25], [1.6854492E12, 0.5333333333333333], [1.6854489E12, 0.2833333333333333], [1.68544956E12, 0.8], [1.68544926E12, 0.5833333333333334], [1.68544962E12, 0.6166666666666667], [1.68544896E12, 0.18333333333333332], [1.68544992E12, 0.25], [1.68544866E12, 0.016666666666666666], [1.68544998E12, 0.18333333333333332], [1.68544932E12, 0.85], [1.68544902E12, 0.16666666666666666], [1.68544872E12, 0.18333333333333332], [1.68544968E12, 0.38333333333333336], [1.68544938E12, 0.85], [1.68544974E12, 0.21666666666666667], [1.68544908E12, 0.23333333333333334], [1.68544878E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544998E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68544866E12, "maxY": 2.6, "series": [{"data": [[1.68544944E12, 2.15], [1.68544914E12, 0.5333333333333333], [1.68544884E12, 0.5333333333333333], [1.6854498E12, 0.8], [1.6854495E12, 1.7], [1.68544986E12, 0.7166666666666667], [1.6854492E12, 1.6666666666666667], [1.6854489E12, 0.9], [1.68544956E12, 2.3666666666666667], [1.68544926E12, 1.5], [1.68544962E12, 1.7833333333333334], [1.68544896E12, 0.55], [1.68544992E12, 0.7166666666666667], [1.68544866E12, 0.11666666666666667], [1.68544998E12, 0.4166666666666667], [1.68544932E12, 2.183333333333333], [1.68544902E12, 0.5166666666666667], [1.68544872E12, 0.5666666666666667], [1.68544968E12, 1.15], [1.68544938E12, 2.6], [1.68544974E12, 0.7333333333333333], [1.68544908E12, 0.7], [1.68544878E12, 0.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68544944E12, 0.36666666666666664], [1.68544914E12, 0.8166666666666667], [1.68544932E12, 0.55], [1.6854498E12, 0.1], [1.68544902E12, 0.11666666666666667], [1.6854495E12, 0.3333333333333333], [1.6854492E12, 0.7], [1.68544974E12, 0.3], [1.68544908E12, 1.6166666666666667], [1.68544926E12, 1.5333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68544998E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

