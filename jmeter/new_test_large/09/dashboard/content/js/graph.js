/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 103.0, "minX": 0.0, "maxY": 60679.0, "series": [{"data": [[0.0, 209.0], [0.1, 209.0], [0.2, 302.0], [0.3, 312.0], [0.4, 312.0], [0.5, 312.0], [0.6, 313.0], [0.7, 313.0], [0.8, 313.0], [0.9, 313.0], [1.0, 315.0], [1.1, 315.0], [1.2, 315.0], [1.3, 315.0], [1.4, 316.0], [1.5, 317.0], [1.6, 317.0], [1.7, 317.0], [1.8, 319.0], [1.9, 319.0], [2.0, 319.0], [2.1, 320.0], [2.2, 321.0], [2.3, 322.0], [2.4, 322.0], [2.5, 322.0], [2.6, 325.0], [2.7, 329.0], [2.8, 329.0], [2.9, 329.0], [3.0, 330.0], [3.1, 330.0], [3.2, 330.0], [3.3, 333.0], [3.4, 334.0], [3.5, 335.0], [3.6, 335.0], [3.7, 335.0], [3.8, 335.0], [3.9, 336.0], [4.0, 336.0], [4.1, 341.0], [4.2, 342.0], [4.3, 343.0], [4.4, 343.0], [4.5, 354.0], [4.6, 357.0], [4.7, 364.0], [4.8, 364.0], [4.9, 365.0], [5.0, 371.0], [5.1, 371.0], [5.2, 373.0], [5.3, 379.0], [5.4, 383.0], [5.5, 383.0], [5.6, 383.0], [5.7, 386.0], [5.8, 387.0], [5.9, 387.0], [6.0, 388.0], [6.1, 388.0], [6.2, 390.0], [6.3, 390.0], [6.4, 391.0], [6.5, 399.0], [6.6, 404.0], [6.7, 404.0], [6.8, 405.0], [6.9, 407.0], [7.0, 408.0], [7.1, 408.0], [7.2, 408.0], [7.3, 409.0], [7.4, 409.0], [7.5, 409.0], [7.6, 411.0], [7.7, 412.0], [7.8, 412.0], [7.9, 412.0], [8.0, 412.0], [8.1, 413.0], [8.2, 413.0], [8.3, 413.0], [8.4, 416.0], [8.5, 416.0], [8.6, 417.0], [8.7, 417.0], [8.8, 420.0], [8.9, 432.0], [9.0, 436.0], [9.1, 436.0], [9.2, 441.0], [9.3, 450.0], [9.4, 452.0], [9.5, 452.0], [9.6, 452.0], [9.7, 459.0], [9.8, 471.0], [9.9, 471.0], [10.0, 472.0], [10.1, 476.0], [10.2, 476.0], [10.3, 476.0], [10.4, 476.0], [10.5, 479.0], [10.6, 479.0], [10.7, 480.0], [10.8, 488.0], [10.9, 493.0], [11.0, 493.0], [11.1, 494.0], [11.2, 497.0], [11.3, 501.0], [11.4, 501.0], [11.5, 502.0], [11.6, 504.0], [11.7, 506.0], [11.8, 506.0], [11.9, 507.0], [12.0, 508.0], [12.1, 512.0], [12.2, 512.0], [12.3, 512.0], [12.4, 512.0], [12.5, 513.0], [12.6, 513.0], [12.7, 513.0], [12.8, 513.0], [12.9, 514.0], [13.0, 514.0], [13.1, 515.0], [13.2, 515.0], [13.3, 516.0], [13.4, 516.0], [13.5, 516.0], [13.6, 516.0], [13.7, 517.0], [13.8, 517.0], [13.9, 517.0], [14.0, 521.0], [14.1, 522.0], [14.2, 522.0], [14.3, 523.0], [14.4, 526.0], [14.5, 533.0], [14.6, 533.0], [14.7, 534.0], [14.8, 541.0], [14.9, 542.0], [15.0, 542.0], [15.1, 544.0], [15.2, 547.0], [15.3, 547.0], [15.4, 548.0], [15.5, 551.0], [15.6, 558.0], [15.7, 558.0], [15.8, 559.0], [15.9, 560.0], [16.0, 566.0], [16.1, 566.0], [16.2, 574.0], [16.3, 576.0], [16.4, 581.0], [16.5, 581.0], [16.6, 591.0], [16.7, 594.0], [16.8, 596.0], [16.9, 596.0], [17.0, 598.0], [17.1, 599.0], [17.2, 612.0], [17.3, 612.0], [17.4, 616.0], [17.5, 717.0], [17.6, 830.0], [17.7, 830.0], [17.8, 1095.0], [17.9, 1160.0], [18.0, 1171.0], [18.1, 1171.0], [18.2, 1247.0], [18.3, 1255.0], [18.4, 1337.0], [18.5, 1337.0], [18.6, 1346.0], [18.7, 1361.0], [18.8, 1383.0], [18.9, 1383.0], [19.0, 1513.0], [19.1, 1537.0], [19.2, 1587.0], [19.3, 1587.0], [19.4, 1595.0], [19.5, 1690.0], [19.6, 1822.0], [19.7, 1822.0], [19.8, 2280.0], [19.9, 2400.0], [20.0, 2441.0], [20.1, 2441.0], [20.2, 3332.0], [20.3, 3462.0], [20.4, 3462.0], [20.5, 3505.0], [20.6, 3970.0], [20.7, 4049.0], [20.8, 4049.0], [20.9, 4056.0], [21.0, 4188.0], [21.1, 5146.0], [21.2, 5146.0], [21.3, 5389.0], [21.4, 5391.0], [21.5, 5427.0], [21.6, 5427.0], [21.7, 5435.0], [21.8, 5438.0], [21.9, 5468.0], [22.0, 5468.0], [22.1, 5478.0], [22.2, 5484.0], [22.3, 5495.0], [22.4, 5495.0], [22.5, 5528.0], [22.6, 5567.0], [22.7, 5568.0], [22.8, 5568.0], [22.9, 5571.0], [23.0, 5572.0], [23.1, 5588.0], [23.2, 5588.0], [23.3, 5593.0], [23.4, 5602.0], [23.5, 5613.0], [23.6, 5613.0], [23.7, 5620.0], [23.8, 5627.0], [23.9, 5684.0], [24.0, 5684.0], [24.1, 5685.0], [24.2, 5687.0], [24.3, 5710.0], [24.4, 5710.0], [24.5, 5721.0], [24.6, 5735.0], [24.7, 5742.0], [24.8, 5742.0], [24.9, 5765.0], [25.0, 5769.0], [25.1, 5769.0], [25.2, 5924.0], [25.3, 5925.0], [25.4, 5983.0], [25.5, 5983.0], [25.6, 6019.0], [25.7, 6060.0], [25.8, 6176.0], [25.9, 6176.0], [26.0, 6203.0], [26.1, 6286.0], [26.2, 6292.0], [26.3, 6292.0], [26.4, 6295.0], [26.5, 6329.0], [26.6, 6362.0], [26.7, 6362.0], [26.8, 6379.0], [26.9, 6428.0], [27.0, 6453.0], [27.1, 6453.0], [27.2, 6562.0], [27.3, 6596.0], [27.4, 6635.0], [27.5, 6635.0], [27.6, 6668.0], [27.7, 6677.0], [27.8, 6687.0], [27.9, 6687.0], [28.0, 6797.0], [28.1, 6846.0], [28.2, 6853.0], [28.3, 6853.0], [28.4, 6888.0], [28.5, 6899.0], [28.6, 6917.0], [28.7, 6917.0], [28.8, 6959.0], [28.9, 6971.0], [29.0, 6979.0], [29.1, 6979.0], [29.2, 7000.0], [29.3, 7035.0], [29.4, 7235.0], [29.5, 7235.0], [29.6, 7289.0], [29.7, 7383.0], [29.8, 7406.0], [29.9, 7406.0], [30.0, 7429.0], [30.1, 7433.0], [30.2, 7433.0], [30.3, 7498.0], [30.4, 7528.0], [30.5, 7564.0], [30.6, 7564.0], [30.7, 7619.0], [30.8, 7624.0], [30.9, 7651.0], [31.0, 7651.0], [31.1, 7745.0], [31.2, 7755.0], [31.3, 7815.0], [31.4, 7815.0], [31.5, 7968.0], [31.6, 8007.0], [31.7, 8125.0], [31.8, 8125.0], [31.9, 8195.0], [32.0, 8230.0], [32.1, 8238.0], [32.2, 8238.0], [32.3, 8302.0], [32.4, 8336.0], [32.5, 8336.0], [32.6, 8336.0], [32.7, 8483.0], [32.8, 8547.0], [32.9, 8604.0], [33.0, 8604.0], [33.1, 8639.0], [33.2, 8664.0], [33.3, 8687.0], [33.4, 8687.0], [33.5, 9093.0], [33.6, 9149.0], [33.7, 9155.0], [33.8, 9155.0], [33.9, 9164.0], [34.0, 9187.0], [34.1, 9373.0], [34.2, 9373.0], [34.3, 9430.0], [34.4, 9510.0], [34.5, 9534.0], [34.6, 9534.0], [34.7, 9681.0], [34.8, 9782.0], [34.9, 9793.0], [35.0, 9793.0], [35.1, 9805.0], [35.2, 9817.0], [35.3, 9817.0], [35.4, 9838.0], [35.5, 9863.0], [35.6, 9905.0], [35.7, 9905.0], [35.8, 9936.0], [35.9, 10044.0], [36.0, 10152.0], [36.1, 10152.0], [36.2, 10171.0], [36.3, 10354.0], [36.4, 10357.0], [36.5, 10357.0], [36.6, 10441.0], [36.7, 10468.0], [36.8, 10539.0], [36.9, 10539.0], [37.0, 10568.0], [37.1, 10597.0], [37.2, 10598.0], [37.3, 10598.0], [37.4, 10670.0], [37.5, 10692.0], [37.6, 10786.0], [37.7, 10786.0], [37.8, 10858.0], [37.9, 11036.0], [38.0, 11064.0], [38.1, 11064.0], [38.2, 11064.0], [38.3, 11092.0], [38.4, 11098.0], [38.5, 11098.0], [38.6, 11127.0], [38.7, 11153.0], [38.8, 11457.0], [38.9, 11457.0], [39.0, 11699.0], [39.1, 11762.0], [39.2, 11798.0], [39.3, 11798.0], [39.4, 11878.0], [39.5, 11906.0], [39.6, 11914.0], [39.7, 11914.0], [39.8, 11943.0], [39.9, 11998.0], [40.0, 12005.0], [40.1, 12005.0], [40.2, 12008.0], [40.3, 12029.0], [40.4, 12029.0], [40.5, 12127.0], [40.6, 12127.0], [40.7, 12158.0], [40.8, 12158.0], [40.9, 12422.0], [41.0, 12438.0], [41.1, 12492.0], [41.2, 12492.0], [41.3, 12498.0], [41.4, 12506.0], [41.5, 12536.0], [41.6, 12536.0], [41.7, 12654.0], [41.8, 12857.0], [41.9, 12859.0], [42.0, 12859.0], [42.1, 12883.0], [42.2, 12933.0], [42.3, 12984.0], [42.4, 12984.0], [42.5, 13084.0], [42.6, 13211.0], [42.7, 13219.0], [42.8, 13219.0], [42.9, 13261.0], [43.0, 13272.0], [43.1, 13384.0], [43.2, 13384.0], [43.3, 13453.0], [43.4, 13506.0], [43.5, 13514.0], [43.6, 13514.0], [43.7, 13523.0], [43.8, 13570.0], [43.9, 13624.0], [44.0, 13624.0], [44.1, 13688.0], [44.2, 13926.0], [44.3, 13972.0], [44.4, 13972.0], [44.5, 14014.0], [44.6, 14016.0], [44.7, 14052.0], [44.8, 14052.0], [44.9, 14080.0], [45.0, 14121.0], [45.1, 14121.0], [45.2, 14154.0], [45.3, 14154.0], [45.4, 14206.0], [45.5, 14206.0], [45.6, 14251.0], [45.7, 14293.0], [45.8, 14333.0], [45.9, 14333.0], [46.0, 14526.0], [46.1, 14641.0], [46.2, 14648.0], [46.3, 14648.0], [46.4, 14648.0], [46.5, 14791.0], [46.6, 14871.0], [46.7, 14871.0], [46.8, 14880.0], [46.9, 14901.0], [47.0, 14903.0], [47.1, 14903.0], [47.2, 14917.0], [47.3, 15197.0], [47.4, 15199.0], [47.5, 15199.0], [47.6, 15398.0], [47.7, 15425.0], [47.8, 15462.0], [47.9, 15462.0], [48.0, 15506.0], [48.1, 15828.0], [48.2, 15990.0], [48.3, 15990.0], [48.4, 16032.0], [48.5, 16067.0], [48.6, 16113.0], [48.7, 16113.0], [48.8, 16238.0], [48.9, 16274.0], [49.0, 16367.0], [49.1, 16367.0], [49.2, 16398.0], [49.3, 16457.0], [49.4, 16517.0], [49.5, 16517.0], [49.6, 16607.0], [49.7, 16728.0], [49.8, 16787.0], [49.9, 16787.0], [50.0, 16851.0], [50.1, 16864.0], [50.2, 16864.0], [50.3, 16873.0], [50.4, 16904.0], [50.5, 16971.0], [50.6, 16971.0], [50.7, 16972.0], [50.8, 17108.0], [50.9, 17266.0], [51.0, 17266.0], [51.1, 17273.0], [51.2, 17309.0], [51.3, 17492.0], [51.4, 17492.0], [51.5, 17545.0], [51.6, 17606.0], [51.7, 17677.0], [51.8, 17677.0], [51.9, 17720.0], [52.0, 17785.0], [52.1, 17811.0], [52.2, 17811.0], [52.3, 17854.0], [52.4, 17896.0], [52.5, 17951.0], [52.6, 17951.0], [52.7, 17982.0], [52.8, 17987.0], [52.9, 18034.0], [53.0, 18034.0], [53.1, 18080.0], [53.2, 18121.0], [53.3, 18168.0], [53.4, 18168.0], [53.5, 18221.0], [53.6, 18257.0], [53.7, 18341.0], [53.8, 18341.0], [53.9, 18353.0], [54.0, 18357.0], [54.1, 18380.0], [54.2, 18380.0], [54.3, 18416.0], [54.4, 18472.0], [54.5, 18521.0], [54.6, 18521.0], [54.7, 18584.0], [54.8, 18600.0], [54.9, 18622.0], [55.0, 18622.0], [55.1, 18640.0], [55.2, 18890.0], [55.3, 18890.0], [55.4, 18909.0], [55.5, 18961.0], [55.6, 18988.0], [55.7, 18988.0], [55.8, 18997.0], [55.9, 19030.0], [56.0, 19031.0], [56.1, 19031.0], [56.2, 19097.0], [56.3, 19105.0], [56.4, 19113.0], [56.5, 19113.0], [56.6, 19451.0], [56.7, 19453.0], [56.8, 19532.0], [56.9, 19532.0], [57.0, 19558.0], [57.1, 19634.0], [57.2, 19672.0], [57.3, 19672.0], [57.4, 19781.0], [57.5, 19796.0], [57.6, 19893.0], [57.7, 19893.0], [57.8, 19922.0], [57.9, 19987.0], [58.0, 20051.0], [58.1, 20051.0], [58.2, 20067.0], [58.3, 20189.0], [58.4, 20214.0], [58.5, 20214.0], [58.6, 20264.0], [58.7, 20283.0], [58.8, 20330.0], [58.9, 20330.0], [59.0, 20475.0], [59.1, 20478.0], [59.2, 20620.0], [59.3, 20620.0], [59.4, 20635.0], [59.5, 20636.0], [59.6, 20680.0], [59.7, 20680.0], [59.8, 20686.0], [59.9, 20777.0], [60.0, 20800.0], [60.1, 20800.0], [60.2, 20813.0], [60.3, 20833.0], [60.4, 20833.0], [60.5, 20835.0], [60.6, 20981.0], [60.7, 20986.0], [60.8, 20986.0], [60.9, 21049.0], [61.0, 21079.0], [61.1, 21183.0], [61.2, 21183.0], [61.3, 21208.0], [61.4, 21237.0], [61.5, 21335.0], [61.6, 21335.0], [61.7, 21380.0], [61.8, 21412.0], [61.9, 21443.0], [62.0, 21443.0], [62.1, 21520.0], [62.2, 21602.0], [62.3, 21659.0], [62.4, 21659.0], [62.5, 21884.0], [62.6, 21926.0], [62.7, 21951.0], [62.8, 21951.0], [62.9, 22006.0], [63.0, 22026.0], [63.1, 22128.0], [63.2, 22128.0], [63.3, 22693.0], [63.4, 22777.0], [63.5, 23075.0], [63.6, 23075.0], [63.7, 23289.0], [63.8, 23403.0], [63.9, 23428.0], [64.0, 23428.0], [64.1, 23543.0], [64.2, 23668.0], [64.3, 23701.0], [64.4, 23701.0], [64.5, 23716.0], [64.6, 23915.0], [64.7, 23961.0], [64.8, 23961.0], [64.9, 24101.0], [65.0, 24104.0], [65.1, 24104.0], [65.2, 24234.0], [65.3, 24246.0], [65.4, 24279.0], [65.5, 24279.0], [65.6, 24523.0], [65.7, 24847.0], [65.8, 24879.0], [65.9, 24879.0], [66.0, 24963.0], [66.1, 25098.0], [66.2, 25498.0], [66.3, 25498.0], [66.4, 25544.0], [66.5, 25640.0], [66.6, 25918.0], [66.7, 25918.0], [66.8, 25966.0], [66.9, 26019.0], [67.0, 26148.0], [67.1, 26148.0], [67.2, 26179.0], [67.3, 26260.0], [67.4, 26579.0], [67.5, 26579.0], [67.6, 26862.0], [67.7, 26908.0], [67.8, 26939.0], [67.9, 26939.0], [68.0, 26948.0], [68.1, 27430.0], [68.2, 27677.0], [68.3, 27677.0], [68.4, 27821.0], [68.5, 27872.0], [68.6, 28185.0], [68.7, 28185.0], [68.8, 28192.0], [68.9, 28256.0], [69.0, 28311.0], [69.1, 28311.0], [69.2, 28422.0], [69.3, 28435.0], [69.4, 28505.0], [69.5, 28505.0], [69.6, 28540.0], [69.7, 28578.0], [69.8, 28605.0], [69.9, 28605.0], [70.0, 28685.0], [70.1, 28808.0], [70.2, 28808.0], [70.3, 28944.0], [70.4, 29112.0], [70.5, 29291.0], [70.6, 29291.0], [70.7, 29373.0], [70.8, 29475.0], [70.9, 29553.0], [71.0, 29553.0], [71.1, 29569.0], [71.2, 29592.0], [71.3, 29717.0], [71.4, 29717.0], [71.5, 29979.0], [71.6, 30053.0], [71.7, 30629.0], [71.8, 30629.0], [71.9, 30652.0], [72.0, 30735.0], [72.1, 30875.0], [72.2, 30875.0], [72.3, 30890.0], [72.4, 30930.0], [72.5, 31184.0], [72.6, 31184.0], [72.7, 31260.0], [72.8, 31285.0], [72.9, 31690.0], [73.0, 31690.0], [73.1, 31808.0], [73.2, 32028.0], [73.3, 32101.0], [73.4, 32101.0], [73.5, 32473.0], [73.6, 32549.0], [73.7, 32572.0], [73.8, 32572.0], [73.9, 32708.0], [74.0, 32718.0], [74.1, 32738.0], [74.2, 32738.0], [74.3, 32809.0], [74.4, 32814.0], [74.5, 33026.0], [74.6, 33026.0], [74.7, 33176.0], [74.8, 33267.0], [74.9, 33681.0], [75.0, 33681.0], [75.1, 33745.0], [75.2, 33905.0], [75.3, 33905.0], [75.4, 33918.0], [75.5, 34070.0], [75.6, 34079.0], [75.7, 34079.0], [75.8, 34106.0], [75.9, 34636.0], [76.0, 34673.0], [76.1, 34673.0], [76.2, 34969.0], [76.3, 35012.0], [76.4, 35053.0], [76.5, 35053.0], [76.6, 35224.0], [76.7, 35497.0], [76.8, 35539.0], [76.9, 35539.0], [77.0, 35613.0], [77.1, 35671.0], [77.2, 35772.0], [77.3, 35772.0], [77.4, 35780.0], [77.5, 35787.0], [77.6, 35883.0], [77.7, 35883.0], [77.8, 36099.0], [77.9, 36171.0], [78.0, 36582.0], [78.1, 36582.0], [78.2, 37626.0], [78.3, 37680.0], [78.4, 37948.0], [78.5, 37948.0], [78.6, 38097.0], [78.7, 38209.0], [78.8, 38347.0], [78.9, 38347.0], [79.0, 38935.0], [79.1, 39023.0], [79.2, 39130.0], [79.3, 39130.0], [79.4, 39526.0], [79.5, 39915.0], [79.6, 40054.0], [79.7, 40054.0], [79.8, 40140.0], [79.9, 40308.0], [80.0, 40367.0], [80.1, 40367.0], [80.2, 40517.0], [80.3, 40659.0], [80.4, 40659.0], [80.5, 40675.0], [80.6, 40682.0], [80.7, 40761.0], [80.8, 40761.0], [80.9, 40854.0], [81.0, 40914.0], [81.1, 41042.0], [81.2, 41042.0], [81.3, 41067.0], [81.4, 41125.0], [81.5, 41181.0], [81.6, 41181.0], [81.7, 41448.0], [81.8, 41587.0], [81.9, 41708.0], [82.0, 41708.0], [82.1, 41970.0], [82.2, 41990.0], [82.3, 42064.0], [82.4, 42064.0], [82.5, 42077.0], [82.6, 42199.0], [82.7, 42263.0], [82.8, 42263.0], [82.9, 42391.0], [83.0, 42415.0], [83.1, 42421.0], [83.2, 42421.0], [83.3, 42461.0], [83.4, 42500.0], [83.5, 42504.0], [83.6, 42504.0], [83.7, 42630.0], [83.8, 42662.0], [83.9, 42779.0], [84.0, 42779.0], [84.1, 43069.0], [84.2, 43313.0], [84.3, 43639.0], [84.4, 43639.0], [84.5, 43680.0], [84.6, 43845.0], [84.7, 43875.0], [84.8, 43875.0], [84.9, 44016.0], [85.0, 44063.0], [85.1, 44063.0], [85.2, 44309.0], [85.3, 44347.0], [85.4, 44423.0], [85.5, 44423.0], [85.6, 44478.0], [85.7, 44768.0], [85.8, 44798.0], [85.9, 44798.0], [86.0, 44921.0], [86.1, 45032.0], [86.2, 45417.0], [86.3, 45417.0], [86.4, 45417.0], [86.5, 45604.0], [86.6, 45619.0], [86.7, 45619.0], [86.8, 45764.0], [86.9, 45796.0], [87.0, 45798.0], [87.1, 45798.0], [87.2, 45885.0], [87.3, 45891.0], [87.4, 45940.0], [87.5, 45940.0], [87.6, 46044.0], [87.7, 46169.0], [87.8, 46194.0], [87.9, 46194.0], [88.0, 46539.0], [88.1, 46719.0], [88.2, 47408.0], [88.3, 47408.0], [88.4, 47486.0], [88.5, 47667.0], [88.6, 47868.0], [88.7, 47868.0], [88.8, 48069.0], [88.9, 48359.0], [89.0, 49443.0], [89.1, 49443.0], [89.2, 50563.0], [89.3, 51082.0], [89.4, 51104.0], [89.5, 51104.0], [89.6, 51676.0], [89.7, 51908.0], [89.8, 52715.0], [89.9, 52715.0], [90.0, 52854.0], [90.1, 52898.0], [90.2, 52898.0], [90.3, 54396.0], [90.4, 55006.0], [90.5, 55127.0], [90.6, 55127.0], [90.7, 55514.0], [90.8, 55925.0], [90.9, 57064.0], [91.0, 57064.0], [91.1, 57210.0], [91.2, 57908.0], [91.3, 58066.0], [91.4, 58066.0], [91.5, 58928.0], [91.6, 59128.0], [91.7, 59582.0], [91.8, 59582.0], [91.9, 60035.0], [92.0, 60292.0], [92.1, 60301.0], [92.2, 60301.0], [92.3, 60302.0], [92.4, 60314.0], [92.5, 60318.0], [92.6, 60318.0], [92.7, 60328.0], [92.8, 60333.0], [92.9, 60345.0], [93.0, 60345.0], [93.1, 60358.0], [93.2, 60364.0], [93.3, 60364.0], [93.4, 60364.0], [93.5, 60382.0], [93.6, 60384.0], [93.7, 60384.0], [93.8, 60384.0], [93.9, 60386.0], [94.0, 60387.0], [94.1, 60387.0], [94.2, 60387.0], [94.3, 60396.0], [94.4, 60404.0], [94.5, 60423.0], [94.6, 60423.0], [94.7, 60443.0], [94.8, 60449.0], [94.9, 60458.0], [95.0, 60458.0], [95.1, 60459.0], [95.2, 60465.0], [95.3, 60465.0], [95.4, 60467.0], [95.5, 60475.0], [95.6, 60479.0], [95.7, 60479.0], [95.8, 60480.0], [95.9, 60483.0], [96.0, 60486.0], [96.1, 60486.0], [96.2, 60487.0], [96.3, 60488.0], [96.4, 60489.0], [96.5, 60489.0], [96.6, 60490.0], [96.7, 60499.0], [96.8, 60499.0], [96.9, 60499.0], [97.0, 60504.0], [97.1, 60510.0], [97.2, 60515.0], [97.3, 60515.0], [97.4, 60516.0], [97.5, 60518.0], [97.6, 60522.0], [97.7, 60522.0], [97.8, 60534.0], [97.9, 60538.0], [98.0, 60542.0], [98.1, 60542.0], [98.2, 60544.0], [98.3, 60546.0], [98.4, 60563.0], [98.5, 60563.0], [98.6, 60566.0], [98.7, 60571.0], [98.8, 60583.0], [98.9, 60583.0], [99.0, 60589.0], [99.1, 60598.0], [99.2, 60607.0], [99.3, 60607.0], [99.4, 60625.0], [99.5, 60630.0], [99.6, 60652.0], [99.7, 60652.0], [99.8, 60672.0], [99.9, 60679.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 103.0], [0.1, 103.0], [0.2, 104.0], [0.3, 104.0], [0.4, 104.0], [0.5, 104.0], [0.6, 104.0], [0.7, 104.0], [0.8, 104.0], [0.9, 105.0], [1.0, 105.0], [1.1, 105.0], [1.2, 105.0], [1.3, 105.0], [1.4, 105.0], [1.5, 105.0], [1.6, 105.0], [1.7, 105.0], [1.8, 105.0], [1.9, 105.0], [2.0, 105.0], [2.1, 105.0], [2.2, 106.0], [2.3, 106.0], [2.4, 106.0], [2.5, 106.0], [2.6, 106.0], [2.7, 106.0], [2.8, 106.0], [2.9, 106.0], [3.0, 106.0], [3.1, 106.0], [3.2, 106.0], [3.3, 106.0], [3.4, 106.0], [3.5, 106.0], [3.6, 106.0], [3.7, 106.0], [3.8, 106.0], [3.9, 106.0], [4.0, 106.0], [4.1, 106.0], [4.2, 106.0], [4.3, 106.0], [4.4, 106.0], [4.5, 107.0], [4.6, 107.0], [4.7, 107.0], [4.8, 107.0], [4.9, 107.0], [5.0, 107.0], [5.1, 107.0], [5.2, 107.0], [5.3, 107.0], [5.4, 107.0], [5.5, 107.0], [5.6, 107.0], [5.7, 107.0], [5.8, 107.0], [5.9, 107.0], [6.0, 108.0], [6.1, 108.0], [6.2, 108.0], [6.3, 108.0], [6.4, 108.0], [6.5, 108.0], [6.6, 108.0], [6.7, 108.0], [6.8, 108.0], [6.9, 108.0], [7.0, 108.0], [7.1, 109.0], [7.2, 109.0], [7.3, 110.0], [7.4, 110.0], [7.5, 111.0], [7.6, 111.0], [7.7, 111.0], [7.8, 111.0], [7.9, 111.0], [8.0, 113.0], [8.1, 113.0], [8.2, 113.0], [8.3, 114.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 120.0], [8.8, 121.0], [8.9, 121.0], [9.0, 123.0], [9.1, 125.0], [9.2, 127.0], [9.3, 127.0], [9.4, 127.0], [9.5, 129.0], [9.6, 131.0], [9.7, 131.0], [9.8, 134.0], [9.9, 135.0], [10.0, 136.0], [10.1, 136.0], [10.2, 136.0], [10.3, 140.0], [10.4, 142.0], [10.5, 142.0], [10.6, 143.0], [10.7, 144.0], [10.8, 144.0], [10.9, 144.0], [11.0, 145.0], [11.1, 146.0], [11.2, 146.0], [11.3, 147.0], [11.4, 148.0], [11.5, 148.0], [11.6, 148.0], [11.7, 149.0], [11.8, 150.0], [11.9, 150.0], [12.0, 150.0], [12.1, 150.0], [12.2, 150.0], [12.3, 151.0], [12.4, 151.0], [12.5, 156.0], [12.6, 157.0], [12.7, 166.0], [12.8, 166.0], [12.9, 166.0], [13.0, 166.0], [13.1, 167.0], [13.2, 167.0], [13.3, 167.0], [13.4, 168.0], [13.5, 170.0], [13.6, 170.0], [13.7, 172.0], [13.8, 175.0], [13.9, 175.0], [14.0, 175.0], [14.1, 177.0], [14.2, 177.0], [14.3, 177.0], [14.4, 178.0], [14.5, 178.0], [14.6, 186.0], [14.7, 186.0], [14.8, 187.0], [14.9, 187.0], [15.0, 187.0], [15.1, 187.0], [15.2, 191.0], [15.3, 191.0], [15.4, 194.0], [15.5, 194.0], [15.6, 201.0], [15.7, 203.0], [15.8, 203.0], [15.9, 203.0], [16.0, 203.0], [16.1, 203.0], [16.2, 204.0], [16.3, 204.0], [16.4, 205.0], [16.5, 207.0], [16.6, 208.0], [16.7, 208.0], [16.8, 211.0], [16.9, 212.0], [17.0, 212.0], [17.1, 309.0], [17.2, 618.0], [17.3, 763.0], [17.4, 763.0], [17.5, 845.0], [17.6, 882.0], [17.7, 929.0], [17.8, 929.0], [17.9, 943.0], [18.0, 964.0], [18.1, 971.0], [18.2, 971.0], [18.3, 1018.0], [18.4, 1052.0], [18.5, 1151.0], [18.6, 1151.0], [18.7, 1247.0], [18.8, 1281.0], [18.9, 1281.0], [19.0, 1281.0], [19.1, 1305.0], [19.2, 1413.0], [19.3, 1993.0], [19.4, 1993.0], [19.5, 2016.0], [19.6, 2137.0], [19.7, 2137.0], [19.8, 2922.0], [19.9, 3074.0], [20.0, 3237.0], [20.1, 3237.0], [20.2, 3568.0], [20.3, 3641.0], [20.4, 3836.0], [20.5, 3836.0], [20.6, 3977.0], [20.7, 4827.0], [20.8, 5020.0], [20.9, 5020.0], [21.0, 5029.0], [21.1, 5064.0], [21.2, 5071.0], [21.3, 5071.0], [21.4, 5073.0], [21.5, 5133.0], [21.6, 5159.0], [21.7, 5159.0], [21.8, 5177.0], [21.9, 5180.0], [22.0, 5200.0], [22.1, 5200.0], [22.2, 5217.0], [22.3, 5217.0], [22.4, 5217.0], [22.5, 5222.0], [22.6, 5223.0], [22.7, 5247.0], [22.8, 5247.0], [22.9, 5250.0], [23.0, 5261.0], [23.1, 5265.0], [23.2, 5265.0], [23.3, 5267.0], [23.4, 5282.0], [23.5, 5287.0], [23.6, 5287.0], [23.7, 5298.0], [23.8, 5300.0], [23.9, 5303.0], [24.0, 5303.0], [24.1, 5306.0], [24.2, 5325.0], [24.3, 5404.0], [24.4, 5404.0], [24.5, 5530.0], [24.6, 5540.0], [24.7, 5560.0], [24.8, 5560.0], [24.9, 5611.0], [25.0, 5652.0], [25.1, 5652.0], [25.2, 5695.0], [25.3, 5769.0], [25.4, 5854.0], [25.5, 5854.0], [25.6, 5870.0], [25.7, 5884.0], [25.8, 5912.0], [25.9, 5912.0], [26.0, 5932.0], [26.1, 5954.0], [26.2, 5956.0], [26.3, 5956.0], [26.4, 5971.0], [26.5, 6121.0], [26.6, 6143.0], [26.7, 6143.0], [26.8, 6155.0], [26.9, 6225.0], [27.0, 6260.0], [27.1, 6260.0], [27.2, 6269.0], [27.3, 6280.0], [27.4, 6325.0], [27.5, 6325.0], [27.6, 6445.0], [27.7, 6508.0], [27.8, 6508.0], [27.9, 6536.0], [28.0, 6552.0], [28.1, 6562.0], [28.2, 6562.0], [28.3, 6566.0], [28.4, 6586.0], [28.5, 6592.0], [28.6, 6592.0], [28.7, 6592.0], [28.8, 6681.0], [28.9, 6800.0], [29.0, 6800.0], [29.1, 6895.0], [29.2, 6923.0], [29.3, 6930.0], [29.4, 6930.0], [29.5, 7046.0], [29.6, 7052.0], [29.7, 7053.0], [29.8, 7053.0], [29.9, 7067.0], [30.0, 7187.0], [30.1, 7212.0], [30.2, 7212.0], [30.3, 7216.0], [30.4, 7222.0], [30.5, 7243.0], [30.6, 7243.0], [30.7, 7347.0], [30.8, 7489.0], [30.9, 7489.0], [31.0, 7520.0], [31.1, 7559.0], [31.2, 7599.0], [31.3, 7599.0], [31.4, 7776.0], [31.5, 7888.0], [31.6, 7898.0], [31.7, 7898.0], [31.8, 7925.0], [31.9, 7981.0], [32.0, 8014.0], [32.1, 8014.0], [32.2, 8039.0], [32.3, 8073.0], [32.4, 8124.0], [32.5, 8124.0], [32.6, 8234.0], [32.7, 8288.0], [32.8, 8291.0], [32.9, 8291.0], [33.0, 8382.0], [33.1, 8681.0], [33.2, 8740.0], [33.3, 8740.0], [33.4, 8849.0], [33.5, 8851.0], [33.6, 8851.0], [33.7, 8969.0], [33.8, 8978.0], [33.9, 9114.0], [34.0, 9114.0], [34.1, 9124.0], [34.2, 9185.0], [34.3, 9372.0], [34.4, 9372.0], [34.5, 9473.0], [34.6, 9479.0], [34.7, 9484.0], [34.8, 9484.0], [34.9, 9511.0], [35.0, 9537.0], [35.1, 9565.0], [35.2, 9565.0], [35.3, 9577.0], [35.4, 9642.0], [35.5, 9650.0], [35.6, 9650.0], [35.7, 9764.0], [35.8, 9846.0], [35.9, 9944.0], [36.0, 9944.0], [36.1, 9981.0], [36.2, 10033.0], [36.3, 10033.0], [36.4, 10198.0], [36.5, 10293.0], [36.6, 10316.0], [36.7, 10316.0], [36.8, 10355.0], [36.9, 10363.0], [37.0, 10388.0], [37.1, 10388.0], [37.2, 10408.0], [37.3, 10450.0], [37.4, 10474.0], [37.5, 10474.0], [37.6, 10629.0], [37.7, 10655.0], [37.8, 10689.0], [37.9, 10689.0], [38.0, 10717.0], [38.1, 10725.0], [38.2, 10827.0], [38.3, 10827.0], [38.4, 10861.0], [38.5, 11152.0], [38.6, 11291.0], [38.7, 11291.0], [38.8, 11391.0], [38.9, 11441.0], [39.0, 11441.0], [39.1, 11469.0], [39.2, 11496.0], [39.3, 11530.0], [39.4, 11530.0], [39.5, 11588.0], [39.6, 11596.0], [39.7, 11622.0], [39.8, 11622.0], [39.9, 11647.0], [40.0, 11695.0], [40.1, 11723.0], [40.2, 11723.0], [40.3, 11822.0], [40.4, 11826.0], [40.5, 12024.0], [40.6, 12024.0], [40.7, 12084.0], [40.8, 12127.0], [40.9, 12202.0], [41.0, 12202.0], [41.1, 12206.0], [41.2, 12247.0], [41.3, 12277.0], [41.4, 12277.0], [41.5, 12524.0], [41.6, 12570.0], [41.7, 12570.0], [41.8, 12645.0], [41.9, 12647.0], [42.0, 12668.0], [42.1, 12668.0], [42.2, 12861.0], [42.3, 12898.0], [42.4, 12913.0], [42.5, 12913.0], [42.6, 12967.0], [42.7, 12976.0], [42.8, 13050.0], [42.9, 13050.0], [43.0, 13112.0], [43.1, 13158.0], [43.2, 13163.0], [43.3, 13163.0], [43.4, 13215.0], [43.5, 13216.0], [43.6, 13279.0], [43.7, 13279.0], [43.8, 13378.0], [43.9, 13520.0], [44.0, 13563.0], [44.1, 13563.0], [44.2, 13608.0], [44.3, 13643.0], [44.4, 13674.0], [44.5, 13674.0], [44.6, 13714.0], [44.7, 13746.0], [44.8, 13746.0], [44.9, 13781.0], [45.0, 13842.0], [45.1, 13886.0], [45.2, 13886.0], [45.3, 13944.0], [45.4, 13976.0], [45.5, 13996.0], [45.6, 13996.0], [45.7, 14234.0], [45.8, 14240.0], [45.9, 14247.0], [46.0, 14247.0], [46.1, 14316.0], [46.2, 14466.0], [46.3, 14486.0], [46.4, 14486.0], [46.5, 14495.0], [46.6, 14548.0], [46.7, 14612.0], [46.8, 14612.0], [46.9, 14614.0], [47.0, 14789.0], [47.1, 14850.0], [47.2, 14850.0], [47.3, 15017.0], [47.4, 15059.0], [47.5, 15059.0], [47.6, 15097.0], [47.7, 15148.0], [47.8, 15522.0], [47.9, 15522.0], [48.0, 15626.0], [48.1, 15658.0], [48.2, 15681.0], [48.3, 15681.0], [48.4, 15728.0], [48.5, 15875.0], [48.6, 15914.0], [48.7, 15914.0], [48.8, 15959.0], [48.9, 15989.0], [49.0, 16049.0], [49.1, 16049.0], [49.2, 16112.0], [49.3, 16375.0], [49.4, 16422.0], [49.5, 16422.0], [49.6, 16444.0], [49.7, 16464.0], [49.8, 16555.0], [49.9, 16555.0], [50.0, 16561.0], [50.1, 16565.0], [50.2, 16565.0], [50.3, 16565.0], [50.4, 16698.0], [50.5, 16865.0], [50.6, 16865.0], [50.7, 16871.0], [50.8, 16875.0], [50.9, 16900.0], [51.0, 16900.0], [51.1, 17137.0], [51.2, 17152.0], [51.3, 17209.0], [51.4, 17209.0], [51.5, 17368.0], [51.6, 17372.0], [51.7, 17378.0], [51.8, 17378.0], [51.9, 17407.0], [52.0, 17487.0], [52.1, 17493.0], [52.2, 17493.0], [52.3, 17547.0], [52.4, 17683.0], [52.5, 17763.0], [52.6, 17763.0], [52.7, 17763.0], [52.8, 17766.0], [52.9, 17766.0], [53.0, 17811.0], [53.1, 17823.0], [53.2, 17837.0], [53.3, 17837.0], [53.4, 17895.0], [53.5, 17939.0], [53.6, 17972.0], [53.7, 17972.0], [53.8, 18054.0], [53.9, 18096.0], [54.0, 18110.0], [54.1, 18110.0], [54.2, 18119.0], [54.3, 18121.0], [54.4, 18176.0], [54.5, 18176.0], [54.6, 18225.0], [54.7, 18302.0], [54.8, 18333.0], [54.9, 18333.0], [55.0, 18583.0], [55.1, 18611.0], [55.2, 18626.0], [55.3, 18626.0], [55.4, 18627.0], [55.5, 18627.0], [55.6, 18627.0], [55.7, 18660.0], [55.8, 18668.0], [55.9, 18686.0], [56.0, 18686.0], [56.1, 18707.0], [56.2, 18799.0], [56.3, 19043.0], [56.4, 19043.0], [56.5, 19150.0], [56.6, 19151.0], [56.7, 19223.0], [56.8, 19223.0], [56.9, 19264.0], [57.0, 19323.0], [57.1, 19375.0], [57.2, 19375.0], [57.3, 19390.0], [57.4, 19489.0], [57.5, 19514.0], [57.6, 19514.0], [57.7, 19669.0], [57.8, 19709.0], [57.9, 19777.0], [58.0, 19777.0], [58.1, 19807.0], [58.2, 19885.0], [58.3, 19969.0], [58.4, 19969.0], [58.5, 19973.0], [58.6, 20038.0], [58.7, 20038.0], [58.8, 20071.0], [58.9, 20076.0], [59.0, 20213.0], [59.1, 20213.0], [59.2, 20272.0], [59.3, 20277.0], [59.4, 20389.0], [59.5, 20389.0], [59.6, 20391.0], [59.7, 20433.0], [59.8, 20465.0], [59.9, 20465.0], [60.0, 20493.0], [60.1, 20508.0], [60.2, 20567.0], [60.3, 20567.0], [60.4, 20578.0], [60.5, 20642.0], [60.6, 20744.0], [60.7, 20744.0], [60.8, 20775.0], [60.9, 20777.0], [61.0, 20802.0], [61.1, 20802.0], [61.2, 20826.0], [61.3, 20914.0], [61.4, 20914.0], [61.5, 21028.0], [61.6, 21171.0], [61.7, 21194.0], [61.8, 21194.0], [61.9, 21195.0], [62.0, 21222.0], [62.1, 21298.0], [62.2, 21298.0], [62.3, 21477.0], [62.4, 21605.0], [62.5, 21617.0], [62.6, 21617.0], [62.7, 21622.0], [62.8, 21645.0], [62.9, 21720.0], [63.0, 21720.0], [63.1, 22369.0], [63.2, 22418.0], [63.3, 22676.0], [63.4, 22676.0], [63.5, 23005.0], [63.6, 23019.0], [63.7, 23192.0], [63.8, 23192.0], [63.9, 23260.0], [64.0, 23293.0], [64.1, 23293.0], [64.2, 23306.0], [64.3, 23329.0], [64.4, 23514.0], [64.5, 23514.0], [64.6, 23696.0], [64.7, 23699.0], [64.8, 23773.0], [64.9, 23773.0], [65.0, 23833.0], [65.1, 23878.0], [65.2, 23959.0], [65.3, 23959.0], [65.4, 24298.0], [65.5, 24573.0], [65.6, 24579.0], [65.7, 24579.0], [65.8, 24587.0], [65.9, 24689.0], [66.0, 25137.0], [66.1, 25137.0], [66.2, 25231.0], [66.3, 25292.0], [66.4, 25659.0], [66.5, 25659.0], [66.6, 25707.0], [66.7, 25740.0], [66.8, 25740.0], [66.9, 25757.0], [67.0, 25772.0], [67.1, 25853.0], [67.2, 25853.0], [67.3, 26171.0], [67.4, 26531.0], [67.5, 26540.0], [67.6, 26540.0], [67.7, 26552.0], [67.8, 26603.0], [67.9, 27223.0], [68.0, 27223.0], [68.1, 27270.0], [68.2, 27418.0], [68.3, 27472.0], [68.4, 27472.0], [68.5, 27889.0], [68.6, 27915.0], [68.7, 27963.0], [68.8, 27963.0], [68.9, 28018.0], [69.0, 28031.0], [69.1, 28047.0], [69.2, 28047.0], [69.3, 28132.0], [69.4, 28227.0], [69.5, 28227.0], [69.6, 28270.0], [69.7, 28281.0], [69.8, 28384.0], [69.9, 28384.0], [70.0, 28540.0], [70.1, 28602.0], [70.2, 28751.0], [70.3, 28751.0], [70.4, 28883.0], [70.5, 29166.0], [70.6, 29191.0], [70.7, 29191.0], [70.8, 29240.0], [70.9, 29256.0], [71.0, 29383.0], [71.1, 29383.0], [71.2, 29414.0], [71.3, 29762.0], [71.4, 29831.0], [71.5, 29831.0], [71.6, 30267.0], [71.7, 30318.0], [71.8, 30328.0], [71.9, 30328.0], [72.0, 30483.0], [72.1, 30564.0], [72.2, 30625.0], [72.3, 30625.0], [72.4, 30674.0], [72.5, 30853.0], [72.6, 30853.0], [72.7, 30891.0], [72.8, 31484.0], [72.9, 31602.0], [73.0, 31602.0], [73.1, 31721.0], [73.2, 31819.0], [73.3, 32065.0], [73.4, 32065.0], [73.5, 32165.0], [73.6, 32249.0], [73.7, 32300.0], [73.8, 32300.0], [73.9, 32308.0], [74.0, 32330.0], [74.1, 32406.0], [74.2, 32406.0], [74.3, 32503.0], [74.4, 32618.0], [74.5, 32768.0], [74.6, 32768.0], [74.7, 32858.0], [74.8, 33434.0], [74.9, 33472.0], [75.0, 33472.0], [75.1, 33512.0], [75.2, 33661.0], [75.3, 33661.0], [75.4, 33700.0], [75.5, 33800.0], [75.6, 33811.0], [75.7, 33811.0], [75.8, 34332.0], [75.9, 34367.0], [76.0, 34563.0], [76.1, 34563.0], [76.2, 34705.0], [76.3, 34814.0], [76.4, 34822.0], [76.5, 34822.0], [76.6, 35088.0], [76.7, 35205.0], [76.8, 35262.0], [76.9, 35262.0], [77.0, 35331.0], [77.1, 35428.0], [77.2, 35560.0], [77.3, 35560.0], [77.4, 35578.0], [77.5, 35647.0], [77.6, 35893.0], [77.7, 35893.0], [77.8, 35966.0], [77.9, 36250.0], [78.0, 36250.0], [78.1, 37218.0], [78.2, 37417.0], [78.3, 37596.0], [78.4, 37596.0], [78.5, 37677.0], [78.6, 37987.0], [78.7, 38033.0], [78.8, 38033.0], [78.9, 38671.0], [79.0, 38721.0], [79.1, 38817.0], [79.2, 38817.0], [79.3, 39278.0], [79.4, 39507.0], [79.5, 39749.0], [79.6, 39749.0], [79.7, 39837.0], [79.8, 39900.0], [79.9, 39963.0], [80.0, 39963.0], [80.1, 40197.0], [80.2, 40252.0], [80.3, 40446.0], [80.4, 40446.0], [80.5, 40455.0], [80.6, 40457.0], [80.7, 40457.0], [80.8, 40461.0], [80.9, 40668.0], [81.0, 40707.0], [81.1, 40707.0], [81.2, 40855.0], [81.3, 40857.0], [81.4, 40876.0], [81.5, 40876.0], [81.6, 41177.0], [81.7, 41232.0], [81.8, 41397.0], [81.9, 41397.0], [82.0, 41726.0], [82.1, 41765.0], [82.2, 41830.0], [82.3, 41830.0], [82.4, 41848.0], [82.5, 41895.0], [82.6, 41948.0], [82.7, 41948.0], [82.8, 42107.0], [82.9, 42133.0], [83.0, 42167.0], [83.1, 42167.0], [83.2, 42181.0], [83.3, 42251.0], [83.4, 42251.0], [83.5, 42281.0], [83.6, 42285.0], [83.7, 42455.0], [83.8, 42455.0], [83.9, 42465.0], [84.0, 42731.0], [84.1, 42906.0], [84.2, 42906.0], [84.3, 43227.0], [84.4, 43275.0], [84.5, 43466.0], [84.6, 43466.0], [84.7, 43543.0], [84.8, 43805.0], [84.9, 43854.0], [85.0, 43854.0], [85.1, 44004.0], [85.2, 44042.0], [85.3, 44146.0], [85.4, 44146.0], [85.5, 44215.0], [85.6, 44556.0], [85.7, 44590.0], [85.8, 44590.0], [85.9, 44590.0], [86.0, 44626.0], [86.1, 45096.0], [86.2, 45096.0], [86.3, 45196.0], [86.4, 45313.0], [86.5, 45313.0], [86.6, 45319.0], [86.7, 45389.0], [86.8, 45394.0], [86.9, 45394.0], [87.0, 45555.0], [87.1, 45573.0], [87.2, 45586.0], [87.3, 45586.0], [87.4, 45651.0], [87.5, 45735.0], [87.6, 45789.0], [87.7, 45789.0], [87.8, 45864.0], [87.9, 46226.0], [88.0, 46418.0], [88.1, 46418.0], [88.2, 47064.0], [88.3, 47162.0], [88.4, 47259.0], [88.5, 47259.0], [88.6, 47464.0], [88.7, 47658.0], [88.8, 47957.0], [88.9, 47957.0], [89.0, 49034.0], [89.1, 50155.0], [89.2, 50155.0], [89.3, 50761.0], [89.4, 50810.0], [89.5, 51367.0], [89.6, 51367.0], [89.7, 51587.0], [89.8, 52323.0], [89.9, 52594.0], [90.0, 52594.0], [90.1, 52691.0], [90.2, 54137.0], [90.3, 54598.0], [90.4, 54598.0], [90.5, 54921.0], [90.6, 55307.0], [90.7, 55703.0], [90.8, 55703.0], [90.9, 56655.0], [91.0, 56891.0], [91.1, 57499.0], [91.2, 57499.0], [91.3, 57690.0], [91.4, 58417.0], [91.5, 58854.0], [91.6, 58854.0], [91.7, 59373.0], [91.8, 59621.0], [91.9, 59621.0], [92.0, 60069.0], [92.1, 60073.0], [92.2, 60073.0], [92.3, 60073.0], [92.4, 60076.0], [92.5, 60076.0], [92.6, 60079.0], [92.7, 60079.0], [92.8, 60079.0], [92.9, 60080.0], [93.0, 60082.0], [93.1, 60082.0], [93.2, 60082.0], [93.3, 60083.0], [93.4, 60085.0], [93.5, 60085.0], [93.6, 60086.0], [93.7, 60087.0], [93.8, 60094.0], [93.9, 60094.0], [94.0, 60096.0], [94.1, 60098.0], [94.2, 60099.0], [94.3, 60099.0], [94.4, 60100.0], [94.5, 60100.0], [94.6, 60100.0], [94.7, 60104.0], [94.8, 60105.0], [94.9, 60106.0], [95.0, 60106.0], [95.1, 60106.0], [95.2, 60110.0], [95.3, 60110.0], [95.4, 60110.0], [95.5, 60114.0], [95.6, 60118.0], [95.7, 60126.0], [95.8, 60126.0], [95.9, 60128.0], [96.0, 60129.0], [96.1, 60131.0], [96.2, 60131.0], [96.3, 60134.0], [96.4, 60135.0], [96.5, 60135.0], [96.6, 60135.0], [96.7, 60138.0], [96.8, 60143.0], [96.9, 60154.0], [97.0, 60154.0], [97.1, 60155.0], [97.2, 60156.0], [97.3, 60156.0], [97.4, 60157.0], [97.5, 60161.0], [97.6, 60163.0], [97.7, 60163.0], [97.8, 60167.0], [97.9, 60169.0], [98.0, 60173.0], [98.1, 60173.0], [98.2, 60177.0], [98.3, 60177.0], [98.4, 60181.0], [98.5, 60181.0], [98.6, 60182.0], [98.7, 60183.0], [98.8, 60187.0], [98.9, 60187.0], [99.0, 60219.0], [99.1, 60225.0], [99.2, 60271.0], [99.3, 60271.0], [99.4, 60273.0], [99.5, 60291.0], [99.6, 60292.0], [99.7, 60292.0], [99.8, 60331.0], [99.9, 60396.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 205.0], [0.1, 205.0], [0.2, 205.0], [0.3, 205.0], [0.4, 205.0], [0.5, 205.0], [0.6, 205.0], [0.7, 206.0], [0.8, 206.0], [0.9, 206.0], [1.0, 206.0], [1.1, 206.0], [1.2, 206.0], [1.3, 206.0], [1.4, 206.0], [1.5, 206.0], [1.6, 206.0], [1.7, 206.0], [1.8, 206.0], [1.9, 207.0], [2.0, 207.0], [2.1, 207.0], [2.2, 207.0], [2.3, 207.0], [2.4, 207.0], [2.5, 207.0], [2.6, 207.0], [2.7, 207.0], [2.8, 207.0], [2.9, 207.0], [3.0, 207.0], [3.1, 207.0], [3.2, 207.0], [3.3, 208.0], [3.4, 208.0], [3.5, 208.0], [3.6, 208.0], [3.7, 208.0], [3.8, 208.0], [3.9, 208.0], [4.0, 208.0], [4.1, 208.0], [4.2, 209.0], [4.3, 209.0], [4.4, 209.0], [4.5, 209.0], [4.6, 209.0], [4.7, 209.0], [4.8, 209.0], [4.9, 209.0], [5.0, 209.0], [5.1, 209.0], [5.2, 209.0], [5.3, 209.0], [5.4, 209.0], [5.5, 209.0], [5.6, 209.0], [5.7, 209.0], [5.8, 209.0], [5.9, 209.0], [6.0, 209.0], [6.1, 210.0], [6.2, 210.0], [6.3, 210.0], [6.4, 210.0], [6.5, 210.0], [6.6, 210.0], [6.7, 210.0], [6.8, 210.0], [6.9, 210.0], [7.0, 210.0], [7.1, 210.0], [7.2, 210.0], [7.3, 210.0], [7.4, 210.0], [7.5, 210.0], [7.6, 211.0], [7.7, 211.0], [7.8, 211.0], [7.9, 211.0], [8.0, 211.0], [8.1, 211.0], [8.2, 211.0], [8.3, 211.0], [8.4, 211.0], [8.5, 211.0], [8.6, 212.0], [8.7, 212.0], [8.8, 212.0], [8.9, 212.0], [9.0, 212.0], [9.1, 212.0], [9.2, 212.0], [9.3, 212.0], [9.4, 212.0], [9.5, 212.0], [9.6, 212.0], [9.7, 212.0], [9.8, 213.0], [9.9, 213.0], [10.0, 213.0], [10.1, 213.0], [10.2, 213.0], [10.3, 213.0], [10.4, 213.0], [10.5, 213.0], [10.6, 213.0], [10.7, 213.0], [10.8, 214.0], [10.9, 214.0], [11.0, 214.0], [11.1, 214.0], [11.2, 214.0], [11.3, 214.0], [11.4, 214.0], [11.5, 214.0], [11.6, 214.0], [11.7, 214.0], [11.8, 214.0], [11.9, 215.0], [12.0, 215.0], [12.1, 215.0], [12.2, 215.0], [12.3, 215.0], [12.4, 215.0], [12.5, 215.0], [12.6, 215.0], [12.7, 216.0], [12.8, 216.0], [12.9, 217.0], [13.0, 217.0], [13.1, 217.0], [13.2, 218.0], [13.3, 218.0], [13.4, 218.0], [13.5, 219.0], [13.6, 219.0], [13.7, 220.0], [13.8, 220.0], [13.9, 220.0], [14.0, 220.0], [14.1, 220.0], [14.2, 220.0], [14.3, 221.0], [14.4, 221.0], [14.5, 221.0], [14.6, 221.0], [14.7, 221.0], [14.8, 221.0], [14.9, 221.0], [15.0, 221.0], [15.1, 222.0], [15.2, 222.0], [15.3, 222.0], [15.4, 222.0], [15.5, 222.0], [15.6, 222.0], [15.7, 222.0], [15.8, 222.0], [15.9, 223.0], [16.0, 223.0], [16.1, 223.0], [16.2, 223.0], [16.3, 224.0], [16.4, 224.0], [16.5, 224.0], [16.6, 225.0], [16.7, 225.0], [16.8, 225.0], [16.9, 225.0], [17.0, 225.0], [17.1, 225.0], [17.2, 226.0], [17.3, 226.0], [17.4, 226.0], [17.5, 226.0], [17.6, 227.0], [17.7, 227.0], [17.8, 227.0], [17.9, 227.0], [18.0, 228.0], [18.1, 228.0], [18.2, 228.0], [18.3, 228.0], [18.4, 229.0], [18.5, 229.0], [18.6, 230.0], [18.7, 230.0], [18.8, 231.0], [18.9, 231.0], [19.0, 231.0], [19.1, 231.0], [19.2, 232.0], [19.3, 232.0], [19.4, 232.0], [19.5, 232.0], [19.6, 232.0], [19.7, 232.0], [19.8, 233.0], [19.9, 234.0], [20.0, 235.0], [20.1, 235.0], [20.2, 235.0], [20.3, 236.0], [20.4, 236.0], [20.5, 236.0], [20.6, 236.0], [20.7, 237.0], [20.8, 237.0], [20.9, 238.0], [21.0, 239.0], [21.1, 239.0], [21.2, 239.0], [21.3, 239.0], [21.4, 243.0], [21.5, 244.0], [21.6, 244.0], [21.7, 246.0], [21.8, 247.0], [21.9, 247.0], [22.0, 247.0], [22.1, 248.0], [22.2, 248.0], [22.3, 248.0], [22.4, 248.0], [22.5, 249.0], [22.6, 249.0], [22.7, 249.0], [22.8, 249.0], [22.9, 250.0], [23.0, 252.0], [23.1, 255.0], [23.2, 255.0], [23.3, 258.0], [23.4, 258.0], [23.5, 259.0], [23.6, 259.0], [23.7, 260.0], [23.8, 260.0], [23.9, 261.0], [24.0, 261.0], [24.1, 262.0], [24.2, 263.0], [24.3, 264.0], [24.4, 264.0], [24.5, 265.0], [24.6, 267.0], [24.7, 268.0], [24.8, 268.0], [24.9, 268.0], [25.0, 270.0], [25.1, 270.0], [25.2, 271.0], [25.3, 274.0], [25.4, 275.0], [25.5, 275.0], [25.6, 276.0], [25.7, 278.0], [25.8, 280.0], [25.9, 280.0], [26.0, 282.0], [26.1, 284.0], [26.2, 284.0], [26.3, 284.0], [26.4, 284.0], [26.5, 284.0], [26.6, 285.0], [26.7, 285.0], [26.8, 287.0], [26.9, 287.0], [27.0, 288.0], [27.1, 288.0], [27.2, 289.0], [27.3, 291.0], [27.4, 292.0], [27.5, 292.0], [27.6, 292.0], [27.7, 294.0], [27.8, 294.0], [27.9, 294.0], [28.0, 295.0], [28.1, 297.0], [28.2, 297.0], [28.3, 297.0], [28.4, 297.0], [28.5, 298.0], [28.6, 298.0], [28.7, 298.0], [28.8, 298.0], [28.9, 298.0], [29.0, 299.0], [29.1, 299.0], [29.2, 299.0], [29.3, 300.0], [29.4, 300.0], [29.5, 300.0], [29.6, 301.0], [29.7, 301.0], [29.8, 301.0], [29.9, 301.0], [30.0, 302.0], [30.1, 302.0], [30.2, 302.0], [30.3, 302.0], [30.4, 303.0], [30.5, 303.0], [30.6, 303.0], [30.7, 303.0], [30.8, 303.0], [30.9, 303.0], [31.0, 303.0], [31.1, 303.0], [31.2, 304.0], [31.3, 304.0], [31.4, 304.0], [31.5, 304.0], [31.6, 304.0], [31.7, 304.0], [31.8, 304.0], [31.9, 304.0], [32.0, 304.0], [32.1, 304.0], [32.2, 304.0], [32.3, 304.0], [32.4, 304.0], [32.5, 304.0], [32.6, 304.0], [32.7, 305.0], [32.8, 305.0], [32.9, 305.0], [33.0, 305.0], [33.1, 305.0], [33.2, 305.0], [33.3, 305.0], [33.4, 305.0], [33.5, 305.0], [33.6, 305.0], [33.7, 305.0], [33.8, 305.0], [33.9, 305.0], [34.0, 305.0], [34.1, 305.0], [34.2, 305.0], [34.3, 305.0], [34.4, 305.0], [34.5, 305.0], [34.6, 305.0], [34.7, 305.0], [34.8, 305.0], [34.9, 305.0], [35.0, 305.0], [35.1, 305.0], [35.2, 305.0], [35.3, 305.0], [35.4, 305.0], [35.5, 305.0], [35.6, 305.0], [35.7, 305.0], [35.8, 305.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 305.0], [36.3, 306.0], [36.4, 306.0], [36.5, 306.0], [36.6, 306.0], [36.7, 306.0], [36.8, 306.0], [36.9, 306.0], [37.0, 306.0], [37.1, 306.0], [37.2, 306.0], [37.3, 306.0], [37.4, 306.0], [37.5, 306.0], [37.6, 306.0], [37.7, 306.0], [37.8, 306.0], [37.9, 306.0], [38.0, 306.0], [38.1, 306.0], [38.2, 306.0], [38.3, 306.0], [38.4, 306.0], [38.5, 306.0], [38.6, 306.0], [38.7, 306.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 306.0], [39.2, 306.0], [39.3, 306.0], [39.4, 306.0], [39.5, 307.0], [39.6, 307.0], [39.7, 307.0], [39.8, 307.0], [39.9, 307.0], [40.0, 307.0], [40.1, 307.0], [40.2, 307.0], [40.3, 307.0], [40.4, 307.0], [40.5, 307.0], [40.6, 307.0], [40.7, 307.0], [40.8, 307.0], [40.9, 307.0], [41.0, 308.0], [41.1, 308.0], [41.2, 308.0], [41.3, 308.0], [41.4, 309.0], [41.5, 309.0], [41.6, 309.0], [41.7, 309.0], [41.8, 309.0], [41.9, 309.0], [42.0, 309.0], [42.1, 310.0], [42.2, 310.0], [42.3, 310.0], [42.4, 310.0], [42.5, 310.0], [42.6, 310.0], [42.7, 311.0], [42.8, 311.0], [42.9, 311.0], [43.0, 311.0], [43.1, 311.0], [43.2, 311.0], [43.3, 311.0], [43.4, 311.0], [43.5, 311.0], [43.6, 311.0], [43.7, 312.0], [43.8, 313.0], [43.9, 313.0], [44.0, 313.0], [44.1, 313.0], [44.2, 313.0], [44.3, 313.0], [44.4, 313.0], [44.5, 313.0], [44.6, 313.0], [44.7, 313.0], [44.8, 313.0], [44.9, 314.0], [45.0, 314.0], [45.1, 314.0], [45.2, 314.0], [45.3, 314.0], [45.4, 314.0], [45.5, 314.0], [45.6, 315.0], [45.7, 315.0], [45.8, 315.0], [45.9, 315.0], [46.0, 316.0], [46.1, 316.0], [46.2, 318.0], [46.3, 318.0], [46.4, 319.0], [46.5, 319.0], [46.6, 319.0], [46.7, 319.0], [46.8, 320.0], [46.9, 320.0], [47.0, 321.0], [47.1, 321.0], [47.2, 321.0], [47.3, 321.0], [47.4, 321.0], [47.5, 321.0], [47.6, 321.0], [47.7, 321.0], [47.8, 321.0], [47.9, 321.0], [48.0, 322.0], [48.1, 322.0], [48.2, 323.0], [48.3, 323.0], [48.4, 324.0], [48.5, 324.0], [48.6, 324.0], [48.7, 324.0], [48.8, 324.0], [48.9, 324.0], [49.0, 325.0], [49.1, 325.0], [49.2, 326.0], [49.3, 327.0], [49.4, 327.0], [49.5, 327.0], [49.6, 327.0], [49.7, 328.0], [49.8, 328.0], [49.9, 328.0], [50.0, 329.0], [50.1, 330.0], [50.2, 330.0], [50.3, 331.0], [50.4, 331.0], [50.5, 332.0], [50.6, 332.0], [50.7, 332.0], [50.8, 332.0], [50.9, 332.0], [51.0, 332.0], [51.1, 333.0], [51.2, 334.0], [51.3, 334.0], [51.4, 334.0], [51.5, 335.0], [51.6, 337.0], [51.7, 338.0], [51.8, 338.0], [51.9, 338.0], [52.0, 338.0], [52.1, 339.0], [52.2, 339.0], [52.3, 339.0], [52.4, 339.0], [52.5, 339.0], [52.6, 339.0], [52.7, 340.0], [52.8, 340.0], [52.9, 340.0], [53.0, 340.0], [53.1, 340.0], [53.2, 341.0], [53.3, 342.0], [53.4, 342.0], [53.5, 343.0], [53.6, 344.0], [53.7, 344.0], [53.8, 344.0], [53.9, 345.0], [54.0, 348.0], [54.1, 349.0], [54.2, 349.0], [54.3, 349.0], [54.4, 349.0], [54.5, 349.0], [54.6, 349.0], [54.7, 349.0], [54.8, 350.0], [54.9, 352.0], [55.0, 352.0], [55.1, 352.0], [55.2, 352.0], [55.3, 352.0], [55.4, 354.0], [55.5, 355.0], [55.6, 357.0], [55.7, 357.0], [55.8, 358.0], [55.9, 360.0], [56.0, 361.0], [56.1, 361.0], [56.2, 361.0], [56.3, 361.0], [56.4, 361.0], [56.5, 361.0], [56.6, 362.0], [56.7, 364.0], [56.8, 365.0], [56.9, 365.0], [57.0, 365.0], [57.1, 366.0], [57.2, 366.0], [57.3, 366.0], [57.4, 366.0], [57.5, 371.0], [57.6, 372.0], [57.7, 372.0], [57.8, 373.0], [57.9, 373.0], [58.0, 374.0], [58.1, 374.0], [58.2, 374.0], [58.3, 375.0], [58.4, 376.0], [58.5, 376.0], [58.6, 376.0], [58.7, 376.0], [58.8, 377.0], [58.9, 377.0], [59.0, 378.0], [59.1, 380.0], [59.2, 381.0], [59.3, 381.0], [59.4, 382.0], [59.5, 383.0], [59.6, 384.0], [59.7, 384.0], [59.8, 384.0], [59.9, 385.0], [60.0, 385.0], [60.1, 385.0], [60.2, 386.0], [60.3, 386.0], [60.4, 386.0], [60.5, 388.0], [60.6, 391.0], [60.7, 392.0], [60.8, 392.0], [60.9, 393.0], [61.0, 394.0], [61.1, 394.0], [61.2, 394.0], [61.3, 394.0], [61.4, 396.0], [61.5, 396.0], [61.6, 396.0], [61.7, 397.0], [61.8, 397.0], [61.9, 397.0], [62.0, 397.0], [62.1, 397.0], [62.2, 397.0], [62.3, 397.0], [62.4, 397.0], [62.5, 398.0], [62.6, 398.0], [62.7, 399.0], [62.8, 399.0], [62.9, 399.0], [63.0, 399.0], [63.1, 399.0], [63.2, 399.0], [63.3, 399.0], [63.4, 400.0], [63.5, 400.0], [63.6, 400.0], [63.7, 401.0], [63.8, 401.0], [63.9, 401.0], [64.0, 401.0], [64.1, 401.0], [64.2, 401.0], [64.3, 402.0], [64.4, 402.0], [64.5, 402.0], [64.6, 402.0], [64.7, 402.0], [64.8, 402.0], [64.9, 402.0], [65.0, 402.0], [65.1, 402.0], [65.2, 402.0], [65.3, 402.0], [65.4, 403.0], [65.5, 403.0], [65.6, 403.0], [65.7, 403.0], [65.8, 404.0], [65.9, 404.0], [66.0, 404.0], [66.1, 404.0], [66.2, 404.0], [66.3, 404.0], [66.4, 404.0], [66.5, 404.0], [66.6, 404.0], [66.7, 404.0], [66.8, 404.0], [66.9, 404.0], [67.0, 404.0], [67.1, 404.0], [67.2, 404.0], [67.3, 404.0], [67.4, 404.0], [67.5, 404.0], [67.6, 404.0], [67.7, 404.0], [67.8, 404.0], [67.9, 404.0], [68.0, 404.0], [68.1, 405.0], [68.2, 405.0], [68.3, 405.0], [68.4, 405.0], [68.5, 405.0], [68.6, 405.0], [68.7, 405.0], [68.8, 405.0], [68.9, 405.0], [69.0, 406.0], [69.1, 406.0], [69.2, 406.0], [69.3, 406.0], [69.4, 406.0], [69.5, 406.0], [69.6, 406.0], [69.7, 406.0], [69.8, 406.0], [69.9, 406.0], [70.0, 406.0], [70.1, 406.0], [70.2, 406.0], [70.3, 406.0], [70.4, 406.0], [70.5, 406.0], [70.6, 406.0], [70.7, 407.0], [70.8, 407.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 407.0], [71.8, 407.0], [71.9, 407.0], [72.0, 407.0], [72.1, 407.0], [72.2, 407.0], [72.3, 407.0], [72.4, 407.0], [72.5, 407.0], [72.6, 407.0], [72.7, 407.0], [72.8, 407.0], [72.9, 407.0], [73.0, 407.0], [73.1, 407.0], [73.2, 407.0], [73.3, 407.0], [73.4, 407.0], [73.5, 407.0], [73.6, 407.0], [73.7, 407.0], [73.8, 407.0], [73.9, 407.0], [74.0, 407.0], [74.1, 407.0], [74.2, 407.0], [74.3, 407.0], [74.4, 407.0], [74.5, 407.0], [74.6, 407.0], [74.7, 407.0], [74.8, 407.0], [74.9, 407.0], [75.0, 407.0], [75.1, 407.0], [75.2, 407.0], [75.3, 407.0], [75.4, 407.0], [75.5, 407.0], [75.6, 407.0], [75.7, 407.0], [75.8, 407.0], [75.9, 407.0], [76.0, 407.0], [76.1, 407.0], [76.2, 407.0], [76.3, 407.0], [76.4, 407.0], [76.5, 407.0], [76.6, 407.0], [76.7, 407.0], [76.8, 408.0], [76.9, 408.0], [77.0, 408.0], [77.1, 408.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 408.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 408.0], [79.2, 408.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 408.0], [80.4, 408.0], [80.5, 408.0], [80.6, 408.0], [80.7, 408.0], [80.8, 408.0], [80.9, 408.0], [81.0, 408.0], [81.1, 408.0], [81.2, 408.0], [81.3, 408.0], [81.4, 408.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 408.0], [83.5, 408.0], [83.6, 408.0], [83.7, 408.0], [83.8, 408.0], [83.9, 408.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 408.0], [84.4, 408.0], [84.5, 408.0], [84.6, 408.0], [84.7, 408.0], [84.8, 408.0], [84.9, 408.0], [85.0, 408.0], [85.1, 408.0], [85.2, 408.0], [85.3, 408.0], [85.4, 408.0], [85.5, 408.0], [85.6, 408.0], [85.7, 408.0], [85.8, 408.0], [85.9, 408.0], [86.0, 408.0], [86.1, 408.0], [86.2, 408.0], [86.3, 408.0], [86.4, 408.0], [86.5, 408.0], [86.6, 408.0], [86.7, 408.0], [86.8, 408.0], [86.9, 408.0], [87.0, 408.0], [87.1, 408.0], [87.2, 408.0], [87.3, 408.0], [87.4, 408.0], [87.5, 408.0], [87.6, 408.0], [87.7, 408.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 409.0], [89.1, 409.0], [89.2, 409.0], [89.3, 409.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 409.0], [90.3, 409.0], [90.4, 409.0], [90.5, 409.0], [90.6, 409.0], [90.7, 409.0], [90.8, 409.0], [90.9, 409.0], [91.0, 409.0], [91.1, 409.0], [91.2, 409.0], [91.3, 409.0], [91.4, 409.0], [91.5, 409.0], [91.6, 409.0], [91.7, 409.0], [91.8, 409.0], [91.9, 409.0], [92.0, 409.0], [92.1, 409.0], [92.2, 409.0], [92.3, 409.0], [92.4, 409.0], [92.5, 409.0], [92.6, 409.0], [92.7, 409.0], [92.8, 409.0], [92.9, 409.0], [93.0, 409.0], [93.1, 409.0], [93.2, 409.0], [93.3, 409.0], [93.4, 409.0], [93.5, 409.0], [93.6, 409.0], [93.7, 410.0], [93.8, 410.0], [93.9, 410.0], [94.0, 410.0], [94.1, 410.0], [94.2, 410.0], [94.3, 410.0], [94.4, 410.0], [94.5, 410.0], [94.6, 410.0], [94.7, 410.0], [94.8, 410.0], [94.9, 410.0], [95.0, 410.0], [95.1, 410.0], [95.2, 410.0], [95.3, 410.0], [95.4, 410.0], [95.5, 410.0], [95.6, 410.0], [95.7, 410.0], [95.8, 410.0], [95.9, 410.0], [96.0, 410.0], [96.1, 410.0], [96.2, 411.0], [96.3, 411.0], [96.4, 411.0], [96.5, 411.0], [96.6, 411.0], [96.7, 411.0], [96.8, 411.0], [96.9, 411.0], [97.0, 411.0], [97.1, 412.0], [97.2, 412.0], [97.3, 412.0], [97.4, 412.0], [97.5, 412.0], [97.6, 413.0], [97.7, 413.0], [97.8, 413.0], [97.9, 414.0], [98.0, 414.0], [98.1, 414.0], [98.2, 414.0], [98.3, 415.0], [98.4, 420.0], [98.5, 420.0], [98.6, 420.0], [98.7, 486.0], [98.8, 497.0], [98.9, 497.0], [99.0, 498.0], [99.1, 508.0], [99.2, 510.0], [99.3, 510.0], [99.4, 510.0], [99.5, 511.0], [99.6, 511.0], [99.7, 511.0], [99.8, 511.0], [99.9, 518.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 266.0, "series": [{"data": [[33700.0, 1.0], [34100.0, 1.0], [35700.0, 3.0], [36100.0, 1.0], [36500.0, 1.0], [34900.0, 1.0], [38900.0, 1.0], [40100.0, 1.0], [40500.0, 1.0], [40900.0, 1.0], [41700.0, 1.0], [42500.0, 2.0], [42100.0, 1.0], [44900.0, 1.0], [43300.0, 1.0], [45700.0, 3.0], [46500.0, 1.0], [46100.0, 2.0], [50500.0, 1.0], [200.0, 1.0], [58900.0, 1.0], [60500.0, 17.0], [300.0, 48.0], [400.0, 35.0], [500.0, 44.0], [600.0, 2.0], [700.0, 1.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 4.0], [1500.0, 4.0], [1600.0, 1.0], [1800.0, 1.0], [2200.0, 1.0], [2400.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 1.0], [5100.0, 1.0], [5300.0, 2.0], [5600.0, 7.0], [5500.0, 7.0], [5400.0, 7.0], [5700.0, 6.0], [5900.0, 3.0], [6000.0, 2.0], [6100.0, 1.0], [6300.0, 3.0], [6200.0, 4.0], [6500.0, 2.0], [6600.0, 4.0], [6400.0, 2.0], [6800.0, 4.0], [6900.0, 4.0], [6700.0, 1.0], [7000.0, 2.0], [7400.0, 4.0], [7200.0, 2.0], [7300.0, 1.0], [7600.0, 3.0], [7500.0, 2.0], [7700.0, 2.0], [7800.0, 1.0], [7900.0, 1.0], [8000.0, 1.0], [8100.0, 2.0], [8300.0, 3.0], [8500.0, 1.0], [8600.0, 4.0], [8400.0, 1.0], [8200.0, 2.0], [9100.0, 4.0], [9000.0, 1.0], [9300.0, 1.0], [9700.0, 2.0], [9600.0, 1.0], [9500.0, 2.0], [9400.0, 1.0], [9900.0, 2.0], [9800.0, 4.0], [10100.0, 2.0], [10000.0, 1.0], [10300.0, 2.0], [10400.0, 2.0], [10500.0, 4.0], [10600.0, 2.0], [10700.0, 1.0], [11000.0, 5.0], [11100.0, 2.0], [10800.0, 1.0], [11400.0, 1.0], [11600.0, 1.0], [11700.0, 2.0], [12100.0, 3.0], [11900.0, 4.0], [12000.0, 3.0], [11800.0, 1.0], [12400.0, 4.0], [12600.0, 1.0], [12500.0, 2.0], [12800.0, 3.0], [13200.0, 4.0], [12900.0, 2.0], [13000.0, 1.0], [13300.0, 1.0], [13400.0, 1.0], [13500.0, 4.0], [13600.0, 2.0], [13900.0, 2.0], [14100.0, 3.0], [14000.0, 4.0], [14200.0, 3.0], [14300.0, 1.0], [14800.0, 2.0], [14600.0, 3.0], [14500.0, 1.0], [14700.0, 1.0], [14900.0, 3.0], [15300.0, 1.0], [15100.0, 2.0], [15400.0, 2.0], [15800.0, 1.0], [15500.0, 1.0], [16200.0, 2.0], [16300.0, 2.0], [16000.0, 2.0], [15900.0, 1.0], [16100.0, 1.0], [17200.0, 2.0], [16800.0, 3.0], [16600.0, 1.0], [16400.0, 1.0], [17400.0, 1.0], [18400.0, 2.0], [17800.0, 3.0], [18200.0, 2.0], [18000.0, 2.0], [17600.0, 2.0], [18600.0, 3.0], [19400.0, 2.0], [19000.0, 3.0], [18800.0, 1.0], [19800.0, 1.0], [20000.0, 2.0], [20200.0, 3.0], [20400.0, 2.0], [19600.0, 2.0], [21400.0, 2.0], [20800.0, 4.0], [21200.0, 2.0], [20600.0, 5.0], [21000.0, 2.0], [22000.0, 2.0], [21800.0, 1.0], [21600.0, 2.0], [23200.0, 1.0], [22600.0, 1.0], [23400.0, 2.0], [23000.0, 1.0], [24200.0, 3.0], [23600.0, 1.0], [25400.0, 1.0], [25000.0, 1.0], [24800.0, 2.0], [26200.0, 1.0], [25600.0, 1.0], [26000.0, 1.0], [27600.0, 1.0], [27400.0, 1.0], [26800.0, 1.0], [28400.0, 2.0], [28600.0, 2.0], [28200.0, 1.0], [27800.0, 2.0], [29200.0, 1.0], [29400.0, 1.0], [28800.0, 1.0], [30000.0, 1.0], [30600.0, 2.0], [30800.0, 2.0], [31600.0, 1.0], [31200.0, 2.0], [31800.0, 1.0], [32000.0, 1.0], [32400.0, 1.0], [33600.0, 1.0], [33200.0, 1.0], [34000.0, 2.0], [32800.0, 2.0], [35600.0, 2.0], [36000.0, 1.0], [35200.0, 1.0], [37600.0, 2.0], [38000.0, 1.0], [40000.0, 1.0], [40800.0, 1.0], [42400.0, 3.0], [42000.0, 2.0], [44400.0, 2.0], [43600.0, 2.0], [44000.0, 2.0], [46000.0, 1.0], [45600.0, 2.0], [47600.0, 1.0], [48000.0, 1.0], [52800.0, 2.0], [51600.0, 1.0], [57200.0, 1.0], [58000.0, 1.0], [60400.0, 19.0], [60000.0, 1.0], [33900.0, 2.0], [33100.0, 1.0], [35500.0, 1.0], [37900.0, 1.0], [38300.0, 1.0], [40300.0, 2.0], [40700.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [39100.0, 1.0], [41500.0, 1.0], [42700.0, 1.0], [41100.0, 2.0], [41900.0, 2.0], [42300.0, 1.0], [44300.0, 2.0], [44700.0, 2.0], [46700.0, 1.0], [45900.0, 1.0], [48300.0, 1.0], [51100.0, 1.0], [51900.0, 1.0], [52700.0, 1.0], [55100.0, 1.0], [54300.0, 1.0], [55500.0, 1.0], [55900.0, 1.0], [59100.0, 1.0], [57900.0, 1.0], [60300.0, 17.0], [59500.0, 1.0], [16900.0, 3.0], [17300.0, 1.0], [16700.0, 2.0], [16500.0, 1.0], [17100.0, 1.0], [18300.0, 4.0], [18100.0, 2.0], [17900.0, 3.0], [17700.0, 2.0], [17500.0, 1.0], [18900.0, 4.0], [19100.0, 2.0], [18500.0, 2.0], [19700.0, 2.0], [19900.0, 2.0], [20300.0, 1.0], [19500.0, 2.0], [20100.0, 1.0], [21500.0, 1.0], [20700.0, 1.0], [20900.0, 2.0], [21100.0, 1.0], [21300.0, 2.0], [21900.0, 2.0], [22100.0, 1.0], [23500.0, 1.0], [22700.0, 1.0], [23900.0, 2.0], [24100.0, 2.0], [24500.0, 1.0], [23700.0, 2.0], [25500.0, 1.0], [24900.0, 1.0], [26100.0, 2.0], [25900.0, 2.0], [26500.0, 1.0], [26900.0, 3.0], [28100.0, 2.0], [28500.0, 3.0], [28300.0, 1.0], [28900.0, 1.0], [29500.0, 3.0], [29300.0, 1.0], [29100.0, 1.0], [29700.0, 1.0], [30700.0, 1.0], [29900.0, 1.0], [31100.0, 1.0], [30900.0, 1.0], [32500.0, 2.0], [32700.0, 3.0], [32100.0, 1.0], [34600.0, 2.0], [33000.0, 1.0], [35000.0, 2.0], [35800.0, 1.0], [35400.0, 1.0], [38200.0, 1.0], [40600.0, 3.0], [39000.0, 1.0], [42600.0, 2.0], [42200.0, 1.0], [41000.0, 2.0], [41400.0, 1.0], [43000.0, 1.0], [45000.0, 1.0], [43800.0, 2.0], [45800.0, 2.0], [45400.0, 2.0], [47400.0, 2.0], [47800.0, 1.0], [51000.0, 1.0], [49400.0, 1.0], [55000.0, 1.0], [57000.0, 1.0], [60600.0, 6.0], [60200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 115.0], [33700.0, 1.0], [34500.0, 1.0], [35300.0, 1.0], [39700.0, 1.0], [40100.0, 1.0], [42100.0, 4.0], [41300.0, 1.0], [42900.0, 1.0], [41700.0, 2.0], [44500.0, 3.0], [44100.0, 1.0], [45300.0, 4.0], [45700.0, 2.0], [50100.0, 1.0], [200.0, 11.0], [52500.0, 1.0], [51300.0, 1.0], [54900.0, 1.0], [54500.0, 1.0], [54100.0, 1.0], [55300.0, 1.0], [55700.0, 1.0], [59300.0, 1.0], [60100.0, 34.0], [300.0, 1.0], [600.0, 1.0], [700.0, 1.0], [800.0, 2.0], [900.0, 4.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3200.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4800.0, 1.0], [5100.0, 4.0], [5000.0, 5.0], [5200.0, 13.0], [5300.0, 4.0], [5400.0, 1.0], [5600.0, 3.0], [5500.0, 3.0], [5800.0, 3.0], [5700.0, 1.0], [5900.0, 5.0], [6100.0, 3.0], [6300.0, 1.0], [6200.0, 4.0], [6500.0, 8.0], [6400.0, 1.0], [6600.0, 1.0], [6900.0, 2.0], [6800.0, 2.0], [7000.0, 4.0], [7100.0, 1.0], [7200.0, 4.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 3.0], [7900.0, 2.0], [7800.0, 2.0], [7700.0, 1.0], [8000.0, 3.0], [8100.0, 1.0], [8200.0, 3.0], [8700.0, 1.0], [8300.0, 1.0], [8600.0, 1.0], [8900.0, 2.0], [9100.0, 3.0], [8800.0, 2.0], [9500.0, 4.0], [9400.0, 3.0], [9300.0, 1.0], [9600.0, 2.0], [9700.0, 1.0], [9900.0, 2.0], [10000.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [9800.0, 1.0], [10300.0, 4.0], [10400.0, 3.0], [10600.0, 3.0], [10700.0, 2.0], [10800.0, 2.0], [11100.0, 1.0], [11200.0, 1.0], [11700.0, 1.0], [11600.0, 3.0], [11500.0, 3.0], [11400.0, 3.0], [11300.0, 1.0], [12000.0, 2.0], [12200.0, 4.0], [11800.0, 2.0], [12100.0, 1.0], [12600.0, 3.0], [12500.0, 2.0], [13000.0, 1.0], [13200.0, 3.0], [12800.0, 2.0], [12900.0, 3.0], [13100.0, 3.0], [13300.0, 1.0], [13500.0, 2.0], [13700.0, 3.0], [13600.0, 3.0], [13800.0, 2.0], [14200.0, 3.0], [14300.0, 1.0], [13900.0, 3.0], [14400.0, 3.0], [14500.0, 1.0], [14600.0, 2.0], [14700.0, 1.0], [14800.0, 1.0], [15000.0, 3.0], [15100.0, 1.0], [15800.0, 1.0], [15500.0, 1.0], [15600.0, 3.0], [15700.0, 1.0], [16100.0, 1.0], [15900.0, 3.0], [16300.0, 1.0], [16000.0, 1.0], [16800.0, 3.0], [17400.0, 3.0], [16400.0, 3.0], [16600.0, 1.0], [17200.0, 1.0], [17800.0, 4.0], [18000.0, 2.0], [17600.0, 1.0], [18200.0, 1.0], [18600.0, 7.0], [19400.0, 1.0], [19200.0, 2.0], [19000.0, 1.0], [19600.0, 1.0], [20400.0, 3.0], [20200.0, 3.0], [20000.0, 3.0], [19800.0, 2.0], [21200.0, 2.0], [20800.0, 2.0], [21400.0, 1.0], [20600.0, 1.0], [21000.0, 1.0], [21600.0, 4.0], [22400.0, 1.0], [23000.0, 2.0], [22600.0, 1.0], [23200.0, 2.0], [23800.0, 2.0], [23600.0, 2.0], [24200.0, 1.0], [25200.0, 2.0], [24600.0, 1.0], [25800.0, 1.0], [26600.0, 1.0], [25600.0, 1.0], [27200.0, 2.0], [27400.0, 2.0], [27800.0, 1.0], [28000.0, 3.0], [28200.0, 3.0], [28600.0, 1.0], [28800.0, 1.0], [29200.0, 2.0], [29400.0, 1.0], [30600.0, 2.0], [29800.0, 1.0], [30400.0, 1.0], [30200.0, 1.0], [31600.0, 1.0], [31400.0, 1.0], [30800.0, 2.0], [32200.0, 1.0], [31800.0, 1.0], [32000.0, 1.0], [32600.0, 1.0], [32400.0, 1.0], [32800.0, 1.0], [34800.0, 2.0], [33600.0, 1.0], [35200.0, 2.0], [35600.0, 1.0], [37200.0, 1.0], [37600.0, 1.0], [38800.0, 1.0], [38000.0, 1.0], [40400.0, 4.0], [39200.0, 1.0], [40800.0, 3.0], [42400.0, 2.0], [41200.0, 1.0], [43200.0, 2.0], [44000.0, 2.0], [46400.0, 1.0], [45600.0, 1.0], [47200.0, 1.0], [47600.0, 1.0], [50800.0, 1.0], [56800.0, 1.0], [58400.0, 1.0], [58800.0, 1.0], [57600.0, 1.0], [60000.0, 18.0], [59600.0, 1.0], [34300.0, 2.0], [34700.0, 1.0], [33500.0, 1.0], [35500.0, 2.0], [35900.0, 1.0], [37500.0, 1.0], [38700.0, 1.0], [37900.0, 1.0], [39900.0, 2.0], [39500.0, 1.0], [40700.0, 1.0], [41100.0, 1.0], [41900.0, 1.0], [42700.0, 1.0], [43500.0, 1.0], [45500.0, 3.0], [47100.0, 1.0], [45100.0, 1.0], [47900.0, 1.0], [50700.0, 1.0], [51500.0, 1.0], [52300.0, 1.0], [60300.0, 2.0], [16500.0, 4.0], [16900.0, 1.0], [17300.0, 3.0], [17100.0, 2.0], [18300.0, 2.0], [18100.0, 4.0], [17500.0, 1.0], [17700.0, 3.0], [17900.0, 2.0], [19300.0, 3.0], [19100.0, 2.0], [18700.0, 2.0], [18500.0, 1.0], [20300.0, 2.0], [19500.0, 1.0], [19900.0, 2.0], [19700.0, 2.0], [20900.0, 1.0], [20500.0, 3.0], [20700.0, 3.0], [21100.0, 3.0], [21700.0, 1.0], [22300.0, 1.0], [23500.0, 1.0], [23100.0, 1.0], [23300.0, 2.0], [24500.0, 3.0], [23700.0, 1.0], [23900.0, 1.0], [25100.0, 1.0], [25700.0, 4.0], [26500.0, 3.0], [26100.0, 1.0], [28500.0, 1.0], [27900.0, 2.0], [28300.0, 1.0], [28100.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [28700.0, 1.0], [30500.0, 1.0], [30300.0, 2.0], [29700.0, 1.0], [31700.0, 1.0], [32100.0, 1.0], [32700.0, 1.0], [32300.0, 3.0], [32500.0, 1.0], [33400.0, 2.0], [33800.0, 2.0], [35400.0, 1.0], [35800.0, 1.0], [36200.0, 1.0], [35000.0, 1.0], [38600.0, 1.0], [37400.0, 1.0], [40200.0, 1.0], [39800.0, 1.0], [40600.0, 1.0], [42200.0, 3.0], [41800.0, 3.0], [44600.0, 1.0], [43800.0, 2.0], [44200.0, 1.0], [43400.0, 1.0], [45000.0, 1.0], [46200.0, 1.0], [47000.0, 1.0], [45800.0, 1.0], [47400.0, 1.0], [49000.0, 1.0], [52600.0, 1.0], [56600.0, 1.0], [57400.0, 1.0], [60200.0, 6.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 254.0], [400.0, 266.0], [200.0, 218.0], [500.0, 7.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 589.0, "series": [{"data": [[0.0, 589.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 525.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 366.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68545712E12, "maxY": 25.0, "series": [{"data": [[1.68545802E12, 23.877659574468094], [1.68545736E12, 10.0], [1.68545832E12, 7.69230769230769], [1.68545838E12, 4.790697674418604], [1.68545772E12, 20.0], [1.68545742E12, 10.0], [1.68545826E12, 10.270588235294117], [1.6854576E12, 15.0], [1.6854573E12, 7.727272727272725], [1.68545796E12, 25.0], [1.68545766E12, 17.263157894736842], [1.68545784E12, 22.80419580419581], [1.68545754E12, 15.0], [1.68545724E12, 5.0], [1.6854582E12, 14.845454545454546], [1.6854579E12, 25.0], [1.68545712E12, 3.2608695652173916], [1.68545808E12, 20.229885057471265], [1.68545778E12, 20.0], [1.68545814E12, 16.599999999999998], [1.68545748E12, 12.186046511627914], [1.68545844E12, 2.0], [1.68545718E12, 5.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545844E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 284.0, "minX": 1.0, "maxY": 27420.25, "series": [{"data": [[2.0, 12760.5], [3.0, 10643.666666666666], [4.0, 14559.0], [5.0, 16657.673913043473], [6.0, 17571.3], [7.0, 22687.5], [8.0, 27420.25], [9.0, 22308.75], [10.0, 25465.895522388048], [11.0, 20315.764705882353], [12.0, 20396.6], [13.0, 9076.0], [14.0, 20891.944444444445], [15.0, 20136.719008264456], [16.0, 25857.090909090908], [1.0, 11127.0], [17.0, 23093.636363636364], [18.0, 26913.2], [19.0, 6107.0], [20.0, 20282.678571428576], [21.0, 26129.454545454544], [22.0, 23174.285714285714], [23.0, 17801.359999999997], [24.0, 4490.5], [25.0, 24778.95804195805]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.369127516778534, 21217.26577181206]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 12408.5], [3.0, 10262.666666666666], [4.0, 14178.0], [5.0, 16282.9347826087], [6.0, 17171.3], [7.0, 22302.0], [8.0, 27050.75], [9.0, 21960.375], [10.0, 25509.727272727265], [11.0, 20024.647058823528], [12.0, 20040.0], [13.0, 8749.125], [14.0, 20588.833333333336], [15.0, 19803.29752066116], [16.0, 25492.636363636364], [1.0, 10717.0], [17.0, 22751.363636363636], [18.0, 26581.5], [19.0, 5746.5], [20.0, 19955.97619047619], [21.0, 25816.0], [22.0, 22868.542857142853], [23.0, 18228.791666666664], [24.0, 4546.454545454546], [25.0, 24625.352112676057]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.352226720647792, 20998.50472334683]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 376.0], [3.0, 381.0], [4.0, 303.5], [5.0, 389.8125], [6.0, 356.12500000000006], [7.0, 284.0], [8.0, 371.5], [9.0, 370.375], [10.0, 315.76712328767127], [11.0, 316.25], [12.0, 352.8333333333333], [13.0, 383.55555555555554], [14.0, 351.6], [15.0, 338.1129032258064], [1.0, 307.0], [16.0, 295.44444444444446], [17.0, 368.79999999999995], [18.0, 298.07692307692315], [19.0, 380.75], [20.0, 322.22424242424245], [21.0, 352.3636363636363], [22.0, 338.6470588235294], [23.0, 302.44444444444446], [24.0, 335.0909090909091], [25.0, 318.11888111888123]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.332885906040268, 331.50201342281895]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 111.3, "minX": 1.68545712E12, "maxY": 10329.25, "series": [{"data": [[1.68545802E12, 4064.0833333333335], [1.68545736E12, 733.8333333333334], [1.68545832E12, 1909.6], [1.68545838E12, 954.8], [1.68545772E12, 2082.35], [1.68545742E12, 733.8333333333334], [1.68545826E12, 1982.1666666666667], [1.6854576E12, 2881.05], [1.6854573E12, 1135.4], [1.68545796E12, 3235.0], [1.68545766E12, 1810.4666666666667], [1.68545784E12, 2203.7166666666667], [1.68545754E12, 787.9666666666667], [1.68545724E12, 807.2166666666667], [1.6854582E12, 2862.766666666667], [1.6854579E12, 3242.1833333333334], [1.68545712E12, 621.7166666666667], [1.68545808E12, 4257.05], [1.68545778E12, 2599.15], [1.68545814E12, 2791.016666666667], [1.68545748E12, 2207.5666666666666], [1.68545844E12, 111.3], [1.68545718E12, 1100.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68545802E12, 10329.25], [1.68545736E12, 1502.55], [1.68545832E12, 4548.683333333333], [1.68545838E12, 2172.9166666666665], [1.68545772E12, 5763.616666666667], [1.68545742E12, 1509.3166666666666], [1.68545826E12, 4472.583333333333], [1.6854576E12, 5747.7], [1.6854573E12, 1473.5833333333333], [1.68545796E12, 7608.0], [1.68545766E12, 3765.266666666667], [1.68545784E12, 6744.45], [1.68545754E12, 3098.233333333333], [1.68545724E12, 1773.4833333333333], [1.6854582E12, 5622.316666666667], [1.6854579E12, 6229.683333333333], [1.68545712E12, 853.65], [1.68545808E12, 8901.616666666667], [1.68545778E12, 9414.55], [1.68545814E12, 6497.083333333333], [1.68545748E12, 8126.783333333334], [1.68545844E12, 272.6166666666667], [1.68545718E12, 3018.9166666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545844E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 273.1, "minX": 1.68545712E12, "maxY": 44296.6, "series": [{"data": [[1.68545802E12, 15915.98387096774], [1.68545736E12, 42395.3], [1.68545832E12, 12827.269230769229], [1.68545838E12, 16163.35294117647], [1.68545772E12, 31010.578947368427], [1.68545742E12, 44296.6], [1.68545826E12, 25210.58064516129], [1.6854576E12, 24892.857142857138], [1.6854573E12, 24505.30769230769], [1.68545796E12, 25556.571428571424], [1.68545766E12, 23449.32], [1.68545784E12, 18787.212765957443], [1.68545754E12, 24854.045454545452], [1.68545724E12, 18320.909090909092], [1.6854582E12, 15862.312499999996], [1.6854579E12, 30942.215686274507], [1.68545712E12, 10873.5], [1.68545808E12, 21236.465517241377], [1.68545778E12, 15750.028169014082], [1.68545814E12, 18388.265306122445], [1.68545748E12, 14430.883333333335], [1.68545718E12, 18577.73333333333]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 16143.33333333333], [1.68545736E12, 42027.799999999996], [1.68545832E12, 12646.82142857143], [1.68545838E12, 15869.5], [1.68545772E12, 30336.26315789474], [1.68545742E12, 43978.0], [1.68545826E12, 26441.964285714286], [1.6854576E12, 29626.707317073175], [1.6854573E12, 24129.384615384613], [1.68545796E12, 26159.814814814814], [1.68545766E12, 25009.17391304348], [1.68545784E12, 19128.466666666667], [1.68545754E12, 10024.181818181818], [1.68545724E12, 17906.454545454548], [1.6854582E12, 17680.050000000003], [1.6854579E12, 30181.700000000004], [1.68545712E12, 10506.5], [1.68545808E12, 20731.423728813555], [1.68545778E12, 15210.05479452055], [1.68545814E12, 16441.146341463416], [1.68545748E12, 15048.111111111111], [1.68545844E12, 15272.333333333334], [1.68545718E12, 18236.600000000002]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 285.0317460317461], [1.68545736E12, 318.6], [1.68545832E12, 371.3333333333333], [1.68545838E12, 413.0], [1.68545772E12, 331.71052631578954], [1.68545742E12, 273.1], [1.68545826E12, 358.5], [1.6854576E12, 351.95121951219505], [1.6854573E12, 363.9444444444445], [1.68545796E12, 340.43636363636364], [1.68545766E12, 345.00000000000006], [1.68545784E12, 324.843137254902], [1.68545754E12, 298.6086956521739], [1.68545724E12, 411.54545454545456], [1.6854582E12, 352.3947368421053], [1.6854579E12, 342.8367346938776], [1.68545712E12, 347.2727272727273], [1.68545808E12, 334.75438596491233], [1.68545778E12, 308.0555555555556], [1.68545814E12, 331.80000000000007], [1.68545748E12, 302.5517241379311], [1.68545718E12, 369.4666666666667]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545844E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 272.8, "minX": 1.68545712E12, "maxY": 44278.1, "series": [{"data": [[1.68545802E12, 15915.435483870964], [1.68545736E12, 42394.6], [1.68545832E12, 12827.076923076924], [1.68545838E12, 16162.882352941173], [1.68545772E12, 31010.34210526316], [1.68545742E12, 44278.1], [1.68545826E12, 25210.193548387102], [1.6854576E12, 24892.199999999997], [1.6854573E12, 24505.230769230766], [1.68545796E12, 25555.964285714286], [1.68545766E12, 23449.0], [1.68545784E12, 18786.91489361702], [1.68545754E12, 24853.63636363636], [1.68545724E12, 18320.363636363632], [1.6854582E12, 15862.0625], [1.6854579E12, 30941.68627450981], [1.68545712E12, 10872.833333333332], [1.68545808E12, 21236.10344827586], [1.68545778E12, 15749.859154929578], [1.68545814E12, 18387.897959183665], [1.68545748E12, 14428.933333333338], [1.68545718E12, 18577.199999999997]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 16143.079365079364], [1.68545736E12, 42027.100000000006], [1.68545832E12, 12646.785714285714], [1.68545838E12, 15869.142857142859], [1.68545772E12, 30336.26315789474], [1.68545742E12, 43968.5], [1.68545826E12, 26441.892857142855], [1.6854576E12, 29626.487804878056], [1.6854573E12, 24129.307692307695], [1.68545796E12, 26159.611111111113], [1.68545766E12, 25009.043478260868], [1.68545784E12, 19128.377777777776], [1.68545754E12, 10024.09090909091], [1.68545724E12, 17906.272727272728], [1.6854582E12, 17679.90000000001], [1.6854579E12, 30181.5], [1.68545712E12, 10506.5], [1.68545808E12, 20731.23728813559], [1.68545778E12, 15210.04109589041], [1.68545814E12, 16441.0], [1.68545748E12, 15046.314814814818], [1.68545844E12, 15272.333333333334], [1.68545718E12, 18236.333333333332]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 284.7619047619048], [1.68545736E12, 309.6], [1.68545832E12, 371.2083333333333], [1.68545838E12, 412.8333333333334], [1.68545772E12, 331.5], [1.68545742E12, 272.8], [1.68545826E12, 358.1923076923078], [1.6854576E12, 351.51219512195127], [1.6854573E12, 363.9444444444445], [1.68545796E12, 340.20000000000005], [1.68545766E12, 344.85714285714283], [1.68545784E12, 324.3921568627452], [1.68545754E12, 298.4347826086956], [1.68545724E12, 411.45454545454544], [1.6854582E12, 352.2368421052631], [1.6854579E12, 342.5102040816326], [1.68545712E12, 346.8181818181818], [1.68545808E12, 334.5263157894737], [1.68545778E12, 307.9027777777777], [1.68545814E12, 331.6285714285715], [1.68545748E12, 302.2413793103448], [1.68545718E12, 369.0666666666667]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545844E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545712E12, "maxY": 207.9090909090909, "series": [{"data": [[1.68545802E12, 141.37096774193546], [1.68545736E12, 166.20000000000002], [1.68545832E12, 179.88461538461533], [1.68545838E12, 200.4705882352941], [1.68545772E12, 157.65789473684202], [1.68545742E12, 163.7], [1.68545826E12, 185.61290322580643], [1.6854576E12, 175.42857142857144], [1.6854573E12, 181.46153846153848], [1.68545796E12, 164.60714285714283], [1.68545766E12, 179.44000000000003], [1.68545784E12, 155.72340425531922], [1.68545754E12, 148.63636363636363], [1.68545724E12, 207.9090909090909], [1.6854582E12, 173.15625000000006], [1.6854579E12, 154.1372549019608], [1.68545712E12, 163.66666666666666], [1.68545808E12, 164.77586206896552], [1.68545778E12, 156.33802816901408], [1.68545814E12, 155.93877551020412], [1.68545748E12, 143.83333333333331], [1.68545718E12, 156.86666666666665]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545802E12, 0.0], [1.68545736E12, 0.0], [1.68545832E12, 0.0], [1.68545838E12, 0.0], [1.68545772E12, 0.0], [1.68545742E12, 0.0], [1.68545826E12, 0.0], [1.6854576E12, 0.0], [1.6854573E12, 0.0], [1.68545796E12, 0.0], [1.68545766E12, 0.0], [1.68545784E12, 0.0], [1.68545754E12, 0.0], [1.68545724E12, 0.0], [1.6854582E12, 0.0], [1.6854579E12, 0.0], [1.68545712E12, 0.0], [1.68545808E12, 0.0], [1.68545778E12, 0.0], [1.68545814E12, 0.0], [1.68545748E12, 0.0], [1.68545844E12, 0.0], [1.68545718E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545802E12, 137.1746031746032], [1.68545736E12, 163.7], [1.68545832E12, 183.04166666666669], [1.68545838E12, 206.33333333333334], [1.68545772E12, 164.8421052631579], [1.68545742E12, 132.7], [1.68545826E12, 188.1923076923077], [1.6854576E12, 177.8292682926829], [1.6854573E12, 168.66666666666666], [1.68545796E12, 161.07272727272726], [1.68545766E12, 159.8214285714286], [1.68545784E12, 160.078431372549], [1.68545754E12, 147.43478260869563], [1.68545724E12, 205.90909090909088], [1.6854582E12, 171.8684210526316], [1.6854579E12, 165.8979591836735], [1.68545712E12, 147.5454545454545], [1.68545808E12, 165.96491228070175], [1.68545778E12, 149.5138888888889], [1.68545814E12, 159.28571428571428], [1.68545748E12, 150.3965517241379], [1.68545718E12, 181.26666666666665]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545844E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 208.0, "minX": 1.68545712E12, "maxY": 59621.0, "series": [{"data": [[1.68545802E12, 42285.0], [1.68545736E12, 45586.0], [1.68545832E12, 25772.0], [1.68545838E12, 23260.0], [1.68545772E12, 58417.0], [1.68545742E12, 46226.0], [1.68545826E12, 52594.0], [1.6854576E12, 59373.0], [1.6854573E12, 28883.0], [1.68545796E12, 59621.0], [1.68545766E12, 46418.0], [1.68545784E12, 54598.0], [1.68545754E12, 56655.0], [1.68545724E12, 20802.0], [1.6854582E12, 40855.0], [1.6854579E12, 58854.0], [1.68545712E12, 14548.0], [1.68545808E12, 47658.0], [1.68545778E12, 9484.0], [1.68545814E12, 35647.0], [1.68545748E12, 44590.0], [1.68545844E12, 18225.0], [1.68545718E12, 21222.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68545802E12, 31602.5], [1.68545736E12, 45317.200000000004], [1.68545832E12, 20049.70000000001], [1.68545838E12, 21546.5], [1.68545772E12, 14455.799999999997], [1.68545742E12, 45783.6], [1.68545826E12, 48495.5], [1.6854576E12, 33152.8], [1.6854573E12, 28231.0], [1.68545796E12, 25757.0], [1.68545766E12, 40668.0], [1.68545784E12, 44270.0], [1.68545754E12, 54736.8], [1.68545724E12, 20420.4], [1.6854582E12, 27489.400000000005], [1.6854579E12, 27593.0], [1.68545712E12, 14482.4], [1.68545808E12, 38268.2], [1.68545778E12, 6289.599999999999], [1.68545814E12, 26952.499999999996], [1.68545748E12, 43814.8], [1.68545844E12, 18225.0], [1.68545718E12, 20459.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68545802E12, 42146.100000000006], [1.68545736E12, 45586.0], [1.68545832E12, 25772.0], [1.68545838E12, 23260.0], [1.68545772E12, 58417.0], [1.68545742E12, 46226.0], [1.68545826E12, 52594.0], [1.6854576E12, 59373.0], [1.6854573E12, 28883.0], [1.68545796E12, 59621.0], [1.68545766E12, 46418.0], [1.68545784E12, 54598.0], [1.68545754E12, 56655.0], [1.68545724E12, 20802.0], [1.6854582E12, 40855.0], [1.6854579E12, 58854.0], [1.68545712E12, 14548.0], [1.68545808E12, 47625.02], [1.68545778E12, 9484.0], [1.68545814E12, 35647.0], [1.68545748E12, 44590.0], [1.68545844E12, 18225.0], [1.68545718E12, 21222.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68545802E12, 35150.0], [1.68545736E12, 45576.4], [1.68545832E12, 24144.499999999985], [1.68545838E12, 22948.149999999998], [1.68545772E12, 35370.59999999983], [1.68545742E12, 46204.15], [1.68545826E12, 50949.25], [1.6854576E12, 52913.999999999985], [1.6854573E12, 28677.2], [1.68545796E12, 55703.0], [1.68545766E12, 44427.5], [1.68545784E12, 46857.0], [1.68545754E12, 56655.0], [1.68545724E12, 20746.649999999998], [1.6854582E12, 32410.85], [1.6854579E12, 35839.75], [1.68545712E12, 14548.0], [1.68545808E12, 43004.749999999985], [1.68545778E12, 8872.849999999991], [1.68545814E12, 33953.29999999999], [1.68545748E12, 44252.5], [1.68545844E12, 18225.0], [1.68545718E12, 21052.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68545802E12, 208.0], [1.68545736E12, 302.0], [1.68545832E12, 209.0], [1.68545838E12, 391.0], [1.68545772E12, 211.0], [1.68545742E12, 214.0], [1.68545826E12, 213.0], [1.6854576E12, 209.0], [1.6854573E12, 265.0], [1.68545796E12, 210.0], [1.68545766E12, 213.0], [1.68545784E12, 215.0], [1.68545754E12, 227.0], [1.68545724E12, 398.0], [1.6854582E12, 224.0], [1.6854579E12, 209.0], [1.68545712E12, 298.0], [1.68545808E12, 211.0], [1.68545778E12, 208.0], [1.68545814E12, 212.0], [1.68545748E12, 212.0], [1.68545844E12, 10717.0], [1.68545718E12, 210.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68545802E12, 409.5], [1.68545736E12, 14822.5], [1.68545832E12, 5488.5], [1.68545838E12, 5177.5], [1.68545772E12, 404.0], [1.68545742E12, 20431.0], [1.68545826E12, 6056.0], [1.6854576E12, 408.0], [1.6854573E12, 406.0], [1.68545796E12, 410.0], [1.68545766E12, 408.0], [1.68545784E12, 18609.5], [1.68545754E12, 408.0], [1.68545724E12, 4273.5], [1.6854582E12, 5233.5], [1.6854579E12, 409.5], [1.68545712E12, 404.0], [1.68545808E12, 5098.5], [1.68545778E12, 315.5], [1.68545814E12, 5277.0], [1.68545748E12, 33700.0], [1.68545844E12, 16875.0], [1.68545718E12, 6110.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 207.0, "minX": 1.0, "maxY": 60129.0, "series": [{"data": [[2.0, 409.0], [8.0, 5552.0], [9.0, 408.0], [10.0, 18724.5], [11.0, 13159.5], [3.0, 420.0], [12.0, 408.0], [13.0, 410.0], [1.0, 410.5], [4.0, 410.0], [16.0, 34374.5], [5.0, 408.0], [20.0, 14823.5], [6.0, 410.0], [7.0, 410.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 284.5], [2.0, 211.0], [4.0, 352.0], [8.0, 304.0], [9.0, 60129.0], [5.0, 212.0], [10.0, 208.0], [11.0, 284.0], [3.0, 281.5], [12.0, 207.0], [6.0, 209.0], [7.0, 1052.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 207.0, "minX": 1.0, "maxY": 60129.0, "series": [{"data": [[2.0, 409.0], [8.0, 5552.0], [9.0, 408.0], [10.0, 18724.5], [11.0, 13159.5], [3.0, 420.0], [12.0, 408.0], [13.0, 409.0], [1.0, 410.5], [4.0, 409.0], [16.0, 34374.5], [5.0, 408.0], [20.0, 14823.5], [6.0, 410.0], [7.0, 410.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 284.5], [2.0, 211.0], [4.0, 351.0], [8.0, 304.0], [9.0, 60129.0], [5.0, 212.0], [10.0, 207.5], [11.0, 283.0], [3.0, 281.5], [12.0, 207.0], [6.0, 209.0], [7.0, 1052.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.68545712E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.68545802E12, 2.066666666666667], [1.68545736E12, 0.35], [1.68545832E12, 0.8166666666666667], [1.68545838E12, 0.4166666666666667], [1.68545772E12, 1.3166666666666667], [1.68545742E12, 0.3333333333333333], [1.68545826E12, 0.8166666666666667], [1.6854576E12, 1.3666666666666667], [1.6854573E12, 0.5833333333333334], [1.68545796E12, 1.7333333333333334], [1.68545766E12, 0.8833333333333333], [1.68545784E12, 1.7], [1.68545754E12, 0.9], [1.68545724E12, 0.43333333333333335], [1.6854582E12, 1.2666666666666666], [1.6854579E12, 1.6333333333333333], [1.68545712E12, 0.35], [1.68545808E12, 1.9], [1.68545778E12, 2.3833333333333333], [1.68545814E12, 1.2666666666666666], [1.68545748E12, 1.8], [1.68545718E12, 0.45]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545838E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545712E12, "maxY": 1.9333333333333333, "series": [{"data": [[1.68545802E12, 1.7333333333333334], [1.68545736E12, 0.3333333333333333], [1.68545832E12, 0.8666666666666667], [1.68545838E12, 0.43333333333333335], [1.68545772E12, 0.8333333333333334], [1.68545742E12, 0.3333333333333333], [1.68545826E12, 0.9], [1.6854576E12, 1.2833333333333334], [1.6854573E12, 0.5166666666666667], [1.68545796E12, 1.3166666666666667], [1.68545766E12, 0.8166666666666667], [1.68545784E12, 0.7333333333333333], [1.68545754E12, 0.18333333333333332], [1.68545724E12, 0.36666666666666664], [1.6854582E12, 1.3], [1.6854579E12, 1.4], [1.68545712E12, 0.2833333333333333], [1.68545808E12, 1.9333333333333333], [1.68545778E12, 0.6666666666666666], [1.68545814E12, 1.2666666666666666], [1.68545748E12, 0.6166666666666667], [1.68545844E12, 0.05], [1.68545718E12, 0.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68545772E12, 0.18333333333333332], [1.6854579E12, 0.03333333333333333], [1.68545778E12, 0.23333333333333334], [1.68545796E12, 0.016666666666666666], [1.68545766E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68545802E12, 0.36666666666666664], [1.68545784E12, 0.8666666666666667], [1.68545754E12, 0.5666666666666667], [1.68545778E12, 1.2333333333333334], [1.68545748E12, 1.25], [1.68545796E12, 0.31666666666666665]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68545772E12, 0.25], [1.6854579E12, 0.21666666666666667], [1.6854576E12, 0.08333333333333333], [1.68545778E12, 0.2833333333333333], [1.68545796E12, 0.16666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545844E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545712E12, "maxY": 1.15, "series": [{"data": [[1.68545802E12, 0.8833333333333333], [1.68545736E12, 0.16666666666666666], [1.68545832E12, 0.4], [1.68545838E12, 0.2], [1.68545772E12, 0.6333333333333333], [1.68545742E12, 0.16666666666666666], [1.68545826E12, 0.43333333333333335], [1.6854576E12, 0.6833333333333333], [1.6854573E12, 0.3], [1.68545796E12, 0.7], [1.68545766E12, 0.4666666666666667], [1.68545784E12, 0.35], [1.68545754E12, 0.1], [1.68545724E12, 0.18333333333333332], [1.6854582E12, 0.6333333333333333], [1.6854579E12, 0.8166666666666667], [1.68545712E12, 0.18333333333333332], [1.68545808E12, 0.95], [1.68545778E12, 0.55], [1.68545814E12, 0.5833333333333334], [1.68545748E12, 0.2833333333333333], [1.68545718E12, 0.25]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68545802E12, 0.16666666666666666], [1.68545784E12, 0.5], [1.68545754E12, 0.2833333333333333], [1.68545778E12, 0.65], [1.68545748E12, 0.6833333333333333], [1.68545796E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68545802E12, 0.2], [1.68545784E12, 0.36666666666666664], [1.68545754E12, 0.2833333333333333], [1.68545772E12, 0.43333333333333335], [1.6854579E12, 0.25], [1.6854576E12, 0.08333333333333333], [1.68545778E12, 1.1], [1.68545748E12, 0.5666666666666667], [1.68545796E12, 0.2833333333333333], [1.68545766E12, 0.03333333333333333]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68545802E12, 0.65], [1.68545736E12, 0.16666666666666666], [1.68545832E12, 0.43333333333333335], [1.68545838E12, 0.2833333333333333], [1.68545772E12, 0.21666666666666667], [1.68545742E12, 0.16666666666666666], [1.68545826E12, 0.5166666666666667], [1.6854576E12, 0.45], [1.6854573E12, 0.21666666666666667], [1.68545796E12, 0.5166666666666667], [1.68545766E12, 0.35], [1.68545784E12, 0.2], [1.68545754E12, 0.016666666666666666], [1.68545724E12, 0.18333333333333332], [1.6854582E12, 0.5333333333333333], [1.6854579E12, 0.5], [1.68545712E12, 0.1], [1.68545808E12, 0.9], [1.68545778E12, 0.03333333333333333], [1.68545814E12, 0.8166666666666667], [1.68545748E12, 0.16666666666666666], [1.68545718E12, 0.25]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545802E12, 0.38333333333333336], [1.68545784E12, 0.5833333333333334], [1.68545754E12, 0.35], [1.68545772E12, 0.4166666666666667], [1.6854579E12, 0.35], [1.6854576E12, 0.13333333333333333], [1.68545808E12, 0.06666666666666667], [1.68545778E12, 1.15], [1.68545748E12, 0.8333333333333334], [1.68545796E12, 0.4166666666666667], [1.68545766E12, 0.06666666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68545802E12, 0.85], [1.68545736E12, 0.16666666666666666], [1.68545832E12, 0.4666666666666667], [1.68545838E12, 0.23333333333333334], [1.68545772E12, 0.2], [1.68545742E12, 0.16666666666666666], [1.68545826E12, 0.4666666666666667], [1.6854576E12, 0.6], [1.6854573E12, 0.21666666666666667], [1.68545796E12, 0.6166666666666667], [1.68545766E12, 0.35], [1.68545784E12, 0.38333333333333336], [1.68545754E12, 0.08333333333333333], [1.68545724E12, 0.18333333333333332], [1.6854582E12, 0.6666666666666666], [1.6854579E12, 0.5833333333333334], [1.68545712E12, 0.1], [1.68545808E12, 0.9833333333333333], [1.68545778E12, 0.11666666666666667], [1.68545814E12, 0.6833333333333333], [1.68545748E12, 0.3333333333333333], [1.68545844E12, 0.05], [1.68545718E12, 0.25]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545844E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68545712E12, "maxY": 2.9, "series": [{"data": [[1.68545802E12, 2.3833333333333333], [1.68545736E12, 0.5], [1.68545832E12, 1.3], [1.68545838E12, 0.7166666666666667], [1.68545772E12, 1.05], [1.68545742E12, 0.5], [1.68545826E12, 1.4166666666666667], [1.6854576E12, 1.7333333333333334], [1.6854573E12, 0.7333333333333333], [1.68545796E12, 1.8333333333333333], [1.68545766E12, 1.1666666666666667], [1.68545784E12, 0.9333333333333333], [1.68545754E12, 0.2], [1.68545724E12, 0.55], [1.6854582E12, 1.8333333333333333], [1.6854579E12, 1.9], [1.68545712E12, 0.38333333333333336], [1.68545808E12, 2.8333333333333335], [1.68545778E12, 0.7], [1.68545814E12, 2.0833333333333335], [1.68545748E12, 0.7833333333333333], [1.68545844E12, 0.05], [1.68545718E12, 0.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545802E12, 0.75], [1.68545784E12, 1.45], [1.68545754E12, 0.9166666666666666], [1.68545772E12, 0.85], [1.6854579E12, 0.6], [1.6854576E12, 0.21666666666666667], [1.68545808E12, 0.06666666666666667], [1.68545778E12, 2.9], [1.68545748E12, 2.0833333333333335], [1.68545796E12, 0.9166666666666666], [1.68545766E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68545844E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

