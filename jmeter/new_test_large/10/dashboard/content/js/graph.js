/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 103.0, "minX": 0.0, "maxY": 60718.0, "series": [{"data": [[0.0, 311.0], [0.1, 311.0], [0.2, 312.0], [0.3, 312.0], [0.4, 313.0], [0.5, 313.0], [0.6, 313.0], [0.7, 313.0], [0.8, 313.0], [0.9, 313.0], [1.0, 314.0], [1.1, 314.0], [1.2, 314.0], [1.3, 314.0], [1.4, 314.0], [1.5, 314.0], [1.6, 314.0], [1.7, 314.0], [1.8, 314.0], [1.9, 314.0], [2.0, 314.0], [2.1, 314.0], [2.2, 315.0], [2.3, 315.0], [2.4, 315.0], [2.5, 316.0], [2.6, 317.0], [2.7, 317.0], [2.8, 317.0], [2.9, 317.0], [3.0, 318.0], [3.1, 323.0], [3.2, 323.0], [3.3, 323.0], [3.4, 327.0], [3.5, 327.0], [3.6, 328.0], [3.7, 328.0], [3.8, 330.0], [3.9, 331.0], [4.0, 331.0], [4.1, 332.0], [4.2, 332.0], [4.3, 332.0], [4.4, 335.0], [4.5, 335.0], [4.6, 339.0], [4.7, 343.0], [4.8, 343.0], [4.9, 344.0], [5.0, 344.0], [5.1, 347.0], [5.2, 347.0], [5.3, 347.0], [5.4, 348.0], [5.5, 348.0], [5.6, 351.0], [5.7, 351.0], [5.8, 351.0], [5.9, 354.0], [6.0, 354.0], [6.1, 354.0], [6.2, 359.0], [6.3, 359.0], [6.4, 367.0], [6.5, 368.0], [6.6, 368.0], [6.7, 371.0], [6.8, 372.0], [6.9, 372.0], [7.0, 376.0], [7.1, 376.0], [7.2, 377.0], [7.3, 383.0], [7.4, 383.0], [7.5, 400.0], [7.6, 400.0], [7.7, 400.0], [7.8, 406.0], [7.9, 406.0], [8.0, 406.0], [8.1, 406.0], [8.2, 406.0], [8.3, 407.0], [8.4, 407.0], [8.5, 410.0], [8.6, 411.0], [8.7, 411.0], [8.8, 411.0], [8.9, 411.0], [9.0, 411.0], [9.1, 412.0], [9.2, 412.0], [9.3, 412.0], [9.4, 412.0], [9.5, 412.0], [9.6, 413.0], [9.7, 413.0], [9.8, 413.0], [9.9, 413.0], [10.0, 413.0], [10.1, 413.0], [10.2, 417.0], [10.3, 417.0], [10.4, 417.0], [10.5, 417.0], [10.6, 421.0], [10.7, 428.0], [10.8, 428.0], [10.9, 432.0], [11.0, 432.0], [11.1, 433.0], [11.2, 434.0], [11.3, 434.0], [11.4, 435.0], [11.5, 443.0], [11.6, 443.0], [11.7, 444.0], [11.8, 444.0], [11.9, 446.0], [12.0, 447.0], [12.1, 447.0], [12.2, 450.0], [12.3, 453.0], [12.4, 453.0], [12.5, 454.0], [12.6, 454.0], [12.7, 463.0], [12.8, 469.0], [12.9, 469.0], [13.0, 472.0], [13.1, 472.0], [13.2, 473.0], [13.3, 473.0], [13.4, 473.0], [13.5, 479.0], [13.6, 481.0], [13.7, 481.0], [13.8, 491.0], [13.9, 491.0], [14.0, 495.0], [14.1, 497.0], [14.2, 497.0], [14.3, 502.0], [14.4, 502.0], [14.5, 504.0], [14.6, 511.0], [14.7, 511.0], [14.8, 512.0], [14.9, 513.0], [15.0, 513.0], [15.1, 514.0], [15.2, 514.0], [15.3, 515.0], [15.4, 516.0], [15.5, 516.0], [15.6, 518.0], [15.7, 519.0], [15.8, 519.0], [15.9, 521.0], [16.0, 521.0], [16.1, 525.0], [16.2, 527.0], [16.3, 527.0], [16.4, 535.0], [16.5, 535.0], [16.6, 537.0], [16.7, 541.0], [16.8, 541.0], [16.9, 545.0], [17.0, 547.0], [17.1, 547.0], [17.2, 557.0], [17.3, 557.0], [17.4, 557.0], [17.5, 559.0], [17.6, 559.0], [17.7, 571.0], [17.8, 575.0], [17.9, 575.0], [18.0, 580.0], [18.1, 580.0], [18.2, 587.0], [18.3, 589.0], [18.4, 589.0], [18.5, 597.0], [18.6, 597.0], [18.7, 603.0], [18.8, 650.0], [18.9, 650.0], [19.0, 672.0], [19.1, 1016.0], [19.2, 1016.0], [19.3, 1020.0], [19.4, 1020.0], [19.5, 1052.0], [19.6, 1181.0], [19.7, 1181.0], [19.8, 1230.0], [19.9, 1230.0], [20.0, 1377.0], [20.1, 1380.0], [20.2, 1380.0], [20.3, 1385.0], [20.4, 1385.0], [20.5, 1385.0], [20.6, 1388.0], [20.7, 1388.0], [20.8, 1388.0], [20.9, 1399.0], [21.0, 1399.0], [21.1, 1400.0], [21.2, 1432.0], [21.3, 1432.0], [21.4, 1483.0], [21.5, 1483.0], [21.6, 1515.0], [21.7, 1704.0], [21.8, 1704.0], [21.9, 1769.0], [22.0, 1769.0], [22.1, 1794.0], [22.2, 1828.0], [22.3, 1828.0], [22.4, 1838.0], [22.5, 1853.0], [22.6, 1853.0], [22.7, 2089.0], [22.8, 2089.0], [22.9, 2229.0], [23.0, 2415.0], [23.1, 2415.0], [23.2, 2687.0], [23.3, 2687.0], [23.4, 2968.0], [23.5, 3348.0], [23.6, 3348.0], [23.7, 3579.0], [23.8, 4259.0], [23.9, 4259.0], [24.0, 4451.0], [24.1, 4451.0], [24.2, 4658.0], [24.3, 4693.0], [24.4, 4693.0], [24.5, 4696.0], [24.6, 4769.0], [24.7, 4769.0], [24.8, 5095.0], [24.9, 5095.0], [25.0, 5229.0], [25.1, 5287.0], [25.2, 5287.0], [25.3, 5337.0], [25.4, 5337.0], [25.5, 5557.0], [25.6, 5578.0], [25.7, 5578.0], [25.8, 5607.0], [25.9, 5650.0], [26.0, 5650.0], [26.1, 5655.0], [26.2, 5655.0], [26.3, 5705.0], [26.4, 5710.0], [26.5, 5710.0], [26.6, 5800.0], [26.7, 5802.0], [26.8, 5802.0], [26.9, 5938.0], [27.0, 5938.0], [27.1, 6073.0], [27.2, 6102.0], [27.3, 6102.0], [27.4, 6110.0], [27.5, 6110.0], [27.6, 6233.0], [27.7, 6239.0], [27.8, 6239.0], [27.9, 6296.0], [28.0, 6422.0], [28.1, 6422.0], [28.2, 6789.0], [28.3, 6789.0], [28.4, 7058.0], [28.5, 7129.0], [28.6, 7129.0], [28.7, 7664.0], [28.8, 7664.0], [28.9, 7871.0], [29.0, 8051.0], [29.1, 8051.0], [29.2, 8125.0], [29.3, 8731.0], [29.4, 8731.0], [29.5, 8896.0], [29.6, 8896.0], [29.7, 9168.0], [29.8, 9216.0], [29.9, 9216.0], [30.0, 9524.0], [30.1, 9688.0], [30.2, 9688.0], [30.3, 9882.0], [30.4, 9882.0], [30.5, 9936.0], [30.6, 10040.0], [30.7, 10040.0], [30.8, 10221.0], [30.9, 10221.0], [31.0, 10409.0], [31.1, 10878.0], [31.2, 10878.0], [31.3, 11069.0], [31.4, 11133.0], [31.5, 11133.0], [31.6, 11217.0], [31.7, 11217.0], [31.8, 11587.0], [31.9, 11850.0], [32.0, 11850.0], [32.1, 11890.0], [32.2, 11890.0], [32.3, 11963.0], [32.4, 12039.0], [32.5, 12039.0], [32.6, 12538.0], [32.7, 12602.0], [32.8, 12602.0], [32.9, 12618.0], [33.0, 12618.0], [33.1, 12658.0], [33.2, 12897.0], [33.3, 12897.0], [33.4, 12912.0], [33.5, 13052.0], [33.6, 13052.0], [33.7, 13383.0], [33.8, 13383.0], [33.9, 13690.0], [34.0, 13766.0], [34.1, 13766.0], [34.2, 13943.0], [34.3, 13943.0], [34.4, 14092.0], [34.5, 14335.0], [34.6, 14335.0], [34.7, 14502.0], [34.8, 14650.0], [34.9, 14650.0], [35.0, 14888.0], [35.1, 14888.0], [35.2, 15145.0], [35.3, 15235.0], [35.4, 15235.0], [35.5, 15373.0], [35.6, 15935.0], [35.7, 15935.0], [35.8, 16100.0], [35.9, 16100.0], [36.0, 16279.0], [36.1, 16376.0], [36.2, 16376.0], [36.3, 16473.0], [36.4, 16473.0], [36.5, 16611.0], [36.6, 16684.0], [36.7, 16684.0], [36.8, 16863.0], [36.9, 17056.0], [37.0, 17056.0], [37.1, 17086.0], [37.2, 17086.0], [37.3, 17113.0], [37.4, 17385.0], [37.5, 17385.0], [37.6, 17979.0], [37.7, 17979.0], [37.8, 18049.0], [37.9, 18169.0], [38.0, 18169.0], [38.1, 18176.0], [38.2, 18309.0], [38.3, 18309.0], [38.4, 18434.0], [38.5, 18434.0], [38.6, 18484.0], [38.7, 18487.0], [38.8, 18487.0], [38.9, 18891.0], [39.0, 19025.0], [39.1, 19025.0], [39.2, 19059.0], [39.3, 19059.0], [39.4, 19105.0], [39.5, 19125.0], [39.6, 19125.0], [39.7, 19155.0], [39.8, 19155.0], [39.9, 19170.0], [40.0, 19218.0], [40.1, 19218.0], [40.2, 19276.0], [40.3, 19282.0], [40.4, 19282.0], [40.5, 19364.0], [40.6, 19364.0], [40.7, 19367.0], [40.8, 19369.0], [40.9, 19369.0], [41.0, 19508.0], [41.1, 19508.0], [41.2, 19669.0], [41.3, 19671.0], [41.4, 19671.0], [41.5, 19743.0], [41.6, 19746.0], [41.7, 19746.0], [41.8, 19855.0], [41.9, 19855.0], [42.0, 19858.0], [42.1, 19915.0], [42.2, 19915.0], [42.3, 19953.0], [42.4, 19973.0], [42.5, 19973.0], [42.6, 20159.0], [42.7, 20159.0], [42.8, 20522.0], [42.9, 20679.0], [43.0, 20679.0], [43.1, 20922.0], [43.2, 20922.0], [43.3, 21026.0], [43.4, 21090.0], [43.5, 21090.0], [43.6, 21122.0], [43.7, 21219.0], [43.8, 21219.0], [43.9, 21304.0], [44.0, 21304.0], [44.1, 21320.0], [44.2, 21433.0], [44.3, 21433.0], [44.4, 21453.0], [44.5, 21491.0], [44.6, 21491.0], [44.7, 21499.0], [44.8, 21499.0], [44.9, 21530.0], [45.0, 21586.0], [45.1, 21586.0], [45.2, 21666.0], [45.3, 21666.0], [45.4, 21799.0], [45.5, 21873.0], [45.6, 21873.0], [45.7, 21891.0], [45.8, 22005.0], [45.9, 22005.0], [46.0, 22162.0], [46.1, 22162.0], [46.2, 22283.0], [46.3, 22283.0], [46.4, 22283.0], [46.5, 22344.0], [46.6, 22344.0], [46.7, 22473.0], [46.8, 22487.0], [46.9, 22487.0], [47.0, 22537.0], [47.1, 22565.0], [47.2, 22565.0], [47.3, 22618.0], [47.4, 22618.0], [47.5, 22646.0], [47.6, 22657.0], [47.7, 22657.0], [47.8, 22941.0], [47.9, 22980.0], [48.0, 22980.0], [48.1, 23005.0], [48.2, 23005.0], [48.3, 23062.0], [48.4, 23131.0], [48.5, 23131.0], [48.6, 23184.0], [48.7, 23184.0], [48.8, 23187.0], [48.9, 23259.0], [49.0, 23259.0], [49.1, 23428.0], [49.2, 23466.0], [49.3, 23466.0], [49.4, 23497.0], [49.5, 23497.0], [49.6, 23497.0], [49.7, 23500.0], [49.8, 23500.0], [49.9, 23579.0], [50.0, 23664.0], [50.1, 23664.0], [50.2, 23835.0], [50.3, 23835.0], [50.4, 23860.0], [50.5, 23971.0], [50.6, 23971.0], [50.7, 24010.0], [50.8, 24010.0], [50.9, 24028.0], [51.0, 24386.0], [51.1, 24386.0], [51.2, 24433.0], [51.3, 24598.0], [51.4, 24598.0], [51.5, 24715.0], [51.6, 24715.0], [51.7, 24916.0], [51.8, 25065.0], [51.9, 25065.0], [52.0, 25097.0], [52.1, 25097.0], [52.2, 25116.0], [52.3, 25193.0], [52.4, 25193.0], [52.5, 25336.0], [52.6, 25357.0], [52.7, 25357.0], [52.8, 25375.0], [52.9, 25375.0], [53.0, 25457.0], [53.1, 25693.0], [53.2, 25693.0], [53.3, 25740.0], [53.4, 26277.0], [53.5, 26277.0], [53.6, 26421.0], [53.7, 26421.0], [53.8, 26495.0], [53.9, 26664.0], [54.0, 26664.0], [54.1, 26691.0], [54.2, 26691.0], [54.3, 27077.0], [54.4, 27202.0], [54.5, 27202.0], [54.6, 27443.0], [54.7, 27467.0], [54.8, 27467.0], [54.9, 27625.0], [55.0, 27625.0], [55.1, 28033.0], [55.2, 28154.0], [55.3, 28154.0], [55.4, 28196.0], [55.5, 28196.0], [55.6, 28245.0], [55.7, 28290.0], [55.8, 28290.0], [55.9, 28341.0], [56.0, 28637.0], [56.1, 28637.0], [56.2, 29101.0], [56.3, 29101.0], [56.4, 29139.0], [56.5, 29288.0], [56.6, 29288.0], [56.7, 29364.0], [56.8, 29718.0], [56.9, 29718.0], [57.0, 30307.0], [57.1, 30307.0], [57.2, 30315.0], [57.3, 30431.0], [57.4, 30431.0], [57.5, 30651.0], [57.6, 30651.0], [57.7, 30915.0], [57.8, 30923.0], [57.9, 30923.0], [58.0, 30932.0], [58.1, 31103.0], [58.2, 31103.0], [58.3, 31273.0], [58.4, 31273.0], [58.5, 31701.0], [58.6, 31810.0], [58.7, 31810.0], [58.8, 31886.0], [58.9, 31933.0], [59.0, 31933.0], [59.1, 31995.0], [59.2, 31995.0], [59.3, 32189.0], [59.4, 32193.0], [59.5, 32193.0], [59.6, 32353.0], [59.7, 32353.0], [59.8, 32394.0], [59.9, 32655.0], [60.0, 32655.0], [60.1, 32779.0], [60.2, 32862.0], [60.3, 32862.0], [60.4, 33112.0], [60.5, 33112.0], [60.6, 33264.0], [60.7, 33350.0], [60.8, 33350.0], [60.9, 33557.0], [61.0, 33557.0], [61.1, 34812.0], [61.2, 35138.0], [61.3, 35138.0], [61.4, 35199.0], [61.5, 35380.0], [61.6, 35380.0], [61.7, 35383.0], [61.8, 35383.0], [61.9, 35503.0], [62.0, 35544.0], [62.1, 35544.0], [62.2, 35732.0], [62.3, 35764.0], [62.4, 35764.0], [62.5, 36016.0], [62.6, 36016.0], [62.7, 36805.0], [62.8, 36843.0], [62.9, 36843.0], [63.0, 36920.0], [63.1, 36920.0], [63.2, 36933.0], [63.3, 37127.0], [63.4, 37127.0], [63.5, 37165.0], [63.6, 37297.0], [63.7, 37297.0], [63.8, 37339.0], [63.9, 37339.0], [64.0, 37513.0], [64.1, 37611.0], [64.2, 37611.0], [64.3, 37632.0], [64.4, 37632.0], [64.5, 37729.0], [64.6, 37792.0], [64.7, 37792.0], [64.8, 37814.0], [64.9, 38308.0], [65.0, 38308.0], [65.1, 38634.0], [65.2, 38634.0], [65.3, 38786.0], [65.4, 39027.0], [65.5, 39027.0], [65.6, 39104.0], [65.7, 39259.0], [65.8, 39259.0], [65.9, 39336.0], [66.0, 39336.0], [66.1, 39344.0], [66.2, 39408.0], [66.3, 39408.0], [66.4, 39460.0], [66.5, 39460.0], [66.6, 39616.0], [66.7, 39701.0], [66.8, 39701.0], [66.9, 39792.0], [67.0, 39854.0], [67.1, 39854.0], [67.2, 39953.0], [67.3, 39953.0], [67.4, 40119.0], [67.5, 40144.0], [67.6, 40144.0], [67.7, 40410.0], [67.8, 40462.0], [67.9, 40462.0], [68.0, 40526.0], [68.1, 40526.0], [68.2, 40527.0], [68.3, 40649.0], [68.4, 40649.0], [68.5, 40789.0], [68.6, 40789.0], [68.7, 40913.0], [68.8, 41267.0], [68.9, 41267.0], [69.0, 41356.0], [69.1, 41398.0], [69.2, 41398.0], [69.3, 41477.0], [69.4, 41477.0], [69.5, 41657.0], [69.6, 41678.0], [69.7, 41678.0], [69.8, 41718.0], [69.9, 41718.0], [70.0, 41918.0], [70.1, 42007.0], [70.2, 42007.0], [70.3, 42111.0], [70.4, 42157.0], [70.5, 42157.0], [70.6, 42169.0], [70.7, 42169.0], [70.8, 42239.0], [70.9, 42323.0], [71.0, 42323.0], [71.1, 42400.0], [71.2, 42591.0], [71.3, 42591.0], [71.4, 42723.0], [71.5, 42723.0], [71.6, 42740.0], [71.7, 42785.0], [71.8, 42785.0], [71.9, 42790.0], [72.0, 42790.0], [72.1, 42817.0], [72.2, 42842.0], [72.3, 42842.0], [72.4, 42859.0], [72.5, 42943.0], [72.6, 42943.0], [72.7, 43044.0], [72.8, 43044.0], [72.9, 43143.0], [73.0, 43170.0], [73.1, 43170.0], [73.2, 43219.0], [73.3, 43219.0], [73.4, 43222.0], [73.5, 43235.0], [73.6, 43235.0], [73.7, 43436.0], [73.8, 43497.0], [73.9, 43497.0], [74.0, 43535.0], [74.1, 43535.0], [74.2, 43570.0], [74.3, 43591.0], [74.4, 43591.0], [74.5, 43654.0], [74.6, 43668.0], [74.7, 43668.0], [74.8, 43905.0], [74.9, 43905.0], [75.0, 44023.0], [75.1, 44096.0], [75.2, 44096.0], [75.3, 44198.0], [75.4, 44198.0], [75.5, 44261.0], [75.6, 44286.0], [75.7, 44286.0], [75.8, 44329.0], [75.9, 44513.0], [76.0, 44513.0], [76.1, 44794.0], [76.2, 44794.0], [76.3, 44994.0], [76.4, 45202.0], [76.5, 45202.0], [76.6, 45330.0], [76.7, 45423.0], [76.8, 45423.0], [76.9, 45481.0], [77.0, 45481.0], [77.1, 45591.0], [77.2, 45630.0], [77.3, 45630.0], [77.4, 45701.0], [77.5, 45701.0], [77.6, 45714.0], [77.7, 46641.0], [77.8, 46641.0], [77.9, 47071.0], [78.0, 47085.0], [78.1, 47085.0], [78.2, 47124.0], [78.3, 47124.0], [78.4, 47298.0], [78.5, 47395.0], [78.6, 47395.0], [78.7, 47469.0], [78.8, 47469.0], [78.9, 47640.0], [79.0, 47812.0], [79.1, 47812.0], [79.2, 48065.0], [79.3, 48353.0], [79.4, 48353.0], [79.5, 48359.0], [79.6, 48359.0], [79.7, 48437.0], [79.8, 48464.0], [79.9, 48464.0], [80.0, 48476.0], [80.1, 48835.0], [80.2, 48835.0], [80.3, 48898.0], [80.4, 48898.0], [80.5, 49037.0], [80.6, 49413.0], [80.7, 49413.0], [80.8, 49609.0], [80.9, 49609.0], [81.0, 49715.0], [81.1, 49716.0], [81.2, 49716.0], [81.3, 50056.0], [81.4, 50309.0], [81.5, 50309.0], [81.6, 50314.0], [81.7, 50314.0], [81.8, 50632.0], [81.9, 50696.0], [82.0, 50696.0], [82.1, 50792.0], [82.2, 50792.0], [82.3, 50883.0], [82.4, 51145.0], [82.5, 51145.0], [82.6, 51391.0], [82.7, 51627.0], [82.8, 51627.0], [82.9, 51865.0], [83.0, 51865.0], [83.1, 51878.0], [83.2, 52449.0], [83.3, 52449.0], [83.4, 52470.0], [83.5, 52605.0], [83.6, 52605.0], [83.7, 52640.0], [83.8, 52640.0], [83.9, 52656.0], [84.0, 52687.0], [84.1, 52687.0], [84.2, 52803.0], [84.3, 52803.0], [84.4, 52822.0], [84.5, 53076.0], [84.6, 53076.0], [84.7, 53233.0], [84.8, 53276.0], [84.9, 53276.0], [85.0, 53390.0], [85.1, 53390.0], [85.2, 53534.0], [85.3, 53570.0], [85.4, 53570.0], [85.5, 53594.0], [85.6, 53847.0], [85.7, 53847.0], [85.8, 54170.0], [85.9, 54170.0], [86.0, 54356.0], [86.1, 54519.0], [86.2, 54519.0], [86.3, 54764.0], [86.4, 54764.0], [86.5, 54949.0], [86.6, 55164.0], [86.7, 55164.0], [86.8, 55204.0], [86.9, 55290.0], [87.0, 55290.0], [87.1, 55423.0], [87.2, 55423.0], [87.3, 55488.0], [87.4, 55622.0], [87.5, 55622.0], [87.6, 56272.0], [87.7, 56272.0], [87.8, 56859.0], [87.9, 57013.0], [88.0, 57013.0], [88.1, 57014.0], [88.2, 57124.0], [88.3, 57124.0], [88.4, 57318.0], [88.5, 57318.0], [88.6, 57472.0], [88.7, 58161.0], [88.8, 58161.0], [88.9, 58188.0], [89.0, 58386.0], [89.1, 58386.0], [89.2, 58577.0], [89.3, 58577.0], [89.4, 58584.0], [89.5, 58593.0], [89.6, 58593.0], [89.7, 58617.0], [89.8, 58617.0], [89.9, 59118.0], [90.0, 59523.0], [90.1, 59523.0], [90.2, 59834.0], [90.3, 59891.0], [90.4, 59891.0], [90.5, 60076.0], [90.6, 60076.0], [90.7, 60307.0], [90.8, 60309.0], [90.9, 60309.0], [91.0, 60310.0], [91.1, 60310.0], [91.2, 60331.0], [91.3, 60338.0], [91.4, 60338.0], [91.5, 60351.0], [91.6, 60362.0], [91.7, 60362.0], [91.8, 60370.0], [91.9, 60370.0], [92.0, 60377.0], [92.1, 60380.0], [92.2, 60380.0], [92.3, 60380.0], [92.4, 60381.0], [92.5, 60381.0], [92.6, 60399.0], [92.7, 60399.0], [92.8, 60401.0], [92.9, 60406.0], [93.0, 60406.0], [93.1, 60406.0], [93.2, 60406.0], [93.3, 60407.0], [93.4, 60417.0], [93.5, 60417.0], [93.6, 60417.0], [93.7, 60419.0], [93.8, 60419.0], [93.9, 60419.0], [94.0, 60419.0], [94.1, 60437.0], [94.2, 60448.0], [94.3, 60448.0], [94.4, 60449.0], [94.5, 60454.0], [94.6, 60454.0], [94.7, 60457.0], [94.8, 60457.0], [94.9, 60457.0], [95.0, 60461.0], [95.1, 60461.0], [95.2, 60462.0], [95.3, 60462.0], [95.4, 60465.0], [95.5, 60473.0], [95.6, 60473.0], [95.7, 60478.0], [95.8, 60488.0], [95.9, 60488.0], [96.0, 60507.0], [96.1, 60507.0], [96.2, 60508.0], [96.3, 60508.0], [96.4, 60508.0], [96.5, 60510.0], [96.6, 60510.0], [96.7, 60511.0], [96.8, 60513.0], [96.9, 60513.0], [97.0, 60514.0], [97.1, 60525.0], [97.2, 60525.0], [97.3, 60526.0], [97.4, 60526.0], [97.5, 60532.0], [97.6, 60535.0], [97.7, 60535.0], [97.8, 60554.0], [97.9, 60560.0], [98.0, 60560.0], [98.1, 60568.0], [98.2, 60568.0], [98.3, 60571.0], [98.4, 60575.0], [98.5, 60575.0], [98.6, 60595.0], [98.7, 60595.0], [98.8, 60625.0], [98.9, 60626.0], [99.0, 60626.0], [99.1, 60635.0], [99.2, 60638.0], [99.3, 60638.0], [99.4, 60663.0], [99.5, 60663.0], [99.6, 60678.0], [99.7, 60709.0], [99.8, 60709.0], [99.9, 60718.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 103.0], [0.1, 103.0], [0.2, 104.0], [0.3, 104.0], [0.4, 104.0], [0.5, 104.0], [0.6, 104.0], [0.7, 105.0], [0.8, 105.0], [0.9, 105.0], [1.0, 105.0], [1.1, 105.0], [1.2, 105.0], [1.3, 105.0], [1.4, 105.0], [1.5, 105.0], [1.6, 105.0], [1.7, 105.0], [1.8, 105.0], [1.9, 105.0], [2.0, 105.0], [2.1, 105.0], [2.2, 105.0], [2.3, 105.0], [2.4, 105.0], [2.5, 105.0], [2.6, 105.0], [2.7, 105.0], [2.8, 105.0], [2.9, 105.0], [3.0, 105.0], [3.1, 105.0], [3.2, 105.0], [3.3, 105.0], [3.4, 105.0], [3.5, 106.0], [3.6, 106.0], [3.7, 106.0], [3.8, 106.0], [3.9, 106.0], [4.0, 106.0], [4.1, 106.0], [4.2, 106.0], [4.3, 106.0], [4.4, 106.0], [4.5, 106.0], [4.6, 106.0], [4.7, 106.0], [4.8, 106.0], [4.9, 106.0], [5.0, 106.0], [5.1, 106.0], [5.2, 106.0], [5.3, 106.0], [5.4, 106.0], [5.5, 106.0], [5.6, 106.0], [5.7, 106.0], [5.8, 106.0], [5.9, 106.0], [6.0, 106.0], [6.1, 106.0], [6.2, 106.0], [6.3, 106.0], [6.4, 107.0], [6.5, 107.0], [6.6, 107.0], [6.7, 107.0], [6.8, 107.0], [6.9, 107.0], [7.0, 107.0], [7.1, 107.0], [7.2, 107.0], [7.3, 107.0], [7.4, 107.0], [7.5, 107.0], [7.6, 107.0], [7.7, 107.0], [7.8, 107.0], [7.9, 107.0], [8.0, 107.0], [8.1, 107.0], [8.2, 107.0], [8.3, 107.0], [8.4, 107.0], [8.5, 107.0], [8.6, 108.0], [8.7, 108.0], [8.8, 108.0], [8.9, 108.0], [9.0, 108.0], [9.1, 108.0], [9.2, 108.0], [9.3, 108.0], [9.4, 108.0], [9.5, 108.0], [9.6, 109.0], [9.7, 109.0], [9.8, 110.0], [9.9, 114.0], [10.0, 114.0], [10.1, 114.0], [10.2, 114.0], [10.3, 115.0], [10.4, 116.0], [10.5, 116.0], [10.6, 119.0], [10.7, 119.0], [10.8, 119.0], [10.9, 119.0], [11.0, 119.0], [11.1, 120.0], [11.2, 122.0], [11.3, 122.0], [11.4, 124.0], [11.5, 124.0], [11.6, 125.0], [11.7, 127.0], [11.8, 127.0], [11.9, 127.0], [12.0, 132.0], [12.1, 132.0], [12.2, 134.0], [12.3, 134.0], [12.4, 134.0], [12.5, 134.0], [12.6, 134.0], [12.7, 136.0], [12.8, 136.0], [12.9, 138.0], [13.0, 139.0], [13.1, 139.0], [13.2, 139.0], [13.3, 139.0], [13.4, 139.0], [13.5, 139.0], [13.6, 139.0], [13.7, 141.0], [13.8, 142.0], [13.9, 142.0], [14.0, 142.0], [14.1, 142.0], [14.2, 143.0], [14.3, 146.0], [14.4, 146.0], [14.5, 147.0], [14.6, 151.0], [14.7, 151.0], [14.8, 153.0], [14.9, 153.0], [15.0, 156.0], [15.1, 157.0], [15.2, 157.0], [15.3, 159.0], [15.4, 160.0], [15.5, 160.0], [15.6, 161.0], [15.7, 161.0], [15.8, 161.0], [15.9, 165.0], [16.0, 165.0], [16.1, 166.0], [16.2, 166.0], [16.3, 167.0], [16.4, 168.0], [16.5, 168.0], [16.6, 168.0], [16.7, 169.0], [16.8, 169.0], [16.9, 169.0], [17.0, 169.0], [17.1, 172.0], [17.2, 172.0], [17.3, 172.0], [17.4, 174.0], [17.5, 174.0], [17.6, 178.0], [17.7, 178.0], [17.8, 178.0], [17.9, 191.0], [18.0, 193.0], [18.1, 193.0], [18.2, 194.0], [18.3, 194.0], [18.4, 196.0], [18.5, 197.0], [18.6, 197.0], [18.7, 198.0], [18.8, 198.0], [18.9, 208.0], [19.0, 790.0], [19.1, 790.0], [19.2, 810.0], [19.3, 810.0], [19.4, 810.0], [19.5, 970.0], [19.6, 970.0], [19.7, 975.0], [19.8, 977.0], [19.9, 977.0], [20.0, 979.0], [20.1, 990.0], [20.2, 990.0], [20.3, 1017.0], [20.4, 1017.0], [20.5, 1024.0], [20.6, 1070.0], [20.7, 1070.0], [20.8, 1073.0], [20.9, 1073.0], [21.0, 1082.0], [21.1, 1161.0], [21.2, 1161.0], [21.3, 1170.0], [21.4, 1195.0], [21.5, 1195.0], [21.6, 1351.0], [21.7, 1351.0], [21.8, 1362.0], [21.9, 1432.0], [22.0, 1432.0], [22.1, 1482.0], [22.2, 1482.0], [22.3, 1577.0], [22.4, 1644.0], [22.5, 1644.0], [22.6, 1786.0], [22.7, 1950.0], [22.8, 1950.0], [22.9, 2006.0], [23.0, 2006.0], [23.1, 2476.0], [23.2, 2552.0], [23.3, 2552.0], [23.4, 2940.0], [23.5, 2940.0], [23.6, 3170.0], [23.7, 3929.0], [23.8, 3929.0], [23.9, 4140.0], [24.0, 4293.0], [24.1, 4293.0], [24.2, 4361.0], [24.3, 4361.0], [24.4, 4386.0], [24.5, 4487.0], [24.6, 4487.0], [24.7, 4788.0], [24.8, 4800.0], [24.9, 4800.0], [25.0, 4923.0], [25.1, 4923.0], [25.2, 4929.0], [25.3, 5104.0], [25.4, 5104.0], [25.5, 5170.0], [25.6, 5170.0], [25.7, 5199.0], [25.8, 5246.0], [25.9, 5246.0], [26.0, 5278.0], [26.1, 5300.0], [26.2, 5300.0], [26.3, 5392.0], [26.4, 5392.0], [26.5, 5426.0], [26.6, 5478.0], [26.7, 5478.0], [26.8, 5603.0], [26.9, 5603.0], [27.0, 5666.0], [27.1, 5728.0], [27.2, 5728.0], [27.3, 5825.0], [27.4, 5829.0], [27.5, 5829.0], [27.6, 5851.0], [27.7, 5851.0], [27.8, 5887.0], [27.9, 6015.0], [28.0, 6015.0], [28.1, 6381.0], [28.2, 6381.0], [28.3, 6548.0], [28.4, 6825.0], [28.5, 6825.0], [28.6, 7258.0], [28.7, 7592.0], [28.8, 7592.0], [28.9, 7644.0], [29.0, 7644.0], [29.1, 7808.0], [29.2, 8323.0], [29.3, 8323.0], [29.4, 8490.0], [29.5, 8613.0], [29.6, 8613.0], [29.7, 8931.0], [29.8, 8931.0], [29.9, 9278.0], [30.0, 9314.0], [30.1, 9314.0], [30.2, 9529.0], [30.3, 9529.0], [30.4, 9664.0], [30.5, 9826.0], [30.6, 9826.0], [30.7, 9882.0], [30.8, 10070.0], [30.9, 10070.0], [31.0, 10465.0], [31.1, 10465.0], [31.2, 10661.0], [31.3, 10727.0], [31.4, 10727.0], [31.5, 10907.0], [31.6, 10907.0], [31.7, 11367.0], [31.8, 11442.0], [31.9, 11442.0], [32.0, 11481.0], [32.1, 11723.0], [32.2, 11723.0], [32.3, 11745.0], [32.4, 11745.0], [32.5, 12176.0], [32.6, 12333.0], [32.7, 12333.0], [32.8, 12405.0], [32.9, 12405.0], [33.0, 12449.0], [33.1, 12489.0], [33.2, 12489.0], [33.3, 12522.0], [33.4, 12742.0], [33.5, 12742.0], [33.6, 13075.0], [33.7, 13075.0], [33.8, 13357.0], [33.9, 13455.0], [34.0, 13455.0], [34.1, 13554.0], [34.2, 13633.0], [34.3, 13633.0], [34.4, 13927.0], [34.5, 13927.0], [34.6, 14195.0], [34.7, 14344.0], [34.8, 14344.0], [34.9, 14482.0], [35.0, 14482.0], [35.1, 14866.0], [35.2, 14916.0], [35.3, 14916.0], [35.4, 14923.0], [35.5, 15685.0], [35.6, 15685.0], [35.7, 15692.0], [35.8, 15692.0], [35.9, 15889.0], [36.0, 15964.0], [36.1, 15964.0], [36.2, 16066.0], [36.3, 16066.0], [36.4, 16203.0], [36.5, 16455.0], [36.6, 16455.0], [36.7, 16503.0], [36.8, 16575.0], [36.9, 16575.0], [37.0, 16675.0], [37.1, 16675.0], [37.2, 16781.0], [37.3, 16984.0], [37.4, 16984.0], [37.5, 17664.0], [37.6, 17664.0], [37.7, 17727.0], [37.8, 17807.0], [37.9, 17807.0], [38.0, 17869.0], [38.1, 17898.0], [38.2, 17898.0], [38.3, 17977.0], [38.4, 17977.0], [38.5, 18156.0], [38.6, 18180.0], [38.7, 18180.0], [38.8, 18545.0], [38.9, 18698.0], [39.0, 18698.0], [39.1, 18737.0], [39.2, 18737.0], [39.3, 18762.0], [39.4, 18772.0], [39.5, 18772.0], [39.6, 18791.0], [39.7, 18791.0], [39.8, 18810.0], [39.9, 18818.0], [40.0, 18818.0], [40.1, 18865.0], [40.2, 18876.0], [40.3, 18876.0], [40.4, 18959.0], [40.5, 18959.0], [40.6, 18982.0], [40.7, 19061.0], [40.8, 19061.0], [40.9, 19101.0], [41.0, 19101.0], [41.1, 19338.0], [41.2, 19362.0], [41.3, 19362.0], [41.4, 19373.0], [41.5, 19449.0], [41.6, 19449.0], [41.7, 19512.0], [41.8, 19512.0], [41.9, 19529.0], [42.0, 19548.0], [42.1, 19548.0], [42.2, 19565.0], [42.3, 19565.0], [42.4, 19646.0], [42.5, 19751.0], [42.6, 19751.0], [42.7, 20114.0], [42.8, 20274.0], [42.9, 20274.0], [43.0, 20514.0], [43.1, 20514.0], [43.2, 20619.0], [43.3, 20685.0], [43.4, 20685.0], [43.5, 20802.0], [43.6, 20833.0], [43.7, 20833.0], [43.8, 20894.0], [43.9, 20894.0], [44.0, 21013.0], [44.1, 21092.0], [44.2, 21092.0], [44.3, 21094.0], [44.4, 21094.0], [44.5, 21140.0], [44.6, 21198.0], [44.7, 21198.0], [44.8, 21201.0], [44.9, 21224.0], [45.0, 21224.0], [45.1, 21355.0], [45.2, 21355.0], [45.3, 21393.0], [45.4, 21467.0], [45.5, 21467.0], [45.6, 21484.0], [45.7, 21484.0], [45.8, 21600.0], [45.9, 21757.0], [46.0, 21757.0], [46.1, 21877.0], [46.2, 21937.0], [46.3, 21937.0], [46.4, 21977.0], [46.5, 21977.0], [46.6, 22067.0], [46.7, 22165.0], [46.8, 22165.0], [46.9, 22169.0], [47.0, 22169.0], [47.1, 22231.0], [47.2, 22239.0], [47.3, 22239.0], [47.4, 22337.0], [47.5, 22410.0], [47.6, 22410.0], [47.7, 22571.0], [47.8, 22571.0], [47.9, 22634.0], [48.0, 22685.0], [48.1, 22685.0], [48.2, 22700.0], [48.3, 22774.0], [48.4, 22774.0], [48.5, 22802.0], [48.6, 22802.0], [48.7, 22874.0], [48.8, 22916.0], [48.9, 22916.0], [49.0, 22938.0], [49.1, 22938.0], [49.2, 23054.0], [49.3, 23091.0], [49.4, 23091.0], [49.5, 23187.0], [49.6, 23253.0], [49.7, 23253.0], [49.8, 23320.0], [49.9, 23320.0], [50.0, 23353.0], [50.1, 23428.0], [50.2, 23428.0], [50.3, 23449.0], [50.4, 23449.0], [50.5, 23471.0], [50.6, 23730.0], [50.7, 23730.0], [50.8, 23756.0], [50.9, 24027.0], [51.0, 24027.0], [51.1, 24052.0], [51.2, 24052.0], [51.3, 24308.0], [51.4, 24377.0], [51.5, 24377.0], [51.6, 24581.0], [51.7, 24581.0], [51.8, 24743.0], [51.9, 24854.0], [52.0, 24854.0], [52.1, 24881.0], [52.2, 24902.0], [52.3, 24902.0], [52.4, 24948.0], [52.5, 24948.0], [52.6, 25089.0], [52.7, 25150.0], [52.8, 25150.0], [52.9, 25161.0], [53.0, 25293.0], [53.1, 25293.0], [53.2, 25333.0], [53.3, 25333.0], [53.4, 25870.0], [53.5, 26152.0], [53.6, 26152.0], [53.7, 26181.0], [53.8, 26181.0], [53.9, 26285.0], [54.0, 26340.0], [54.1, 26340.0], [54.2, 26824.0], [54.3, 26993.0], [54.4, 26993.0], [54.5, 27060.0], [54.6, 27060.0], [54.7, 27138.0], [54.8, 27339.0], [54.9, 27339.0], [55.0, 27626.0], [55.1, 27626.0], [55.2, 27850.0], [55.3, 27861.0], [55.4, 27861.0], [55.5, 27986.0], [55.6, 28008.0], [55.7, 28008.0], [55.8, 28120.0], [55.9, 28120.0], [56.0, 28229.0], [56.1, 28704.0], [56.2, 28704.0], [56.3, 28800.0], [56.4, 28800.0], [56.5, 28957.0], [56.6, 29035.0], [56.7, 29035.0], [56.8, 29412.0], [56.9, 30001.0], [57.0, 30001.0], [57.1, 30005.0], [57.2, 30005.0], [57.3, 30080.0], [57.4, 30422.0], [57.5, 30422.0], [57.6, 30422.0], [57.7, 30507.0], [57.8, 30507.0], [57.9, 30521.0], [58.0, 30521.0], [58.1, 30596.0], [58.2, 30952.0], [58.3, 30952.0], [58.4, 31404.0], [58.5, 31404.0], [58.6, 31501.0], [58.7, 31570.0], [58.8, 31570.0], [58.9, 31586.0], [59.0, 31598.0], [59.1, 31598.0], [59.2, 31781.0], [59.3, 31781.0], [59.4, 31837.0], [59.5, 32042.0], [59.6, 32042.0], [59.7, 32053.0], [59.8, 32053.0], [59.9, 32143.0], [60.0, 32369.0], [60.1, 32369.0], [60.2, 32457.0], [60.3, 32898.0], [60.4, 32898.0], [60.5, 32941.0], [60.6, 32941.0], [60.7, 33053.0], [60.8, 33146.0], [60.9, 33146.0], [61.0, 34402.0], [61.1, 34402.0], [61.2, 34882.0], [61.3, 34893.0], [61.4, 34893.0], [61.5, 34978.0], [61.6, 34994.0], [61.7, 34994.0], [61.8, 35095.0], [61.9, 35095.0], [62.0, 35140.0], [62.1, 35384.0], [62.2, 35384.0], [62.3, 35423.0], [62.4, 35698.0], [62.5, 35698.0], [62.6, 36400.0], [62.7, 36400.0], [62.8, 36512.0], [62.9, 36523.0], [63.0, 36523.0], [63.1, 36589.0], [63.2, 36589.0], [63.3, 36700.0], [63.4, 36858.0], [63.5, 36858.0], [63.6, 36893.0], [63.7, 37012.0], [63.8, 37012.0], [63.9, 37219.0], [64.0, 37219.0], [64.1, 37304.0], [64.2, 37363.0], [64.3, 37363.0], [64.4, 37449.0], [64.5, 37449.0], [64.6, 37488.0], [64.7, 37592.0], [64.8, 37592.0], [64.9, 38064.0], [65.0, 38231.0], [65.1, 38231.0], [65.2, 38479.0], [65.3, 38479.0], [65.4, 38615.0], [65.5, 38797.0], [65.6, 38797.0], [65.7, 38950.0], [65.8, 38950.0], [65.9, 39040.0], [66.0, 39097.0], [66.1, 39097.0], [66.2, 39126.0], [66.3, 39244.0], [66.4, 39244.0], [66.5, 39288.0], [66.6, 39288.0], [66.7, 39382.0], [66.8, 39443.0], [66.9, 39443.0], [67.0, 39465.0], [67.1, 39546.0], [67.2, 39546.0], [67.3, 39710.0], [67.4, 39710.0], [67.5, 39792.0], [67.6, 39907.0], [67.7, 39907.0], [67.8, 40156.0], [67.9, 40156.0], [68.0, 40208.0], [68.1, 40221.0], [68.2, 40221.0], [68.3, 40344.0], [68.4, 40381.0], [68.5, 40381.0], [68.6, 40607.0], [68.7, 40607.0], [68.8, 40760.0], [68.9, 40951.0], [69.0, 40951.0], [69.1, 41046.0], [69.2, 41046.0], [69.3, 41068.0], [69.4, 41308.0], [69.5, 41308.0], [69.6, 41359.0], [69.7, 41359.0], [69.8, 41359.0], [69.9, 41599.0], [70.0, 41599.0], [70.1, 41688.0], [70.2, 41733.0], [70.3, 41733.0], [70.4, 41761.0], [70.5, 41761.0], [70.6, 41829.0], [70.7, 41925.0], [70.8, 41925.0], [70.9, 41932.0], [71.0, 42081.0], [71.1, 42081.0], [71.2, 42195.0], [71.3, 42195.0], [71.4, 42282.0], [71.5, 42318.0], [71.6, 42318.0], [71.7, 42378.0], [71.8, 42409.0], [71.9, 42409.0], [72.0, 42484.0], [72.1, 42484.0], [72.2, 42556.0], [72.3, 42570.0], [72.4, 42570.0], [72.5, 42650.0], [72.6, 42650.0], [72.7, 42738.0], [72.8, 42762.0], [72.9, 42762.0], [73.0, 42814.0], [73.1, 42816.0], [73.2, 42816.0], [73.3, 42830.0], [73.4, 42830.0], [73.5, 42833.0], [73.6, 43021.0], [73.7, 43021.0], [73.8, 43091.0], [73.9, 43091.0], [74.0, 43130.0], [74.1, 43158.0], [74.2, 43158.0], [74.3, 43260.0], [74.4, 43335.0], [74.5, 43335.0], [74.6, 43348.0], [74.7, 43348.0], [74.8, 43618.0], [74.9, 43691.0], [75.0, 43691.0], [75.1, 43790.0], [75.2, 43790.0], [75.3, 43819.0], [75.4, 43854.0], [75.5, 43854.0], [75.6, 43880.0], [75.7, 43885.0], [75.8, 43885.0], [75.9, 44308.0], [76.0, 44308.0], [76.1, 44468.0], [76.2, 44589.0], [76.3, 44589.0], [76.4, 44793.0], [76.5, 44924.0], [76.6, 44924.0], [76.7, 45015.0], [76.8, 45015.0], [76.9, 45072.0], [77.0, 45094.0], [77.1, 45094.0], [77.2, 45226.0], [77.3, 45226.0], [77.4, 45296.0], [77.5, 45395.0], [77.6, 45395.0], [77.7, 46410.0], [77.8, 46854.0], [77.9, 46854.0], [78.0, 46864.0], [78.1, 46864.0], [78.2, 46865.0], [78.3, 47060.0], [78.4, 47060.0], [78.5, 47061.0], [78.6, 47061.0], [78.7, 47091.0], [78.8, 47434.0], [78.9, 47434.0], [79.0, 47607.0], [79.1, 47659.0], [79.2, 47659.0], [79.3, 48007.0], [79.4, 48007.0], [79.5, 48049.0], [79.6, 48169.0], [79.7, 48169.0], [79.8, 48229.0], [79.9, 48229.0], [80.0, 48257.0], [80.1, 48401.0], [80.2, 48401.0], [80.3, 48521.0], [80.4, 48527.0], [80.5, 48527.0], [80.6, 49006.0], [80.7, 49006.0], [80.8, 49287.0], [80.9, 49355.0], [81.0, 49355.0], [81.1, 49447.0], [81.2, 49841.0], [81.3, 49841.0], [81.4, 50062.0], [81.5, 50062.0], [81.6, 50108.0], [81.7, 50164.0], [81.8, 50164.0], [81.9, 50319.0], [82.0, 50319.0], [82.1, 50384.0], [82.2, 50649.0], [82.3, 50649.0], [82.4, 50669.0], [82.5, 51165.0], [82.6, 51165.0], [82.7, 51419.0], [82.8, 51419.0], [82.9, 51560.0], [83.0, 51667.0], [83.1, 51667.0], [83.2, 52198.0], [83.3, 52198.0], [83.4, 52243.0], [83.5, 52261.0], [83.6, 52261.0], [83.7, 52280.0], [83.8, 52337.0], [83.9, 52337.0], [84.0, 52351.0], [84.1, 52351.0], [84.2, 52395.0], [84.3, 52518.0], [84.4, 52518.0], [84.5, 52865.0], [84.6, 52865.0], [84.7, 52869.0], [84.8, 53028.0], [84.9, 53028.0], [85.0, 53085.0], [85.1, 53178.0], [85.2, 53178.0], [85.3, 53229.0], [85.4, 53229.0], [85.5, 53334.0], [85.6, 53629.0], [85.7, 53629.0], [85.8, 53691.0], [85.9, 53962.0], [86.0, 53962.0], [86.1, 54142.0], [86.2, 54142.0], [86.3, 54236.0], [86.4, 54553.0], [86.5, 54553.0], [86.6, 54857.0], [86.7, 54857.0], [86.8, 54881.0], [86.9, 54898.0], [87.0, 54898.0], [87.1, 55095.0], [87.2, 55214.0], [87.3, 55214.0], [87.4, 55217.0], [87.5, 55217.0], [87.6, 55966.0], [87.7, 56572.0], [87.8, 56572.0], [87.9, 56604.0], [88.0, 56604.0], [88.1, 56716.0], [88.2, 56781.0], [88.3, 56781.0], [88.4, 56991.0], [88.5, 57170.0], [88.6, 57170.0], [88.7, 57779.0], [88.8, 57779.0], [88.9, 57953.0], [89.0, 58138.0], [89.1, 58138.0], [89.2, 58274.0], [89.3, 58274.0], [89.4, 58312.0], [89.5, 58375.0], [89.6, 58375.0], [89.7, 58386.0], [89.8, 58711.0], [89.9, 58711.0], [90.0, 59126.0], [90.1, 59126.0], [90.2, 59527.0], [90.3, 59556.0], [90.4, 59556.0], [90.5, 59673.0], [90.6, 59924.0], [90.7, 59924.0], [90.8, 60098.0], [90.9, 60098.0], [91.0, 60099.0], [91.1, 60100.0], [91.2, 60100.0], [91.3, 60100.0], [91.4, 60100.0], [91.5, 60101.0], [91.6, 60101.0], [91.7, 60101.0], [91.8, 60101.0], [91.9, 60101.0], [92.0, 60101.0], [92.1, 60101.0], [92.2, 60101.0], [92.3, 60102.0], [92.4, 60102.0], [92.5, 60102.0], [92.6, 60103.0], [92.7, 60103.0], [92.8, 60103.0], [92.9, 60106.0], [93.0, 60106.0], [93.1, 60109.0], [93.2, 60112.0], [93.3, 60112.0], [93.4, 60113.0], [93.5, 60113.0], [93.6, 60114.0], [93.7, 60123.0], [93.8, 60123.0], [93.9, 60127.0], [94.0, 60127.0], [94.1, 60127.0], [94.2, 60132.0], [94.3, 60132.0], [94.4, 60141.0], [94.5, 60143.0], [94.6, 60143.0], [94.7, 60146.0], [94.8, 60146.0], [94.9, 60148.0], [95.0, 60152.0], [95.1, 60152.0], [95.2, 60153.0], [95.3, 60154.0], [95.4, 60154.0], [95.5, 60156.0], [95.6, 60156.0], [95.7, 60159.0], [95.8, 60160.0], [95.9, 60160.0], [96.0, 60160.0], [96.1, 60160.0], [96.2, 60165.0], [96.3, 60167.0], [96.4, 60167.0], [96.5, 60170.0], [96.6, 60171.0], [96.7, 60171.0], [96.8, 60173.0], [96.9, 60173.0], [97.0, 60180.0], [97.1, 60187.0], [97.2, 60187.0], [97.3, 60188.0], [97.4, 60188.0], [97.5, 60200.0], [97.6, 60200.0], [97.7, 60200.0], [97.8, 60201.0], [97.9, 60203.0], [98.0, 60203.0], [98.1, 60204.0], [98.2, 60204.0], [98.3, 60215.0], [98.4, 60217.0], [98.5, 60217.0], [98.6, 60220.0], [98.7, 60220.0], [98.8, 60225.0], [98.9, 60229.0], [99.0, 60229.0], [99.1, 60239.0], [99.2, 60270.0], [99.3, 60270.0], [99.4, 60304.0], [99.5, 60304.0], [99.6, 60306.0], [99.7, 60310.0], [99.8, 60310.0], [99.9, 60383.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 205.0], [0.1, 205.0], [0.2, 205.0], [0.3, 205.0], [0.4, 205.0], [0.5, 205.0], [0.6, 205.0], [0.7, 205.0], [0.8, 205.0], [0.9, 205.0], [1.0, 205.0], [1.1, 205.0], [1.2, 205.0], [1.3, 206.0], [1.4, 206.0], [1.5, 206.0], [1.6, 206.0], [1.7, 206.0], [1.8, 206.0], [1.9, 206.0], [2.0, 206.0], [2.1, 206.0], [2.2, 206.0], [2.3, 206.0], [2.4, 206.0], [2.5, 206.0], [2.6, 207.0], [2.7, 207.0], [2.8, 207.0], [2.9, 207.0], [3.0, 207.0], [3.1, 207.0], [3.2, 207.0], [3.3, 207.0], [3.4, 207.0], [3.5, 207.0], [3.6, 207.0], [3.7, 207.0], [3.8, 207.0], [3.9, 207.0], [4.0, 207.0], [4.1, 208.0], [4.2, 208.0], [4.3, 208.0], [4.4, 208.0], [4.5, 208.0], [4.6, 208.0], [4.7, 208.0], [4.8, 208.0], [4.9, 208.0], [5.0, 208.0], [5.1, 208.0], [5.2, 208.0], [5.3, 208.0], [5.4, 208.0], [5.5, 208.0], [5.6, 208.0], [5.7, 208.0], [5.8, 208.0], [5.9, 208.0], [6.0, 209.0], [6.1, 209.0], [6.2, 209.0], [6.3, 209.0], [6.4, 209.0], [6.5, 209.0], [6.6, 209.0], [6.7, 209.0], [6.8, 209.0], [6.9, 209.0], [7.0, 209.0], [7.1, 209.0], [7.2, 209.0], [7.3, 209.0], [7.4, 209.0], [7.5, 209.0], [7.6, 209.0], [7.7, 209.0], [7.8, 209.0], [7.9, 209.0], [8.0, 209.0], [8.1, 209.0], [8.2, 209.0], [8.3, 209.0], [8.4, 209.0], [8.5, 209.0], [8.6, 209.0], [8.7, 209.0], [8.8, 210.0], [8.9, 210.0], [9.0, 210.0], [9.1, 210.0], [9.2, 210.0], [9.3, 210.0], [9.4, 210.0], [9.5, 210.0], [9.6, 210.0], [9.7, 210.0], [9.8, 210.0], [9.9, 210.0], [10.0, 210.0], [10.1, 210.0], [10.2, 210.0], [10.3, 210.0], [10.4, 211.0], [10.5, 211.0], [10.6, 211.0], [10.7, 211.0], [10.8, 211.0], [10.9, 211.0], [11.0, 211.0], [11.1, 211.0], [11.2, 211.0], [11.3, 211.0], [11.4, 211.0], [11.5, 211.0], [11.6, 211.0], [11.7, 211.0], [11.8, 211.0], [11.9, 211.0], [12.0, 212.0], [12.1, 212.0], [12.2, 212.0], [12.3, 213.0], [12.4, 213.0], [12.5, 213.0], [12.6, 213.0], [12.7, 213.0], [12.8, 213.0], [12.9, 213.0], [13.0, 214.0], [13.1, 214.0], [13.2, 214.0], [13.3, 214.0], [13.4, 214.0], [13.5, 214.0], [13.6, 214.0], [13.7, 214.0], [13.8, 214.0], [13.9, 214.0], [14.0, 214.0], [14.1, 214.0], [14.2, 214.0], [14.3, 215.0], [14.4, 215.0], [14.5, 215.0], [14.6, 215.0], [14.7, 215.0], [14.8, 215.0], [14.9, 216.0], [15.0, 216.0], [15.1, 217.0], [15.2, 217.0], [15.3, 217.0], [15.4, 217.0], [15.5, 217.0], [15.6, 218.0], [15.7, 218.0], [15.8, 218.0], [15.9, 218.0], [16.0, 218.0], [16.1, 218.0], [16.2, 219.0], [16.3, 219.0], [16.4, 220.0], [16.5, 220.0], [16.6, 220.0], [16.7, 220.0], [16.8, 220.0], [16.9, 220.0], [17.0, 221.0], [17.1, 221.0], [17.2, 221.0], [17.3, 221.0], [17.4, 222.0], [17.5, 222.0], [17.6, 222.0], [17.7, 224.0], [17.8, 224.0], [17.9, 224.0], [18.0, 225.0], [18.1, 225.0], [18.2, 225.0], [18.3, 226.0], [18.4, 226.0], [18.5, 227.0], [18.6, 227.0], [18.7, 228.0], [18.8, 228.0], [18.9, 228.0], [19.0, 229.0], [19.1, 229.0], [19.2, 229.0], [19.3, 229.0], [19.4, 229.0], [19.5, 229.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 231.0], [20.1, 231.0], [20.2, 231.0], [20.3, 231.0], [20.4, 232.0], [20.5, 232.0], [20.6, 232.0], [20.7, 232.0], [20.8, 233.0], [20.9, 233.0], [21.0, 233.0], [21.1, 234.0], [21.2, 234.0], [21.3, 234.0], [21.4, 235.0], [21.5, 235.0], [21.6, 236.0], [21.7, 236.0], [21.8, 236.0], [21.9, 237.0], [22.0, 237.0], [22.1, 239.0], [22.2, 239.0], [22.3, 239.0], [22.4, 241.0], [22.5, 241.0], [22.6, 241.0], [22.7, 241.0], [22.8, 241.0], [22.9, 242.0], [23.0, 243.0], [23.1, 243.0], [23.2, 244.0], [23.3, 244.0], [23.4, 244.0], [23.5, 247.0], [23.6, 247.0], [23.7, 247.0], [23.8, 247.0], [23.9, 247.0], [24.0, 248.0], [24.1, 248.0], [24.2, 248.0], [24.3, 250.0], [24.4, 250.0], [24.5, 250.0], [24.6, 251.0], [24.7, 251.0], [24.8, 251.0], [24.9, 251.0], [25.0, 253.0], [25.1, 253.0], [25.2, 253.0], [25.3, 253.0], [25.4, 253.0], [25.5, 256.0], [25.6, 256.0], [25.7, 256.0], [25.8, 259.0], [25.9, 260.0], [26.0, 260.0], [26.1, 261.0], [26.2, 261.0], [26.3, 266.0], [26.4, 267.0], [26.5, 267.0], [26.6, 268.0], [26.7, 269.0], [26.8, 269.0], [26.9, 269.0], [27.0, 269.0], [27.1, 272.0], [27.2, 274.0], [27.3, 274.0], [27.4, 275.0], [27.5, 275.0], [27.6, 276.0], [27.7, 278.0], [27.8, 278.0], [27.9, 278.0], [28.0, 278.0], [28.1, 278.0], [28.2, 279.0], [28.3, 279.0], [28.4, 279.0], [28.5, 279.0], [28.6, 279.0], [28.7, 282.0], [28.8, 282.0], [28.9, 283.0], [29.0, 284.0], [29.1, 284.0], [29.2, 285.0], [29.3, 286.0], [29.4, 286.0], [29.5, 286.0], [29.6, 286.0], [29.7, 287.0], [29.8, 288.0], [29.9, 288.0], [30.0, 291.0], [30.1, 293.0], [30.2, 293.0], [30.3, 295.0], [30.4, 295.0], [30.5, 297.0], [30.6, 297.0], [30.7, 297.0], [30.8, 298.0], [30.9, 298.0], [31.0, 298.0], [31.1, 300.0], [31.2, 300.0], [31.3, 302.0], [31.4, 302.0], [31.5, 302.0], [31.6, 303.0], [31.7, 303.0], [31.8, 303.0], [31.9, 303.0], [32.0, 303.0], [32.1, 303.0], [32.2, 303.0], [32.3, 303.0], [32.4, 304.0], [32.5, 304.0], [32.6, 304.0], [32.7, 304.0], [32.8, 304.0], [32.9, 304.0], [33.0, 304.0], [33.1, 304.0], [33.2, 304.0], [33.3, 304.0], [33.4, 304.0], [33.5, 304.0], [33.6, 304.0], [33.7, 304.0], [33.8, 304.0], [33.9, 305.0], [34.0, 305.0], [34.1, 305.0], [34.2, 305.0], [34.3, 305.0], [34.4, 305.0], [34.5, 305.0], [34.6, 305.0], [34.7, 305.0], [34.8, 305.0], [34.9, 305.0], [35.0, 305.0], [35.1, 305.0], [35.2, 305.0], [35.3, 305.0], [35.4, 305.0], [35.5, 305.0], [35.6, 305.0], [35.7, 305.0], [35.8, 305.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 305.0], [36.3, 305.0], [36.4, 305.0], [36.5, 305.0], [36.6, 306.0], [36.7, 306.0], [36.8, 306.0], [36.9, 306.0], [37.0, 306.0], [37.1, 306.0], [37.2, 306.0], [37.3, 306.0], [37.4, 306.0], [37.5, 306.0], [37.6, 306.0], [37.7, 306.0], [37.8, 306.0], [37.9, 306.0], [38.0, 306.0], [38.1, 306.0], [38.2, 306.0], [38.3, 306.0], [38.4, 306.0], [38.5, 306.0], [38.6, 306.0], [38.7, 306.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 306.0], [39.2, 306.0], [39.3, 306.0], [39.4, 306.0], [39.5, 306.0], [39.6, 306.0], [39.7, 306.0], [39.8, 306.0], [39.9, 306.0], [40.0, 306.0], [40.1, 306.0], [40.2, 306.0], [40.3, 307.0], [40.4, 307.0], [40.5, 307.0], [40.6, 307.0], [40.7, 307.0], [40.8, 307.0], [40.9, 307.0], [41.0, 307.0], [41.1, 307.0], [41.2, 307.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 307.0], [41.9, 307.0], [42.0, 307.0], [42.1, 307.0], [42.2, 307.0], [42.3, 307.0], [42.4, 307.0], [42.5, 307.0], [42.6, 307.0], [42.7, 307.0], [42.8, 307.0], [42.9, 307.0], [43.0, 307.0], [43.1, 308.0], [43.2, 308.0], [43.3, 308.0], [43.4, 309.0], [43.5, 309.0], [43.6, 309.0], [43.7, 309.0], [43.8, 309.0], [43.9, 309.0], [44.0, 309.0], [44.1, 309.0], [44.2, 309.0], [44.3, 309.0], [44.4, 309.0], [44.5, 310.0], [44.6, 310.0], [44.7, 310.0], [44.8, 310.0], [44.9, 310.0], [45.0, 310.0], [45.1, 310.0], [45.2, 310.0], [45.3, 310.0], [45.4, 310.0], [45.5, 311.0], [45.6, 311.0], [45.7, 311.0], [45.8, 311.0], [45.9, 311.0], [46.0, 312.0], [46.1, 312.0], [46.2, 313.0], [46.3, 313.0], [46.4, 313.0], [46.5, 313.0], [46.6, 313.0], [46.7, 313.0], [46.8, 313.0], [46.9, 313.0], [47.0, 314.0], [47.1, 315.0], [47.2, 315.0], [47.3, 316.0], [47.4, 316.0], [47.5, 317.0], [47.6, 317.0], [47.7, 317.0], [47.8, 318.0], [47.9, 318.0], [48.0, 318.0], [48.1, 318.0], [48.2, 318.0], [48.3, 319.0], [48.4, 319.0], [48.5, 319.0], [48.6, 319.0], [48.7, 319.0], [48.8, 319.0], [48.9, 319.0], [49.0, 319.0], [49.1, 320.0], [49.2, 320.0], [49.3, 320.0], [49.4, 320.0], [49.5, 320.0], [49.6, 321.0], [49.7, 321.0], [49.8, 321.0], [49.9, 322.0], [50.0, 322.0], [50.1, 322.0], [50.2, 322.0], [50.3, 322.0], [50.4, 322.0], [50.5, 322.0], [50.6, 322.0], [50.7, 323.0], [50.8, 323.0], [50.9, 324.0], [51.0, 324.0], [51.1, 324.0], [51.2, 326.0], [51.3, 326.0], [51.4, 326.0], [51.5, 326.0], [51.6, 326.0], [51.7, 327.0], [51.8, 327.0], [51.9, 327.0], [52.0, 327.0], [52.1, 327.0], [52.2, 329.0], [52.3, 329.0], [52.4, 329.0], [52.5, 330.0], [52.6, 330.0], [52.7, 330.0], [52.8, 331.0], [52.9, 331.0], [53.0, 334.0], [53.1, 335.0], [53.2, 335.0], [53.3, 335.0], [53.4, 338.0], [53.5, 338.0], [53.6, 339.0], [53.7, 339.0], [53.8, 339.0], [53.9, 339.0], [54.0, 339.0], [54.1, 339.0], [54.2, 339.0], [54.3, 341.0], [54.4, 343.0], [54.5, 343.0], [54.6, 344.0], [54.7, 346.0], [54.8, 346.0], [54.9, 346.0], [55.0, 346.0], [55.1, 349.0], [55.2, 350.0], [55.3, 350.0], [55.4, 351.0], [55.5, 351.0], [55.6, 352.0], [55.7, 352.0], [55.8, 352.0], [55.9, 352.0], [56.0, 352.0], [56.1, 352.0], [56.2, 353.0], [56.3, 353.0], [56.4, 354.0], [56.5, 354.0], [56.6, 354.0], [56.7, 354.0], [56.8, 356.0], [56.9, 356.0], [57.0, 356.0], [57.1, 356.0], [57.2, 359.0], [57.3, 360.0], [57.4, 360.0], [57.5, 361.0], [57.6, 361.0], [57.7, 362.0], [57.8, 362.0], [57.9, 362.0], [58.0, 363.0], [58.1, 363.0], [58.2, 363.0], [58.3, 363.0], [58.4, 363.0], [58.5, 364.0], [58.6, 365.0], [58.7, 365.0], [58.8, 370.0], [58.9, 372.0], [59.0, 372.0], [59.1, 372.0], [59.2, 372.0], [59.3, 375.0], [59.4, 378.0], [59.5, 378.0], [59.6, 379.0], [59.7, 379.0], [59.8, 380.0], [59.9, 383.0], [60.0, 383.0], [60.1, 383.0], [60.2, 384.0], [60.3, 384.0], [60.4, 386.0], [60.5, 386.0], [60.6, 386.0], [60.7, 387.0], [60.8, 387.0], [60.9, 387.0], [61.0, 387.0], [61.1, 388.0], [61.2, 389.0], [61.3, 389.0], [61.4, 390.0], [61.5, 390.0], [61.6, 390.0], [61.7, 390.0], [61.8, 390.0], [61.9, 393.0], [62.0, 396.0], [62.1, 396.0], [62.2, 396.0], [62.3, 397.0], [62.4, 397.0], [62.5, 397.0], [62.6, 397.0], [62.7, 397.0], [62.8, 398.0], [62.9, 398.0], [63.0, 398.0], [63.1, 398.0], [63.2, 398.0], [63.3, 399.0], [63.4, 399.0], [63.5, 400.0], [63.6, 401.0], [63.7, 401.0], [63.8, 402.0], [63.9, 402.0], [64.0, 403.0], [64.1, 403.0], [64.2, 403.0], [64.3, 403.0], [64.4, 403.0], [64.5, 403.0], [64.6, 404.0], [64.7, 404.0], [64.8, 404.0], [64.9, 404.0], [65.0, 404.0], [65.1, 404.0], [65.2, 404.0], [65.3, 405.0], [65.4, 405.0], [65.5, 405.0], [65.6, 405.0], [65.7, 405.0], [65.8, 405.0], [65.9, 405.0], [66.0, 405.0], [66.1, 405.0], [66.2, 405.0], [66.3, 405.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 405.0], [67.2, 405.0], [67.3, 405.0], [67.4, 405.0], [67.5, 405.0], [67.6, 405.0], [67.7, 405.0], [67.8, 405.0], [67.9, 405.0], [68.0, 406.0], [68.1, 406.0], [68.2, 406.0], [68.3, 406.0], [68.4, 406.0], [68.5, 406.0], [68.6, 406.0], [68.7, 406.0], [68.8, 406.0], [68.9, 406.0], [69.0, 406.0], [69.1, 406.0], [69.2, 406.0], [69.3, 406.0], [69.4, 406.0], [69.5, 406.0], [69.6, 406.0], [69.7, 406.0], [69.8, 406.0], [69.9, 406.0], [70.0, 406.0], [70.1, 406.0], [70.2, 406.0], [70.3, 406.0], [70.4, 406.0], [70.5, 406.0], [70.6, 406.0], [70.7, 406.0], [70.8, 406.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 407.0], [71.8, 407.0], [71.9, 407.0], [72.0, 407.0], [72.1, 407.0], [72.2, 407.0], [72.3, 407.0], [72.4, 407.0], [72.5, 407.0], [72.6, 407.0], [72.7, 407.0], [72.8, 407.0], [72.9, 407.0], [73.0, 407.0], [73.1, 407.0], [73.2, 407.0], [73.3, 407.0], [73.4, 407.0], [73.5, 407.0], [73.6, 407.0], [73.7, 407.0], [73.8, 407.0], [73.9, 407.0], [74.0, 407.0], [74.1, 407.0], [74.2, 407.0], [74.3, 407.0], [74.4, 407.0], [74.5, 407.0], [74.6, 407.0], [74.7, 407.0], [74.8, 407.0], [74.9, 407.0], [75.0, 407.0], [75.1, 407.0], [75.2, 407.0], [75.3, 407.0], [75.4, 407.0], [75.5, 407.0], [75.6, 407.0], [75.7, 407.0], [75.8, 407.0], [75.9, 407.0], [76.0, 407.0], [76.1, 407.0], [76.2, 407.0], [76.3, 408.0], [76.4, 408.0], [76.5, 408.0], [76.6, 408.0], [76.7, 408.0], [76.8, 408.0], [76.9, 408.0], [77.0, 408.0], [77.1, 408.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 408.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 408.0], [79.2, 408.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 408.0], [80.4, 408.0], [80.5, 408.0], [80.6, 408.0], [80.7, 408.0], [80.8, 408.0], [80.9, 408.0], [81.0, 408.0], [81.1, 408.0], [81.2, 408.0], [81.3, 408.0], [81.4, 408.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 408.0], [83.5, 408.0], [83.6, 408.0], [83.7, 408.0], [83.8, 408.0], [83.9, 408.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 408.0], [84.4, 408.0], [84.5, 409.0], [84.6, 409.0], [84.7, 409.0], [84.8, 409.0], [84.9, 409.0], [85.0, 409.0], [85.1, 409.0], [85.2, 409.0], [85.3, 409.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 409.0], [86.0, 409.0], [86.1, 409.0], [86.2, 409.0], [86.3, 409.0], [86.4, 409.0], [86.5, 409.0], [86.6, 409.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 409.0], [87.2, 409.0], [87.3, 409.0], [87.4, 409.0], [87.5, 409.0], [87.6, 409.0], [87.7, 409.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 410.0], [89.1, 410.0], [89.2, 410.0], [89.3, 410.0], [89.4, 410.0], [89.5, 410.0], [89.6, 410.0], [89.7, 410.0], [89.8, 410.0], [89.9, 410.0], [90.0, 410.0], [90.1, 410.0], [90.2, 410.0], [90.3, 410.0], [90.4, 410.0], [90.5, 410.0], [90.6, 410.0], [90.7, 410.0], [90.8, 410.0], [90.9, 410.0], [91.0, 410.0], [91.1, 410.0], [91.2, 411.0], [91.3, 411.0], [91.4, 411.0], [91.5, 411.0], [91.6, 411.0], [91.7, 411.0], [91.8, 411.0], [91.9, 411.0], [92.0, 411.0], [92.1, 411.0], [92.2, 411.0], [92.3, 411.0], [92.4, 411.0], [92.5, 411.0], [92.6, 411.0], [92.7, 411.0], [92.8, 412.0], [92.9, 412.0], [93.0, 412.0], [93.1, 412.0], [93.2, 412.0], [93.3, 412.0], [93.4, 413.0], [93.5, 413.0], [93.6, 413.0], [93.7, 413.0], [93.8, 413.0], [93.9, 415.0], [94.0, 415.0], [94.1, 416.0], [94.2, 417.0], [94.3, 417.0], [94.4, 424.0], [94.5, 427.0], [94.6, 427.0], [94.7, 453.0], [94.8, 453.0], [94.9, 458.0], [95.0, 459.0], [95.1, 459.0], [95.2, 487.0], [95.3, 487.0], [95.4, 491.0], [95.5, 496.0], [95.6, 496.0], [95.7, 497.0], [95.8, 497.0], [95.9, 497.0], [96.0, 498.0], [96.1, 498.0], [96.2, 501.0], [96.3, 503.0], [96.4, 503.0], [96.5, 507.0], [96.6, 507.0], [96.7, 507.0], [96.8, 507.0], [96.9, 507.0], [97.0, 507.0], [97.1, 507.0], [97.2, 507.0], [97.3, 509.0], [97.4, 509.0], [97.5, 509.0], [97.6, 509.0], [97.7, 509.0], [97.8, 510.0], [97.9, 510.0], [98.0, 510.0], [98.1, 510.0], [98.2, 510.0], [98.3, 510.0], [98.4, 510.0], [98.5, 510.0], [98.6, 511.0], [98.7, 511.0], [98.8, 511.0], [98.9, 512.0], [99.0, 512.0], [99.1, 512.0], [99.2, 532.0], [99.3, 532.0], [99.4, 538.0], [99.5, 538.0], [99.6, 539.0], [99.7, 555.0], [99.8, 555.0], [99.9, 1258.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 202.0, "series": [{"data": [[33300.0, 1.0], [35700.0, 2.0], [35300.0, 2.0], [36900.0, 2.0], [37700.0, 2.0], [37300.0, 1.0], [39300.0, 2.0], [39700.0, 2.0], [40500.0, 2.0], [40900.0, 1.0], [40100.0, 2.0], [42100.0, 3.0], [41300.0, 2.0], [42900.0, 1.0], [41700.0, 1.0], [42500.0, 1.0], [44900.0, 1.0], [44500.0, 1.0], [44100.0, 1.0], [45300.0, 1.0], [45700.0, 2.0], [47300.0, 1.0], [49700.0, 2.0], [51300.0, 1.0], [54500.0, 1.0], [54100.0, 1.0], [54900.0, 1.0], [53300.0, 1.0], [57300.0, 1.0], [58500.0, 3.0], [58100.0, 2.0], [60500.0, 17.0], [300.0, 46.0], [400.0, 42.0], [500.0, 27.0], [600.0, 3.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 7.0], [1400.0, 3.0], [1500.0, 1.0], [1700.0, 3.0], [1800.0, 3.0], [2000.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2900.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [4200.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [5000.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 2.0], [5600.0, 3.0], [5700.0, 2.0], [5800.0, 2.0], [6000.0, 1.0], [5900.0, 1.0], [6100.0, 2.0], [6200.0, 3.0], [6400.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7600.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8700.0, 1.0], [9100.0, 1.0], [9200.0, 1.0], [8800.0, 1.0], [9500.0, 1.0], [9600.0, 1.0], [10200.0, 1.0], [10000.0, 1.0], [9800.0, 1.0], [9900.0, 1.0], [10400.0, 1.0], [10800.0, 1.0], [11100.0, 1.0], [11000.0, 1.0], [11200.0, 1.0], [11500.0, 1.0], [11800.0, 2.0], [11900.0, 1.0], [12000.0, 1.0], [12600.0, 3.0], [12500.0, 1.0], [13000.0, 1.0], [13300.0, 1.0], [12800.0, 1.0], [12900.0, 1.0], [13600.0, 1.0], [13700.0, 1.0], [14000.0, 1.0], [13900.0, 1.0], [14300.0, 1.0], [14600.0, 1.0], [14800.0, 1.0], [14500.0, 1.0], [15100.0, 1.0], [15300.0, 1.0], [15200.0, 1.0], [16300.0, 1.0], [16200.0, 1.0], [15900.0, 1.0], [16100.0, 1.0], [16800.0, 1.0], [16600.0, 2.0], [16400.0, 1.0], [17000.0, 2.0], [18400.0, 3.0], [18000.0, 1.0], [19200.0, 3.0], [19000.0, 2.0], [18800.0, 1.0], [19600.0, 2.0], [19800.0, 2.0], [21000.0, 2.0], [20600.0, 1.0], [21400.0, 4.0], [21200.0, 1.0], [22000.0, 1.0], [21800.0, 2.0], [21600.0, 1.0], [22200.0, 2.0], [22400.0, 2.0], [22600.0, 3.0], [23400.0, 4.0], [23000.0, 2.0], [23200.0, 1.0], [23800.0, 2.0], [24000.0, 2.0], [23600.0, 1.0], [24400.0, 1.0], [25000.0, 2.0], [25400.0, 1.0], [26200.0, 1.0], [25600.0, 1.0], [26400.0, 2.0], [26600.0, 2.0], [27400.0, 2.0], [27600.0, 1.0], [27200.0, 1.0], [27000.0, 1.0], [28200.0, 2.0], [28600.0, 1.0], [28000.0, 1.0], [29200.0, 1.0], [30400.0, 1.0], [30600.0, 1.0], [31200.0, 1.0], [31800.0, 2.0], [32600.0, 1.0], [32800.0, 1.0], [33200.0, 1.0], [34800.0, 1.0], [36800.0, 2.0], [36000.0, 1.0], [37200.0, 1.0], [37600.0, 2.0], [40400.0, 2.0], [39200.0, 1.0], [39600.0, 1.0], [41600.0, 2.0], [42000.0, 1.0], [41200.0, 1.0], [42800.0, 3.0], [42400.0, 1.0], [43200.0, 3.0], [43600.0, 2.0], [44000.0, 2.0], [45600.0, 1.0], [45200.0, 1.0], [48400.0, 3.0], [47200.0, 1.0], [47600.0, 1.0], [48000.0, 1.0], [48800.0, 2.0], [50000.0, 1.0], [50800.0, 1.0], [49600.0, 1.0], [53200.0, 2.0], [52800.0, 2.0], [51600.0, 1.0], [52400.0, 2.0], [55200.0, 2.0], [56800.0, 1.0], [55600.0, 1.0], [60400.0, 20.0], [60000.0, 1.0], [33100.0, 1.0], [33500.0, 1.0], [35500.0, 2.0], [35100.0, 2.0], [37500.0, 1.0], [37100.0, 2.0], [38300.0, 1.0], [38700.0, 1.0], [39900.0, 1.0], [39100.0, 1.0], [40700.0, 1.0], [42300.0, 1.0], [41900.0, 1.0], [42700.0, 4.0], [43100.0, 2.0], [43500.0, 3.0], [44700.0, 1.0], [44300.0, 1.0], [43900.0, 1.0], [47100.0, 1.0], [45500.0, 1.0], [48300.0, 2.0], [50300.0, 2.0], [50700.0, 1.0], [51100.0, 1.0], [53500.0, 3.0], [54300.0, 1.0], [55100.0, 1.0], [54700.0, 1.0], [57100.0, 1.0], [59100.0, 1.0], [58300.0, 1.0], [59500.0, 1.0], [60700.0, 2.0], [60300.0, 13.0], [17300.0, 1.0], [17100.0, 1.0], [17900.0, 1.0], [18100.0, 2.0], [18300.0, 1.0], [19300.0, 3.0], [19100.0, 4.0], [19900.0, 3.0], [19500.0, 1.0], [19700.0, 2.0], [20100.0, 1.0], [21100.0, 1.0], [21500.0, 2.0], [20500.0, 1.0], [21300.0, 2.0], [20900.0, 1.0], [22500.0, 2.0], [22100.0, 1.0], [21700.0, 1.0], [22300.0, 1.0], [22900.0, 2.0], [23100.0, 3.0], [23500.0, 2.0], [23900.0, 1.0], [24500.0, 1.0], [24300.0, 1.0], [24700.0, 1.0], [25300.0, 3.0], [25100.0, 2.0], [24900.0, 1.0], [25700.0, 1.0], [28100.0, 2.0], [28300.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [29700.0, 1.0], [30300.0, 2.0], [31700.0, 1.0], [30900.0, 3.0], [31100.0, 1.0], [32100.0, 2.0], [32700.0, 1.0], [31900.0, 2.0], [32300.0, 2.0], [38600.0, 1.0], [37800.0, 1.0], [39000.0, 1.0], [40600.0, 1.0], [39400.0, 2.0], [39800.0, 1.0], [42200.0, 1.0], [43000.0, 1.0], [41400.0, 1.0], [43400.0, 2.0], [44200.0, 2.0], [45400.0, 2.0], [46600.0, 1.0], [47000.0, 2.0], [49000.0, 1.0], [47800.0, 1.0], [47400.0, 1.0], [49400.0, 1.0], [50600.0, 2.0], [53000.0, 1.0], [52600.0, 4.0], [51800.0, 2.0], [53800.0, 1.0], [56200.0, 1.0], [55400.0, 2.0], [57000.0, 2.0], [57400.0, 1.0], [58600.0, 1.0], [59800.0, 2.0], [60600.0, 6.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 116.0], [32900.0, 1.0], [35300.0, 1.0], [34900.0, 2.0], [36500.0, 3.0], [38900.0, 1.0], [37300.0, 2.0], [39300.0, 1.0], [40900.0, 1.0], [40100.0, 1.0], [39700.0, 2.0], [41700.0, 2.0], [41300.0, 3.0], [42500.0, 2.0], [42100.0, 1.0], [43300.0, 2.0], [44500.0, 1.0], [44900.0, 1.0], [43700.0, 1.0], [45300.0, 1.0], [48100.0, 1.0], [48500.0, 2.0], [50100.0, 2.0], [49300.0, 1.0], [200.0, 1.0], [52500.0, 1.0], [52100.0, 1.0], [54100.0, 1.0], [53300.0, 1.0], [54500.0, 1.0], [56500.0, 1.0], [56900.0, 1.0], [58100.0, 1.0], [57700.0, 1.0], [60100.0, 39.0], [700.0, 1.0], [800.0, 2.0], [900.0, 5.0], [1000.0, 5.0], [1100.0, 3.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2900.0, 1.0], [3100.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4300.0, 2.0], [4100.0, 1.0], [4400.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5100.0, 3.0], [4900.0, 2.0], [5200.0, 2.0], [5300.0, 2.0], [5600.0, 2.0], [5400.0, 2.0], [5700.0, 1.0], [5800.0, 4.0], [6000.0, 1.0], [6300.0, 1.0], [6500.0, 1.0], [6800.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [8600.0, 1.0], [8300.0, 1.0], [8400.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [9300.0, 1.0], [9600.0, 1.0], [9500.0, 1.0], [9800.0, 2.0], [10000.0, 1.0], [10400.0, 1.0], [10700.0, 1.0], [10600.0, 1.0], [10900.0, 1.0], [11300.0, 1.0], [11400.0, 2.0], [11700.0, 2.0], [12100.0, 1.0], [12700.0, 1.0], [12400.0, 3.0], [12500.0, 1.0], [12300.0, 1.0], [13000.0, 1.0], [13300.0, 1.0], [13600.0, 1.0], [13400.0, 1.0], [13500.0, 1.0], [14300.0, 1.0], [13900.0, 1.0], [14100.0, 1.0], [14800.0, 1.0], [14400.0, 1.0], [14900.0, 2.0], [15800.0, 1.0], [15600.0, 2.0], [16000.0, 1.0], [16200.0, 1.0], [15900.0, 1.0], [16400.0, 1.0], [16600.0, 1.0], [17600.0, 1.0], [17800.0, 3.0], [18800.0, 4.0], [19000.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [20200.0, 1.0], [19600.0, 1.0], [20800.0, 3.0], [20600.0, 2.0], [21400.0, 2.0], [21200.0, 2.0], [21000.0, 3.0], [22200.0, 2.0], [21600.0, 1.0], [21800.0, 1.0], [22400.0, 1.0], [22000.0, 1.0], [22600.0, 2.0], [23000.0, 2.0], [22800.0, 2.0], [23400.0, 3.0], [23200.0, 1.0], [24000.0, 2.0], [25200.0, 1.0], [24800.0, 2.0], [25000.0, 1.0], [25800.0, 1.0], [26200.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [26800.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [27800.0, 2.0], [28800.0, 1.0], [29400.0, 1.0], [29000.0, 1.0], [30400.0, 2.0], [30000.0, 3.0], [31400.0, 1.0], [32400.0, 1.0], [32000.0, 2.0], [31800.0, 1.0], [32800.0, 1.0], [34800.0, 2.0], [34400.0, 1.0], [36400.0, 1.0], [36800.0, 2.0], [35600.0, 1.0], [37200.0, 1.0], [38000.0, 1.0], [38400.0, 1.0], [39200.0, 2.0], [42800.0, 4.0], [41600.0, 1.0], [42400.0, 2.0], [42000.0, 1.0], [43600.0, 2.0], [44400.0, 1.0], [43200.0, 1.0], [45200.0, 2.0], [46800.0, 3.0], [46400.0, 1.0], [47600.0, 2.0], [48000.0, 2.0], [48400.0, 1.0], [50000.0, 1.0], [49200.0, 1.0], [52800.0, 2.0], [53200.0, 1.0], [51600.0, 1.0], [55200.0, 2.0], [53600.0, 2.0], [54800.0, 3.0], [60000.0, 2.0], [59600.0, 1.0], [33100.0, 1.0], [35100.0, 1.0], [36700.0, 1.0], [38700.0, 1.0], [37500.0, 1.0], [39500.0, 1.0], [40300.0, 2.0], [40700.0, 1.0], [39900.0, 1.0], [39100.0, 1.0], [41900.0, 2.0], [42700.0, 2.0], [41500.0, 1.0], [42300.0, 2.0], [43100.0, 2.0], [44300.0, 1.0], [44700.0, 1.0], [51100.0, 1.0], [50300.0, 2.0], [52300.0, 3.0], [51500.0, 1.0], [53100.0, 1.0], [53900.0, 1.0], [55900.0, 1.0], [57100.0, 1.0], [56700.0, 2.0], [58700.0, 1.0], [59100.0, 1.0], [58300.0, 3.0], [57900.0, 1.0], [60300.0, 4.0], [59500.0, 2.0], [59900.0, 1.0], [16500.0, 2.0], [16900.0, 1.0], [16700.0, 1.0], [18100.0, 2.0], [17900.0, 1.0], [17700.0, 1.0], [19300.0, 3.0], [18900.0, 2.0], [18700.0, 4.0], [19100.0, 1.0], [18500.0, 1.0], [19500.0, 4.0], [20100.0, 1.0], [19700.0, 1.0], [21300.0, 2.0], [21100.0, 2.0], [20500.0, 1.0], [22300.0, 1.0], [21700.0, 1.0], [21900.0, 2.0], [22100.0, 2.0], [22500.0, 1.0], [23100.0, 1.0], [23300.0, 2.0], [22700.0, 2.0], [22900.0, 2.0], [23700.0, 2.0], [24300.0, 2.0], [24500.0, 1.0], [25300.0, 1.0], [24900.0, 2.0], [25100.0, 2.0], [24700.0, 1.0], [26300.0, 1.0], [26100.0, 2.0], [27300.0, 1.0], [26900.0, 1.0], [27100.0, 1.0], [27900.0, 1.0], [28100.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [30500.0, 3.0], [30900.0, 1.0], [31700.0, 1.0], [31500.0, 4.0], [32300.0, 1.0], [32100.0, 1.0], [33000.0, 1.0], [35400.0, 1.0], [35000.0, 1.0], [38200.0, 1.0], [38600.0, 1.0], [37400.0, 2.0], [37000.0, 1.0], [39000.0, 2.0], [40200.0, 2.0], [40600.0, 1.0], [39400.0, 2.0], [43000.0, 2.0], [41800.0, 1.0], [42200.0, 1.0], [42600.0, 1.0], [41000.0, 2.0], [43800.0, 4.0], [45000.0, 3.0], [47000.0, 3.0], [48200.0, 2.0], [47400.0, 1.0], [49000.0, 1.0], [49400.0, 1.0], [49800.0, 1.0], [50600.0, 2.0], [53000.0, 2.0], [51400.0, 1.0], [52200.0, 3.0], [54200.0, 1.0], [55000.0, 1.0], [56600.0, 1.0], [58200.0, 1.0], [60200.0, 12.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 200.0], [1200.0, 1.0], [400.0, 202.0], [200.0, 192.0], [500.0, 23.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 467.0, "series": [{"data": [[0.0, 467.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 23.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 409.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 336.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.68545208E12, "maxY": 25.0, "series": [{"data": [[1.68545268E12, 20.0], [1.68545238E12, 10.0], [1.68545334E12, 4.818181818181818], [1.68545232E12, 10.0], [1.68545328E12, 8.323529411764708], [1.68545298E12, 24.198529411764696], [1.68545244E12, 12.077922077922077], [1.6854534E12, 4.142857142857143], [1.68545214E12, 5.0], [1.6854531E12, 17.090909090909086], [1.68545208E12, 3.0], [1.68545304E12, 20.580357142857146], [1.68545274E12, 20.0], [1.6854522E12, 5.0], [1.68545316E12, 14.45614035087719], [1.68545286E12, 25.0], [1.6854528E12, 22.582524271844648], [1.6854525E12, 15.0], [1.68545292E12, 25.0], [1.68545262E12, 17.335820895522378], [1.68545256E12, 15.0], [1.68545226E12, 6.727272727272728], [1.68545322E12, 10.305084745762713]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854534E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 222.0, "minX": 1.0, "maxY": 45352.666666666664, "series": [{"data": [[2.0, 14440.25], [9.0, 45352.666666666664], [10.0, 38888.313725490174], [11.0, 32896.833333333336], [12.0, 26675.590909090908], [13.0, 24507.0], [14.0, 5689.0], [15.0, 23078.891891891893], [1.0, 5557.0], [4.0, 12577.75], [16.0, 25685.0], [17.0, 42688.833333333336], [18.0, 33957.0], [19.0, 28163.2], [5.0, 20711.121951219513], [20.0, 32117.368421052637], [21.0, 20127.823529411766], [22.0, 34810.00000000001], [23.0, 17520.945945945947], [24.0, 24661.1052631579], [25.0, 23958.386363636357], [7.0, 27529.88888888889]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[17.65048543689321, 26658.487055016172]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 14026.25], [9.0, 44912.666666666664], [10.0, 38520.09803921568], [11.0, 32513.333333333332], [12.0, 26348.318181818184], [13.0, 24151.2], [14.0, 5281.0], [15.0, 22955.899999999994], [1.0, 5104.0], [4.0, 12265.75], [16.0, 25306.85714285714], [17.0, 42360.0], [18.0, 33620.5], [19.0, 27808.8], [5.0, 20329.9512195122], [20.0, 31779.855263157897], [21.0, 19817.29411764706], [22.0, 34507.96296296297], [23.0, 17259.432432432433], [24.0, 24308.052631578947], [25.0, 23643.492424242417], [7.0, 27133.11111111111]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[17.654781199351707, 26367.63695299839]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 391.0], [3.0, 222.0], [4.0, 333.4], [5.0, 391.85], [6.0, 360.0], [7.0, 373.22222222222223], [8.0, 318.0], [9.0, 352.0], [10.0, 385.11764705882354], [11.0, 346.75], [12.0, 280.0454545454545], [13.0, 375.8], [14.0, 402.5], [15.0, 331.7927927927927], [1.0, 369.0], [16.0, 359.5], [17.0, 330.2666666666667], [18.0, 404.8666666666666], [19.0, 371.21428571428567], [20.0, 326.0253164556963], [21.0, 330.77777777777777], [22.0, 330.64], [23.0, 238.94871794871784], [24.0, 296.88888888888886], [25.0, 324.9393939393939]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[17.627831715210345, 333.5113268608411]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 185.5, "minX": 1.68545208E12, "maxY": 8909.95, "series": [{"data": [[1.68545268E12, 1467.6666666666667], [1.68545238E12, 733.8333333333334], [1.68545334E12, 733.8333333333334], [1.68545232E12, 1467.6666666666667], [1.68545328E12, 772.5666666666667], [1.68545298E12, 2819.75], [1.68545244E12, 1207.15], [1.6854534E12, 185.5], [1.68545214E12, 733.8333333333334], [1.6854531E12, 1540.75], [1.68545208E12, 695.1], [1.68545304E12, 2610.65], [1.68545274E12, 2054.733333333333], [1.6854522E12, 955.6166666666667], [1.68545316E12, 1168.5166666666667], [1.68545286E12, 2791.483333333333], [1.6854528E12, 2423.116666666667], [1.6854525E12, 1940.5166666666667], [1.68545292E12, 3026.9], [1.68545262E12, 3557.05], [1.68545256E12, 1378.65], [1.68545226E12, 913.6166666666667], [1.68545322E12, 1468.4833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68545268E12, 2932.266666666667], [1.68545238E12, 1412.25], [1.68545334E12, 1023.6333333333333], [1.68545232E12, 3524.85], [1.68545328E12, 2289.8333333333335], [1.68545298E12, 7156.2], [1.68545244E12, 3684.3333333333335], [1.6854534E12, 708.35], [1.68545214E12, 1651.4], [1.6854531E12, 4347.25], [1.68545208E12, 1191.05], [1.68545304E12, 5217.033333333334], [1.68545274E12, 3935.266666666667], [1.6854522E12, 2212.95], [1.68545316E12, 2704.266666666667], [1.68545286E12, 8297.816666666668], [1.6854528E12, 8909.95], [1.6854525E12, 7574.366666666667], [1.68545292E12, 7564.816666666667], [1.68545262E12, 6039.783333333334], [1.68545256E12, 3383.5666666666666], [1.68545226E12, 1467.2833333333333], [1.68545322E12, 3500.8333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854534E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 263.25, "minX": 1.68545208E12, "maxY": 43440.052631578954, "series": [{"data": [[1.68545268E12, 39358.899999999994], [1.68545238E12, 41272.299999999996], [1.68545334E12, 21031.46153846154], [1.68545232E12, 35969.94999999999], [1.68545328E12, 39241.38461538461], [1.68545298E12, 26292.808510638297], [1.68545244E12, 18519.083333333336], [1.6854534E12, 24134.0], [1.68545214E12, 20996.600000000002], [1.6854531E12, 40111.357142857145], [1.68545208E12, 10607.428571428572], [1.68545304E12, 30099.86111111111], [1.68545274E12, 34823.48387096774], [1.6854522E12, 21398.266666666674], [1.68545316E12, 35888.14285714286], [1.68545286E12, 24880.436363636363], [1.6854528E12, 16884.895522388055], [1.6854525E12, 13669.211538461543], [1.68545292E12, 25362.979999999996], [1.68545262E12, 24019.72972972973], [1.68545256E12, 31649.363636363636], [1.68545226E12, 20168.25], [1.68545322E12, 43440.052631578954]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545268E12, 38995.5], [1.68545238E12, 40961.799999999996], [1.68545334E12, 20762.0], [1.68545232E12, 35590.0], [1.68545328E12, 38809.23076923077], [1.68545298E12, 25543.4347826087], [1.68545244E12, 18178.208333333336], [1.6854534E12, 21651.0], [1.68545214E12, 20648.0], [1.6854531E12, 40948.88888888888], [1.68545208E12, 10244.42857142857], [1.68545304E12, 30713.35897435897], [1.68545274E12, 38064.2857142857], [1.6854522E12, 21009.733333333334], [1.68545316E12, 36798.10526315789], [1.68545286E12, 23557.963636363635], [1.6854528E12, 16647.05970149254], [1.6854525E12, 13618.039215686284], [1.68545292E12, 24079.72549019608], [1.68545262E12, 24745.369565217396], [1.68545256E12, 30854.56], [1.68545226E12, 19775.5], [1.68545322E12, 41552.857142857145]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545268E12, 263.25], [1.68545238E12, 415.2], [1.68545334E12, 425.5], [1.68545232E12, 350.3999999999999], [1.68545328E12, 346.5], [1.68545298E12, 307.83720930232556], [1.68545244E12, 303.03448275862075], [1.68545214E12, 365.2], [1.6854531E12, 374.9090909090909], [1.68545208E12, 349.16666666666663], [1.68545304E12, 352.1351351351352], [1.68545274E12, 344.7857142857143], [1.6854522E12, 411.1818181818182], [1.68545316E12, 378.88235294117646], [1.68545286E12, 317.9454545454546], [1.6854528E12, 283.29166666666674], [1.6854525E12, 326.078431372549], [1.68545292E12, 329.3529411764707], [1.68545262E12, 352.41176470588243], [1.68545256E12, 307.68], [1.68545226E12, 372.11764705882354], [1.68545322E12, 399.68421052631584]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854534E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 263.20000000000005, "minX": 1.68545208E12, "maxY": 43439.63157894736, "series": [{"data": [[1.68545268E12, 39358.399999999994], [1.68545238E12, 41271.0], [1.68545334E12, 21031.230769230773], [1.68545232E12, 35969.34999999999], [1.68545328E12, 39241.153846153844], [1.68545298E12, 26290.638297872345], [1.68545244E12, 18518.83333333333], [1.6854534E12, 24134.0], [1.68545214E12, 20995.9], [1.6854531E12, 40110.99999999999], [1.68545208E12, 10605.285714285716], [1.68545304E12, 30099.388888888894], [1.68545274E12, 34819.70967741936], [1.6854522E12, 21397.86666666667], [1.68545316E12, 35888.14285714286], [1.68545286E12, 24880.327272727267], [1.6854528E12, 16884.53731343284], [1.6854525E12, 13668.73076923077], [1.68545292E12, 25362.54], [1.68545262E12, 24019.108108108107], [1.68545256E12, 31648.606060606056], [1.68545226E12, 20167.999999999996], [1.68545322E12, 43439.63157894736]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545268E12, 38995.1], [1.68545238E12, 40961.7], [1.68545334E12, 20761.7], [1.68545232E12, 35589.799999999996], [1.68545328E12, 38809.07692307692], [1.68545298E12, 25541.500000000007], [1.68545244E12, 18178.041666666668], [1.6854534E12, 21651.0], [1.68545214E12, 20647.6], [1.6854531E12, 40948.81481481481], [1.68545208E12, 10244.0], [1.68545304E12, 30713.28205128205], [1.68545274E12, 38060.24999999999], [1.6854522E12, 21009.666666666668], [1.68545316E12, 36798.10526315789], [1.68545286E12, 23557.94545454545], [1.6854528E12, 16646.985074626868], [1.6854525E12, 13617.941176470595], [1.68545292E12, 24079.627450980395], [1.68545262E12, 24744.739130434784], [1.68545256E12, 30854.440000000002], [1.68545226E12, 19775.5], [1.68545322E12, 41552.71428571429]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545268E12, 263.20000000000005], [1.68545238E12, 415.2], [1.68545334E12, 425.5], [1.68545232E12, 349.49999999999994], [1.68545328E12, 346.5], [1.68545298E12, 307.48837209302326], [1.68545244E12, 302.93103448275866], [1.68545214E12, 364.70000000000005], [1.6854531E12, 374.9090909090909], [1.68545208E12, 348.16666666666663], [1.68545304E12, 351.78378378378375], [1.68545274E12, 344.64285714285717], [1.6854522E12, 410.8181818181818], [1.68545316E12, 378.8235294117647], [1.68545286E12, 317.7818181818181], [1.6854528E12, 283.04166666666663], [1.6854525E12, 325.6274509803921], [1.68545292E12, 328.96078431372547], [1.68545262E12, 352.1960784313726], [1.68545256E12, 307.59999999999997], [1.68545226E12, 372.05882352941177], [1.68545322E12, 399.42105263157896]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854534E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68545208E12, "maxY": 231.76923076923075, "series": [{"data": [[1.68545268E12, 176.15000000000003], [1.68545238E12, 169.0], [1.68545334E12, 193.69230769230768], [1.68545232E12, 181.45000000000002], [1.68545328E12, 231.76923076923075], [1.68545298E12, 148.1914893617022], [1.68545244E12, 161.9166666666666], [1.6854534E12, 202.0], [1.68545214E12, 181.79999999999998], [1.6854531E12, 188.39285714285717], [1.68545208E12, 185.85714285714286], [1.68545304E12, 153.02777777777777], [1.68545274E12, 146.90322580645162], [1.6854522E12, 184.93333333333334], [1.68545316E12, 191.2857142857143], [1.68545286E12, 146.2], [1.6854528E12, 142.58208955223884], [1.6854525E12, 150.71153846153845], [1.68545292E12, 161.71999999999997], [1.68545262E12, 159.51351351351352], [1.68545256E12, 148.9393939393939], [1.68545226E12, 191.5], [1.68545322E12, 179.8421052631579]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68545268E12, 0.0], [1.68545238E12, 0.0], [1.68545334E12, 0.0], [1.68545232E12, 0.0], [1.68545328E12, 0.0], [1.68545298E12, 0.0], [1.68545244E12, 0.0], [1.6854534E12, 0.0], [1.68545214E12, 0.0], [1.6854531E12, 0.0], [1.68545208E12, 0.0], [1.68545304E12, 0.0], [1.68545274E12, 0.0], [1.6854522E12, 0.0], [1.68545316E12, 0.0], [1.68545286E12, 0.0], [1.6854528E12, 0.0], [1.6854525E12, 0.0], [1.68545292E12, 0.0], [1.68545262E12, 0.0], [1.68545256E12, 0.0], [1.68545226E12, 0.0], [1.68545322E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68545268E12, 129.7], [1.68545238E12, 210.8], [1.68545334E12, 220.6], [1.68545232E12, 180.54999999999998], [1.68545328E12, 163.375], [1.68545298E12, 147.0], [1.68545244E12, 137.8965517241379], [1.68545214E12, 190.70000000000002], [1.6854531E12, 194.27272727272725], [1.68545208E12, 168.5], [1.68545304E12, 173.91891891891896], [1.68545274E12, 167.92857142857144], [1.6854522E12, 206.1818181818182], [1.68545316E12, 188.64705882352942], [1.68545286E12, 146.76363636363638], [1.6854528E12, 137.3194444444444], [1.6854525E12, 149.94117647058826], [1.68545292E12, 162.66666666666666], [1.68545262E12, 168.60784313725492], [1.68545256E12, 148.39999999999998], [1.68545226E12, 172.7058823529412], [1.68545322E12, 213.21052631578948]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854534E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 207.0, "minX": 1.68545208E12, "maxY": 59924.0, "series": [{"data": [[1.68545268E12, 45072.0], [1.68545238E12, 43348.0], [1.68545334E12, 23253.0], [1.68545232E12, 42816.0], [1.68545328E12, 50649.0], [1.68545298E12, 59924.0], [1.68545244E12, 45296.0], [1.6854534E12, 24027.0], [1.68545214E12, 23353.0], [1.6854531E12, 57779.0], [1.68545208E12, 14923.0], [1.68545304E12, 57953.0], [1.68545274E12, 58138.0], [1.6854522E12, 23730.0], [1.68545316E12, 56716.0], [1.68545286E12, 57170.0], [1.6854528E12, 59673.0], [1.6854525E12, 53085.0], [1.68545292E12, 49355.0], [1.68545262E12, 48527.0], [1.68545256E12, 59126.0], [1.68545226E12, 27060.0], [1.68545322E12, 59556.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68545268E12, 43317.3], [1.68545238E12, 41679.1], [1.68545334E12, 22881.5], [1.68545232E12, 41513.7], [1.68545328E12, 49988.6], [1.68545298E12, 35822.200000000055], [1.68545244E12, 45075.0], [1.6854534E12, 24027.0], [1.68545214E12, 23131.7], [1.6854531E12, 52337.0], [1.68545208E12, 13075.0], [1.68545304E12, 34402.0], [1.68545274E12, 52536.100000000006], [1.6854522E12, 22869.1], [1.68545316E12, 42387.6], [1.68545286E12, 54876.2], [1.6854528E12, 10986.200000000004], [1.6854525E12, 52868.2], [1.68545292E12, 20505.200000000004], [1.68545262E12, 32929.0], [1.68545256E12, 56164.6], [1.68545226E12, 25547.800000000003], [1.68545322E12, 48473.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68545268E12, 45072.0], [1.68545238E12, 43348.0], [1.68545334E12, 23253.0], [1.68545232E12, 42816.0], [1.68545328E12, 50649.0], [1.68545298E12, 59924.0], [1.68545244E12, 45296.0], [1.6854534E12, 24027.0], [1.68545214E12, 23353.0], [1.6854531E12, 57779.0], [1.68545208E12, 14923.0], [1.68545304E12, 57953.0], [1.68545274E12, 58138.0], [1.6854522E12, 23730.0], [1.68545316E12, 56716.0], [1.68545286E12, 57170.0], [1.6854528E12, 59673.0], [1.6854525E12, 53085.0], [1.68545292E12, 49355.0], [1.68545262E12, 48527.0], [1.68545256E12, 59126.0], [1.68545226E12, 27060.0], [1.68545322E12, 59556.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68545268E12, 44958.24999999999], [1.68545238E12, 43265.0], [1.68545334E12, 23236.15], [1.68545232E12, 42697.35], [1.68545328E12, 50600.5], [1.68545298E12, 58378.3], [1.68545244E12, 45278.5], [1.6854534E12, 24027.0], [1.68545214E12, 23344.7], [1.6854531E12, 56604.0], [1.68545208E12, 14923.0], [1.68545304E12, 43148.5], [1.68545274E12, 53705.95], [1.6854522E12, 23506.35], [1.68545316E12, 49641.899999999994], [1.68545286E12, 55891.1], [1.6854528E12, 36186.64999999996], [1.6854525E12, 53050.8], [1.68545292E12, 23117.000000000004], [1.68545262E12, 41894.49999999999], [1.68545256E12, 58856.25], [1.68545226E12, 26703.0], [1.68545322E12, 58310.1]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68545268E12, 209.0], [1.68545238E12, 404.0], [1.68545334E12, 307.0], [1.68545232E12, 297.0], [1.68545328E12, 244.0], [1.68545298E12, 208.0], [1.68545244E12, 226.0], [1.6854534E12, 18810.0], [1.68545214E12, 295.0], [1.6854531E12, 209.0], [1.68545208E12, 222.0], [1.68545304E12, 211.0], [1.68545274E12, 208.0], [1.6854522E12, 383.0], [1.68545316E12, 303.0], [1.68545286E12, 220.0], [1.6854528E12, 208.0], [1.6854525E12, 212.0], [1.68545292E12, 207.0], [1.68545262E12, 209.0], [1.68545256E12, 211.0], [1.68545226E12, 278.0], [1.68545322E12, 211.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68545268E12, 16036.5], [1.68545238E12, 19728.5], [1.68545334E12, 7353.5], [1.68545232E12, 9284.5], [1.68545328E12, 26181.0], [1.68545298E12, 408.0], [1.68545244E12, 411.0], [1.6854534E12, 22239.0], [1.68545214E12, 8198.0], [1.6854531E12, 507.0], [1.68545208E12, 408.0], [1.68545304E12, 412.0], [1.68545274E12, 3088.0], [1.6854522E12, 18929.0], [1.68545316E12, 408.0], [1.68545286E12, 411.0], [1.6854528E12, 306.0], [1.6854525E12, 1258.0], [1.68545292E12, 408.0], [1.68545262E12, 509.0], [1.68545256E12, 17632.0], [1.68545226E12, 405.0], [1.68545322E12, 13737.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854534E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 143.0, "minX": 1.0, "maxY": 40159.0, "series": [{"data": [[2.0, 410.5], [8.0, 18941.5], [9.0, 305.0], [10.0, 494.5], [11.0, 40159.0], [3.0, 408.0], [12.0, 27339.0], [13.0, 397.0], [1.0, 409.5], [4.0, 414.0], [16.0, 39465.0], [5.0, 405.0], [20.0, 14559.5], [6.0, 487.0], [7.0, 510.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 344.5], [8.0, 210.0], [9.0, 143.0], [10.0, 498.5], [11.0, 174.5], [3.0, 207.5], [12.0, 153.0], [13.0, 309.0], [1.0, 372.0], [4.0, 209.5], [16.0, 396.0], [5.0, 209.0], [6.0, 215.0], [7.0, 209.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 143.0, "minX": 1.0, "maxY": 40158.5, "series": [{"data": [[2.0, 410.0], [8.0, 18941.5], [9.0, 305.0], [10.0, 494.5], [11.0, 40158.5], [3.0, 408.0], [12.0, 27335.0], [13.0, 397.0], [1.0, 409.5], [4.0, 414.0], [16.0, 39465.0], [5.0, 405.0], [20.0, 14559.5], [6.0, 487.0], [7.0, 510.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 344.5], [8.0, 210.0], [9.0, 143.0], [10.0, 498.5], [11.0, 174.5], [3.0, 207.0], [12.0, 153.0], [13.0, 309.0], [1.0, 372.0], [4.0, 209.5], [16.0, 396.0], [5.0, 209.0], [6.0, 215.0], [7.0, 209.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.68545208E12, "maxY": 2.35, "series": [{"data": [[1.68545268E12, 0.8], [1.68545238E12, 0.35], [1.68545334E12, 0.3333333333333333], [1.68545232E12, 0.6666666666666666], [1.68545328E12, 0.31666666666666665], [1.68545298E12, 1.4666666666666666], [1.68545244E12, 0.95], [1.68545214E12, 0.36666666666666664], [1.6854531E12, 0.7333333333333333], [1.68545208E12, 0.36666666666666664], [1.68545304E12, 1.2333333333333334], [1.68545274E12, 0.9166666666666666], [1.6854522E12, 0.43333333333333335], [1.68545316E12, 0.5166666666666667], [1.68545286E12, 1.8333333333333333], [1.6854528E12, 2.35], [1.6854525E12, 1.7], [1.68545292E12, 1.7333333333333334], [1.68545262E12, 1.5666666666666667], [1.68545256E12, 0.85], [1.68545226E12, 0.48333333333333334], [1.68545322E12, 0.6166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68545334E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68545208E12, "maxY": 1.6166666666666667, "series": [{"data": [[1.68545268E12, 0.6666666666666666], [1.68545238E12, 0.3333333333333333], [1.68545334E12, 0.3333333333333333], [1.68545232E12, 0.6666666666666666], [1.68545328E12, 0.35], [1.68545298E12, 1.2166666666666666], [1.68545244E12, 0.4], [1.6854534E12, 0.08333333333333333], [1.68545214E12, 0.3333333333333333], [1.6854531E12, 0.65], [1.68545208E12, 0.31666666666666665], [1.68545304E12, 1.15], [1.68545274E12, 0.9333333333333333], [1.6854522E12, 0.43333333333333335], [1.68545316E12, 0.5], [1.68545286E12, 1.0166666666666666], [1.6854528E12, 0.6], [1.6854525E12, 0.5166666666666667], [1.68545292E12, 1.25], [1.68545262E12, 1.6166666666666667], [1.68545256E12, 0.5333333333333333], [1.68545226E12, 0.4166666666666667], [1.68545322E12, 0.6666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6854528E12, 0.26666666666666666], [1.68545298E12, 0.16666666666666666], [1.68545292E12, 0.11666666666666667], [1.6854531E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68545286E12, 0.8166666666666667], [1.6854528E12, 1.1833333333333333], [1.6854525E12, 1.1833333333333333], [1.68545244E12, 0.48333333333333334], [1.68545292E12, 0.11666666666666667], [1.68545256E12, 0.3]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68545316E12, 0.1], [1.6854528E12, 0.26666666666666666], [1.68545298E12, 0.1], [1.68545292E12, 0.21666666666666667], [1.6854531E12, 0.15], [1.68545304E12, 0.11666666666666667]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6854534E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68545208E12, "maxY": 1.0833333333333333, "series": [{"data": [[1.68545268E12, 0.3333333333333333], [1.68545238E12, 0.16666666666666666], [1.68545334E12, 0.16666666666666666], [1.68545232E12, 0.3333333333333333], [1.68545328E12, 0.13333333333333333], [1.68545298E12, 0.7166666666666667], [1.68545244E12, 0.23333333333333334], [1.68545214E12, 0.16666666666666666], [1.6854531E12, 0.36666666666666664], [1.68545208E12, 0.2], [1.68545304E12, 0.6166666666666667], [1.68545274E12, 0.4666666666666667], [1.6854522E12, 0.18333333333333332], [1.68545316E12, 0.2833333333333333], [1.68545286E12, 0.5333333333333333], [1.6854528E12, 0.5], [1.6854525E12, 0.26666666666666666], [1.68545292E12, 0.8], [1.68545262E12, 0.85], [1.68545256E12, 0.25], [1.68545226E12, 0.2833333333333333], [1.68545322E12, 0.31666666666666665]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68545286E12, 0.38333333333333336], [1.6854528E12, 0.7], [1.6854525E12, 0.5833333333333334], [1.68545244E12, 0.25], [1.68545292E12, 0.05], [1.68545256E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68545316E12, 0.1], [1.68545286E12, 0.43333333333333335], [1.6854528E12, 1.0166666666666666], [1.6854525E12, 0.6], [1.68545298E12, 0.26666666666666666], [1.68545244E12, 0.23333333333333334], [1.68545292E12, 0.4], [1.6854531E12, 0.16666666666666666], [1.68545256E12, 0.13333333333333333], [1.68545304E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68545268E12, 0.3333333333333333], [1.68545238E12, 0.16666666666666666], [1.68545334E12, 0.21666666666666667], [1.68545232E12, 0.3333333333333333], [1.68545328E12, 0.21666666666666667], [1.68545298E12, 0.48333333333333334], [1.68545244E12, 0.16666666666666666], [1.6854534E12, 0.03333333333333333], [1.68545214E12, 0.16666666666666666], [1.6854531E12, 0.3], [1.68545208E12, 0.11666666666666667], [1.68545304E12, 0.5166666666666667], [1.68545274E12, 0.4666666666666667], [1.6854522E12, 0.25], [1.68545316E12, 0.25], [1.68545286E12, 0.15], [1.6854528E12, 0.03333333333333333], [1.6854525E12, 0.08333333333333333], [1.68545292E12, 0.36666666666666664], [1.68545262E12, 0.5833333333333334], [1.68545256E12, 0.13333333333333333], [1.68545226E12, 0.13333333333333333], [1.68545322E12, 0.31666666666666665]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68545316E12, 0.1], [1.68545286E12, 0.7666666666666667], [1.6854528E12, 1.0833333333333333], [1.6854525E12, 0.7833333333333333], [1.68545298E12, 0.3], [1.68545244E12, 0.23333333333333334], [1.68545292E12, 0.4666666666666667], [1.68545262E12, 0.03333333333333333], [1.6854531E12, 0.16666666666666666], [1.68545256E12, 0.4166666666666667], [1.68545304E12, 0.08333333333333333], [1.68545274E12, 0.05]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68545268E12, 0.3333333333333333], [1.68545238E12, 0.16666666666666666], [1.68545334E12, 0.16666666666666666], [1.68545232E12, 0.3333333333333333], [1.68545328E12, 0.21666666666666667], [1.68545298E12, 0.5], [1.68545244E12, 0.16666666666666666], [1.6854534E12, 0.08333333333333333], [1.68545214E12, 0.16666666666666666], [1.6854531E12, 0.2833333333333333], [1.68545208E12, 0.11666666666666667], [1.68545304E12, 0.5333333333333333], [1.68545274E12, 0.4666666666666667], [1.6854522E12, 0.25], [1.68545316E12, 0.21666666666666667], [1.68545286E12, 0.48333333333333334], [1.6854528E12, 0.1], [1.6854525E12, 0.25], [1.68545292E12, 0.45], [1.68545262E12, 0.7666666666666667], [1.68545256E12, 0.2833333333333333], [1.68545226E12, 0.13333333333333333], [1.68545322E12, 0.35]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854534E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68545208E12, "maxY": 2.8, "series": [{"data": [[1.68545268E12, 1.0], [1.68545238E12, 0.5], [1.68545334E12, 0.55], [1.68545232E12, 1.0], [1.68545328E12, 0.5666666666666667], [1.68545298E12, 1.7], [1.68545244E12, 0.5666666666666667], [1.6854534E12, 0.11666666666666667], [1.68545214E12, 0.5], [1.6854531E12, 0.95], [1.68545208E12, 0.43333333333333335], [1.68545304E12, 1.6666666666666667], [1.68545274E12, 1.4], [1.6854522E12, 0.6833333333333333], [1.68545316E12, 0.75], [1.68545286E12, 1.1666666666666667], [1.6854528E12, 0.6333333333333333], [1.6854525E12, 0.6], [1.68545292E12, 1.6166666666666667], [1.68545262E12, 2.2], [1.68545256E12, 0.6666666666666666], [1.68545226E12, 0.55], [1.68545322E12, 0.9833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68545316E12, 0.2], [1.68545286E12, 1.5833333333333333], [1.6854528E12, 2.8], [1.6854525E12, 1.9666666666666666], [1.68545298E12, 0.5666666666666667], [1.68545244E12, 0.7166666666666667], [1.68545292E12, 0.9166666666666666], [1.68545262E12, 0.03333333333333333], [1.6854531E12, 0.3333333333333333], [1.68545256E12, 0.7166666666666667], [1.68545304E12, 0.2], [1.68545274E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6854534E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

