/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 106.0, "minX": 0.0, "maxY": 60969.0, "series": [{"data": [[0.0, 215.0], [0.1, 215.0], [0.2, 316.0], [0.3, 316.0], [0.4, 319.0], [0.5, 320.0], [0.6, 320.0], [0.7, 320.0], [0.8, 320.0], [0.9, 327.0], [1.0, 331.0], [1.1, 331.0], [1.2, 334.0], [1.3, 340.0], [1.4, 340.0], [1.5, 346.0], [1.6, 346.0], [1.7, 351.0], [1.8, 355.0], [1.9, 355.0], [2.0, 355.0], [2.1, 355.0], [2.2, 356.0], [2.3, 357.0], [2.4, 357.0], [2.5, 358.0], [2.6, 359.0], [2.7, 359.0], [2.8, 360.0], [2.9, 360.0], [3.0, 367.0], [3.1, 372.0], [3.2, 372.0], [3.3, 379.0], [3.4, 379.0], [3.5, 384.0], [3.6, 387.0], [3.7, 387.0], [3.8, 389.0], [3.9, 395.0], [4.0, 395.0], [4.1, 396.0], [4.2, 396.0], [4.3, 400.0], [4.4, 404.0], [4.5, 404.0], [4.6, 405.0], [4.7, 405.0], [4.8, 408.0], [4.9, 409.0], [5.0, 409.0], [5.1, 409.0], [5.2, 410.0], [5.3, 410.0], [5.4, 410.0], [5.5, 410.0], [5.6, 413.0], [5.7, 414.0], [5.8, 414.0], [5.9, 414.0], [6.0, 414.0], [6.1, 415.0], [6.2, 416.0], [6.3, 416.0], [6.4, 416.0], [6.5, 418.0], [6.6, 418.0], [6.7, 421.0], [6.8, 421.0], [6.9, 421.0], [7.0, 421.0], [7.1, 421.0], [7.2, 422.0], [7.3, 422.0], [7.4, 422.0], [7.5, 424.0], [7.6, 424.0], [7.7, 425.0], [7.8, 430.0], [7.9, 430.0], [8.0, 430.0], [8.1, 430.0], [8.2, 430.0], [8.3, 435.0], [8.4, 435.0], [8.5, 435.0], [8.6, 435.0], [8.7, 436.0], [8.8, 441.0], [8.9, 441.0], [9.0, 442.0], [9.1, 442.0], [9.2, 442.0], [9.3, 443.0], [9.4, 443.0], [9.5, 444.0], [9.6, 445.0], [9.7, 445.0], [9.8, 446.0], [9.9, 446.0], [10.0, 447.0], [10.1, 448.0], [10.2, 448.0], [10.3, 449.0], [10.4, 449.0], [10.5, 449.0], [10.6, 450.0], [10.7, 450.0], [10.8, 451.0], [10.9, 452.0], [11.0, 452.0], [11.1, 454.0], [11.2, 454.0], [11.3, 456.0], [11.4, 456.0], [11.5, 456.0], [11.6, 457.0], [11.7, 458.0], [11.8, 458.0], [11.9, 459.0], [12.0, 459.0], [12.1, 461.0], [12.2, 463.0], [12.3, 463.0], [12.4, 464.0], [12.5, 464.0], [12.6, 464.0], [12.7, 468.0], [12.8, 468.0], [12.9, 468.0], [13.0, 471.0], [13.1, 471.0], [13.2, 472.0], [13.3, 472.0], [13.4, 476.0], [13.5, 480.0], [13.6, 480.0], [13.7, 488.0], [13.8, 492.0], [13.9, 492.0], [14.0, 493.0], [14.1, 493.0], [14.2, 495.0], [14.3, 496.0], [14.4, 496.0], [14.5, 498.0], [14.6, 498.0], [14.7, 500.0], [14.8, 501.0], [14.9, 501.0], [15.0, 505.0], [15.1, 506.0], [15.2, 506.0], [15.3, 507.0], [15.4, 507.0], [15.5, 508.0], [15.6, 512.0], [15.7, 512.0], [15.8, 512.0], [15.9, 512.0], [16.0, 515.0], [16.1, 515.0], [16.2, 515.0], [16.3, 516.0], [16.4, 516.0], [16.5, 516.0], [16.6, 517.0], [16.7, 517.0], [16.8, 517.0], [16.9, 517.0], [17.0, 517.0], [17.1, 517.0], [17.2, 517.0], [17.3, 518.0], [17.4, 518.0], [17.5, 518.0], [17.6, 519.0], [17.7, 520.0], [17.8, 520.0], [17.9, 520.0], [18.0, 520.0], [18.1, 521.0], [18.2, 522.0], [18.3, 522.0], [18.4, 524.0], [18.5, 524.0], [18.6, 525.0], [18.7, 525.0], [18.8, 525.0], [18.9, 527.0], [19.0, 527.0], [19.1, 527.0], [19.2, 528.0], [19.3, 528.0], [19.4, 530.0], [19.5, 532.0], [19.6, 532.0], [19.7, 533.0], [19.8, 533.0], [19.9, 533.0], [20.0, 534.0], [20.1, 534.0], [20.2, 534.0], [20.3, 538.0], [20.4, 538.0], [20.5, 539.0], [20.6, 539.0], [20.7, 540.0], [20.8, 540.0], [20.9, 540.0], [21.0, 541.0], [21.1, 541.0], [21.2, 541.0], [21.3, 542.0], [21.4, 542.0], [21.5, 544.0], [21.6, 544.0], [21.7, 544.0], [21.8, 544.0], [21.9, 544.0], [22.0, 545.0], [22.1, 547.0], [22.2, 547.0], [22.3, 548.0], [22.4, 548.0], [22.5, 551.0], [22.6, 552.0], [22.7, 552.0], [22.8, 554.0], [22.9, 555.0], [23.0, 555.0], [23.1, 556.0], [23.2, 556.0], [23.3, 558.0], [23.4, 558.0], [23.5, 558.0], [23.6, 558.0], [23.7, 558.0], [23.8, 560.0], [23.9, 562.0], [24.0, 562.0], [24.1, 567.0], [24.2, 567.0], [24.3, 567.0], [24.4, 568.0], [24.5, 568.0], [24.6, 569.0], [24.7, 571.0], [24.8, 571.0], [24.9, 571.0], [25.0, 571.0], [25.1, 572.0], [25.2, 582.0], [25.3, 582.0], [25.4, 584.0], [25.5, 588.0], [25.6, 588.0], [25.7, 589.0], [25.8, 589.0], [25.9, 590.0], [26.0, 590.0], [26.1, 590.0], [26.2, 595.0], [26.3, 596.0], [26.4, 596.0], [26.5, 598.0], [26.6, 598.0], [26.7, 600.0], [26.8, 603.0], [26.9, 603.0], [27.0, 606.0], [27.1, 606.0], [27.2, 607.0], [27.3, 608.0], [27.4, 608.0], [27.5, 609.0], [27.6, 611.0], [27.7, 611.0], [27.8, 611.0], [27.9, 611.0], [28.0, 611.0], [28.1, 612.0], [28.2, 612.0], [28.3, 612.0], [28.4, 612.0], [28.5, 613.0], [28.6, 619.0], [28.7, 619.0], [28.8, 622.0], [28.9, 628.0], [29.0, 628.0], [29.1, 642.0], [29.2, 642.0], [29.3, 658.0], [29.4, 659.0], [29.5, 659.0], [29.6, 679.0], [29.7, 679.0], [29.8, 689.0], [29.9, 701.0], [30.0, 701.0], [30.1, 706.0], [30.2, 716.0], [30.3, 716.0], [30.4, 749.0], [30.5, 749.0], [30.6, 773.0], [30.7, 1481.0], [30.8, 1481.0], [30.9, 2202.0], [31.0, 2202.0], [31.1, 2458.0], [31.2, 3383.0], [31.3, 3383.0], [31.4, 4392.0], [31.5, 4469.0], [31.6, 4469.0], [31.7, 4740.0], [31.8, 4740.0], [31.9, 4917.0], [32.0, 5133.0], [32.1, 5133.0], [32.2, 5505.0], [32.3, 5505.0], [32.4, 5520.0], [32.5, 5553.0], [32.6, 5553.0], [32.7, 5685.0], [32.8, 5727.0], [32.9, 5727.0], [33.0, 5752.0], [33.1, 5752.0], [33.2, 5953.0], [33.3, 6022.0], [33.4, 6022.0], [33.5, 6131.0], [33.6, 6131.0], [33.7, 6151.0], [33.8, 6155.0], [33.9, 6155.0], [34.0, 6170.0], [34.1, 6172.0], [34.2, 6172.0], [34.3, 6190.0], [34.4, 6190.0], [34.5, 6299.0], [34.6, 6303.0], [34.7, 6303.0], [34.8, 6398.0], [34.9, 6398.0], [35.0, 6474.0], [35.1, 6482.0], [35.2, 6482.0], [35.3, 6508.0], [35.4, 6631.0], [35.5, 6631.0], [35.6, 6716.0], [35.7, 6716.0], [35.8, 6716.0], [35.9, 6730.0], [36.0, 6730.0], [36.1, 6830.0], [36.2, 6830.0], [36.3, 6978.0], [36.4, 7057.0], [36.5, 7057.0], [36.6, 7087.0], [36.7, 7153.0], [36.8, 7153.0], [36.9, 7169.0], [37.0, 7169.0], [37.1, 7209.0], [37.2, 7218.0], [37.3, 7218.0], [37.4, 7278.0], [37.5, 7278.0], [37.6, 7382.0], [37.7, 7419.0], [37.8, 7419.0], [37.9, 7480.0], [38.0, 7492.0], [38.1, 7492.0], [38.2, 7738.0], [38.3, 7738.0], [38.4, 7742.0], [38.5, 7793.0], [38.6, 7793.0], [38.7, 7809.0], [38.8, 8021.0], [38.9, 8021.0], [39.0, 8082.0], [39.1, 8082.0], [39.2, 8442.0], [39.3, 8667.0], [39.4, 8667.0], [39.5, 8788.0], [39.6, 8788.0], [39.7, 8906.0], [39.8, 8981.0], [39.9, 8981.0], [40.0, 9312.0], [40.1, 9335.0], [40.2, 9335.0], [40.3, 9406.0], [40.4, 9406.0], [40.5, 9535.0], [40.6, 9643.0], [40.7, 9643.0], [40.8, 9650.0], [40.9, 9650.0], [41.0, 9658.0], [41.1, 9688.0], [41.2, 9688.0], [41.3, 9730.0], [41.4, 9761.0], [41.5, 9761.0], [41.6, 9792.0], [41.7, 9792.0], [41.8, 10140.0], [41.9, 10260.0], [42.0, 10260.0], [42.1, 10544.0], [42.2, 10544.0], [42.3, 10553.0], [42.4, 10576.0], [42.5, 10576.0], [42.6, 10696.0], [42.7, 10723.0], [42.8, 10723.0], [42.9, 10774.0], [43.0, 10774.0], [43.1, 10839.0], [43.2, 10896.0], [43.3, 10896.0], [43.4, 10921.0], [43.5, 10921.0], [43.6, 10944.0], [43.7, 10974.0], [43.8, 10974.0], [43.9, 11113.0], [44.0, 11145.0], [44.1, 11145.0], [44.2, 11197.0], [44.3, 11197.0], [44.4, 11341.0], [44.5, 11476.0], [44.6, 11476.0], [44.7, 11605.0], [44.8, 11605.0], [44.9, 11615.0], [45.0, 11899.0], [45.1, 11899.0], [45.2, 11919.0], [45.3, 12205.0], [45.4, 12205.0], [45.5, 12346.0], [45.6, 12346.0], [45.7, 12489.0], [45.8, 12525.0], [45.9, 12525.0], [46.0, 12533.0], [46.1, 12533.0], [46.2, 12622.0], [46.3, 12645.0], [46.4, 12645.0], [46.5, 12706.0], [46.6, 12736.0], [46.7, 12736.0], [46.8, 12892.0], [46.9, 12892.0], [47.0, 13075.0], [47.1, 13137.0], [47.2, 13137.0], [47.3, 13138.0], [47.4, 13138.0], [47.5, 13178.0], [47.6, 13188.0], [47.7, 13188.0], [47.8, 13226.0], [47.9, 13229.0], [48.0, 13229.0], [48.1, 13250.0], [48.2, 13250.0], [48.3, 13296.0], [48.4, 13322.0], [48.5, 13322.0], [48.6, 13343.0], [48.7, 13343.0], [48.8, 13407.0], [48.9, 13445.0], [49.0, 13445.0], [49.1, 13579.0], [49.2, 13732.0], [49.3, 13732.0], [49.4, 13738.0], [49.5, 13738.0], [49.6, 13867.0], [49.7, 13914.0], [49.8, 13914.0], [49.9, 14254.0], [50.0, 14254.0], [50.1, 14268.0], [50.2, 14356.0], [50.3, 14356.0], [50.4, 14374.0], [50.5, 14378.0], [50.6, 14378.0], [50.7, 14386.0], [50.8, 14386.0], [50.9, 14469.0], [51.0, 14489.0], [51.1, 14489.0], [51.2, 14506.0], [51.3, 14636.0], [51.4, 14636.0], [51.5, 14695.0], [51.6, 14695.0], [51.7, 14706.0], [51.8, 14924.0], [51.9, 14924.0], [52.0, 15013.0], [52.1, 15013.0], [52.2, 15138.0], [52.3, 15145.0], [52.4, 15145.0], [52.5, 15150.0], [52.6, 15267.0], [52.7, 15267.0], [52.8, 15360.0], [52.9, 15360.0], [53.0, 15365.0], [53.1, 15482.0], [53.2, 15482.0], [53.3, 15549.0], [53.4, 15549.0], [53.5, 15616.0], [53.6, 15617.0], [53.7, 15617.0], [53.8, 15628.0], [53.9, 15811.0], [54.0, 15811.0], [54.1, 15828.0], [54.2, 15828.0], [54.3, 15879.0], [54.4, 15972.0], [54.5, 15972.0], [54.6, 16114.0], [54.7, 16114.0], [54.8, 16151.0], [54.9, 16188.0], [55.0, 16188.0], [55.1, 16209.0], [55.2, 16237.0], [55.3, 16237.0], [55.4, 16240.0], [55.5, 16240.0], [55.6, 16301.0], [55.7, 16367.0], [55.8, 16367.0], [55.9, 16416.0], [56.0, 16416.0], [56.1, 16471.0], [56.2, 16487.0], [56.3, 16487.0], [56.4, 16556.0], [56.5, 16680.0], [56.6, 16680.0], [56.7, 16704.0], [56.8, 16704.0], [56.9, 16811.0], [57.0, 16975.0], [57.1, 16975.0], [57.2, 17001.0], [57.3, 17001.0], [57.4, 17023.0], [57.5, 17082.0], [57.6, 17082.0], [57.7, 17102.0], [57.8, 17366.0], [57.9, 17366.0], [58.0, 17378.0], [58.1, 17378.0], [58.2, 17419.0], [58.3, 17442.0], [58.4, 17442.0], [58.5, 17499.0], [58.6, 17499.0], [58.7, 17517.0], [58.8, 17531.0], [58.9, 17531.0], [59.0, 17540.0], [59.1, 17675.0], [59.2, 17675.0], [59.3, 17829.0], [59.4, 17829.0], [59.5, 17845.0], [59.6, 17927.0], [59.7, 17927.0], [59.8, 17941.0], [59.9, 17941.0], [60.0, 17965.0], [60.1, 17973.0], [60.2, 17973.0], [60.3, 18084.0], [60.4, 18308.0], [60.5, 18308.0], [60.6, 18314.0], [60.7, 18314.0], [60.8, 18375.0], [60.9, 18420.0], [61.0, 18420.0], [61.1, 18434.0], [61.2, 18434.0], [61.3, 18465.0], [61.4, 18472.0], [61.5, 18472.0], [61.6, 18688.0], [61.7, 18690.0], [61.8, 18690.0], [61.9, 18792.0], [62.0, 18792.0], [62.1, 18800.0], [62.2, 18930.0], [62.3, 18930.0], [62.4, 18963.0], [62.5, 18963.0], [62.6, 18974.0], [62.7, 19000.0], [62.8, 19000.0], [62.9, 19026.0], [63.0, 19074.0], [63.1, 19074.0], [63.2, 19277.0], [63.3, 19277.0], [63.4, 19366.0], [63.5, 19386.0], [63.6, 19386.0], [63.7, 19630.0], [63.8, 19770.0], [63.9, 19770.0], [64.0, 19810.0], [64.1, 19810.0], [64.2, 19842.0], [64.3, 19929.0], [64.4, 19929.0], [64.5, 20081.0], [64.6, 20081.0], [64.7, 20155.0], [64.8, 20157.0], [64.9, 20157.0], [65.0, 20240.0], [65.1, 20280.0], [65.2, 20280.0], [65.3, 20464.0], [65.4, 20464.0], [65.5, 20593.0], [65.6, 20747.0], [65.7, 20747.0], [65.8, 20749.0], [65.9, 20749.0], [66.0, 20763.0], [66.1, 20792.0], [66.2, 20792.0], [66.3, 21006.0], [66.4, 21017.0], [66.5, 21017.0], [66.6, 21103.0], [66.7, 21103.0], [66.8, 21110.0], [66.9, 21173.0], [67.0, 21173.0], [67.1, 21219.0], [67.2, 21219.0], [67.3, 21250.0], [67.4, 21251.0], [67.5, 21251.0], [67.6, 21296.0], [67.7, 21316.0], [67.8, 21316.0], [67.9, 21454.0], [68.0, 21454.0], [68.1, 21520.0], [68.2, 21560.0], [68.3, 21560.0], [68.4, 21722.0], [68.5, 21722.0], [68.6, 21922.0], [68.7, 21944.0], [68.8, 21944.0], [68.9, 21975.0], [69.0, 21989.0], [69.1, 21989.0], [69.2, 22019.0], [69.3, 22019.0], [69.4, 22079.0], [69.5, 22186.0], [69.6, 22186.0], [69.7, 22193.0], [69.8, 22193.0], [69.9, 22214.0], [70.0, 22364.0], [70.1, 22364.0], [70.2, 22684.0], [70.3, 22695.0], [70.4, 22695.0], [70.5, 22704.0], [70.6, 22704.0], [70.7, 22748.0], [70.8, 22803.0], [70.9, 22803.0], [71.0, 22851.0], [71.1, 22851.0], [71.2, 22886.0], [71.3, 22889.0], [71.4, 22889.0], [71.5, 22967.0], [71.6, 22991.0], [71.7, 22991.0], [71.8, 23026.0], [71.9, 23026.0], [72.0, 23033.0], [72.1, 23074.0], [72.2, 23074.0], [72.3, 23136.0], [72.4, 23136.0], [72.5, 23151.0], [72.6, 23248.0], [72.7, 23248.0], [72.8, 23354.0], [72.9, 23405.0], [73.0, 23405.0], [73.1, 23435.0], [73.2, 23435.0], [73.3, 23441.0], [73.4, 23677.0], [73.5, 23677.0], [73.6, 23717.0], [73.7, 23717.0], [73.8, 23738.0], [73.9, 23766.0], [74.0, 23766.0], [74.1, 23768.0], [74.2, 23780.0], [74.3, 23780.0], [74.4, 23949.0], [74.5, 23949.0], [74.6, 23951.0], [74.7, 23973.0], [74.8, 23973.0], [74.9, 24040.0], [75.0, 24040.0], [75.1, 24142.0], [75.2, 24145.0], [75.3, 24145.0], [75.4, 24175.0], [75.5, 24178.0], [75.6, 24178.0], [75.7, 24353.0], [75.8, 24353.0], [75.9, 24499.0], [76.0, 24511.0], [76.1, 24511.0], [76.2, 24555.0], [76.3, 24593.0], [76.4, 24593.0], [76.5, 24665.0], [76.6, 24665.0], [76.7, 24757.0], [76.8, 24795.0], [76.9, 24795.0], [77.0, 24885.0], [77.1, 24885.0], [77.2, 24936.0], [77.3, 24939.0], [77.4, 24939.0], [77.5, 25014.0], [77.6, 25024.0], [77.7, 25024.0], [77.8, 25029.0], [77.9, 25029.0], [78.0, 25105.0], [78.1, 25132.0], [78.2, 25132.0], [78.3, 25171.0], [78.4, 25171.0], [78.5, 25184.0], [78.6, 25419.0], [78.7, 25419.0], [78.8, 25699.0], [78.9, 25945.0], [79.0, 25945.0], [79.1, 26079.0], [79.2, 26079.0], [79.3, 26173.0], [79.4, 26329.0], [79.5, 26329.0], [79.6, 26413.0], [79.7, 26413.0], [79.8, 26418.0], [79.9, 26488.0], [80.0, 26488.0], [80.1, 26521.0], [80.2, 26581.0], [80.3, 26581.0], [80.4, 26762.0], [80.5, 26762.0], [80.6, 26851.0], [80.7, 26965.0], [80.8, 26965.0], [80.9, 27405.0], [81.0, 27405.0], [81.1, 27462.0], [81.2, 27485.0], [81.3, 27485.0], [81.4, 27513.0], [81.5, 27620.0], [81.6, 27620.0], [81.7, 27680.0], [81.8, 27680.0], [81.9, 27681.0], [82.0, 28027.0], [82.1, 28027.0], [82.2, 28224.0], [82.3, 28224.0], [82.4, 28389.0], [82.5, 28447.0], [82.6, 28447.0], [82.7, 28480.0], [82.8, 28486.0], [82.9, 28486.0], [83.0, 28501.0], [83.1, 28501.0], [83.2, 28599.0], [83.3, 28646.0], [83.4, 28646.0], [83.5, 28840.0], [83.6, 28840.0], [83.7, 28843.0], [83.8, 28873.0], [83.9, 28873.0], [84.0, 29182.0], [84.1, 29341.0], [84.2, 29341.0], [84.3, 29362.0], [84.4, 29362.0], [84.5, 29442.0], [84.6, 29541.0], [84.7, 29541.0], [84.8, 29729.0], [84.9, 29729.0], [85.0, 29746.0], [85.1, 29850.0], [85.2, 29850.0], [85.3, 30029.0], [85.4, 30110.0], [85.5, 30110.0], [85.6, 30230.0], [85.7, 30230.0], [85.8, 30279.0], [85.9, 30393.0], [86.0, 30393.0], [86.1, 30520.0], [86.2, 30520.0], [86.3, 30721.0], [86.4, 30912.0], [86.5, 30912.0], [86.6, 31054.0], [86.7, 31142.0], [86.8, 31142.0], [86.9, 31225.0], [87.0, 31225.0], [87.1, 31249.0], [87.2, 31348.0], [87.3, 31348.0], [87.4, 31404.0], [87.5, 31404.0], [87.6, 31491.0], [87.7, 31495.0], [87.8, 31495.0], [87.9, 31496.0], [88.0, 31536.0], [88.1, 31536.0], [88.2, 31767.0], [88.3, 31767.0], [88.4, 32287.0], [88.5, 32468.0], [88.6, 32468.0], [88.7, 32630.0], [88.8, 33010.0], [88.9, 33010.0], [89.0, 33496.0], [89.1, 33496.0], [89.2, 33515.0], [89.3, 33533.0], [89.4, 33533.0], [89.5, 33569.0], [89.6, 33569.0], [89.7, 34201.0], [89.8, 34246.0], [89.9, 34246.0], [90.0, 34522.0], [90.1, 34854.0], [90.2, 34854.0], [90.3, 35115.0], [90.4, 35115.0], [90.5, 35262.0], [90.6, 35370.0], [90.7, 35370.0], [90.8, 35643.0], [90.9, 35643.0], [91.0, 35740.0], [91.1, 36209.0], [91.2, 36209.0], [91.3, 36385.0], [91.4, 37045.0], [91.5, 37045.0], [91.6, 37127.0], [91.7, 37127.0], [91.8, 37251.0], [91.9, 37335.0], [92.0, 37335.0], [92.1, 37428.0], [92.2, 37428.0], [92.3, 37489.0], [92.4, 37630.0], [92.5, 37630.0], [92.6, 37632.0], [92.7, 37882.0], [92.8, 37882.0], [92.9, 37990.0], [93.0, 37990.0], [93.1, 38046.0], [93.2, 38385.0], [93.3, 38385.0], [93.4, 38857.0], [93.5, 38857.0], [93.6, 38907.0], [93.7, 39104.0], [93.8, 39104.0], [93.9, 39153.0], [94.0, 39748.0], [94.1, 39748.0], [94.2, 39929.0], [94.3, 39929.0], [94.4, 40085.0], [94.5, 40386.0], [94.6, 40386.0], [94.7, 40507.0], [94.8, 40507.0], [94.9, 42570.0], [95.0, 43520.0], [95.1, 43520.0], [95.2, 43729.0], [95.3, 44838.0], [95.4, 44838.0], [95.5, 45001.0], [95.6, 45001.0], [95.7, 45606.0], [95.8, 48613.0], [95.9, 48613.0], [96.0, 50181.0], [96.1, 50181.0], [96.2, 50629.0], [96.3, 50781.0], [96.4, 50781.0], [96.5, 50920.0], [96.6, 51965.0], [96.7, 51965.0], [96.8, 52017.0], [96.9, 52017.0], [97.0, 52582.0], [97.1, 52637.0], [97.2, 52637.0], [97.3, 53352.0], [97.4, 53352.0], [97.5, 57226.0], [97.6, 60412.0], [97.7, 60412.0], [97.8, 60425.0], [97.9, 60434.0], [98.0, 60434.0], [98.1, 60448.0], [98.2, 60448.0], [98.3, 60448.0], [98.4, 60450.0], [98.5, 60450.0], [98.6, 60451.0], [98.7, 60451.0], [98.8, 60521.0], [98.9, 60523.0], [99.0, 60523.0], [99.1, 60538.0], [99.2, 60538.0], [99.3, 60538.0], [99.4, 60561.0], [99.5, 60561.0], [99.6, 60564.0], [99.7, 60731.0], [99.8, 60731.0], [99.9, 60969.0], [100.0, 60969.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 106.0], [0.1, 106.0], [0.2, 106.0], [0.3, 106.0], [0.4, 106.0], [0.5, 106.0], [0.6, 106.0], [0.7, 106.0], [0.8, 106.0], [0.9, 106.0], [1.0, 107.0], [1.1, 107.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 107.0], [1.6, 107.0], [1.7, 107.0], [1.8, 107.0], [1.9, 107.0], [2.0, 108.0], [2.1, 108.0], [2.2, 108.0], [2.3, 108.0], [2.4, 108.0], [2.5, 108.0], [2.6, 108.0], [2.7, 108.0], [2.8, 109.0], [2.9, 109.0], [3.0, 109.0], [3.1, 109.0], [3.2, 109.0], [3.3, 109.0], [3.4, 109.0], [3.5, 109.0], [3.6, 109.0], [3.7, 109.0], [3.8, 109.0], [3.9, 109.0], [4.0, 110.0], [4.1, 110.0], [4.2, 110.0], [4.3, 110.0], [4.4, 110.0], [4.5, 110.0], [4.6, 110.0], [4.7, 110.0], [4.8, 110.0], [4.9, 110.0], [5.0, 110.0], [5.1, 110.0], [5.2, 110.0], [5.3, 110.0], [5.4, 110.0], [5.5, 110.0], [5.6, 110.0], [5.7, 110.0], [5.8, 111.0], [5.9, 111.0], [6.0, 111.0], [6.1, 111.0], [6.2, 111.0], [6.3, 111.0], [6.4, 111.0], [6.5, 111.0], [6.6, 111.0], [6.7, 111.0], [6.8, 112.0], [6.9, 113.0], [7.0, 113.0], [7.1, 113.0], [7.2, 113.0], [7.3, 114.0], [7.4, 115.0], [7.5, 115.0], [7.6, 116.0], [7.7, 116.0], [7.8, 116.0], [7.9, 117.0], [8.0, 117.0], [8.1, 117.0], [8.2, 118.0], [8.3, 118.0], [8.4, 118.0], [8.5, 118.0], [8.6, 119.0], [8.7, 119.0], [8.8, 119.0], [8.9, 119.0], [9.0, 119.0], [9.1, 120.0], [9.2, 120.0], [9.3, 120.0], [9.4, 121.0], [9.5, 121.0], [9.6, 121.0], [9.7, 122.0], [9.8, 122.0], [9.9, 122.0], [10.0, 122.0], [10.1, 122.0], [10.2, 123.0], [10.3, 123.0], [10.4, 124.0], [10.5, 124.0], [10.6, 124.0], [10.7, 124.0], [10.8, 124.0], [10.9, 124.0], [11.0, 125.0], [11.1, 125.0], [11.2, 126.0], [11.3, 126.0], [11.4, 127.0], [11.5, 127.0], [11.6, 127.0], [11.7, 128.0], [11.8, 128.0], [11.9, 130.0], [12.0, 130.0], [12.1, 130.0], [12.2, 131.0], [12.3, 131.0], [12.4, 131.0], [12.5, 132.0], [12.6, 132.0], [12.7, 133.0], [12.8, 133.0], [12.9, 133.0], [13.0, 134.0], [13.1, 134.0], [13.2, 134.0], [13.3, 134.0], [13.4, 134.0], [13.5, 134.0], [13.6, 134.0], [13.7, 134.0], [13.8, 135.0], [13.9, 135.0], [14.0, 135.0], [14.1, 136.0], [14.2, 136.0], [14.3, 136.0], [14.4, 136.0], [14.5, 137.0], [14.6, 138.0], [14.7, 138.0], [14.8, 139.0], [14.9, 139.0], [15.0, 139.0], [15.1, 140.0], [15.2, 140.0], [15.3, 140.0], [15.4, 140.0], [15.5, 140.0], [15.6, 140.0], [15.7, 140.0], [15.8, 141.0], [15.9, 141.0], [16.0, 141.0], [16.1, 143.0], [16.2, 143.0], [16.3, 144.0], [16.4, 144.0], [16.5, 144.0], [16.6, 145.0], [16.7, 145.0], [16.8, 147.0], [16.9, 148.0], [17.0, 148.0], [17.1, 149.0], [17.2, 149.0], [17.3, 150.0], [17.4, 150.0], [17.5, 150.0], [17.6, 151.0], [17.7, 151.0], [17.8, 151.0], [17.9, 151.0], [18.0, 151.0], [18.1, 152.0], [18.2, 153.0], [18.3, 153.0], [18.4, 154.0], [18.5, 154.0], [18.6, 155.0], [18.7, 155.0], [18.8, 155.0], [18.9, 158.0], [19.0, 158.0], [19.1, 159.0], [19.2, 159.0], [19.3, 159.0], [19.4, 160.0], [19.5, 160.0], [19.6, 160.0], [19.7, 161.0], [19.8, 161.0], [19.9, 162.0], [20.0, 162.0], [20.1, 165.0], [20.2, 166.0], [20.3, 166.0], [20.4, 168.0], [20.5, 168.0], [20.6, 168.0], [20.7, 169.0], [20.8, 169.0], [20.9, 169.0], [21.0, 171.0], [21.1, 171.0], [21.2, 172.0], [21.3, 172.0], [21.4, 172.0], [21.5, 173.0], [21.6, 173.0], [21.7, 177.0], [21.8, 177.0], [21.9, 179.0], [22.0, 180.0], [22.1, 180.0], [22.2, 181.0], [22.3, 183.0], [22.4, 183.0], [22.5, 183.0], [22.6, 183.0], [22.7, 183.0], [22.8, 185.0], [22.9, 185.0], [23.0, 188.0], [23.1, 188.0], [23.2, 189.0], [23.3, 189.0], [23.4, 189.0], [23.5, 190.0], [23.6, 190.0], [23.7, 190.0], [23.8, 191.0], [23.9, 191.0], [24.0, 193.0], [24.1, 193.0], [24.2, 193.0], [24.3, 194.0], [24.4, 194.0], [24.5, 194.0], [24.6, 194.0], [24.7, 194.0], [24.8, 196.0], [24.9, 196.0], [25.0, 196.0], [25.1, 197.0], [25.2, 197.0], [25.3, 198.0], [25.4, 198.0], [25.5, 198.0], [25.6, 198.0], [25.7, 198.0], [25.8, 199.0], [25.9, 199.0], [26.0, 199.0], [26.1, 199.0], [26.2, 199.0], [26.3, 199.0], [26.4, 200.0], [26.5, 200.0], [26.6, 200.0], [26.7, 200.0], [26.8, 201.0], [26.9, 201.0], [27.0, 201.0], [27.1, 202.0], [27.2, 202.0], [27.3, 203.0], [27.4, 203.0], [27.5, 203.0], [27.6, 203.0], [27.7, 203.0], [27.8, 203.0], [27.9, 205.0], [28.0, 205.0], [28.1, 207.0], [28.2, 209.0], [28.3, 209.0], [28.4, 210.0], [28.5, 210.0], [28.6, 211.0], [28.7, 211.0], [28.8, 211.0], [28.9, 213.0], [29.0, 213.0], [29.1, 213.0], [29.2, 215.0], [29.3, 215.0], [29.4, 217.0], [29.5, 217.0], [29.6, 218.0], [29.7, 242.0], [29.8, 242.0], [29.9, 254.0], [30.0, 254.0], [30.1, 297.0], [30.2, 306.0], [30.3, 306.0], [30.4, 421.0], [30.5, 2044.0], [30.6, 2044.0], [30.7, 3982.0], [30.8, 3982.0], [30.9, 4067.0], [31.0, 4331.0], [31.1, 4331.0], [31.2, 4508.0], [31.3, 4508.0], [31.4, 4891.0], [31.5, 4902.0], [31.6, 4902.0], [31.7, 5110.0], [31.8, 5110.0], [31.9, 5144.0], [32.0, 5199.0], [32.1, 5199.0], [32.2, 5311.0], [32.3, 5374.0], [32.4, 5374.0], [32.5, 5447.0], [32.6, 5447.0], [32.7, 5546.0], [32.8, 5617.0], [32.9, 5617.0], [33.0, 5723.0], [33.1, 5723.0], [33.2, 5746.0], [33.3, 5764.0], [33.4, 5764.0], [33.5, 5765.0], [33.6, 5765.0], [33.7, 5768.0], [33.8, 5781.0], [33.9, 5781.0], [34.0, 5917.0], [34.1, 5995.0], [34.2, 5995.0], [34.3, 6047.0], [34.4, 6047.0], [34.5, 6171.0], [34.6, 6233.0], [34.7, 6233.0], [34.8, 6293.0], [34.9, 6293.0], [35.0, 6308.0], [35.1, 6371.0], [35.2, 6371.0], [35.3, 6394.0], [35.4, 6394.0], [35.5, 6411.0], [35.6, 6569.0], [35.7, 6569.0], [35.8, 6578.0], [35.9, 6578.0], [36.0, 6587.0], [36.1, 6706.0], [36.2, 6706.0], [36.3, 6762.0], [36.4, 6800.0], [36.5, 6800.0], [36.6, 6810.0], [36.7, 6810.0], [36.8, 6836.0], [36.9, 6862.0], [37.0, 6862.0], [37.1, 6974.0], [37.2, 6974.0], [37.3, 7014.0], [37.4, 7020.0], [37.5, 7020.0], [37.6, 7102.0], [37.7, 7102.0], [37.8, 7174.0], [37.9, 7181.0], [38.0, 7181.0], [38.1, 7330.0], [38.2, 7333.0], [38.3, 7333.0], [38.4, 7461.0], [38.5, 7461.0], [38.6, 7490.0], [38.7, 7683.0], [38.8, 7683.0], [38.9, 7691.0], [39.0, 7691.0], [39.1, 8129.0], [39.2, 8380.0], [39.3, 8380.0], [39.4, 8447.0], [39.5, 8447.0], [39.6, 8498.0], [39.7, 8768.0], [39.8, 8768.0], [39.9, 8920.0], [40.0, 8920.0], [40.1, 9097.0], [40.2, 9134.0], [40.3, 9134.0], [40.4, 9143.0], [40.5, 9168.0], [40.6, 9168.0], [40.7, 9250.0], [40.8, 9250.0], [40.9, 9344.0], [41.0, 9352.0], [41.1, 9352.0], [41.2, 9372.0], [41.3, 9372.0], [41.4, 9424.0], [41.5, 9486.0], [41.6, 9486.0], [41.7, 9835.0], [41.8, 9835.0], [41.9, 9847.0], [42.0, 9914.0], [42.1, 9914.0], [42.2, 10249.0], [42.3, 10281.0], [42.4, 10281.0], [42.5, 10306.0], [42.6, 10306.0], [42.7, 10484.0], [42.8, 10493.0], [42.9, 10493.0], [43.0, 10512.0], [43.1, 10512.0], [43.2, 10534.0], [43.3, 10581.0], [43.4, 10581.0], [43.5, 10630.0], [43.6, 10630.0], [43.7, 10643.0], [43.8, 10705.0], [43.9, 10705.0], [44.0, 10739.0], [44.1, 10789.0], [44.2, 10789.0], [44.3, 10935.0], [44.4, 10935.0], [44.5, 11140.0], [44.6, 11259.0], [44.7, 11259.0], [44.8, 11309.0], [44.9, 11309.0], [45.0, 11511.0], [45.1, 11585.0], [45.2, 11585.0], [45.3, 11801.0], [45.4, 11801.0], [45.5, 11939.0], [45.6, 12082.0], [45.7, 12082.0], [45.8, 12117.0], [45.9, 12117.0], [46.0, 12205.0], [46.1, 12216.0], [46.2, 12216.0], [46.3, 12296.0], [46.4, 12431.0], [46.5, 12431.0], [46.6, 12463.0], [46.7, 12463.0], [46.8, 12510.0], [46.9, 12621.0], [47.0, 12621.0], [47.1, 12760.0], [47.2, 12760.0], [47.3, 12807.0], [47.4, 12814.0], [47.5, 12814.0], [47.6, 12820.0], [47.7, 12820.0], [47.8, 12831.0], [47.9, 12841.0], [48.0, 12841.0], [48.1, 12887.0], [48.2, 12917.0], [48.3, 12917.0], [48.4, 12925.0], [48.5, 12925.0], [48.6, 13037.0], [48.7, 13037.0], [48.8, 13037.0], [48.9, 13063.0], [49.0, 13063.0], [49.1, 13223.0], [49.2, 13275.0], [49.3, 13275.0], [49.4, 13461.0], [49.5, 13461.0], [49.6, 13482.0], [49.7, 13516.0], [49.8, 13516.0], [49.9, 13847.0], [50.0, 13847.0], [50.1, 13854.0], [50.2, 13874.0], [50.3, 13874.0], [50.4, 13990.0], [50.5, 14012.0], [50.6, 14012.0], [50.7, 14060.0], [50.8, 14060.0], [50.9, 14148.0], [51.0, 14183.0], [51.1, 14183.0], [51.2, 14261.0], [51.3, 14261.0], [51.4, 14286.0], [51.5, 14401.0], [51.6, 14401.0], [51.7, 14418.0], [51.8, 14418.0], [51.9, 14622.0], [52.0, 14728.0], [52.1, 14728.0], [52.2, 14737.0], [52.3, 14742.0], [52.4, 14742.0], [52.5, 14795.0], [52.6, 14795.0], [52.7, 14859.0], [52.8, 14954.0], [52.9, 14954.0], [53.0, 14969.0], [53.1, 14969.0], [53.2, 15073.0], [53.3, 15141.0], [53.4, 15141.0], [53.5, 15312.0], [53.6, 15312.0], [53.7, 15343.0], [53.8, 15350.0], [53.9, 15350.0], [54.0, 15405.0], [54.1, 15470.0], [54.2, 15470.0], [54.3, 15524.0], [54.4, 15524.0], [54.5, 15561.0], [54.6, 15709.0], [54.7, 15709.0], [54.8, 15743.0], [54.9, 15743.0], [55.0, 15795.0], [55.1, 15830.0], [55.2, 15830.0], [55.3, 15881.0], [55.4, 15881.0], [55.5, 15960.0], [55.6, 16001.0], [55.7, 16001.0], [55.8, 16065.0], [55.9, 16065.0], [56.0, 16079.0], [56.1, 16132.0], [56.2, 16132.0], [56.3, 16201.0], [56.4, 16247.0], [56.5, 16247.0], [56.6, 16248.0], [56.7, 16248.0], [56.8, 16272.0], [56.9, 16397.0], [57.0, 16397.0], [57.1, 16490.0], [57.2, 16490.0], [57.3, 16594.0], [57.4, 16618.0], [57.5, 16618.0], [57.6, 16659.0], [57.7, 16659.0], [57.8, 16697.0], [57.9, 16737.0], [58.0, 16737.0], [58.1, 17041.0], [58.2, 17073.0], [58.3, 17073.0], [58.4, 17117.0], [58.5, 17117.0], [58.6, 17119.0], [58.7, 17131.0], [58.8, 17131.0], [58.9, 17211.0], [59.0, 17211.0], [59.1, 17284.0], [59.2, 17363.0], [59.3, 17363.0], [59.4, 17419.0], [59.5, 17419.0], [59.6, 17466.0], [59.7, 17484.0], [59.8, 17484.0], [59.9, 17522.0], [60.0, 17522.0], [60.1, 17649.0], [60.2, 17659.0], [60.3, 17659.0], [60.4, 17676.0], [60.5, 17942.0], [60.6, 17942.0], [60.7, 17966.0], [60.8, 17966.0], [60.9, 18012.0], [61.0, 18014.0], [61.1, 18014.0], [61.2, 18060.0], [61.3, 18060.0], [61.4, 18142.0], [61.5, 18207.0], [61.6, 18207.0], [61.7, 18283.0], [61.8, 18283.0], [61.9, 18285.0], [62.0, 18371.0], [62.1, 18371.0], [62.2, 18541.0], [62.3, 18565.0], [62.4, 18565.0], [62.5, 18575.0], [62.6, 18575.0], [62.7, 18592.0], [62.8, 18713.0], [62.9, 18713.0], [63.0, 18749.0], [63.1, 18749.0], [63.2, 18759.0], [63.3, 18869.0], [63.4, 18869.0], [63.5, 19046.0], [63.6, 19046.0], [63.7, 19113.0], [63.8, 19230.0], [63.9, 19230.0], [64.0, 19402.0], [64.1, 19431.0], [64.2, 19431.0], [64.3, 19450.0], [64.4, 19450.0], [64.5, 19624.0], [64.6, 19673.0], [64.7, 19673.0], [64.8, 19748.0], [64.9, 19748.0], [65.0, 19818.0], [65.1, 19833.0], [65.2, 19833.0], [65.3, 19872.0], [65.4, 19872.0], [65.5, 20151.0], [65.6, 20336.0], [65.7, 20336.0], [65.8, 20341.0], [65.9, 20341.0], [66.0, 20376.0], [66.1, 20445.0], [66.2, 20445.0], [66.3, 20485.0], [66.4, 20693.0], [66.5, 20693.0], [66.6, 20721.0], [66.7, 20721.0], [66.8, 20791.0], [66.9, 20811.0], [67.0, 20811.0], [67.1, 20891.0], [67.2, 20891.0], [67.3, 20907.0], [67.4, 20909.0], [67.5, 20909.0], [67.6, 20990.0], [67.7, 20990.0], [67.8, 21009.0], [67.9, 21041.0], [68.0, 21041.0], [68.1, 21111.0], [68.2, 21130.0], [68.3, 21130.0], [68.4, 21168.0], [68.5, 21168.0], [68.6, 21360.0], [68.7, 21514.0], [68.8, 21514.0], [68.9, 21566.0], [69.0, 21566.0], [69.1, 21574.0], [69.2, 21626.0], [69.3, 21626.0], [69.4, 21670.0], [69.5, 21670.0], [69.6, 21704.0], [69.7, 21805.0], [69.8, 21805.0], [69.9, 21827.0], [70.0, 21827.0], [70.1, 21865.0], [70.2, 21959.0], [70.3, 21959.0], [70.4, 21977.0], [70.5, 22276.0], [70.6, 22276.0], [70.7, 22292.0], [70.8, 22292.0], [70.9, 22327.0], [71.0, 22428.0], [71.1, 22428.0], [71.2, 22445.0], [71.3, 22445.0], [71.4, 22472.0], [71.5, 22481.0], [71.6, 22481.0], [71.7, 22580.0], [71.8, 22580.0], [71.9, 22582.0], [72.0, 22607.0], [72.1, 22607.0], [72.2, 22626.0], [72.3, 22723.0], [72.4, 22723.0], [72.5, 22743.0], [72.6, 22743.0], [72.7, 22861.0], [72.8, 22917.0], [72.9, 22917.0], [73.0, 22947.0], [73.1, 22947.0], [73.2, 23032.0], [73.3, 23074.0], [73.4, 23074.0], [73.5, 23130.0], [73.6, 23130.0], [73.7, 23284.0], [73.8, 23333.0], [73.9, 23333.0], [74.0, 23394.0], [74.1, 23437.0], [74.2, 23437.0], [74.3, 23453.0], [74.4, 23453.0], [74.5, 23464.0], [74.6, 23501.0], [74.7, 23501.0], [74.8, 23540.0], [74.9, 23540.0], [75.0, 23631.0], [75.1, 23675.0], [75.2, 23675.0], [75.3, 23737.0], [75.4, 23737.0], [75.5, 23742.0], [75.6, 23850.0], [75.7, 23850.0], [75.8, 23850.0], [75.9, 23850.0], [76.0, 23927.0], [76.1, 24092.0], [76.2, 24092.0], [76.3, 24139.0], [76.4, 24149.0], [76.5, 24149.0], [76.6, 24257.0], [76.7, 24257.0], [76.8, 24275.0], [76.9, 24349.0], [77.0, 24349.0], [77.1, 24383.0], [77.2, 24383.0], [77.3, 24392.0], [77.4, 24545.0], [77.5, 24545.0], [77.6, 24615.0], [77.7, 24615.0], [77.8, 24620.0], [77.9, 24668.0], [78.0, 24668.0], [78.1, 24725.0], [78.2, 24727.0], [78.3, 24727.0], [78.4, 24763.0], [78.5, 24763.0], [78.6, 24795.0], [78.7, 24878.0], [78.8, 24878.0], [78.9, 25013.0], [79.0, 25013.0], [79.1, 25291.0], [79.2, 25639.0], [79.3, 25639.0], [79.4, 25761.0], [79.5, 25761.0], [79.6, 25821.0], [79.7, 25822.0], [79.8, 25822.0], [79.9, 26022.0], [80.0, 26052.0], [80.1, 26052.0], [80.2, 26080.0], [80.3, 26080.0], [80.4, 26111.0], [80.5, 26173.0], [80.6, 26173.0], [80.7, 26352.0], [80.8, 26352.0], [80.9, 26443.0], [81.0, 26659.0], [81.1, 26659.0], [81.2, 26996.0], [81.3, 26996.0], [81.4, 27090.0], [81.5, 27102.0], [81.6, 27102.0], [81.7, 27164.0], [81.8, 27164.0], [81.9, 27210.0], [82.0, 27270.0], [82.1, 27270.0], [82.2, 27315.0], [82.3, 27719.0], [82.4, 27719.0], [82.5, 27918.0], [82.6, 27918.0], [82.7, 28078.0], [82.8, 28087.0], [82.9, 28087.0], [83.0, 28174.0], [83.1, 28174.0], [83.2, 28236.0], [83.3, 28264.0], [83.4, 28264.0], [83.5, 28292.0], [83.6, 28292.0], [83.7, 28315.0], [83.8, 28437.0], [83.9, 28437.0], [84.0, 28510.0], [84.1, 28564.0], [84.2, 28564.0], [84.3, 28774.0], [84.4, 28774.0], [84.5, 28852.0], [84.6, 29027.0], [84.7, 29027.0], [84.8, 29134.0], [84.9, 29134.0], [85.0, 29140.0], [85.1, 29340.0], [85.2, 29340.0], [85.3, 29442.0], [85.4, 29442.0], [85.5, 29502.0], [85.6, 29696.0], [85.7, 29696.0], [85.8, 29724.0], [85.9, 29724.0], [86.0, 29802.0], [86.1, 29870.0], [86.2, 29870.0], [86.3, 30088.0], [86.4, 30215.0], [86.5, 30215.0], [86.6, 30313.0], [86.7, 30313.0], [86.8, 30503.0], [86.9, 30749.0], [87.0, 30749.0], [87.1, 30836.0], [87.2, 30836.0], [87.3, 30898.0], [87.4, 30909.0], [87.5, 30909.0], [87.6, 30941.0], [87.7, 30941.0], [87.8, 30941.0], [87.9, 31088.0], [88.0, 31088.0], [88.1, 31099.0], [88.2, 31112.0], [88.3, 31112.0], [88.4, 31189.0], [88.5, 31189.0], [88.6, 31358.0], [88.7, 31973.0], [88.8, 31973.0], [88.9, 32110.0], [89.0, 32110.0], [89.1, 32312.0], [89.2, 32730.0], [89.3, 32730.0], [89.4, 33087.0], [89.5, 33087.0], [89.6, 33107.0], [89.7, 33126.0], [89.8, 33126.0], [89.9, 33236.0], [90.0, 33792.0], [90.1, 33792.0], [90.2, 34030.0], [90.3, 34030.0], [90.4, 34114.0], [90.5, 34264.0], [90.6, 34264.0], [90.7, 34446.0], [90.8, 34446.0], [90.9, 34615.0], [91.0, 34878.0], [91.1, 34878.0], [91.2, 34961.0], [91.3, 34961.0], [91.4, 35332.0], [91.5, 35813.0], [91.6, 35813.0], [91.7, 35989.0], [91.8, 35989.0], [91.9, 36821.0], [92.0, 36928.0], [92.1, 36928.0], [92.2, 36931.0], [92.3, 37020.0], [92.4, 37020.0], [92.5, 37131.0], [92.6, 37131.0], [92.7, 37222.0], [92.8, 37336.0], [92.9, 37336.0], [93.0, 37473.0], [93.1, 37473.0], [93.2, 37581.0], [93.3, 37638.0], [93.4, 37638.0], [93.5, 38009.0], [93.6, 38009.0], [93.7, 38592.0], [93.8, 38640.0], [93.9, 38640.0], [94.0, 39441.0], [94.1, 39521.0], [94.2, 39521.0], [94.3, 39735.0], [94.4, 39735.0], [94.5, 39976.0], [94.6, 40008.0], [94.7, 40008.0], [94.8, 40100.0], [94.9, 40100.0], [95.0, 43112.0], [95.1, 43345.0], [95.2, 43345.0], [95.3, 44368.0], [95.4, 44368.0], [95.5, 44637.0], [95.6, 45197.0], [95.7, 45197.0], [95.8, 48400.0], [95.9, 48400.0], [96.0, 49951.0], [96.1, 50308.0], [96.2, 50308.0], [96.3, 50400.0], [96.4, 50418.0], [96.5, 50418.0], [96.6, 51559.0], [96.7, 51559.0], [96.8, 51601.0], [96.9, 51701.0], [97.0, 51701.0], [97.1, 52228.0], [97.2, 52228.0], [97.3, 53058.0], [97.4, 57011.0], [97.5, 57011.0], [97.6, 60007.0], [97.7, 60007.0], [97.8, 60108.0], [97.9, 60109.0], [98.0, 60109.0], [98.1, 60109.0], [98.2, 60112.0], [98.3, 60112.0], [98.4, 60129.0], [98.5, 60129.0], [98.6, 60130.0], [98.7, 60145.0], [98.8, 60145.0], [98.9, 60147.0], [99.0, 60147.0], [99.1, 60153.0], [99.2, 60157.0], [99.3, 60157.0], [99.4, 60175.0], [99.5, 60175.0], [99.6, 60181.0], [99.7, 60216.0], [99.8, 60216.0], [99.9, 60560.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 209.0], [0.1, 209.0], [0.2, 209.0], [0.3, 209.0], [0.4, 210.0], [0.5, 210.0], [0.6, 210.0], [0.7, 210.0], [0.8, 210.0], [0.9, 211.0], [1.0, 211.0], [1.1, 211.0], [1.2, 212.0], [1.3, 212.0], [1.4, 212.0], [1.5, 213.0], [1.6, 213.0], [1.7, 213.0], [1.8, 213.0], [1.9, 213.0], [2.0, 213.0], [2.1, 213.0], [2.2, 213.0], [2.3, 214.0], [2.4, 214.0], [2.5, 214.0], [2.6, 214.0], [2.7, 214.0], [2.8, 214.0], [2.9, 214.0], [3.0, 215.0], [3.1, 215.0], [3.2, 215.0], [3.3, 215.0], [3.4, 215.0], [3.5, 215.0], [3.6, 215.0], [3.7, 215.0], [3.8, 215.0], [3.9, 215.0], [4.0, 215.0], [4.1, 215.0], [4.2, 215.0], [4.3, 215.0], [4.4, 215.0], [4.5, 215.0], [4.6, 216.0], [4.7, 216.0], [4.8, 216.0], [4.9, 216.0], [5.0, 216.0], [5.1, 216.0], [5.2, 216.0], [5.3, 216.0], [5.4, 217.0], [5.5, 217.0], [5.6, 217.0], [5.7, 217.0], [5.8, 217.0], [5.9, 217.0], [6.0, 217.0], [6.1, 217.0], [6.2, 218.0], [6.3, 218.0], [6.4, 218.0], [6.5, 218.0], [6.6, 218.0], [6.7, 218.0], [6.8, 218.0], [6.9, 219.0], [7.0, 219.0], [7.1, 219.0], [7.2, 220.0], [7.3, 220.0], [7.4, 220.0], [7.5, 220.0], [7.6, 220.0], [7.7, 221.0], [7.8, 221.0], [7.9, 221.0], [8.0, 222.0], [8.1, 222.0], [8.2, 222.0], [8.3, 224.0], [8.4, 224.0], [8.5, 224.0], [8.6, 224.0], [8.7, 224.0], [8.8, 226.0], [8.9, 226.0], [9.0, 226.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 228.0], [9.6, 229.0], [9.7, 229.0], [9.8, 230.0], [9.9, 230.0], [10.0, 230.0], [10.1, 231.0], [10.2, 231.0], [10.3, 231.0], [10.4, 231.0], [10.5, 231.0], [10.6, 231.0], [10.7, 231.0], [10.8, 236.0], [10.9, 236.0], [11.0, 236.0], [11.1, 236.0], [11.2, 236.0], [11.3, 237.0], [11.4, 237.0], [11.5, 237.0], [11.6, 238.0], [11.7, 239.0], [11.8, 239.0], [11.9, 241.0], [12.0, 241.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 247.0], [12.5, 247.0], [12.6, 247.0], [12.7, 248.0], [12.8, 248.0], [12.9, 248.0], [13.0, 249.0], [13.1, 249.0], [13.2, 249.0], [13.3, 249.0], [13.4, 250.0], [13.5, 251.0], [13.6, 251.0], [13.7, 253.0], [13.8, 253.0], [13.9, 253.0], [14.0, 256.0], [14.1, 256.0], [14.2, 256.0], [14.3, 258.0], [14.4, 258.0], [14.5, 260.0], [14.6, 260.0], [14.7, 261.0], [14.8, 263.0], [14.9, 263.0], [15.0, 264.0], [15.1, 273.0], [15.2, 273.0], [15.3, 273.0], [15.4, 273.0], [15.5, 273.0], [15.6, 274.0], [15.7, 274.0], [15.8, 274.0], [15.9, 274.0], [16.0, 276.0], [16.1, 277.0], [16.2, 277.0], [16.3, 278.0], [16.4, 280.0], [16.5, 280.0], [16.6, 283.0], [16.7, 283.0], [16.8, 290.0], [16.9, 293.0], [17.0, 293.0], [17.1, 294.0], [17.2, 294.0], [17.3, 294.0], [17.4, 296.0], [17.5, 296.0], [17.6, 296.0], [17.7, 296.0], [17.8, 296.0], [17.9, 296.0], [18.0, 296.0], [18.1, 302.0], [18.2, 302.0], [18.3, 302.0], [18.4, 302.0], [18.5, 302.0], [18.6, 302.0], [18.7, 302.0], [18.8, 302.0], [18.9, 303.0], [19.0, 303.0], [19.1, 303.0], [19.2, 303.0], [19.3, 303.0], [19.4, 304.0], [19.5, 304.0], [19.6, 304.0], [19.7, 304.0], [19.8, 304.0], [19.9, 305.0], [20.0, 305.0], [20.1, 305.0], [20.2, 305.0], [20.3, 305.0], [20.4, 305.0], [20.5, 305.0], [20.6, 305.0], [20.7, 305.0], [20.8, 305.0], [20.9, 305.0], [21.0, 305.0], [21.1, 305.0], [21.2, 305.0], [21.3, 305.0], [21.4, 305.0], [21.5, 305.0], [21.6, 305.0], [21.7, 305.0], [21.8, 305.0], [21.9, 305.0], [22.0, 305.0], [22.1, 305.0], [22.2, 305.0], [22.3, 305.0], [22.4, 305.0], [22.5, 305.0], [22.6, 305.0], [22.7, 305.0], [22.8, 305.0], [22.9, 305.0], [23.0, 305.0], [23.1, 306.0], [23.2, 306.0], [23.3, 306.0], [23.4, 306.0], [23.5, 306.0], [23.6, 306.0], [23.7, 306.0], [23.8, 306.0], [23.9, 306.0], [24.0, 306.0], [24.1, 306.0], [24.2, 306.0], [24.3, 306.0], [24.4, 306.0], [24.5, 306.0], [24.6, 306.0], [24.7, 306.0], [24.8, 306.0], [24.9, 306.0], [25.0, 306.0], [25.1, 306.0], [25.2, 306.0], [25.3, 306.0], [25.4, 306.0], [25.5, 306.0], [25.6, 306.0], [25.7, 306.0], [25.8, 306.0], [25.9, 306.0], [26.0, 306.0], [26.1, 306.0], [26.2, 306.0], [26.3, 306.0], [26.4, 306.0], [26.5, 306.0], [26.6, 306.0], [26.7, 306.0], [26.8, 306.0], [26.9, 306.0], [27.0, 306.0], [27.1, 306.0], [27.2, 306.0], [27.3, 306.0], [27.4, 306.0], [27.5, 307.0], [27.6, 307.0], [27.7, 307.0], [27.8, 307.0], [27.9, 307.0], [28.0, 307.0], [28.1, 307.0], [28.2, 307.0], [28.3, 307.0], [28.4, 307.0], [28.5, 307.0], [28.6, 307.0], [28.7, 307.0], [28.8, 307.0], [28.9, 307.0], [29.0, 307.0], [29.1, 307.0], [29.2, 307.0], [29.3, 307.0], [29.4, 307.0], [29.5, 307.0], [29.6, 308.0], [29.7, 308.0], [29.8, 308.0], [29.9, 308.0], [30.0, 308.0], [30.1, 308.0], [30.2, 308.0], [30.3, 308.0], [30.4, 308.0], [30.5, 308.0], [30.6, 309.0], [30.7, 310.0], [30.8, 310.0], [30.9, 310.0], [31.0, 310.0], [31.1, 310.0], [31.2, 311.0], [31.3, 311.0], [31.4, 312.0], [31.5, 312.0], [31.6, 312.0], [31.7, 313.0], [31.8, 313.0], [31.9, 313.0], [32.0, 314.0], [32.1, 314.0], [32.2, 314.0], [32.3, 314.0], [32.4, 314.0], [32.5, 314.0], [32.6, 314.0], [32.7, 314.0], [32.8, 314.0], [32.9, 314.0], [33.0, 315.0], [33.1, 315.0], [33.2, 315.0], [33.3, 315.0], [33.4, 315.0], [33.5, 315.0], [33.6, 315.0], [33.7, 315.0], [33.8, 315.0], [33.9, 315.0], [34.0, 316.0], [34.1, 316.0], [34.2, 316.0], [34.3, 316.0], [34.4, 316.0], [34.5, 316.0], [34.6, 316.0], [34.7, 316.0], [34.8, 317.0], [34.9, 317.0], [35.0, 317.0], [35.1, 318.0], [35.2, 318.0], [35.3, 318.0], [35.4, 318.0], [35.5, 318.0], [35.6, 318.0], [35.7, 318.0], [35.8, 318.0], [35.9, 319.0], [36.0, 319.0], [36.1, 320.0], [36.2, 320.0], [36.3, 320.0], [36.4, 321.0], [36.5, 321.0], [36.6, 321.0], [36.7, 321.0], [36.8, 321.0], [36.9, 323.0], [37.0, 323.0], [37.1, 323.0], [37.2, 323.0], [37.3, 323.0], [37.4, 323.0], [37.5, 323.0], [37.6, 324.0], [37.7, 324.0], [37.8, 324.0], [37.9, 324.0], [38.0, 324.0], [38.1, 324.0], [38.2, 325.0], [38.3, 325.0], [38.4, 327.0], [38.5, 328.0], [38.6, 328.0], [38.7, 329.0], [38.8, 329.0], [38.9, 329.0], [39.0, 330.0], [39.1, 330.0], [39.2, 330.0], [39.3, 330.0], [39.4, 330.0], [39.5, 331.0], [39.6, 331.0], [39.7, 331.0], [39.8, 331.0], [39.9, 331.0], [40.0, 331.0], [40.1, 333.0], [40.2, 333.0], [40.3, 333.0], [40.4, 333.0], [40.5, 335.0], [40.6, 336.0], [40.7, 336.0], [40.8, 336.0], [40.9, 336.0], [41.0, 337.0], [41.1, 339.0], [41.2, 339.0], [41.3, 339.0], [41.4, 340.0], [41.5, 340.0], [41.6, 342.0], [41.7, 342.0], [41.8, 342.0], [41.9, 342.0], [42.0, 342.0], [42.1, 342.0], [42.2, 342.0], [42.3, 343.0], [42.4, 344.0], [42.5, 344.0], [42.6, 344.0], [42.7, 344.0], [42.8, 344.0], [42.9, 345.0], [43.0, 345.0], [43.1, 345.0], [43.2, 346.0], [43.3, 346.0], [43.4, 347.0], [43.5, 347.0], [43.6, 348.0], [43.7, 349.0], [43.8, 349.0], [43.9, 349.0], [44.0, 350.0], [44.1, 350.0], [44.2, 351.0], [44.3, 351.0], [44.4, 351.0], [44.5, 352.0], [44.6, 352.0], [44.7, 352.0], [44.8, 352.0], [44.9, 353.0], [45.0, 355.0], [45.1, 355.0], [45.2, 356.0], [45.3, 358.0], [45.4, 358.0], [45.5, 358.0], [45.6, 358.0], [45.7, 358.0], [45.8, 360.0], [45.9, 360.0], [46.0, 360.0], [46.1, 360.0], [46.2, 362.0], [46.3, 364.0], [46.4, 364.0], [46.5, 364.0], [46.6, 364.0], [46.7, 364.0], [46.8, 365.0], [46.9, 365.0], [47.0, 366.0], [47.1, 366.0], [47.2, 366.0], [47.3, 366.0], [47.4, 366.0], [47.5, 367.0], [47.6, 372.0], [47.7, 372.0], [47.8, 374.0], [47.9, 376.0], [48.0, 376.0], [48.1, 377.0], [48.2, 377.0], [48.3, 379.0], [48.4, 379.0], [48.5, 379.0], [48.6, 380.0], [48.7, 380.0], [48.8, 381.0], [48.9, 381.0], [49.0, 381.0], [49.1, 381.0], [49.2, 382.0], [49.3, 382.0], [49.4, 383.0], [49.5, 383.0], [49.6, 384.0], [49.7, 384.0], [49.8, 384.0], [49.9, 386.0], [50.0, 386.0], [50.1, 388.0], [50.2, 389.0], [50.3, 389.0], [50.4, 389.0], [50.5, 390.0], [50.6, 390.0], [50.7, 390.0], [50.8, 390.0], [50.9, 390.0], [51.0, 392.0], [51.1, 392.0], [51.2, 392.0], [51.3, 393.0], [51.4, 393.0], [51.5, 393.0], [51.6, 393.0], [51.7, 393.0], [51.8, 394.0], [51.9, 394.0], [52.0, 394.0], [52.1, 394.0], [52.2, 395.0], [52.3, 396.0], [52.4, 396.0], [52.5, 396.0], [52.6, 396.0], [52.7, 396.0], [52.8, 396.0], [52.9, 396.0], [53.0, 399.0], [53.1, 400.0], [53.2, 400.0], [53.3, 400.0], [53.4, 400.0], [53.5, 401.0], [53.6, 402.0], [53.7, 402.0], [53.8, 402.0], [53.9, 403.0], [54.0, 403.0], [54.1, 403.0], [54.2, 403.0], [54.3, 403.0], [54.4, 404.0], [54.5, 404.0], [54.6, 404.0], [54.7, 404.0], [54.8, 404.0], [54.9, 405.0], [55.0, 405.0], [55.1, 405.0], [55.2, 405.0], [55.3, 405.0], [55.4, 405.0], [55.5, 405.0], [55.6, 405.0], [55.7, 405.0], [55.8, 405.0], [55.9, 405.0], [56.0, 405.0], [56.1, 405.0], [56.2, 405.0], [56.3, 405.0], [56.4, 405.0], [56.5, 405.0], [56.6, 405.0], [56.7, 405.0], [56.8, 405.0], [56.9, 405.0], [57.0, 405.0], [57.1, 405.0], [57.2, 405.0], [57.3, 405.0], [57.4, 405.0], [57.5, 406.0], [57.6, 406.0], [57.7, 406.0], [57.8, 406.0], [57.9, 406.0], [58.0, 406.0], [58.1, 406.0], [58.2, 406.0], [58.3, 406.0], [58.4, 406.0], [58.5, 406.0], [58.6, 406.0], [58.7, 406.0], [58.8, 406.0], [58.9, 406.0], [59.0, 406.0], [59.1, 406.0], [59.2, 406.0], [59.3, 406.0], [59.4, 406.0], [59.5, 406.0], [59.6, 406.0], [59.7, 406.0], [59.8, 406.0], [59.9, 406.0], [60.0, 406.0], [60.1, 407.0], [60.2, 407.0], [60.3, 407.0], [60.4, 407.0], [60.5, 407.0], [60.6, 407.0], [60.7, 407.0], [60.8, 407.0], [60.9, 407.0], [61.0, 407.0], [61.1, 407.0], [61.2, 407.0], [61.3, 407.0], [61.4, 407.0], [61.5, 407.0], [61.6, 407.0], [61.7, 407.0], [61.8, 407.0], [61.9, 407.0], [62.0, 407.0], [62.1, 407.0], [62.2, 407.0], [62.3, 407.0], [62.4, 407.0], [62.5, 407.0], [62.6, 407.0], [62.7, 407.0], [62.8, 407.0], [62.9, 407.0], [63.0, 407.0], [63.1, 407.0], [63.2, 407.0], [63.3, 407.0], [63.4, 407.0], [63.5, 407.0], [63.6, 407.0], [63.7, 407.0], [63.8, 407.0], [63.9, 407.0], [64.0, 407.0], [64.1, 407.0], [64.2, 407.0], [64.3, 407.0], [64.4, 407.0], [64.5, 407.0], [64.6, 407.0], [64.7, 407.0], [64.8, 407.0], [64.9, 407.0], [65.0, 407.0], [65.1, 407.0], [65.2, 407.0], [65.3, 408.0], [65.4, 408.0], [65.5, 408.0], [65.6, 408.0], [65.7, 408.0], [65.8, 408.0], [65.9, 408.0], [66.0, 408.0], [66.1, 408.0], [66.2, 408.0], [66.3, 408.0], [66.4, 408.0], [66.5, 408.0], [66.6, 408.0], [66.7, 408.0], [66.8, 408.0], [66.9, 408.0], [67.0, 408.0], [67.1, 408.0], [67.2, 408.0], [67.3, 408.0], [67.4, 408.0], [67.5, 408.0], [67.6, 408.0], [67.7, 408.0], [67.8, 408.0], [67.9, 408.0], [68.0, 408.0], [68.1, 408.0], [68.2, 408.0], [68.3, 408.0], [68.4, 408.0], [68.5, 408.0], [68.6, 408.0], [68.7, 408.0], [68.8, 408.0], [68.9, 408.0], [69.0, 408.0], [69.1, 408.0], [69.2, 408.0], [69.3, 408.0], [69.4, 408.0], [69.5, 408.0], [69.6, 408.0], [69.7, 408.0], [69.8, 408.0], [69.9, 408.0], [70.0, 408.0], [70.1, 408.0], [70.2, 408.0], [70.3, 408.0], [70.4, 408.0], [70.5, 408.0], [70.6, 408.0], [70.7, 408.0], [70.8, 408.0], [70.9, 408.0], [71.0, 408.0], [71.1, 408.0], [71.2, 408.0], [71.3, 408.0], [71.4, 408.0], [71.5, 408.0], [71.6, 408.0], [71.7, 408.0], [71.8, 408.0], [71.9, 408.0], [72.0, 408.0], [72.1, 408.0], [72.2, 408.0], [72.3, 408.0], [72.4, 408.0], [72.5, 408.0], [72.6, 408.0], [72.7, 408.0], [72.8, 408.0], [72.9, 408.0], [73.0, 408.0], [73.1, 408.0], [73.2, 408.0], [73.3, 408.0], [73.4, 408.0], [73.5, 408.0], [73.6, 408.0], [73.7, 408.0], [73.8, 408.0], [73.9, 408.0], [74.0, 408.0], [74.1, 408.0], [74.2, 408.0], [74.3, 408.0], [74.4, 408.0], [74.5, 408.0], [74.6, 408.0], [74.7, 408.0], [74.8, 408.0], [74.9, 408.0], [75.0, 408.0], [75.1, 408.0], [75.2, 408.0], [75.3, 408.0], [75.4, 408.0], [75.5, 408.0], [75.6, 408.0], [75.7, 408.0], [75.8, 408.0], [75.9, 408.0], [76.0, 408.0], [76.1, 408.0], [76.2, 408.0], [76.3, 408.0], [76.4, 408.0], [76.5, 408.0], [76.6, 408.0], [76.7, 408.0], [76.8, 409.0], [76.9, 409.0], [77.0, 409.0], [77.1, 409.0], [77.2, 409.0], [77.3, 409.0], [77.4, 409.0], [77.5, 409.0], [77.6, 409.0], [77.7, 409.0], [77.8, 409.0], [77.9, 409.0], [78.0, 409.0], [78.1, 409.0], [78.2, 409.0], [78.3, 409.0], [78.4, 409.0], [78.5, 409.0], [78.6, 409.0], [78.7, 409.0], [78.8, 409.0], [78.9, 409.0], [79.0, 409.0], [79.1, 409.0], [79.2, 409.0], [79.3, 409.0], [79.4, 409.0], [79.5, 409.0], [79.6, 409.0], [79.7, 409.0], [79.8, 409.0], [79.9, 409.0], [80.0, 409.0], [80.1, 409.0], [80.2, 409.0], [80.3, 409.0], [80.4, 409.0], [80.5, 409.0], [80.6, 409.0], [80.7, 409.0], [80.8, 409.0], [80.9, 409.0], [81.0, 409.0], [81.1, 409.0], [81.2, 409.0], [81.3, 409.0], [81.4, 409.0], [81.5, 409.0], [81.6, 409.0], [81.7, 409.0], [81.8, 409.0], [81.9, 409.0], [82.0, 409.0], [82.1, 409.0], [82.2, 409.0], [82.3, 409.0], [82.4, 409.0], [82.5, 409.0], [82.6, 409.0], [82.7, 409.0], [82.8, 409.0], [82.9, 409.0], [83.0, 409.0], [83.1, 409.0], [83.2, 409.0], [83.3, 409.0], [83.4, 409.0], [83.5, 409.0], [83.6, 409.0], [83.7, 409.0], [83.8, 409.0], [83.9, 409.0], [84.0, 409.0], [84.1, 409.0], [84.2, 409.0], [84.3, 409.0], [84.4, 409.0], [84.5, 409.0], [84.6, 409.0], [84.7, 409.0], [84.8, 409.0], [84.9, 409.0], [85.0, 409.0], [85.1, 409.0], [85.2, 409.0], [85.3, 409.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 410.0], [86.0, 410.0], [86.1, 410.0], [86.2, 410.0], [86.3, 410.0], [86.4, 410.0], [86.5, 410.0], [86.6, 410.0], [86.7, 410.0], [86.8, 410.0], [86.9, 410.0], [87.0, 410.0], [87.1, 410.0], [87.2, 410.0], [87.3, 410.0], [87.4, 410.0], [87.5, 410.0], [87.6, 410.0], [87.7, 410.0], [87.8, 410.0], [87.9, 410.0], [88.0, 410.0], [88.1, 410.0], [88.2, 410.0], [88.3, 410.0], [88.4, 410.0], [88.5, 410.0], [88.6, 410.0], [88.7, 410.0], [88.8, 410.0], [88.9, 410.0], [89.0, 410.0], [89.1, 410.0], [89.2, 410.0], [89.3, 410.0], [89.4, 410.0], [89.5, 410.0], [89.6, 410.0], [89.7, 411.0], [89.8, 411.0], [89.9, 411.0], [90.0, 411.0], [90.1, 411.0], [90.2, 411.0], [90.3, 411.0], [90.4, 411.0], [90.5, 411.0], [90.6, 411.0], [90.7, 411.0], [90.8, 412.0], [90.9, 412.0], [91.0, 412.0], [91.1, 413.0], [91.2, 413.0], [91.3, 413.0], [91.4, 414.0], [91.5, 414.0], [91.6, 414.0], [91.7, 414.0], [91.8, 414.0], [91.9, 414.0], [92.0, 414.0], [92.1, 414.0], [92.2, 414.0], [92.3, 415.0], [92.4, 415.0], [92.5, 415.0], [92.6, 415.0], [92.7, 415.0], [92.8, 415.0], [92.9, 416.0], [93.0, 416.0], [93.1, 416.0], [93.2, 417.0], [93.3, 417.0], [93.4, 418.0], [93.5, 418.0], [93.6, 422.0], [93.7, 429.0], [93.8, 429.0], [93.9, 441.0], [94.0, 449.0], [94.1, 449.0], [94.2, 457.0], [94.3, 457.0], [94.4, 457.0], [94.5, 470.0], [94.6, 470.0], [94.7, 470.0], [94.8, 470.0], [94.9, 500.0], [95.0, 502.0], [95.1, 502.0], [95.2, 506.0], [95.3, 509.0], [95.4, 509.0], [95.5, 509.0], [95.6, 509.0], [95.7, 509.0], [95.8, 509.0], [95.9, 509.0], [96.0, 510.0], [96.1, 510.0], [96.2, 510.0], [96.3, 510.0], [96.4, 510.0], [96.5, 531.0], [96.6, 584.0], [96.7, 584.0], [96.8, 591.0], [96.9, 591.0], [97.0, 591.0], [97.1, 605.0], [97.2, 605.0], [97.3, 612.0], [97.4, 612.0], [97.5, 638.0], [97.6, 639.0], [97.7, 639.0], [97.8, 639.0], [97.9, 643.0], [98.0, 643.0], [98.1, 1022.0], [98.2, 1022.0], [98.3, 1023.0], [98.4, 1373.0], [98.5, 1373.0], [98.6, 1379.0], [98.7, 1379.0], [98.8, 1383.0], [98.9, 1523.0], [99.0, 1523.0], [99.1, 2047.0], [99.2, 2562.0], [99.3, 2562.0], [99.4, 3273.0], [99.5, 3273.0], [99.6, 31923.0], [99.7, 32133.0], [99.8, 32133.0], [99.9, 32154.0], [100.0, 32154.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 257.0, "series": [{"data": [[34500.0, 1.0], [35700.0, 1.0], [35300.0, 1.0], [37300.0, 1.0], [38900.0, 1.0], [40500.0, 1.0], [39700.0, 1.0], [42500.0, 1.0], [43700.0, 1.0], [50900.0, 1.0], [50100.0, 1.0], [200.0, 1.0], [52500.0, 1.0], [53300.0, 1.0], [60500.0, 6.0], [60900.0, 1.0], [300.0, 25.0], [400.0, 64.0], [500.0, 74.0], [600.0, 20.0], [700.0, 5.0], [1400.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [3300.0, 1.0], [4300.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [5100.0, 1.0], [4900.0, 1.0], [5600.0, 1.0], [5500.0, 3.0], [5700.0, 2.0], [6100.0, 6.0], [5900.0, 1.0], [6000.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [6700.0, 3.0], [6900.0, 1.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7400.0, 3.0], [7200.0, 3.0], [7300.0, 1.0], [7800.0, 1.0], [7700.0, 3.0], [8000.0, 2.0], [8600.0, 1.0], [8700.0, 1.0], [8400.0, 1.0], [8900.0, 2.0], [9600.0, 4.0], [9700.0, 3.0], [9300.0, 2.0], [9500.0, 1.0], [9400.0, 1.0], [10200.0, 1.0], [10100.0, 1.0], [10700.0, 2.0], [10500.0, 3.0], [10600.0, 1.0], [10800.0, 2.0], [11100.0, 3.0], [10900.0, 3.0], [11300.0, 1.0], [11600.0, 2.0], [11400.0, 1.0], [12200.0, 1.0], [11800.0, 1.0], [11900.0, 1.0], [12400.0, 1.0], [12600.0, 2.0], [12500.0, 2.0], [12300.0, 1.0], [12700.0, 2.0], [13200.0, 4.0], [13100.0, 4.0], [13300.0, 2.0], [13000.0, 1.0], [12800.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [13500.0, 1.0], [13700.0, 2.0], [14300.0, 4.0], [14200.0, 2.0], [13900.0, 1.0], [14400.0, 2.0], [14700.0, 1.0], [14500.0, 1.0], [14600.0, 2.0], [15300.0, 2.0], [15100.0, 3.0], [15000.0, 1.0], [15200.0, 1.0], [14900.0, 1.0], [15600.0, 3.0], [15800.0, 3.0], [15500.0, 1.0], [15400.0, 1.0], [16100.0, 3.0], [16200.0, 3.0], [16300.0, 2.0], [15900.0, 1.0], [17000.0, 3.0], [17400.0, 3.0], [16400.0, 3.0], [16600.0, 1.0], [16800.0, 1.0], [18400.0, 4.0], [17800.0, 2.0], [17600.0, 1.0], [18000.0, 1.0], [18800.0, 1.0], [18600.0, 2.0], [19000.0, 3.0], [19200.0, 1.0], [20200.0, 2.0], [19800.0, 2.0], [20000.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [21000.0, 2.0], [21200.0, 4.0], [21400.0, 1.0], [22000.0, 2.0], [22200.0, 1.0], [22800.0, 4.0], [22600.0, 2.0], [23000.0, 3.0], [23400.0, 3.0], [23200.0, 1.0], [23600.0, 1.0], [24400.0, 1.0], [24000.0, 1.0], [24800.0, 1.0], [24600.0, 1.0], [25000.0, 3.0], [25400.0, 1.0], [26400.0, 3.0], [26000.0, 1.0], [25600.0, 1.0], [27600.0, 3.0], [27400.0, 3.0], [26800.0, 1.0], [28400.0, 3.0], [28000.0, 1.0], [28200.0, 1.0], [28600.0, 1.0], [28800.0, 3.0], [29400.0, 1.0], [30000.0, 1.0], [30200.0, 2.0], [29800.0, 1.0], [31200.0, 2.0], [31400.0, 4.0], [31000.0, 1.0], [32600.0, 1.0], [32400.0, 1.0], [32200.0, 1.0], [34800.0, 1.0], [35200.0, 1.0], [35600.0, 1.0], [37600.0, 2.0], [37200.0, 1.0], [38800.0, 1.0], [38000.0, 1.0], [40000.0, 1.0], [44800.0, 1.0], [45600.0, 1.0], [52000.0, 1.0], [57200.0, 1.0], [60400.0, 7.0], [33500.0, 3.0], [36300.0, 1.0], [35100.0, 1.0], [38300.0, 1.0], [37100.0, 1.0], [37900.0, 1.0], [39100.0, 2.0], [39900.0, 1.0], [40300.0, 1.0], [43500.0, 1.0], [50700.0, 1.0], [51900.0, 1.0], [60700.0, 1.0], [17100.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [17300.0, 2.0], [16900.0, 1.0], [18300.0, 3.0], [17900.0, 4.0], [17500.0, 3.0], [18900.0, 3.0], [19300.0, 2.0], [18700.0, 1.0], [19700.0, 1.0], [20100.0, 2.0], [19900.0, 1.0], [21500.0, 2.0], [20500.0, 1.0], [20700.0, 4.0], [21100.0, 3.0], [21300.0, 1.0], [22300.0, 1.0], [21900.0, 4.0], [22100.0, 2.0], [21700.0, 1.0], [22700.0, 2.0], [23100.0, 2.0], [22900.0, 2.0], [23300.0, 1.0], [23700.0, 5.0], [24500.0, 3.0], [23900.0, 3.0], [24300.0, 1.0], [24100.0, 4.0], [25100.0, 4.0], [24900.0, 2.0], [24700.0, 2.0], [26100.0, 1.0], [26300.0, 1.0], [26500.0, 2.0], [25900.0, 1.0], [26700.0, 1.0], [27500.0, 1.0], [26900.0, 1.0], [28500.0, 2.0], [28300.0, 1.0], [29300.0, 2.0], [29100.0, 1.0], [29500.0, 1.0], [30700.0, 1.0], [30500.0, 1.0], [29700.0, 2.0], [30300.0, 1.0], [30100.0, 1.0], [31300.0, 1.0], [30900.0, 1.0], [31700.0, 1.0], [31100.0, 1.0], [31500.0, 1.0], [33000.0, 1.0], [34200.0, 2.0], [33400.0, 1.0], [36200.0, 1.0], [37400.0, 2.0], [37000.0, 1.0], [37800.0, 1.0], [45000.0, 1.0], [48600.0, 1.0], [50600.0, 1.0], [52600.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 161.0], [34100.0, 1.0], [33700.0, 1.0], [35300.0, 1.0], [34900.0, 1.0], [36900.0, 2.0], [37300.0, 1.0], [38500.0, 1.0], [40100.0, 1.0], [39700.0, 1.0], [43300.0, 1.0], [200.0, 23.0], [51700.0, 1.0], [60100.0, 12.0], [60500.0, 1.0], [300.0, 1.0], [400.0, 1.0], [2000.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4500.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5100.0, 3.0], [5300.0, 2.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 6.0], [5900.0, 2.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 3.0], [6200.0, 2.0], [6500.0, 3.0], [6400.0, 1.0], [6800.0, 4.0], [6900.0, 1.0], [6700.0, 2.0], [7000.0, 2.0], [7100.0, 3.0], [7400.0, 2.0], [7300.0, 2.0], [7600.0, 2.0], [8100.0, 1.0], [8400.0, 2.0], [8300.0, 1.0], [8700.0, 1.0], [9100.0, 3.0], [9000.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [9400.0, 2.0], [9300.0, 3.0], [9800.0, 2.0], [9900.0, 1.0], [10200.0, 2.0], [10600.0, 2.0], [10700.0, 3.0], [10400.0, 2.0], [10300.0, 1.0], [10500.0, 3.0], [10900.0, 1.0], [11200.0, 1.0], [11100.0, 1.0], [11500.0, 2.0], [11300.0, 1.0], [11800.0, 1.0], [12000.0, 1.0], [12200.0, 3.0], [12100.0, 1.0], [11900.0, 1.0], [12600.0, 1.0], [12400.0, 2.0], [12700.0, 1.0], [12500.0, 1.0], [13000.0, 3.0], [13200.0, 2.0], [12800.0, 6.0], [12900.0, 2.0], [13400.0, 2.0], [13800.0, 3.0], [13500.0, 1.0], [13900.0, 1.0], [14100.0, 2.0], [14200.0, 2.0], [14000.0, 2.0], [14700.0, 4.0], [14400.0, 2.0], [14800.0, 1.0], [14600.0, 1.0], [15300.0, 3.0], [14900.0, 2.0], [15100.0, 1.0], [15000.0, 1.0], [15700.0, 3.0], [15400.0, 2.0], [15500.0, 2.0], [15800.0, 2.0], [16200.0, 4.0], [16000.0, 3.0], [16100.0, 1.0], [15900.0, 1.0], [16300.0, 1.0], [16600.0, 3.0], [17000.0, 2.0], [17400.0, 3.0], [17200.0, 2.0], [16400.0, 1.0], [18200.0, 3.0], [18000.0, 3.0], [17600.0, 3.0], [19400.0, 3.0], [18800.0, 1.0], [19000.0, 1.0], [19200.0, 1.0], [19800.0, 3.0], [19600.0, 2.0], [20400.0, 2.0], [21000.0, 2.0], [20800.0, 2.0], [20600.0, 1.0], [22400.0, 4.0], [21600.0, 2.0], [22200.0, 2.0], [21800.0, 3.0], [23400.0, 3.0], [23200.0, 1.0], [23000.0, 2.0], [22600.0, 2.0], [22800.0, 1.0], [24000.0, 1.0], [23800.0, 2.0], [24200.0, 2.0], [23600.0, 2.0], [24600.0, 3.0], [25200.0, 1.0], [24800.0, 1.0], [25000.0, 1.0], [25800.0, 2.0], [26000.0, 3.0], [26400.0, 1.0], [26600.0, 1.0], [25600.0, 1.0], [27000.0, 1.0], [27200.0, 2.0], [28200.0, 3.0], [28400.0, 1.0], [28000.0, 2.0], [28800.0, 1.0], [29000.0, 1.0], [29600.0, 1.0], [29400.0, 1.0], [30200.0, 1.0], [30000.0, 1.0], [29800.0, 2.0], [30800.0, 2.0], [31000.0, 2.0], [34800.0, 1.0], [33200.0, 1.0], [34400.0, 1.0], [34000.0, 1.0], [36800.0, 1.0], [37200.0, 1.0], [38000.0, 1.0], [37600.0, 1.0], [40000.0, 1.0], [48400.0, 1.0], [50400.0, 2.0], [51600.0, 1.0], [60000.0, 1.0], [33100.0, 2.0], [35900.0, 1.0], [37100.0, 1.0], [37500.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [43100.0, 1.0], [44300.0, 1.0], [45100.0, 1.0], [50300.0, 1.0], [49900.0, 1.0], [51500.0, 1.0], [17100.0, 3.0], [16500.0, 1.0], [17300.0, 1.0], [16700.0, 1.0], [18300.0, 1.0], [17500.0, 1.0], [17900.0, 2.0], [18100.0, 1.0], [18700.0, 3.0], [18500.0, 4.0], [19100.0, 1.0], [19700.0, 1.0], [20300.0, 3.0], [20100.0, 1.0], [21100.0, 3.0], [21500.0, 3.0], [20700.0, 2.0], [21300.0, 1.0], [20900.0, 3.0], [21900.0, 2.0], [22300.0, 1.0], [21700.0, 1.0], [22500.0, 2.0], [23300.0, 2.0], [22900.0, 2.0], [22700.0, 2.0], [23100.0, 1.0], [23500.0, 2.0], [24500.0, 1.0], [24300.0, 3.0], [23700.0, 2.0], [24100.0, 2.0], [23900.0, 1.0], [24700.0, 4.0], [25700.0, 1.0], [26300.0, 1.0], [26100.0, 2.0], [27300.0, 1.0], [27100.0, 2.0], [26900.0, 1.0], [28100.0, 1.0], [27700.0, 1.0], [28500.0, 2.0], [27900.0, 1.0], [28300.0, 1.0], [29500.0, 1.0], [28700.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [30300.0, 1.0], [30500.0, 1.0], [29700.0, 1.0], [30700.0, 1.0], [30900.0, 3.0], [31300.0, 1.0], [31100.0, 2.0], [32700.0, 1.0], [32300.0, 1.0], [32100.0, 1.0], [31900.0, 1.0], [33000.0, 1.0], [34200.0, 1.0], [34600.0, 1.0], [35800.0, 1.0], [38600.0, 1.0], [37000.0, 1.0], [37400.0, 1.0], [39400.0, 1.0], [44600.0, 1.0], [53000.0, 1.0], [52200.0, 1.0], [57000.0, 1.0], [60200.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[600.0, 6.0], [2500.0, 1.0], [200.0, 111.0], [3200.0, 1.0], [1000.0, 2.0], [300.0, 216.0], [1300.0, 3.0], [1500.0, 1.0], [400.0, 257.0], [500.0, 14.0], [2000.0, 1.0], [32100.0, 2.0], [31900.0, 1.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 411.0, "series": [{"data": [[0.0, 411.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 23.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 389.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 403.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.68527136E12, "maxY": 24.80444444444444, "series": [{"data": [[1.6852716E12, 9.925233644859814], [1.68527226E12, 5.0], [1.68527196E12, 19.759776536312852], [1.68527166E12, 10.0], [1.68527184E12, 15.0], [1.68527154E12, 6.209302325581395], [1.6852722E12, 22.289156626506035], [1.6852719E12, 16.471502590673577], [1.68527208E12, 21.666666666666675], [1.68527178E12, 14.85217391304348], [1.68527148E12, 5.0], [1.68527214E12, 24.80444444444444], [1.68527136E12, 2.5], [1.68527202E12, 20.0], [1.68527172E12, 11.586206896551719], [1.68527142E12, 4.923076923076922]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527226E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 261.8888888888889, "minX": 1.0, "maxY": 37051.88888888889, "series": [{"data": [[2.0, 6747.0], [8.0, 27765.0], [9.0, 27494.333333333332], [10.0, 11148.73333333333], [11.0, 14268.5], [3.0, 21537.333333333336], [12.0, 16400.9], [13.0, 12862.727272727272], [14.0, 14770.333333333334], [15.0, 15469.02777777778], [4.0, 15628.0], [16.0, 7835.666666666667], [17.0, 19241.875], [18.0, 11364.699999999997], [19.0, 11290.15], [5.0, 20250.527777777777], [20.0, 19085.397959183676], [21.0, 37051.88888888889], [22.0, 21827.72], [23.0, 5012.857142857143], [6.0, 30082.5], [24.0, 13284.434782608694], [25.0, 14512.760869565218], [7.0, 28164.75]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.688311688311682, 15613.849025974025]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 6417.5], [8.0, 27356.0], [9.0, 27114.333333333332], [10.0, 10752.91111111111], [11.0, 13920.916666666668], [3.0, 20929.0], [12.0, 16111.2], [13.0, 13854.900000000001], [14.0, 14440.333333333332], [15.0, 15104.833333333343], [4.0, 15350.0], [16.0, 8025.857142857142], [17.0, 18863.625], [18.0, 11578.57894736842], [19.0, 11322.947368421052], [5.0, 19855.416666666664], [20.0, 17746.387755102038], [21.0, 36682.22222222222], [22.0, 21430.039999999997], [23.0, 5062.384615384616], [6.0, 29737.0], [24.0, 12808.130434782606], [25.0, 14328.153846153844], [7.0, 27795.75]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.665573770491793, 15232.931147540987]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 371.0], [3.0, 359.6666666666667], [4.0, 375.0], [5.0, 406.030303030303], [6.0, 380.0], [7.0, 363.0], [8.0, 395.5], [9.0, 379.5], [10.0, 393.64044943820215], [11.0, 308.66666666666663], [12.0, 261.8888888888889], [13.0, 338.63636363636357], [14.0, 379.0], [15.0, 362.9345794392522], [1.0, 348.0], [16.0, 341.74999999999994], [17.0, 396.0], [18.0, 344.80952380952385], [19.0, 569.6666666666666], [20.0, 1324.4199999999992], [21.0, 360.3333333333333], [22.0, 456.3076923076923], [23.0, 307.9166666666667], [24.0, 349.6923076923078], [25.0, 352.73333333333335]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.67857142857142, 529.2905844155846]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 259.7, "minX": 1.68527136E12, "maxY": 10432.366666666667, "series": [{"data": [[1.6852716E12, 1541.2833333333333], [1.68527226E12, 259.7], [1.68527196E12, 3913.35], [1.68527166E12, 1869.4666666666667], [1.68527184E12, 2907.2166666666667], [1.68527154E12, 1099.1166666666666], [1.6852722E12, 2126.266666666667], [1.6852719E12, 3414.8333333333335], [1.68527208E12, 3259.1], [1.68527178E12, 2751.4666666666667], [1.68527148E12, 1100.75], [1.68527214E12, 3827.6833333333334], [1.68527136E12, 438.6666666666667], [1.68527202E12, 2935.3333333333335], [1.68527172E12, 2377.7833333333333], [1.68527142E12, 916.8833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6852716E12, 4577.716666666666], [1.68527226E12, 1217.1833333333334], [1.68527196E12, 8220.683333333332], [1.68527166E12, 7390.683333333333], [1.68527184E12, 8307.7], [1.68527154E12, 1738.7333333333333], [1.6852722E12, 8854.833333333334], [1.6852719E12, 9044.866666666667], [1.68527208E12, 7551.25], [1.68527178E12, 5546.516666666666], [1.68527148E12, 2464.2833333333333], [1.68527214E12, 10432.366666666667], [1.68527136E12, 587.0166666666667], [1.68527202E12, 6313.633333333333], [1.68527172E12, 4868.55], [1.68527142E12, 1535.5333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527226E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 302.4878048780488, "minX": 1.68527136E12, "maxY": 50975.5, "series": [{"data": [[1.6852716E12, 12933.0], [1.68527226E12, 50975.5], [1.68527196E12, 16654.036363636365], [1.68527166E12, 7174.795454545454], [1.68527184E12, 12282.280000000002], [1.68527154E12, 18597.076923076926], [1.6852722E12, 14254.64406779661], [1.6852719E12, 12764.348484848488], [1.68527208E12, 20645.140350877195], [1.68527178E12, 18894.174999999996], [1.68527148E12, 16768.14285714286], [1.68527214E12, 15307.025974025973], [1.68527136E12, 6381.0], [1.68527202E12, 19465.41463414634], [1.68527172E12, 16940.552631578947], [1.68527142E12, 16895.14285714286]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852716E12, 12997.794117647058], [1.68527226E12, 50797.857142857145], [1.68527196E12, 14380.766666666665], [1.68527166E12, 7297.918367346939], [1.68527184E12, 12472.843137254904], [1.68527154E12, 17791.384615384617], [1.6852722E12, 16048.423728813563], [1.6852719E12, 12254.714285714283], [1.68527208E12, 19839.96363636364], [1.68527178E12, 18900.810810810817], [1.68527148E12, 17083.199999999997], [1.68527214E12, 14334.189189189188], [1.68527136E12, 6015.75], [1.68527202E12, 19084.999999999996], [1.68527172E12, 16405.756756756764], [1.68527142E12, 15487.083333333334]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852716E12, 359.11428571428576], [1.68527196E12, 1915.6718750000005], [1.68527166E12, 435.1836734693877], [1.68527184E12, 355.2549019607842], [1.68527154E12, 372.7647058823529], [1.6852722E12, 357.83333333333337], [1.6852719E12, 357.6249999999999], [1.68527208E12, 387.135593220339], [1.68527178E12, 373.157894736842], [1.68527148E12, 424.9333333333334], [1.68527214E12, 352.0405405405405], [1.68527136E12, 360.5], [1.68527202E12, 377.7000000000001], [1.68527172E12, 302.4878048780488], [1.68527142E12, 399.07692307692304]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527226E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 302.4634146341463, "minX": 1.68527136E12, "maxY": 50975.0, "series": [{"data": [[1.6852716E12, 12932.842105263158], [1.68527226E12, 50975.0], [1.68527196E12, 16653.54545454546], [1.68527166E12, 7174.454545454545], [1.68527184E12, 12278.119999999999], [1.68527154E12, 18597.0], [1.6852722E12, 14032.169491525421], [1.6852719E12, 12764.27272727273], [1.68527208E12, 20642.29824561403], [1.68527178E12, 18893.925], [1.68527148E12, 16767.785714285714], [1.68527214E12, 15306.623376623376], [1.68527136E12, 6379.5], [1.68527202E12, 19465.073170731706], [1.68527172E12, 16938.052631578947], [1.68527142E12, 16895.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852716E12, 12997.735294117647], [1.68527226E12, 50768.42857142857], [1.68527196E12, 14380.666666666662], [1.68527166E12, 7297.673469387754], [1.68527184E12, 12472.72549019608], [1.68527154E12, 17791.384615384617], [1.6852722E12, 15829.983050847457], [1.6852719E12, 12254.619047619046], [1.68527208E12, 19839.70909090909], [1.68527178E12, 18900.594594594597], [1.68527148E12, 17083.066666666666], [1.68527214E12, 14334.13513513513], [1.68527136E12, 6015.75], [1.68527202E12, 19084.525], [1.68527172E12, 16403.243243243247], [1.68527142E12, 15486.916666666666]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852716E12, 359.02857142857147], [1.68527196E12, 1915.4843750000005], [1.68527166E12, 435.10204081632645], [1.68527184E12, 351.392156862745], [1.68527154E12, 372.6470588235294], [1.6852722E12, 357.12499999999994], [1.6852719E12, 357.59374999999994], [1.68527208E12, 384.3728813559323], [1.68527178E12, 373.0526315789474], [1.68527148E12, 424.79999999999995], [1.68527214E12, 351.8378378378378], [1.68527136E12, 359.75000000000006], [1.68527202E12, 377.65000000000003], [1.68527172E12, 302.4634146341463], [1.68527142E12, 399.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527226E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527136E12, "maxY": 1979.2363636363636, "series": [{"data": [[1.6852716E12, 180.36842105263153], [1.68527226E12, 144.0], [1.68527196E12, 1979.2363636363636], [1.68527166E12, 172.1136363636364], [1.68527184E12, 163.81999999999996], [1.68527154E12, 202.76923076923077], [1.6852722E12, 168.84745762711864], [1.6852719E12, 172.25757575757578], [1.68527208E12, 182.54385964912285], [1.68527178E12, 175.25000000000006], [1.68527148E12, 209.35714285714286], [1.68527214E12, 162.36363636363637], [1.68527136E12, 174.0], [1.68527202E12, 174.4146341463415], [1.68527172E12, 151.05263157894734], [1.68527142E12, 180.7142857142857]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852716E12, 0.0], [1.68527226E12, 0.0], [1.68527196E12, 0.0], [1.68527166E12, 0.0], [1.68527184E12, 0.0], [1.68527154E12, 0.0], [1.6852722E12, 0.0], [1.6852719E12, 0.0], [1.68527208E12, 0.0], [1.68527178E12, 0.0], [1.68527148E12, 0.0], [1.68527214E12, 0.0], [1.68527136E12, 0.0], [1.68527202E12, 0.0], [1.68527172E12, 0.0], [1.68527142E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852716E12, 176.74285714285716], [1.68527196E12, 1725.1875000000002], [1.68527166E12, 170.69387755102042], [1.68527184E12, 164.00000000000003], [1.68527154E12, 194.41176470588232], [1.6852722E12, 164.12499999999997], [1.6852719E12, 170.62499999999994], [1.68527208E12, 170.38983050847466], [1.68527178E12, 178.81578947368425], [1.68527148E12, 221.0], [1.68527214E12, 165.3243243243243], [1.68527136E12, 173.625], [1.68527202E12, 186.89999999999998], [1.68527172E12, 149.8780487804878], [1.68527142E12, 187.3846153846154]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527226E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 213.0, "minX": 1.68527136E12, "maxY": 60007.0, "series": [{"data": [[1.6852716E12, 37222.0], [1.68527226E12, 57011.0], [1.68527196E12, 39521.0], [1.68527166E12, 30503.0], [1.68527184E12, 30088.0], [1.68527154E12, 23394.0], [1.6852722E12, 43345.0], [1.6852719E12, 37336.0], [1.68527208E12, 45197.0], [1.68527178E12, 43112.0], [1.68527148E12, 23333.0], [1.68527214E12, 60007.0], [1.68527136E12, 7461.0], [1.68527202E12, 39976.0], [1.68527172E12, 40008.0], [1.68527142E12, 18371.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6852716E12, 34801.6], [1.68527226E12, 57011.0], [1.68527196E12, 30941.0], [1.68527166E12, 28128.5], [1.68527184E12, 24795.0], [1.68527154E12, 22211.0], [1.6852722E12, 29328.400000000012], [1.6852719E12, 31176.500000000007], [1.68527208E12, 16552.900000000005], [1.68527178E12, 35190.400000000016], [1.68527148E12, 21879.9], [1.68527214E12, 23969.600000000002], [1.68527136E12, 6997.800000000001], [1.68527202E12, 27770.500000000007], [1.68527172E12, 32312.0], [1.68527142E12, 18283.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6852716E12, 37222.0], [1.68527226E12, 57011.0], [1.68527196E12, 39521.0], [1.68527166E12, 30503.0], [1.68527184E12, 30088.0], [1.68527154E12, 23394.0], [1.6852722E12, 43345.0], [1.6852719E12, 37336.0], [1.68527208E12, 45197.0], [1.68527178E12, 43112.0], [1.68527148E12, 23333.0], [1.68527214E12, 60007.0], [1.68527136E12, 7461.0], [1.68527202E12, 39976.0], [1.68527172E12, 40008.0], [1.68527142E12, 18371.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6852716E12, 37060.3], [1.68527226E12, 57011.0], [1.68527196E12, 34264.0], [1.68527166E12, 29286.949999999997], [1.68527184E12, 28610.5], [1.68527154E12, 22807.149999999998], [1.6852722E12, 38445.59999999999], [1.6852719E12, 33217.74999999999], [1.68527208E12, 18595.149999999998], [1.68527178E12, 38135.200000000004], [1.68527148E12, 22844.6], [1.68527214E12, 24972.5], [1.68527136E12, 7461.0], [1.68527202E12, 29385.65], [1.68527172E12, 35332.0], [1.68527142E12, 18345.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6852716E12, 227.0], [1.68527226E12, 44368.0], [1.68527196E12, 213.0], [1.68527166E12, 217.0], [1.68527184E12, 213.0], [1.68527154E12, 250.0], [1.6852722E12, 214.0], [1.6852719E12, 216.0], [1.68527208E12, 215.0], [1.68527178E12, 231.0], [1.68527148E12, 320.0], [1.68527214E12, 215.0], [1.68527136E12, 278.0], [1.68527202E12, 243.0], [1.68527172E12, 214.0], [1.68527142E12, 302.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6852716E12, 408.5], [1.68527226E12, 51559.0], [1.68527196E12, 4508.0], [1.68527166E12, 460.0], [1.68527184E12, 5764.0], [1.68527154E12, 409.0], [1.6852722E12, 16908.0], [1.6852719E12, 410.5], [1.68527208E12, 407.0], [1.68527178E12, 591.0], [1.68527148E12, 3809.5], [1.68527214E12, 410.0], [1.68527136E12, 400.5], [1.68527202E12, 2878.0], [1.68527172E12, 408.0], [1.68527142E12, 429.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527226E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 196.0, "minX": 1.0, "maxY": 27164.0, "series": [{"data": [[1.0, 429.0], [2.0, 409.0], [4.0, 6308.0], [8.0, 13445.5], [16.0, 411.0], [9.0, 16594.0], [5.0, 459.5], [6.0, 9600.5], [3.0, 638.5], [27.0, 407.5], [7.0, 509.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 232.5], [2.0, 196.0], [4.0, 213.0], [8.0, 315.0], [16.0, 409.0], [9.0, 306.0], [5.0, 213.5], [3.0, 214.0], [6.0, 285.0], [27.0, 20990.0], [7.0, 203.0], [15.0, 27164.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 196.0, "minX": 1.0, "maxY": 27164.0, "series": [{"data": [[1.0, 429.0], [2.0, 409.0], [4.0, 6308.0], [8.0, 13445.5], [16.0, 411.0], [9.0, 16594.0], [5.0, 410.0], [6.0, 9600.5], [3.0, 638.5], [27.0, 407.0], [7.0, 509.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 232.5], [2.0, 196.0], [4.0, 213.0], [8.0, 314.5], [16.0, 409.0], [9.0, 306.0], [5.0, 213.5], [3.0, 213.5], [6.0, 285.0], [27.0, 20990.0], [7.0, 203.0], [15.0, 27164.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.68527136E12, "maxY": 2.4833333333333334, "series": [{"data": [[1.6852716E12, 1.15], [1.68527196E12, 2.066666666666667], [1.68527166E12, 1.65], [1.68527184E12, 1.6833333333333333], [1.68527154E12, 0.5666666666666667], [1.6852722E12, 1.55], [1.6852719E12, 2.183333333333333], [1.68527208E12, 1.9666666666666666], [1.68527178E12, 1.2833333333333334], [1.68527148E12, 0.48333333333333334], [1.68527214E12, 2.4833333333333334], [1.68527136E12, 0.26666666666666666], [1.68527202E12, 1.3666666666666667], [1.68527172E12, 1.3], [1.68527142E12, 0.43333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6852722E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68527136E12, "maxY": 1.65, "series": [{"data": [[1.6852716E12, 0.5], [1.68527226E12, 0.11666666666666667], [1.68527196E12, 1.65], [1.68527166E12, 0.5], [1.68527184E12, 1.15], [1.68527154E12, 0.5], [1.6852722E12, 0.6], [1.6852719E12, 1.3], [1.68527208E12, 1.3], [1.68527178E12, 1.25], [1.68527148E12, 0.5], [1.68527214E12, 1.4166666666666667], [1.68527136E12, 0.2], [1.68527202E12, 1.3333333333333333], [1.68527172E12, 0.9833333333333333], [1.68527142E12, 0.4166666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6852716E12, 0.65], [1.68527208E12, 0.4666666666666667], [1.68527196E12, 0.4166666666666667], [1.68527166E12, 1.1333333333333333], [1.68527214E12, 0.9666666666666667], [1.68527184E12, 0.55], [1.68527172E12, 0.31666666666666665], [1.6852722E12, 1.1666666666666667], [1.6852719E12, 0.8166666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68527208E12, 0.13333333333333333], [1.68527214E12, 0.08333333333333333], [1.6852722E12, 0.016666666666666666]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527226E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68527136E12, "maxY": 0.9833333333333333, "series": [{"data": [[1.6852716E12, 0.26666666666666666], [1.68527196E12, 0.8666666666666667], [1.68527166E12, 0.26666666666666666], [1.68527184E12, 0.5333333333333333], [1.68527154E12, 0.2833333333333333], [1.6852722E12, 0.26666666666666666], [1.6852719E12, 0.6833333333333333], [1.68527208E12, 0.9], [1.68527178E12, 0.6333333333333333], [1.68527148E12, 0.25], [1.68527214E12, 0.8166666666666667], [1.68527136E12, 0.13333333333333333], [1.68527202E12, 0.6666666666666666], [1.68527172E12, 0.5333333333333333], [1.68527142E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.6852716E12, 0.31666666666666665], [1.68527208E12, 0.08333333333333333], [1.68527196E12, 0.2], [1.68527166E12, 0.55], [1.68527214E12, 0.4166666666666667], [1.68527184E12, 0.31666666666666665], [1.68527172E12, 0.15], [1.6852722E12, 0.5333333333333333], [1.6852719E12, 0.38333333333333336]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.6852716E12, 0.3333333333333333], [1.68527208E12, 0.5166666666666667], [1.68527196E12, 0.21666666666666667], [1.68527166E12, 0.5833333333333334], [1.68527214E12, 0.6333333333333333], [1.68527184E12, 0.23333333333333334], [1.68527172E12, 0.16666666666666666], [1.6852722E12, 0.65], [1.6852719E12, 0.43333333333333335]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6852716E12, 0.2], [1.68527226E12, 0.016666666666666666], [1.68527196E12, 0.55], [1.68527166E12, 0.05], [1.68527184E12, 0.45], [1.68527154E12, 0.21666666666666667], [1.6852722E12, 0.15], [1.6852719E12, 0.38333333333333336], [1.68527208E12, 0.43333333333333335], [1.68527178E12, 0.6666666666666666], [1.68527148E12, 0.23333333333333334], [1.68527214E12, 0.3], [1.68527136E12, 0.06666666666666667], [1.68527202E12, 0.6833333333333333], [1.68527172E12, 0.25], [1.68527142E12, 0.23333333333333334]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.6852716E12, 0.43333333333333335], [1.68527208E12, 0.5166666666666667], [1.68527226E12, 0.08333333333333333], [1.68527196E12, 0.36666666666666664], [1.68527166E12, 0.6833333333333333], [1.68527214E12, 0.9833333333333333], [1.68527184E12, 0.38333333333333336], [1.68527172E12, 0.38333333333333336], [1.6852722E12, 0.8333333333333334], [1.6852719E12, 0.7166666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6852716E12, 0.23333333333333334], [1.68527226E12, 0.11666666666666667], [1.68527196E12, 0.7833333333333333], [1.68527166E12, 0.23333333333333334], [1.68527184E12, 0.6166666666666667], [1.68527154E12, 0.21666666666666667], [1.6852722E12, 0.3333333333333333], [1.6852719E12, 0.6166666666666667], [1.68527208E12, 0.4], [1.68527178E12, 0.6166666666666667], [1.68527148E12, 0.25], [1.68527214E12, 0.6], [1.68527136E12, 0.06666666666666667], [1.68527202E12, 0.6666666666666666], [1.68527172E12, 0.45], [1.68527142E12, 0.2]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527226E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68527136E12, "maxY": 2.2, "series": [{"data": [[1.6852716E12, 0.7], [1.68527226E12, 0.13333333333333333], [1.68527196E12, 2.2], [1.68527166E12, 0.55], [1.68527184E12, 1.6], [1.68527154E12, 0.7166666666666667], [1.6852722E12, 0.75], [1.6852719E12, 1.6833333333333333], [1.68527208E12, 1.7333333333333334], [1.68527178E12, 1.9166666666666667], [1.68527148E12, 0.7333333333333333], [1.68527214E12, 1.7166666666666666], [1.68527136E12, 0.26666666666666666], [1.68527202E12, 2.0166666666666666], [1.68527172E12, 1.2333333333333334], [1.68527142E12, 0.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6852716E12, 1.0833333333333333], [1.68527208E12, 1.1166666666666667], [1.68527226E12, 0.08333333333333333], [1.68527196E12, 0.7833333333333333], [1.68527166E12, 1.8166666666666667], [1.68527214E12, 2.033333333333333], [1.68527184E12, 0.9333333333333333], [1.68527172E12, 0.7], [1.6852722E12, 2.0166666666666666], [1.6852719E12, 1.5333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527226E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

