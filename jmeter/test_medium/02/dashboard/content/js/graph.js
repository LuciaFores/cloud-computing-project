/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 105.0, "minX": 0.0, "maxY": 60830.0, "series": [{"data": [[0.0, 216.0], [0.1, 216.0], [0.2, 326.0], [0.3, 326.0], [0.4, 330.0], [0.5, 330.0], [0.6, 331.0], [0.7, 331.0], [0.8, 332.0], [0.9, 332.0], [1.0, 333.0], [1.1, 333.0], [1.2, 333.0], [1.3, 333.0], [1.4, 334.0], [1.5, 334.0], [1.6, 337.0], [1.7, 337.0], [1.8, 340.0], [1.9, 340.0], [2.0, 340.0], [2.1, 351.0], [2.2, 351.0], [2.3, 358.0], [2.4, 358.0], [2.5, 358.0], [2.6, 358.0], [2.7, 363.0], [2.8, 363.0], [2.9, 384.0], [3.0, 384.0], [3.1, 397.0], [3.2, 397.0], [3.3, 399.0], [3.4, 399.0], [3.5, 409.0], [3.6, 409.0], [3.7, 414.0], [3.8, 415.0], [3.9, 415.0], [4.0, 416.0], [4.1, 416.0], [4.2, 428.0], [4.3, 428.0], [4.4, 428.0], [4.5, 428.0], [4.6, 430.0], [4.7, 430.0], [4.8, 430.0], [4.9, 430.0], [5.0, 432.0], [5.1, 432.0], [5.2, 432.0], [5.3, 432.0], [5.4, 434.0], [5.5, 434.0], [5.6, 434.0], [5.7, 435.0], [5.8, 435.0], [5.9, 438.0], [6.0, 438.0], [6.1, 447.0], [6.2, 447.0], [6.3, 448.0], [6.4, 448.0], [6.5, 450.0], [6.6, 450.0], [6.7, 453.0], [6.8, 453.0], [6.9, 453.0], [7.0, 453.0], [7.1, 456.0], [7.2, 456.0], [7.3, 457.0], [7.4, 457.0], [7.5, 459.0], [7.6, 461.0], [7.7, 461.0], [7.8, 464.0], [7.9, 464.0], [8.0, 464.0], [8.1, 464.0], [8.2, 468.0], [8.3, 468.0], [8.4, 468.0], [8.5, 468.0], [8.6, 470.0], [8.7, 470.0], [8.8, 471.0], [8.9, 471.0], [9.0, 474.0], [9.1, 474.0], [9.2, 474.0], [9.3, 480.0], [9.4, 480.0], [9.5, 483.0], [9.6, 483.0], [9.7, 486.0], [9.8, 486.0], [9.9, 489.0], [10.0, 489.0], [10.1, 491.0], [10.2, 491.0], [10.3, 497.0], [10.4, 497.0], [10.5, 498.0], [10.6, 498.0], [10.7, 503.0], [10.8, 503.0], [10.9, 504.0], [11.0, 504.0], [11.1, 505.0], [11.2, 507.0], [11.3, 507.0], [11.4, 508.0], [11.5, 508.0], [11.6, 508.0], [11.7, 508.0], [11.8, 512.0], [11.9, 512.0], [12.0, 515.0], [12.1, 515.0], [12.2, 516.0], [12.3, 516.0], [12.4, 516.0], [12.5, 516.0], [12.6, 517.0], [12.7, 517.0], [12.8, 517.0], [12.9, 517.0], [13.0, 517.0], [13.1, 518.0], [13.2, 518.0], [13.3, 518.0], [13.4, 518.0], [13.5, 520.0], [13.6, 520.0], [13.7, 521.0], [13.8, 521.0], [13.9, 522.0], [14.0, 522.0], [14.1, 524.0], [14.2, 524.0], [14.3, 526.0], [14.4, 526.0], [14.5, 528.0], [14.6, 528.0], [14.7, 531.0], [14.8, 531.0], [14.9, 536.0], [15.0, 541.0], [15.1, 541.0], [15.2, 541.0], [15.3, 541.0], [15.4, 544.0], [15.5, 544.0], [15.6, 546.0], [15.7, 546.0], [15.8, 547.0], [15.9, 547.0], [16.0, 547.0], [16.1, 547.0], [16.2, 548.0], [16.3, 548.0], [16.4, 550.0], [16.5, 550.0], [16.6, 550.0], [16.7, 552.0], [16.8, 552.0], [16.9, 552.0], [17.0, 552.0], [17.1, 555.0], [17.2, 555.0], [17.3, 556.0], [17.4, 556.0], [17.5, 556.0], [17.6, 556.0], [17.7, 560.0], [17.8, 560.0], [17.9, 563.0], [18.0, 563.0], [18.1, 568.0], [18.2, 568.0], [18.3, 570.0], [18.4, 570.0], [18.5, 572.0], [18.6, 573.0], [18.7, 573.0], [18.8, 575.0], [18.9, 575.0], [19.0, 578.0], [19.1, 578.0], [19.2, 580.0], [19.3, 580.0], [19.4, 586.0], [19.5, 586.0], [19.6, 587.0], [19.7, 587.0], [19.8, 590.0], [19.9, 590.0], [20.0, 591.0], [20.1, 591.0], [20.2, 592.0], [20.3, 592.0], [20.4, 592.0], [20.5, 596.0], [20.6, 596.0], [20.7, 601.0], [20.8, 601.0], [20.9, 602.0], [21.0, 602.0], [21.1, 603.0], [21.2, 603.0], [21.3, 603.0], [21.4, 603.0], [21.5, 604.0], [21.6, 604.0], [21.7, 606.0], [21.8, 606.0], [21.9, 621.0], [22.0, 621.0], [22.1, 623.0], [22.2, 623.0], [22.3, 625.0], [22.4, 627.0], [22.5, 627.0], [22.6, 635.0], [22.7, 635.0], [22.8, 660.0], [22.9, 660.0], [23.0, 678.0], [23.1, 678.0], [23.2, 699.0], [23.3, 699.0], [23.4, 700.0], [23.5, 700.0], [23.6, 1467.0], [23.7, 1467.0], [23.8, 3301.0], [23.9, 3301.0], [24.0, 4890.0], [24.1, 4923.0], [24.2, 4923.0], [24.3, 5008.0], [24.4, 5008.0], [24.5, 5052.0], [24.6, 5052.0], [24.7, 5144.0], [24.8, 5144.0], [24.9, 5213.0], [25.0, 5213.0], [25.1, 5327.0], [25.2, 5327.0], [25.3, 5344.0], [25.4, 5344.0], [25.5, 5375.0], [25.6, 5375.0], [25.7, 5470.0], [25.8, 5470.0], [25.9, 5529.0], [26.0, 5566.0], [26.1, 5566.0], [26.2, 5623.0], [26.3, 5623.0], [26.4, 5630.0], [26.5, 5630.0], [26.6, 5783.0], [26.7, 5783.0], [26.8, 5789.0], [26.9, 5789.0], [27.0, 5792.0], [27.1, 5792.0], [27.2, 5837.0], [27.3, 5837.0], [27.4, 5876.0], [27.5, 5876.0], [27.6, 5890.0], [27.7, 5890.0], [27.8, 5969.0], [27.9, 6014.0], [28.0, 6014.0], [28.1, 6072.0], [28.2, 6072.0], [28.3, 6129.0], [28.4, 6129.0], [28.5, 6225.0], [28.6, 6225.0], [28.7, 6254.0], [28.8, 6254.0], [28.9, 6350.0], [29.0, 6350.0], [29.1, 6387.0], [29.2, 6387.0], [29.3, 6388.0], [29.4, 6388.0], [29.5, 6480.0], [29.6, 6480.0], [29.7, 6503.0], [29.8, 6565.0], [29.9, 6565.0], [30.0, 6569.0], [30.1, 6569.0], [30.2, 6593.0], [30.3, 6593.0], [30.4, 6717.0], [30.5, 6717.0], [30.6, 6792.0], [30.7, 6792.0], [30.8, 6805.0], [30.9, 6805.0], [31.0, 6953.0], [31.1, 6953.0], [31.2, 7032.0], [31.3, 7032.0], [31.4, 7033.0], [31.5, 7078.0], [31.6, 7078.0], [31.7, 7091.0], [31.8, 7091.0], [31.9, 7101.0], [32.0, 7101.0], [32.1, 7132.0], [32.2, 7132.0], [32.3, 7389.0], [32.4, 7389.0], [32.5, 7488.0], [32.6, 7488.0], [32.7, 7563.0], [32.8, 7563.0], [32.9, 7596.0], [33.0, 7596.0], [33.1, 7693.0], [33.2, 7693.0], [33.3, 7705.0], [33.4, 7761.0], [33.5, 7761.0], [33.6, 7911.0], [33.7, 7911.0], [33.8, 7927.0], [33.9, 7927.0], [34.0, 8056.0], [34.1, 8056.0], [34.2, 8065.0], [34.3, 8065.0], [34.4, 8086.0], [34.5, 8086.0], [34.6, 8105.0], [34.7, 8105.0], [34.8, 8134.0], [34.9, 8134.0], [35.0, 8142.0], [35.1, 8142.0], [35.2, 8187.0], [35.3, 8345.0], [35.4, 8345.0], [35.5, 8363.0], [35.6, 8363.0], [35.7, 8428.0], [35.8, 8428.0], [35.9, 8457.0], [36.0, 8457.0], [36.1, 8492.0], [36.2, 8492.0], [36.3, 8620.0], [36.4, 8620.0], [36.5, 8949.0], [36.6, 8949.0], [36.7, 9154.0], [36.8, 9154.0], [36.9, 9250.0], [37.0, 9250.0], [37.1, 9402.0], [37.2, 9549.0], [37.3, 9549.0], [37.4, 9580.0], [37.5, 9580.0], [37.6, 9641.0], [37.7, 9641.0], [37.8, 9653.0], [37.9, 9653.0], [38.0, 9678.0], [38.1, 9678.0], [38.2, 9795.0], [38.3, 9795.0], [38.4, 9860.0], [38.5, 9860.0], [38.6, 9874.0], [38.7, 9874.0], [38.8, 9960.0], [38.9, 9992.0], [39.0, 9992.0], [39.1, 10260.0], [39.2, 10260.0], [39.3, 10366.0], [39.4, 10366.0], [39.5, 10431.0], [39.6, 10431.0], [39.7, 10445.0], [39.8, 10445.0], [39.9, 10583.0], [40.0, 10583.0], [40.1, 10598.0], [40.2, 10598.0], [40.3, 10783.0], [40.4, 10783.0], [40.5, 10911.0], [40.6, 10911.0], [40.7, 10914.0], [40.8, 11087.0], [40.9, 11087.0], [41.0, 11154.0], [41.1, 11154.0], [41.2, 11262.0], [41.3, 11262.0], [41.4, 11295.0], [41.5, 11295.0], [41.6, 11458.0], [41.7, 11458.0], [41.8, 11483.0], [41.9, 11483.0], [42.0, 11507.0], [42.1, 11507.0], [42.2, 11576.0], [42.3, 11576.0], [42.4, 11717.0], [42.5, 11717.0], [42.6, 11717.0], [42.7, 11721.0], [42.8, 11721.0], [42.9, 11758.0], [43.0, 11758.0], [43.1, 11817.0], [43.2, 11817.0], [43.3, 11868.0], [43.4, 11868.0], [43.5, 12018.0], [43.6, 12018.0], [43.7, 12076.0], [43.8, 12076.0], [43.9, 12080.0], [44.0, 12080.0], [44.1, 12162.0], [44.2, 12162.0], [44.3, 12220.0], [44.4, 12220.0], [44.5, 12319.0], [44.6, 12347.0], [44.7, 12347.0], [44.8, 12452.0], [44.9, 12452.0], [45.0, 12647.0], [45.1, 12647.0], [45.2, 12819.0], [45.3, 12819.0], [45.4, 12885.0], [45.5, 12885.0], [45.6, 13022.0], [45.7, 13022.0], [45.8, 13025.0], [45.9, 13025.0], [46.0, 13030.0], [46.1, 13030.0], [46.2, 13083.0], [46.3, 13230.0], [46.4, 13230.0], [46.5, 13264.0], [46.6, 13264.0], [46.7, 13386.0], [46.8, 13386.0], [46.9, 13386.0], [47.0, 13386.0], [47.1, 13390.0], [47.2, 13390.0], [47.3, 13457.0], [47.4, 13457.0], [47.5, 13495.0], [47.6, 13495.0], [47.7, 13497.0], [47.8, 13497.0], [47.9, 13543.0], [48.0, 13543.0], [48.1, 13543.0], [48.2, 13633.0], [48.3, 13633.0], [48.4, 13649.0], [48.5, 13649.0], [48.6, 13689.0], [48.7, 13689.0], [48.8, 13750.0], [48.9, 13750.0], [49.0, 13774.0], [49.1, 13774.0], [49.2, 13889.0], [49.3, 13889.0], [49.4, 13909.0], [49.5, 13909.0], [49.6, 13923.0], [49.7, 13923.0], [49.8, 13971.0], [49.9, 13971.0], [50.0, 14041.0], [50.1, 14049.0], [50.2, 14049.0], [50.3, 14244.0], [50.4, 14244.0], [50.5, 14264.0], [50.6, 14264.0], [50.7, 14305.0], [50.8, 14305.0], [50.9, 14351.0], [51.0, 14351.0], [51.1, 14425.0], [51.2, 14425.0], [51.3, 14506.0], [51.4, 14506.0], [51.5, 14547.0], [51.6, 14547.0], [51.7, 14575.0], [51.8, 14575.0], [51.9, 14843.0], [52.0, 15025.0], [52.1, 15025.0], [52.2, 15145.0], [52.3, 15145.0], [52.4, 15281.0], [52.5, 15281.0], [52.6, 15430.0], [52.7, 15430.0], [52.8, 15486.0], [52.9, 15486.0], [53.0, 15593.0], [53.1, 15593.0], [53.2, 15700.0], [53.3, 15700.0], [53.4, 15704.0], [53.5, 15704.0], [53.6, 15951.0], [53.7, 15951.0], [53.8, 16270.0], [53.9, 16306.0], [54.0, 16306.0], [54.1, 16317.0], [54.2, 16317.0], [54.3, 16399.0], [54.4, 16399.0], [54.5, 16545.0], [54.6, 16545.0], [54.7, 16592.0], [54.8, 16592.0], [54.9, 16791.0], [55.0, 16791.0], [55.1, 16821.0], [55.2, 16821.0], [55.3, 16843.0], [55.4, 16843.0], [55.5, 16883.0], [55.6, 16985.0], [55.7, 16985.0], [55.8, 17067.0], [55.9, 17067.0], [56.0, 17075.0], [56.1, 17075.0], [56.2, 17093.0], [56.3, 17093.0], [56.4, 17246.0], [56.5, 17246.0], [56.6, 17286.0], [56.7, 17286.0], [56.8, 17426.0], [56.9, 17426.0], [57.0, 17504.0], [57.1, 17504.0], [57.2, 17721.0], [57.3, 17721.0], [57.4, 17722.0], [57.5, 17865.0], [57.6, 17865.0], [57.7, 17883.0], [57.8, 17883.0], [57.9, 18224.0], [58.0, 18224.0], [58.1, 18380.0], [58.2, 18380.0], [58.3, 18569.0], [58.4, 18569.0], [58.5, 18613.0], [58.6, 18613.0], [58.7, 18619.0], [58.8, 18619.0], [58.9, 18879.0], [59.0, 18879.0], [59.1, 18975.0], [59.2, 18975.0], [59.3, 18991.0], [59.4, 19313.0], [59.5, 19313.0], [59.6, 19757.0], [59.7, 19757.0], [59.8, 19781.0], [59.9, 19781.0], [60.0, 19854.0], [60.1, 19854.0], [60.2, 19945.0], [60.3, 19945.0], [60.4, 20118.0], [60.5, 20118.0], [60.6, 20181.0], [60.7, 20181.0], [60.8, 20241.0], [60.9, 20241.0], [61.0, 20338.0], [61.1, 20338.0], [61.2, 20357.0], [61.3, 20425.0], [61.4, 20425.0], [61.5, 20488.0], [61.6, 20488.0], [61.7, 20582.0], [61.8, 20582.0], [61.9, 20887.0], [62.0, 20887.0], [62.1, 20917.0], [62.2, 20917.0], [62.3, 20941.0], [62.4, 20941.0], [62.5, 20991.0], [62.6, 20991.0], [62.7, 21001.0], [62.8, 21001.0], [62.9, 21154.0], [63.0, 21261.0], [63.1, 21261.0], [63.2, 21262.0], [63.3, 21262.0], [63.4, 21278.0], [63.5, 21278.0], [63.6, 21372.0], [63.7, 21372.0], [63.8, 21425.0], [63.9, 21425.0], [64.0, 21551.0], [64.1, 21551.0], [64.2, 21989.0], [64.3, 21989.0], [64.4, 22107.0], [64.5, 22107.0], [64.6, 22247.0], [64.7, 22247.0], [64.8, 22495.0], [64.9, 22701.0], [65.0, 22701.0], [65.1, 22976.0], [65.2, 22976.0], [65.3, 22985.0], [65.4, 22985.0], [65.5, 23409.0], [65.6, 23409.0], [65.7, 23488.0], [65.8, 23488.0], [65.9, 23655.0], [66.0, 23655.0], [66.1, 24191.0], [66.2, 24191.0], [66.3, 24281.0], [66.4, 24281.0], [66.5, 24289.0], [66.6, 24289.0], [66.7, 24348.0], [66.8, 24357.0], [66.9, 24357.0], [67.0, 24495.0], [67.1, 24495.0], [67.2, 24641.0], [67.3, 24641.0], [67.4, 25160.0], [67.5, 25160.0], [67.6, 25173.0], [67.7, 25173.0], [67.8, 25512.0], [67.9, 25512.0], [68.0, 25584.0], [68.1, 25584.0], [68.2, 25636.0], [68.3, 25636.0], [68.4, 25664.0], [68.5, 25664.0], [68.6, 25857.0], [68.7, 25915.0], [68.8, 25915.0], [68.9, 25986.0], [69.0, 25986.0], [69.1, 26629.0], [69.2, 26629.0], [69.3, 26858.0], [69.4, 26858.0], [69.5, 26862.0], [69.6, 26862.0], [69.7, 26971.0], [69.8, 26971.0], [69.9, 26974.0], [70.0, 26974.0], [70.1, 27067.0], [70.2, 27067.0], [70.3, 27243.0], [70.4, 27344.0], [70.5, 27344.0], [70.6, 27487.0], [70.7, 27487.0], [70.8, 28515.0], [70.9, 28515.0], [71.0, 28727.0], [71.1, 28727.0], [71.2, 28766.0], [71.3, 28766.0], [71.4, 28771.0], [71.5, 28771.0], [71.6, 28801.0], [71.7, 28801.0], [71.8, 28848.0], [71.9, 28848.0], [72.0, 28915.0], [72.1, 28915.0], [72.2, 29018.0], [72.3, 29159.0], [72.4, 29159.0], [72.5, 29376.0], [72.6, 29376.0], [72.7, 29472.0], [72.8, 29472.0], [72.9, 29615.0], [73.0, 29615.0], [73.1, 29742.0], [73.2, 29742.0], [73.3, 29932.0], [73.4, 29932.0], [73.5, 30553.0], [73.6, 30553.0], [73.7, 30639.0], [73.8, 30639.0], [73.9, 30686.0], [74.0, 30686.0], [74.1, 30710.0], [74.2, 30750.0], [74.3, 30750.0], [74.4, 30993.0], [74.5, 30993.0], [74.6, 31179.0], [74.7, 31179.0], [74.8, 31358.0], [74.9, 31358.0], [75.0, 31438.0], [75.1, 31438.0], [75.2, 32072.0], [75.3, 32072.0], [75.4, 32134.0], [75.5, 32134.0], [75.6, 32601.0], [75.7, 32601.0], [75.8, 32892.0], [75.9, 32892.0], [76.0, 32957.0], [76.1, 33015.0], [76.2, 33015.0], [76.3, 33275.0], [76.4, 33275.0], [76.5, 33532.0], [76.6, 33532.0], [76.7, 33772.0], [76.8, 33772.0], [76.9, 33794.0], [77.0, 33794.0], [77.1, 33972.0], [77.2, 33972.0], [77.3, 34105.0], [77.4, 34105.0], [77.5, 34879.0], [77.6, 34879.0], [77.7, 35005.0], [77.8, 35049.0], [77.9, 35049.0], [78.0, 35100.0], [78.1, 35100.0], [78.2, 35154.0], [78.3, 35154.0], [78.4, 35292.0], [78.5, 35292.0], [78.6, 35311.0], [78.7, 35311.0], [78.8, 35431.0], [78.9, 35431.0], [79.0, 35446.0], [79.1, 35446.0], [79.2, 35660.0], [79.3, 35660.0], [79.4, 35721.0], [79.5, 35721.0], [79.6, 35764.0], [79.7, 35772.0], [79.8, 35772.0], [79.9, 35880.0], [80.0, 35880.0], [80.1, 35948.0], [80.2, 35948.0], [80.3, 36009.0], [80.4, 36009.0], [80.5, 36029.0], [80.6, 36029.0], [80.7, 36361.0], [80.8, 36361.0], [80.9, 36396.0], [81.0, 36396.0], [81.1, 36397.0], [81.2, 36397.0], [81.3, 36427.0], [81.4, 36427.0], [81.5, 36541.0], [81.6, 36712.0], [81.7, 36712.0], [81.8, 36918.0], [81.9, 36918.0], [82.0, 36989.0], [82.1, 36989.0], [82.2, 37435.0], [82.3, 37435.0], [82.4, 37443.0], [82.5, 37443.0], [82.6, 37474.0], [82.7, 37474.0], [82.8, 37853.0], [82.9, 37853.0], [83.0, 37891.0], [83.1, 37891.0], [83.2, 37925.0], [83.3, 37925.0], [83.4, 38081.0], [83.5, 38324.0], [83.6, 38324.0], [83.7, 38527.0], [83.8, 38527.0], [83.9, 38656.0], [84.0, 38656.0], [84.1, 38743.0], [84.2, 38743.0], [84.3, 38747.0], [84.4, 38747.0], [84.5, 38776.0], [84.6, 38776.0], [84.7, 38941.0], [84.8, 38941.0], [84.9, 38969.0], [85.0, 38969.0], [85.1, 39371.0], [85.2, 39541.0], [85.3, 39541.0], [85.4, 39568.0], [85.5, 39568.0], [85.6, 39772.0], [85.7, 39772.0], [85.8, 39781.0], [85.9, 39781.0], [86.0, 40145.0], [86.1, 40145.0], [86.2, 40306.0], [86.3, 40306.0], [86.4, 40492.0], [86.5, 40492.0], [86.6, 40561.0], [86.7, 40561.0], [86.8, 40885.0], [86.9, 40885.0], [87.0, 41029.0], [87.1, 41120.0], [87.2, 41120.0], [87.3, 41309.0], [87.4, 41309.0], [87.5, 41327.0], [87.6, 41327.0], [87.7, 41431.0], [87.8, 41431.0], [87.9, 41470.0], [88.0, 41470.0], [88.1, 41505.0], [88.2, 41505.0], [88.3, 41615.0], [88.4, 41615.0], [88.5, 41944.0], [88.6, 41944.0], [88.7, 42242.0], [88.8, 42242.0], [88.9, 42321.0], [89.0, 42569.0], [89.1, 42569.0], [89.2, 42906.0], [89.3, 42906.0], [89.4, 43025.0], [89.5, 43025.0], [89.6, 43135.0], [89.7, 43135.0], [89.8, 43404.0], [89.9, 43404.0], [90.0, 43433.0], [90.1, 43433.0], [90.2, 43904.0], [90.3, 43904.0], [90.4, 44249.0], [90.5, 44249.0], [90.6, 44470.0], [90.7, 44470.0], [90.8, 44479.0], [90.9, 44792.0], [91.0, 44792.0], [91.1, 44860.0], [91.2, 44860.0], [91.3, 45146.0], [91.4, 45146.0], [91.5, 45685.0], [91.6, 45685.0], [91.7, 45800.0], [91.8, 45800.0], [91.9, 45854.0], [92.0, 45854.0], [92.1, 46335.0], [92.2, 46335.0], [92.3, 46736.0], [92.4, 46736.0], [92.5, 46838.0], [92.6, 46937.0], [92.7, 46937.0], [92.8, 49187.0], [92.9, 49187.0], [93.0, 49394.0], [93.1, 49394.0], [93.2, 49701.0], [93.3, 49701.0], [93.4, 50056.0], [93.5, 50056.0], [93.6, 50160.0], [93.7, 50160.0], [93.8, 51640.0], [93.9, 51640.0], [94.0, 51672.0], [94.1, 51672.0], [94.2, 52979.0], [94.3, 52979.0], [94.4, 53282.0], [94.5, 53494.0], [94.6, 53494.0], [94.7, 58158.0], [94.8, 58158.0], [94.9, 58595.0], [95.0, 58595.0], [95.1, 59849.0], [95.2, 59849.0], [95.3, 60355.0], [95.4, 60355.0], [95.5, 60388.0], [95.6, 60388.0], [95.7, 60397.0], [95.8, 60397.0], [95.9, 60407.0], [96.0, 60407.0], [96.1, 60412.0], [96.2, 60412.0], [96.3, 60416.0], [96.4, 60436.0], [96.5, 60436.0], [96.6, 60485.0], [96.7, 60485.0], [96.8, 60492.0], [96.9, 60492.0], [97.0, 60517.0], [97.1, 60517.0], [97.2, 60526.0], [97.3, 60526.0], [97.4, 60540.0], [97.5, 60540.0], [97.6, 60543.0], [97.7, 60543.0], [97.8, 60554.0], [97.9, 60554.0], [98.0, 60564.0], [98.1, 60564.0], [98.2, 60578.0], [98.3, 60580.0], [98.4, 60580.0], [98.5, 60599.0], [98.6, 60599.0], [98.7, 60603.0], [98.8, 60603.0], [98.9, 60606.0], [99.0, 60606.0], [99.1, 60607.0], [99.2, 60607.0], [99.3, 60642.0], [99.4, 60642.0], [99.5, 60741.0], [99.6, 60741.0], [99.7, 60822.0], [99.8, 60822.0], [99.9, 60830.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 105.0], [0.1, 105.0], [0.2, 106.0], [0.3, 106.0], [0.4, 106.0], [0.5, 106.0], [0.6, 106.0], [0.7, 106.0], [0.8, 107.0], [0.9, 107.0], [1.0, 107.0], [1.1, 107.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 107.0], [1.6, 107.0], [1.7, 107.0], [1.8, 107.0], [1.9, 107.0], [2.0, 108.0], [2.1, 108.0], [2.2, 108.0], [2.3, 108.0], [2.4, 108.0], [2.5, 108.0], [2.6, 108.0], [2.7, 108.0], [2.8, 108.0], [2.9, 108.0], [3.0, 108.0], [3.1, 108.0], [3.2, 108.0], [3.3, 109.0], [3.4, 109.0], [3.5, 109.0], [3.6, 109.0], [3.7, 109.0], [3.8, 109.0], [3.9, 109.0], [4.0, 109.0], [4.1, 109.0], [4.2, 110.0], [4.3, 110.0], [4.4, 110.0], [4.5, 110.0], [4.6, 110.0], [4.7, 110.0], [4.8, 110.0], [4.9, 110.0], [5.0, 110.0], [5.1, 110.0], [5.2, 110.0], [5.3, 110.0], [5.4, 110.0], [5.5, 110.0], [5.6, 111.0], [5.7, 111.0], [5.8, 111.0], [5.9, 111.0], [6.0, 112.0], [6.1, 112.0], [6.2, 112.0], [6.3, 112.0], [6.4, 112.0], [6.5, 113.0], [6.6, 113.0], [6.7, 114.0], [6.8, 114.0], [6.9, 115.0], [7.0, 115.0], [7.1, 116.0], [7.2, 116.0], [7.3, 116.0], [7.4, 116.0], [7.5, 117.0], [7.6, 117.0], [7.7, 118.0], [7.8, 118.0], [7.9, 118.0], [8.0, 118.0], [8.1, 118.0], [8.2, 118.0], [8.3, 120.0], [8.4, 120.0], [8.5, 120.0], [8.6, 120.0], [8.7, 120.0], [8.8, 121.0], [8.9, 121.0], [9.0, 125.0], [9.1, 125.0], [9.2, 126.0], [9.3, 126.0], [9.4, 127.0], [9.5, 127.0], [9.6, 128.0], [9.7, 128.0], [9.8, 128.0], [9.9, 128.0], [10.0, 129.0], [10.1, 129.0], [10.2, 132.0], [10.3, 132.0], [10.4, 134.0], [10.5, 135.0], [10.6, 135.0], [10.7, 136.0], [10.8, 136.0], [10.9, 136.0], [11.0, 136.0], [11.1, 136.0], [11.2, 136.0], [11.3, 138.0], [11.4, 138.0], [11.5, 139.0], [11.6, 139.0], [11.7, 140.0], [11.8, 140.0], [11.9, 140.0], [12.0, 140.0], [12.1, 140.0], [12.2, 140.0], [12.3, 142.0], [12.4, 142.0], [12.5, 142.0], [12.6, 142.0], [12.7, 142.0], [12.8, 145.0], [12.9, 145.0], [13.0, 145.0], [13.1, 145.0], [13.2, 148.0], [13.3, 148.0], [13.4, 148.0], [13.5, 148.0], [13.6, 148.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 149.0], [14.1, 149.0], [14.2, 152.0], [14.3, 152.0], [14.4, 152.0], [14.5, 152.0], [14.6, 153.0], [14.7, 153.0], [14.8, 153.0], [14.9, 155.0], [15.0, 155.0], [15.1, 160.0], [15.2, 160.0], [15.3, 163.0], [15.4, 163.0], [15.5, 164.0], [15.6, 164.0], [15.7, 164.0], [15.8, 164.0], [15.9, 167.0], [16.0, 167.0], [16.1, 167.0], [16.2, 167.0], [16.3, 168.0], [16.4, 168.0], [16.5, 169.0], [16.6, 169.0], [16.7, 172.0], [16.8, 174.0], [16.9, 174.0], [17.0, 174.0], [17.1, 174.0], [17.2, 175.0], [17.3, 175.0], [17.4, 176.0], [17.5, 176.0], [17.6, 177.0], [17.7, 177.0], [17.8, 177.0], [17.9, 177.0], [18.0, 178.0], [18.1, 178.0], [18.2, 180.0], [18.3, 180.0], [18.4, 182.0], [18.5, 182.0], [18.6, 182.0], [18.7, 182.0], [18.8, 182.0], [18.9, 183.0], [19.0, 183.0], [19.1, 184.0], [19.2, 184.0], [19.3, 186.0], [19.4, 186.0], [19.5, 187.0], [19.6, 187.0], [19.7, 189.0], [19.8, 189.0], [19.9, 190.0], [20.0, 190.0], [20.1, 193.0], [20.2, 193.0], [20.3, 194.0], [20.4, 194.0], [20.5, 195.0], [20.6, 195.0], [20.7, 196.0], [20.8, 196.0], [20.9, 196.0], [21.0, 196.0], [21.1, 196.0], [21.2, 196.0], [21.3, 196.0], [21.4, 197.0], [21.5, 197.0], [21.6, 197.0], [21.7, 197.0], [21.8, 199.0], [21.9, 199.0], [22.0, 199.0], [22.1, 199.0], [22.2, 207.0], [22.3, 207.0], [22.4, 208.0], [22.5, 208.0], [22.6, 214.0], [22.7, 214.0], [22.8, 214.0], [22.9, 214.0], [23.0, 216.0], [23.1, 357.0], [23.2, 357.0], [23.3, 1157.0], [23.4, 1157.0], [23.5, 1700.0], [23.6, 1700.0], [23.7, 2936.0], [23.8, 2936.0], [23.9, 4515.0], [24.0, 4515.0], [24.1, 4571.0], [24.2, 4571.0], [24.3, 4600.0], [24.4, 4600.0], [24.5, 4643.0], [24.6, 4643.0], [24.7, 4804.0], [24.8, 4804.0], [24.9, 4902.0], [25.0, 4902.0], [25.1, 4920.0], [25.2, 4983.0], [25.3, 4983.0], [25.4, 5001.0], [25.5, 5001.0], [25.6, 5122.0], [25.7, 5122.0], [25.8, 5184.0], [25.9, 5184.0], [26.0, 5185.0], [26.1, 5185.0], [26.2, 5213.0], [26.3, 5213.0], [26.4, 5223.0], [26.5, 5223.0], [26.6, 5339.0], [26.7, 5339.0], [26.8, 5379.0], [26.9, 5379.0], [27.0, 5382.0], [27.1, 5473.0], [27.2, 5473.0], [27.3, 5481.0], [27.4, 5481.0], [27.5, 5661.0], [27.6, 5661.0], [27.7, 5664.0], [27.8, 5664.0], [27.9, 5708.0], [28.0, 5708.0], [28.1, 5723.0], [28.2, 5723.0], [28.3, 5759.0], [28.4, 5759.0], [28.5, 5923.0], [28.6, 5923.0], [28.7, 5944.0], [28.8, 5944.0], [28.9, 5950.0], [29.0, 5950.0], [29.1, 5980.0], [29.2, 5981.0], [29.3, 5981.0], [29.4, 6118.0], [29.5, 6118.0], [29.6, 6153.0], [29.7, 6153.0], [29.8, 6160.0], [29.9, 6160.0], [30.0, 6185.0], [30.1, 6185.0], [30.2, 6310.0], [30.3, 6310.0], [30.4, 6341.0], [30.5, 6341.0], [30.6, 6444.0], [30.7, 6444.0], [30.8, 6481.0], [30.9, 6481.0], [31.0, 6590.0], [31.1, 6590.0], [31.2, 6624.0], [31.3, 6625.0], [31.4, 6625.0], [31.5, 6691.0], [31.6, 6691.0], [31.7, 6693.0], [31.8, 6693.0], [31.9, 6711.0], [32.0, 6711.0], [32.1, 6776.0], [32.2, 6776.0], [32.3, 7022.0], [32.4, 7022.0], [32.5, 7080.0], [32.6, 7080.0], [32.7, 7272.0], [32.8, 7272.0], [32.9, 7285.0], [33.0, 7285.0], [33.1, 7297.0], [33.2, 7297.0], [33.3, 7546.0], [33.4, 7611.0], [33.5, 7611.0], [33.6, 7657.0], [33.7, 7657.0], [33.8, 7678.0], [33.9, 7678.0], [34.0, 7696.0], [34.1, 7696.0], [34.2, 7725.0], [34.3, 7725.0], [34.4, 7733.0], [34.5, 7733.0], [34.6, 7751.0], [34.7, 7751.0], [34.8, 7794.0], [34.9, 7794.0], [35.0, 7796.0], [35.1, 7796.0], [35.2, 7810.0], [35.3, 7810.0], [35.4, 7954.0], [35.5, 7981.0], [35.6, 7981.0], [35.7, 7984.0], [35.8, 7984.0], [35.9, 8049.0], [36.0, 8049.0], [36.1, 8366.0], [36.2, 8366.0], [36.3, 8662.0], [36.4, 8662.0], [36.5, 8844.0], [36.6, 8844.0], [36.7, 8848.0], [36.8, 8848.0], [36.9, 8996.0], [37.0, 8996.0], [37.1, 9229.0], [37.2, 9229.0], [37.3, 9232.0], [37.4, 9232.0], [37.5, 9282.0], [37.6, 9340.0], [37.7, 9340.0], [37.8, 9372.0], [37.9, 9372.0], [38.0, 9389.0], [38.1, 9389.0], [38.2, 9465.0], [38.3, 9465.0], [38.4, 9546.0], [38.5, 9546.0], [38.6, 9552.0], [38.7, 9552.0], [38.8, 9955.0], [38.9, 9955.0], [39.0, 9966.0], [39.1, 9966.0], [39.2, 10023.0], [39.3, 10023.0], [39.4, 10146.0], [39.5, 10146.0], [39.6, 10175.0], [39.7, 10295.0], [39.8, 10295.0], [39.9, 10471.0], [40.0, 10471.0], [40.1, 10605.0], [40.2, 10605.0], [40.3, 10609.0], [40.4, 10609.0], [40.5, 10774.0], [40.6, 10774.0], [40.7, 10853.0], [40.8, 10853.0], [40.9, 10938.0], [41.0, 10938.0], [41.1, 11050.0], [41.2, 11050.0], [41.3, 11068.0], [41.4, 11068.0], [41.5, 11075.0], [41.6, 11075.0], [41.7, 11202.0], [41.8, 11241.0], [41.9, 11241.0], [42.0, 11310.0], [42.1, 11310.0], [42.2, 11316.0], [42.3, 11316.0], [42.4, 11330.0], [42.5, 11330.0], [42.6, 11353.0], [42.7, 11353.0], [42.8, 11410.0], [42.9, 11410.0], [43.0, 11460.0], [43.1, 11460.0], [43.2, 11668.0], [43.3, 11668.0], [43.4, 11756.0], [43.5, 11756.0], [43.6, 11793.0], [43.7, 11793.0], [43.8, 11853.0], [43.9, 11915.0], [44.0, 11915.0], [44.1, 11939.0], [44.2, 11939.0], [44.3, 12029.0], [44.4, 12029.0], [44.5, 12232.0], [44.6, 12232.0], [44.7, 12320.0], [44.8, 12320.0], [44.9, 12478.0], [45.0, 12478.0], [45.1, 12515.0], [45.2, 12515.0], [45.3, 12555.0], [45.4, 12555.0], [45.5, 12616.0], [45.6, 12616.0], [45.7, 12625.0], [45.8, 12625.0], [45.9, 12720.0], [46.0, 12722.0], [46.1, 12722.0], [46.2, 12856.0], [46.3, 12856.0], [46.4, 12982.0], [46.5, 12982.0], [46.6, 13063.0], [46.7, 13063.0], [46.8, 13076.0], [46.9, 13076.0], [47.0, 13083.0], [47.1, 13083.0], [47.2, 13087.0], [47.3, 13087.0], [47.4, 13089.0], [47.5, 13089.0], [47.6, 13134.0], [47.7, 13134.0], [47.8, 13183.0], [47.9, 13183.0], [48.0, 13280.0], [48.1, 13316.0], [48.2, 13316.0], [48.3, 13343.0], [48.4, 13343.0], [48.5, 13366.0], [48.6, 13366.0], [48.7, 13405.0], [48.8, 13405.0], [48.9, 13510.0], [49.0, 13510.0], [49.1, 13564.0], [49.2, 13564.0], [49.3, 13594.0], [49.4, 13594.0], [49.5, 13636.0], [49.6, 13636.0], [49.7, 13672.0], [49.8, 13672.0], [49.9, 13834.0], [50.0, 13834.0], [50.1, 13855.0], [50.2, 13896.0], [50.3, 13896.0], [50.4, 14029.0], [50.5, 14029.0], [50.6, 14057.0], [50.7, 14057.0], [50.8, 14119.0], [50.9, 14119.0], [51.0, 14168.0], [51.1, 14168.0], [51.2, 14200.0], [51.3, 14200.0], [51.4, 14327.0], [51.5, 14327.0], [51.6, 14445.0], [51.7, 14445.0], [51.8, 14736.0], [51.9, 14736.0], [52.0, 14809.0], [52.1, 14873.0], [52.2, 14873.0], [52.3, 15078.0], [52.4, 15078.0], [52.5, 15186.0], [52.6, 15186.0], [52.7, 15193.0], [52.8, 15193.0], [52.9, 15296.0], [53.0, 15296.0], [53.1, 15480.0], [53.2, 15480.0], [53.3, 15623.0], [53.4, 15623.0], [53.5, 15710.0], [53.6, 15710.0], [53.7, 15862.0], [53.8, 15862.0], [53.9, 15910.0], [54.0, 15910.0], [54.1, 16021.0], [54.2, 16090.0], [54.3, 16090.0], [54.4, 16138.0], [54.5, 16138.0], [54.6, 16184.0], [54.7, 16184.0], [54.8, 16383.0], [54.9, 16383.0], [55.0, 16435.0], [55.1, 16435.0], [55.2, 16474.0], [55.3, 16474.0], [55.4, 16518.0], [55.5, 16518.0], [55.6, 16665.0], [55.7, 16665.0], [55.8, 16754.0], [55.9, 16754.0], [56.0, 16767.0], [56.1, 16767.0], [56.2, 16838.0], [56.3, 16869.0], [56.4, 16869.0], [56.5, 16951.0], [56.6, 16951.0], [56.7, 17113.0], [56.8, 17113.0], [56.9, 17212.0], [57.0, 17212.0], [57.1, 17461.0], [57.2, 17461.0], [57.3, 17483.0], [57.4, 17483.0], [57.5, 17547.0], [57.6, 17547.0], [57.7, 17921.0], [57.8, 17921.0], [57.9, 17941.0], [58.0, 17941.0], [58.1, 18209.0], [58.2, 18209.0], [58.3, 18212.0], [58.4, 18267.0], [58.5, 18267.0], [58.6, 18576.0], [58.7, 18576.0], [58.8, 18671.0], [58.9, 18671.0], [59.0, 18753.0], [59.1, 18753.0], [59.2, 19088.0], [59.3, 19088.0], [59.4, 19348.0], [59.5, 19348.0], [59.6, 19373.0], [59.7, 19373.0], [59.8, 19448.0], [59.9, 19448.0], [60.0, 19538.0], [60.1, 19538.0], [60.2, 19774.0], [60.3, 19774.0], [60.4, 19832.0], [60.5, 19864.0], [60.6, 19864.0], [60.7, 19951.0], [60.8, 19951.0], [60.9, 19984.0], [61.0, 19984.0], [61.1, 20020.0], [61.2, 20020.0], [61.3, 20023.0], [61.4, 20023.0], [61.5, 20197.0], [61.6, 20197.0], [61.7, 20407.0], [61.8, 20407.0], [61.9, 20479.0], [62.0, 20479.0], [62.1, 20583.0], [62.2, 20583.0], [62.3, 20594.0], [62.4, 20594.0], [62.5, 20708.0], [62.6, 20748.0], [62.7, 20748.0], [62.8, 20852.0], [62.9, 20852.0], [63.0, 20897.0], [63.1, 20897.0], [63.2, 20916.0], [63.3, 20916.0], [63.4, 20963.0], [63.5, 20963.0], [63.6, 21055.0], [63.7, 21055.0], [63.8, 21145.0], [63.9, 21145.0], [64.0, 21699.0], [64.1, 21699.0], [64.2, 21767.0], [64.3, 21767.0], [64.4, 22027.0], [64.5, 22027.0], [64.6, 22087.0], [64.7, 22401.0], [64.8, 22401.0], [64.9, 22571.0], [65.0, 22571.0], [65.1, 22685.0], [65.2, 22685.0], [65.3, 23002.0], [65.4, 23002.0], [65.5, 23083.0], [65.6, 23083.0], [65.7, 23323.0], [65.8, 23323.0], [65.9, 23825.0], [66.0, 23825.0], [66.1, 23874.0], [66.2, 23874.0], [66.3, 23941.0], [66.4, 23941.0], [66.5, 23969.0], [66.6, 23969.0], [66.7, 23981.0], [66.8, 24208.0], [66.9, 24208.0], [67.0, 24235.0], [67.1, 24235.0], [67.2, 24753.0], [67.3, 24753.0], [67.4, 24949.0], [67.5, 24949.0], [67.6, 25271.0], [67.7, 25271.0], [67.8, 25279.0], [67.9, 25279.0], [68.0, 25312.0], [68.1, 25312.0], [68.2, 25358.0], [68.3, 25358.0], [68.4, 25551.0], [68.5, 25551.0], [68.6, 25608.0], [68.7, 25608.0], [68.8, 25755.0], [68.9, 26222.0], [69.0, 26222.0], [69.1, 26452.0], [69.2, 26452.0], [69.3, 26454.0], [69.4, 26454.0], [69.5, 26461.0], [69.6, 26461.0], [69.7, 26659.0], [69.8, 26659.0], [69.9, 26672.0], [70.0, 26672.0], [70.1, 26837.0], [70.2, 26837.0], [70.3, 27094.0], [70.4, 27094.0], [70.5, 27183.0], [70.6, 27183.0], [70.7, 28202.0], [70.8, 28202.0], [70.9, 28273.0], [71.0, 28300.0], [71.1, 28300.0], [71.2, 28322.0], [71.3, 28322.0], [71.4, 28358.0], [71.5, 28358.0], [71.6, 28439.0], [71.7, 28439.0], [71.8, 28604.0], [71.9, 28604.0], [72.0, 28707.0], [72.1, 28707.0], [72.2, 28753.0], [72.3, 28753.0], [72.4, 29073.0], [72.5, 29073.0], [72.6, 29153.0], [72.7, 29153.0], [72.8, 29326.0], [72.9, 29326.0], [73.0, 29335.0], [73.1, 29525.0], [73.2, 29525.0], [73.3, 30147.0], [73.4, 30147.0], [73.5, 30278.0], [73.6, 30278.0], [73.7, 30375.0], [73.8, 30375.0], [73.9, 30393.0], [74.0, 30393.0], [74.1, 30406.0], [74.2, 30406.0], [74.3, 30679.0], [74.4, 30679.0], [74.5, 30799.0], [74.6, 30799.0], [74.7, 31063.0], [74.8, 31063.0], [74.9, 31119.0], [75.0, 31119.0], [75.1, 31725.0], [75.2, 31726.0], [75.3, 31726.0], [75.4, 32297.0], [75.5, 32297.0], [75.6, 32485.0], [75.7, 32485.0], [75.8, 32640.0], [75.9, 32640.0], [76.0, 32658.0], [76.1, 32658.0], [76.2, 32971.0], [76.3, 32971.0], [76.4, 33224.0], [76.5, 33224.0], [76.6, 33445.0], [76.7, 33445.0], [76.8, 33487.0], [76.9, 33487.0], [77.0, 33579.0], [77.1, 33792.0], [77.2, 33792.0], [77.3, 34598.0], [77.4, 34598.0], [77.5, 34657.0], [77.6, 34657.0], [77.7, 34742.0], [77.8, 34742.0], [77.9, 34841.0], [78.0, 34841.0], [78.1, 34866.0], [78.2, 34866.0], [78.3, 34884.0], [78.4, 34884.0], [78.5, 34954.0], [78.6, 34954.0], [78.7, 35090.0], [78.8, 35090.0], [78.9, 35150.0], [79.0, 35150.0], [79.1, 35218.0], [79.2, 35313.0], [79.3, 35313.0], [79.4, 35365.0], [79.5, 35365.0], [79.6, 35419.0], [79.7, 35419.0], [79.8, 35473.0], [79.9, 35473.0], [80.0, 35540.0], [80.1, 35540.0], [80.2, 35602.0], [80.3, 35602.0], [80.4, 35623.0], [80.5, 35623.0], [80.6, 35987.0], [80.7, 35987.0], [80.8, 36036.0], [80.9, 36036.0], [81.0, 36120.0], [81.1, 36120.0], [81.2, 36121.0], [81.3, 36306.0], [81.4, 36306.0], [81.5, 36327.0], [81.6, 36327.0], [81.7, 36377.0], [81.8, 36377.0], [81.9, 36606.0], [82.0, 36606.0], [82.1, 36975.0], [82.2, 36975.0], [82.3, 37074.0], [82.4, 37074.0], [82.5, 37257.0], [82.6, 37257.0], [82.7, 37517.0], [82.8, 37517.0], [82.9, 37585.0], [83.0, 37585.0], [83.1, 37617.0], [83.2, 37617.0], [83.3, 37673.0], [83.4, 38047.0], [83.5, 38047.0], [83.6, 38131.0], [83.7, 38131.0], [83.8, 38233.0], [83.9, 38233.0], [84.0, 38247.0], [84.1, 38247.0], [84.2, 38417.0], [84.3, 38417.0], [84.4, 38529.0], [84.5, 38529.0], [84.6, 38637.0], [84.7, 38637.0], [84.8, 38660.0], [84.9, 38660.0], [85.0, 38973.0], [85.1, 38973.0], [85.2, 39131.0], [85.3, 39131.0], [85.4, 39161.0], [85.5, 39373.0], [85.6, 39373.0], [85.7, 39467.0], [85.8, 39467.0], [85.9, 39839.0], [86.0, 39839.0], [86.1, 39898.0], [86.2, 39898.0], [86.3, 40130.0], [86.4, 40130.0], [86.5, 40153.0], [86.6, 40153.0], [86.7, 40580.0], [86.8, 40580.0], [86.9, 40622.0], [87.0, 40622.0], [87.1, 40715.0], [87.2, 40715.0], [87.3, 40902.0], [87.4, 40902.0], [87.5, 40918.0], [87.6, 41023.0], [87.7, 41023.0], [87.8, 41159.0], [87.9, 41159.0], [88.0, 41165.0], [88.1, 41165.0], [88.2, 41309.0], [88.3, 41309.0], [88.4, 41645.0], [88.5, 41645.0], [88.6, 41693.0], [88.7, 41693.0], [88.8, 41959.0], [88.9, 41959.0], [89.0, 42266.0], [89.1, 42266.0], [89.2, 42498.0], [89.3, 42498.0], [89.4, 42719.0], [89.5, 42719.0], [89.6, 42725.0], [89.7, 43026.0], [89.8, 43026.0], [89.9, 43099.0], [90.0, 43099.0], [90.1, 43694.0], [90.2, 43694.0], [90.3, 43969.0], [90.4, 43969.0], [90.5, 44035.0], [90.6, 44035.0], [90.7, 44062.0], [90.8, 44062.0], [90.9, 44384.0], [91.0, 44384.0], [91.1, 44454.0], [91.2, 44454.0], [91.3, 44756.0], [91.4, 44756.0], [91.5, 45379.0], [91.6, 45379.0], [91.7, 45392.0], [91.8, 45549.0], [91.9, 45549.0], [92.0, 46117.0], [92.1, 46117.0], [92.2, 46433.0], [92.3, 46433.0], [92.4, 46446.0], [92.5, 46446.0], [92.6, 46717.0], [92.7, 46717.0], [92.8, 48779.0], [92.9, 48779.0], [93.0, 49088.0], [93.1, 49088.0], [93.2, 49296.0], [93.3, 49296.0], [93.4, 49750.0], [93.5, 49750.0], [93.6, 49752.0], [93.7, 49752.0], [93.8, 51334.0], [93.9, 51366.0], [94.0, 51366.0], [94.1, 52674.0], [94.2, 52674.0], [94.3, 52874.0], [94.4, 52874.0], [94.5, 53188.0], [94.6, 53188.0], [94.7, 57749.0], [94.8, 57749.0], [94.9, 58270.0], [95.0, 58270.0], [95.1, 59441.0], [95.2, 59441.0], [95.3, 60110.0], [95.4, 60110.0], [95.5, 60118.0], [95.6, 60118.0], [95.7, 60132.0], [95.8, 60132.0], [95.9, 60136.0], [96.0, 60142.0], [96.1, 60142.0], [96.2, 60158.0], [96.3, 60158.0], [96.4, 60161.0], [96.5, 60161.0], [96.6, 60167.0], [96.7, 60167.0], [96.8, 60168.0], [96.9, 60168.0], [97.0, 60175.0], [97.1, 60175.0], [97.2, 60178.0], [97.3, 60178.0], [97.4, 60181.0], [97.5, 60181.0], [97.6, 60189.0], [97.7, 60189.0], [97.8, 60191.0], [97.9, 60191.0], [98.0, 60194.0], [98.1, 60198.0], [98.2, 60198.0], [98.3, 60199.0], [98.4, 60199.0], [98.5, 60208.0], [98.6, 60208.0], [98.7, 60284.0], [98.8, 60284.0], [98.9, 60301.0], [99.0, 60301.0], [99.1, 60308.0], [99.2, 60308.0], [99.3, 60333.0], [99.4, 60333.0], [99.5, 60365.0], [99.6, 60365.0], [99.7, 60413.0], [99.8, 60413.0], [99.9, 60422.0], [100.0, 60422.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 210.0], [0.1, 210.0], [0.2, 210.0], [0.3, 210.0], [0.4, 211.0], [0.5, 211.0], [0.6, 214.0], [0.7, 214.0], [0.8, 214.0], [0.9, 214.0], [1.0, 214.0], [1.1, 214.0], [1.2, 214.0], [1.3, 214.0], [1.4, 214.0], [1.5, 214.0], [1.6, 215.0], [1.7, 215.0], [1.8, 215.0], [1.9, 215.0], [2.0, 215.0], [2.1, 215.0], [2.2, 215.0], [2.3, 215.0], [2.4, 215.0], [2.5, 215.0], [2.6, 215.0], [2.7, 216.0], [2.8, 216.0], [2.9, 216.0], [3.0, 216.0], [3.1, 216.0], [3.2, 216.0], [3.3, 216.0], [3.4, 216.0], [3.5, 216.0], [3.6, 216.0], [3.7, 217.0], [3.8, 217.0], [3.9, 217.0], [4.0, 218.0], [4.1, 218.0], [4.2, 218.0], [4.3, 218.0], [4.4, 218.0], [4.5, 218.0], [4.6, 219.0], [4.7, 219.0], [4.8, 219.0], [4.9, 219.0], [5.0, 220.0], [5.1, 220.0], [5.2, 220.0], [5.3, 220.0], [5.4, 220.0], [5.5, 220.0], [5.6, 220.0], [5.7, 220.0], [5.8, 220.0], [5.9, 220.0], [6.0, 220.0], [6.1, 221.0], [6.2, 221.0], [6.3, 222.0], [6.4, 222.0], [6.5, 222.0], [6.6, 222.0], [6.7, 222.0], [6.8, 222.0], [6.9, 224.0], [7.0, 224.0], [7.1, 224.0], [7.2, 224.0], [7.3, 224.0], [7.4, 224.0], [7.5, 224.0], [7.6, 224.0], [7.7, 224.0], [7.8, 224.0], [7.9, 224.0], [8.0, 225.0], [8.1, 225.0], [8.2, 225.0], [8.3, 225.0], [8.4, 226.0], [8.5, 226.0], [8.6, 226.0], [8.7, 226.0], [8.8, 227.0], [8.9, 227.0], [9.0, 227.0], [9.1, 227.0], [9.2, 227.0], [9.3, 227.0], [9.4, 227.0], [9.5, 227.0], [9.6, 227.0], [9.7, 227.0], [9.8, 227.0], [9.9, 228.0], [10.0, 228.0], [10.1, 229.0], [10.2, 229.0], [10.3, 229.0], [10.4, 229.0], [10.5, 229.0], [10.6, 229.0], [10.7, 231.0], [10.8, 231.0], [10.9, 232.0], [11.0, 232.0], [11.1, 232.0], [11.2, 233.0], [11.3, 233.0], [11.4, 233.0], [11.5, 233.0], [11.6, 233.0], [11.7, 233.0], [11.8, 234.0], [11.9, 234.0], [12.0, 236.0], [12.1, 236.0], [12.2, 237.0], [12.3, 237.0], [12.4, 238.0], [12.5, 238.0], [12.6, 239.0], [12.7, 239.0], [12.8, 241.0], [12.9, 241.0], [13.0, 242.0], [13.1, 244.0], [13.2, 244.0], [13.3, 246.0], [13.4, 246.0], [13.5, 248.0], [13.6, 248.0], [13.7, 250.0], [13.8, 250.0], [13.9, 251.0], [14.0, 251.0], [14.1, 254.0], [14.2, 254.0], [14.3, 257.0], [14.4, 257.0], [14.5, 263.0], [14.6, 263.0], [14.7, 264.0], [14.8, 264.0], [14.9, 264.0], [15.0, 267.0], [15.1, 267.0], [15.2, 270.0], [15.3, 270.0], [15.4, 277.0], [15.5, 277.0], [15.6, 277.0], [15.7, 277.0], [15.8, 286.0], [15.9, 286.0], [16.0, 286.0], [16.1, 286.0], [16.2, 287.0], [16.3, 287.0], [16.4, 287.0], [16.5, 287.0], [16.6, 287.0], [16.7, 288.0], [16.8, 288.0], [16.9, 289.0], [17.0, 289.0], [17.1, 290.0], [17.2, 290.0], [17.3, 290.0], [17.4, 290.0], [17.5, 290.0], [17.6, 290.0], [17.7, 290.0], [17.8, 290.0], [17.9, 294.0], [18.0, 294.0], [18.1, 294.0], [18.2, 294.0], [18.3, 294.0], [18.4, 294.0], [18.5, 295.0], [18.6, 299.0], [18.7, 299.0], [18.8, 300.0], [18.9, 300.0], [19.0, 300.0], [19.1, 300.0], [19.2, 300.0], [19.3, 300.0], [19.4, 302.0], [19.5, 302.0], [19.6, 302.0], [19.7, 302.0], [19.8, 302.0], [19.9, 302.0], [20.0, 302.0], [20.1, 302.0], [20.2, 303.0], [20.3, 303.0], [20.4, 303.0], [20.5, 303.0], [20.6, 303.0], [20.7, 303.0], [20.8, 303.0], [20.9, 303.0], [21.0, 303.0], [21.1, 303.0], [21.2, 303.0], [21.3, 303.0], [21.4, 303.0], [21.5, 303.0], [21.6, 303.0], [21.7, 304.0], [21.8, 304.0], [21.9, 304.0], [22.0, 304.0], [22.1, 304.0], [22.2, 304.0], [22.3, 304.0], [22.4, 304.0], [22.5, 304.0], [22.6, 304.0], [22.7, 304.0], [22.8, 304.0], [22.9, 304.0], [23.0, 304.0], [23.1, 304.0], [23.2, 304.0], [23.3, 304.0], [23.4, 305.0], [23.5, 305.0], [23.6, 305.0], [23.7, 305.0], [23.8, 305.0], [23.9, 305.0], [24.0, 305.0], [24.1, 305.0], [24.2, 305.0], [24.3, 305.0], [24.4, 305.0], [24.5, 305.0], [24.6, 305.0], [24.7, 305.0], [24.8, 305.0], [24.9, 305.0], [25.0, 305.0], [25.1, 305.0], [25.2, 305.0], [25.3, 305.0], [25.4, 305.0], [25.5, 305.0], [25.6, 305.0], [25.7, 305.0], [25.8, 305.0], [25.9, 305.0], [26.0, 305.0], [26.1, 305.0], [26.2, 305.0], [26.3, 305.0], [26.4, 306.0], [26.5, 306.0], [26.6, 306.0], [26.7, 306.0], [26.8, 306.0], [26.9, 306.0], [27.0, 306.0], [27.1, 306.0], [27.2, 306.0], [27.3, 306.0], [27.4, 306.0], [27.5, 306.0], [27.6, 306.0], [27.7, 306.0], [27.8, 306.0], [27.9, 306.0], [28.0, 306.0], [28.1, 306.0], [28.2, 306.0], [28.3, 306.0], [28.4, 306.0], [28.5, 306.0], [28.6, 306.0], [28.7, 306.0], [28.8, 306.0], [28.9, 306.0], [29.0, 306.0], [29.1, 306.0], [29.2, 306.0], [29.3, 306.0], [29.4, 306.0], [29.5, 306.0], [29.6, 306.0], [29.7, 306.0], [29.8, 306.0], [29.9, 306.0], [30.0, 306.0], [30.1, 306.0], [30.2, 306.0], [30.3, 306.0], [30.4, 306.0], [30.5, 306.0], [30.6, 306.0], [30.7, 306.0], [30.8, 306.0], [30.9, 306.0], [31.0, 306.0], [31.1, 306.0], [31.2, 307.0], [31.3, 307.0], [31.4, 307.0], [31.5, 307.0], [31.6, 307.0], [31.7, 307.0], [31.8, 307.0], [31.9, 307.0], [32.0, 307.0], [32.1, 308.0], [32.2, 308.0], [32.3, 309.0], [32.4, 309.0], [32.5, 309.0], [32.6, 309.0], [32.7, 310.0], [32.8, 310.0], [32.9, 310.0], [33.0, 310.0], [33.1, 310.0], [33.2, 310.0], [33.3, 311.0], [33.4, 311.0], [33.5, 311.0], [33.6, 311.0], [33.7, 311.0], [33.8, 312.0], [33.9, 312.0], [34.0, 312.0], [34.1, 312.0], [34.2, 312.0], [34.3, 312.0], [34.4, 313.0], [34.5, 313.0], [34.6, 313.0], [34.7, 313.0], [34.8, 313.0], [34.9, 313.0], [35.0, 313.0], [35.1, 313.0], [35.2, 313.0], [35.3, 313.0], [35.4, 313.0], [35.5, 313.0], [35.6, 313.0], [35.7, 314.0], [35.8, 314.0], [35.9, 314.0], [36.0, 314.0], [36.1, 315.0], [36.2, 315.0], [36.3, 315.0], [36.4, 315.0], [36.5, 315.0], [36.6, 315.0], [36.7, 316.0], [36.8, 316.0], [36.9, 316.0], [37.0, 316.0], [37.1, 316.0], [37.2, 317.0], [37.3, 317.0], [37.4, 317.0], [37.5, 317.0], [37.6, 317.0], [37.7, 317.0], [37.8, 319.0], [37.9, 319.0], [38.0, 319.0], [38.1, 319.0], [38.2, 319.0], [38.3, 319.0], [38.4, 320.0], [38.5, 320.0], [38.6, 320.0], [38.7, 320.0], [38.8, 321.0], [38.9, 322.0], [39.0, 322.0], [39.1, 323.0], [39.2, 323.0], [39.3, 324.0], [39.4, 324.0], [39.5, 324.0], [39.6, 324.0], [39.7, 325.0], [39.8, 325.0], [39.9, 326.0], [40.0, 326.0], [40.1, 327.0], [40.2, 327.0], [40.3, 327.0], [40.4, 327.0], [40.5, 327.0], [40.6, 327.0], [40.7, 328.0], [40.8, 332.0], [40.9, 332.0], [41.0, 332.0], [41.1, 332.0], [41.2, 335.0], [41.3, 335.0], [41.4, 335.0], [41.5, 335.0], [41.6, 335.0], [41.7, 335.0], [41.8, 336.0], [41.9, 336.0], [42.0, 339.0], [42.1, 339.0], [42.2, 340.0], [42.3, 340.0], [42.4, 341.0], [42.5, 341.0], [42.6, 343.0], [42.7, 345.0], [42.8, 345.0], [42.9, 346.0], [43.0, 346.0], [43.1, 346.0], [43.2, 346.0], [43.3, 347.0], [43.4, 347.0], [43.5, 347.0], [43.6, 347.0], [43.7, 350.0], [43.8, 350.0], [43.9, 350.0], [44.0, 350.0], [44.1, 351.0], [44.2, 351.0], [44.3, 353.0], [44.4, 353.0], [44.5, 357.0], [44.6, 357.0], [44.7, 357.0], [44.8, 357.0], [44.9, 357.0], [45.0, 357.0], [45.1, 357.0], [45.2, 359.0], [45.3, 359.0], [45.4, 361.0], [45.5, 361.0], [45.6, 361.0], [45.7, 361.0], [45.8, 362.0], [45.9, 362.0], [46.0, 362.0], [46.1, 362.0], [46.2, 362.0], [46.3, 364.0], [46.4, 364.0], [46.5, 365.0], [46.6, 365.0], [46.7, 365.0], [46.8, 365.0], [46.9, 366.0], [47.0, 366.0], [47.1, 366.0], [47.2, 366.0], [47.3, 367.0], [47.4, 367.0], [47.5, 367.0], [47.6, 367.0], [47.7, 369.0], [47.8, 369.0], [47.9, 370.0], [48.0, 370.0], [48.1, 376.0], [48.2, 376.0], [48.3, 376.0], [48.4, 376.0], [48.5, 376.0], [48.6, 378.0], [48.7, 378.0], [48.8, 378.0], [48.9, 378.0], [49.0, 380.0], [49.1, 380.0], [49.2, 381.0], [49.3, 381.0], [49.4, 381.0], [49.5, 381.0], [49.6, 383.0], [49.7, 383.0], [49.8, 385.0], [49.9, 385.0], [50.0, 385.0], [50.1, 390.0], [50.2, 390.0], [50.3, 391.0], [50.4, 391.0], [50.5, 391.0], [50.6, 391.0], [50.7, 391.0], [50.8, 391.0], [50.9, 392.0], [51.0, 392.0], [51.1, 393.0], [51.2, 393.0], [51.3, 393.0], [51.4, 393.0], [51.5, 394.0], [51.6, 394.0], [51.7, 394.0], [51.8, 394.0], [51.9, 395.0], [52.0, 396.0], [52.1, 396.0], [52.2, 398.0], [52.3, 398.0], [52.4, 398.0], [52.5, 398.0], [52.6, 399.0], [52.7, 399.0], [52.8, 400.0], [52.9, 400.0], [53.0, 400.0], [53.1, 400.0], [53.2, 401.0], [53.3, 401.0], [53.4, 403.0], [53.5, 403.0], [53.6, 404.0], [53.7, 404.0], [53.8, 404.0], [53.9, 405.0], [54.0, 405.0], [54.1, 405.0], [54.2, 405.0], [54.3, 405.0], [54.4, 405.0], [54.5, 405.0], [54.6, 405.0], [54.7, 405.0], [54.8, 405.0], [54.9, 405.0], [55.0, 405.0], [55.1, 405.0], [55.2, 405.0], [55.3, 405.0], [55.4, 405.0], [55.5, 405.0], [55.6, 405.0], [55.7, 405.0], [55.8, 405.0], [55.9, 405.0], [56.0, 406.0], [56.1, 406.0], [56.2, 406.0], [56.3, 406.0], [56.4, 406.0], [56.5, 406.0], [56.6, 406.0], [56.7, 406.0], [56.8, 406.0], [56.9, 406.0], [57.0, 406.0], [57.1, 406.0], [57.2, 406.0], [57.3, 406.0], [57.4, 406.0], [57.5, 406.0], [57.6, 406.0], [57.7, 406.0], [57.8, 406.0], [57.9, 406.0], [58.0, 406.0], [58.1, 406.0], [58.2, 406.0], [58.3, 406.0], [58.4, 406.0], [58.5, 406.0], [58.6, 406.0], [58.7, 406.0], [58.8, 406.0], [58.9, 406.0], [59.0, 406.0], [59.1, 406.0], [59.2, 406.0], [59.3, 406.0], [59.4, 406.0], [59.5, 406.0], [59.6, 406.0], [59.7, 406.0], [59.8, 406.0], [59.9, 406.0], [60.0, 406.0], [60.1, 406.0], [60.2, 406.0], [60.3, 406.0], [60.4, 406.0], [60.5, 406.0], [60.6, 406.0], [60.7, 406.0], [60.8, 406.0], [60.9, 406.0], [61.0, 407.0], [61.1, 407.0], [61.2, 407.0], [61.3, 407.0], [61.4, 407.0], [61.5, 407.0], [61.6, 407.0], [61.7, 407.0], [61.8, 407.0], [61.9, 407.0], [62.0, 407.0], [62.1, 407.0], [62.2, 407.0], [62.3, 407.0], [62.4, 407.0], [62.5, 407.0], [62.6, 407.0], [62.7, 407.0], [62.8, 407.0], [62.9, 407.0], [63.0, 407.0], [63.1, 407.0], [63.2, 407.0], [63.3, 407.0], [63.4, 407.0], [63.5, 407.0], [63.6, 407.0], [63.7, 407.0], [63.8, 407.0], [63.9, 407.0], [64.0, 407.0], [64.1, 407.0], [64.2, 407.0], [64.3, 407.0], [64.4, 407.0], [64.5, 407.0], [64.6, 407.0], [64.7, 407.0], [64.8, 407.0], [64.9, 407.0], [65.0, 407.0], [65.1, 407.0], [65.2, 407.0], [65.3, 407.0], [65.4, 407.0], [65.5, 407.0], [65.6, 407.0], [65.7, 407.0], [65.8, 407.0], [65.9, 407.0], [66.0, 407.0], [66.1, 407.0], [66.2, 407.0], [66.3, 407.0], [66.4, 407.0], [66.5, 407.0], [66.6, 407.0], [66.7, 407.0], [66.8, 407.0], [66.9, 407.0], [67.0, 407.0], [67.1, 407.0], [67.2, 407.0], [67.3, 407.0], [67.4, 407.0], [67.5, 407.0], [67.6, 407.0], [67.7, 407.0], [67.8, 407.0], [67.9, 407.0], [68.0, 407.0], [68.1, 407.0], [68.2, 407.0], [68.3, 407.0], [68.4, 407.0], [68.5, 407.0], [68.6, 407.0], [68.7, 407.0], [68.8, 407.0], [68.9, 407.0], [69.0, 407.0], [69.1, 407.0], [69.2, 407.0], [69.3, 407.0], [69.4, 407.0], [69.5, 407.0], [69.6, 407.0], [69.7, 408.0], [69.8, 408.0], [69.9, 408.0], [70.0, 408.0], [70.1, 408.0], [70.2, 408.0], [70.3, 408.0], [70.4, 408.0], [70.5, 408.0], [70.6, 408.0], [70.7, 408.0], [70.8, 408.0], [70.9, 408.0], [71.0, 408.0], [71.1, 408.0], [71.2, 408.0], [71.3, 408.0], [71.4, 408.0], [71.5, 408.0], [71.6, 408.0], [71.7, 408.0], [71.8, 408.0], [71.9, 408.0], [72.0, 408.0], [72.1, 408.0], [72.2, 408.0], [72.3, 408.0], [72.4, 408.0], [72.5, 408.0], [72.6, 408.0], [72.7, 408.0], [72.8, 408.0], [72.9, 408.0], [73.0, 408.0], [73.1, 408.0], [73.2, 408.0], [73.3, 408.0], [73.4, 408.0], [73.5, 408.0], [73.6, 408.0], [73.7, 408.0], [73.8, 408.0], [73.9, 408.0], [74.0, 408.0], [74.1, 408.0], [74.2, 408.0], [74.3, 408.0], [74.4, 408.0], [74.5, 408.0], [74.6, 408.0], [74.7, 408.0], [74.8, 408.0], [74.9, 408.0], [75.0, 408.0], [75.1, 408.0], [75.2, 408.0], [75.3, 408.0], [75.4, 408.0], [75.5, 408.0], [75.6, 408.0], [75.7, 408.0], [75.8, 408.0], [75.9, 408.0], [76.0, 408.0], [76.1, 408.0], [76.2, 408.0], [76.3, 408.0], [76.4, 408.0], [76.5, 408.0], [76.6, 408.0], [76.7, 408.0], [76.8, 408.0], [76.9, 408.0], [77.0, 408.0], [77.1, 408.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 408.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 408.0], [79.2, 408.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 408.0], [80.4, 408.0], [80.5, 408.0], [80.6, 408.0], [80.7, 408.0], [80.8, 408.0], [80.9, 408.0], [81.0, 408.0], [81.1, 408.0], [81.2, 408.0], [81.3, 408.0], [81.4, 408.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 408.0], [83.5, 408.0], [83.6, 408.0], [83.7, 408.0], [83.8, 408.0], [83.9, 408.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 408.0], [84.4, 408.0], [84.5, 408.0], [84.6, 408.0], [84.7, 408.0], [84.8, 408.0], [84.9, 408.0], [85.0, 408.0], [85.1, 408.0], [85.2, 409.0], [85.3, 409.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 409.0], [86.0, 409.0], [86.1, 409.0], [86.2, 409.0], [86.3, 409.0], [86.4, 409.0], [86.5, 409.0], [86.6, 409.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 409.0], [87.2, 409.0], [87.3, 409.0], [87.4, 409.0], [87.5, 409.0], [87.6, 409.0], [87.7, 409.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 409.0], [89.1, 409.0], [89.2, 409.0], [89.3, 409.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 409.0], [90.3, 409.0], [90.4, 409.0], [90.5, 409.0], [90.6, 409.0], [90.7, 409.0], [90.8, 409.0], [90.9, 410.0], [91.0, 410.0], [91.1, 410.0], [91.2, 410.0], [91.3, 410.0], [91.4, 410.0], [91.5, 410.0], [91.6, 410.0], [91.7, 413.0], [91.8, 413.0], [91.9, 413.0], [92.0, 413.0], [92.1, 414.0], [92.2, 414.0], [92.3, 415.0], [92.4, 415.0], [92.5, 439.0], [92.6, 441.0], [92.7, 441.0], [92.8, 442.0], [92.9, 442.0], [93.0, 445.0], [93.1, 445.0], [93.2, 446.0], [93.3, 446.0], [93.4, 450.0], [93.5, 450.0], [93.6, 451.0], [93.7, 451.0], [93.8, 453.0], [93.9, 453.0], [94.0, 459.0], [94.1, 459.0], [94.2, 460.0], [94.3, 460.0], [94.4, 462.0], [94.5, 465.0], [94.6, 465.0], [94.7, 470.0], [94.8, 470.0], [94.9, 471.0], [95.0, 471.0], [95.1, 474.0], [95.2, 474.0], [95.3, 498.0], [95.4, 498.0], [95.5, 507.0], [95.6, 507.0], [95.7, 508.0], [95.8, 508.0], [95.9, 509.0], [96.0, 509.0], [96.1, 509.0], [96.2, 509.0], [96.3, 510.0], [96.4, 510.0], [96.5, 510.0], [96.6, 510.0], [96.7, 510.0], [96.8, 510.0], [96.9, 510.0], [97.0, 510.0], [97.1, 510.0], [97.2, 510.0], [97.3, 510.0], [97.4, 510.0], [97.5, 510.0], [97.6, 511.0], [97.7, 511.0], [97.8, 528.0], [97.9, 528.0], [98.0, 528.0], [98.1, 528.0], [98.2, 548.0], [98.3, 568.0], [98.4, 568.0], [98.5, 591.0], [98.6, 591.0], [98.7, 597.0], [98.8, 597.0], [98.9, 608.0], [99.0, 608.0], [99.1, 612.0], [99.2, 612.0], [99.3, 618.0], [99.4, 618.0], [99.5, 1794.0], [99.6, 1794.0], [99.7, 7205.0], [99.8, 7205.0], [99.9, 8292.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 225.0, "series": [{"data": [[32900.0, 1.0], [33700.0, 2.0], [34100.0, 1.0], [35700.0, 3.0], [36500.0, 1.0], [35300.0, 1.0], [38900.0, 2.0], [38500.0, 1.0], [36900.0, 2.0], [39700.0, 2.0], [39300.0, 1.0], [40100.0, 1.0], [40500.0, 1.0], [42500.0, 1.0], [41300.0, 2.0], [42900.0, 1.0], [46900.0, 1.0], [49700.0, 1.0], [49300.0, 1.0], [50100.0, 1.0], [52900.0, 1.0], [200.0, 1.0], [58100.0, 1.0], [58500.0, 1.0], [60500.0, 9.0], [300.0, 17.0], [400.0, 38.0], [500.0, 53.0], [600.0, 14.0], [700.0, 1.0], [1400.0, 1.0], [3300.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 1.0], [5600.0, 2.0], [5400.0, 1.0], [5500.0, 2.0], [5700.0, 3.0], [5800.0, 3.0], [5900.0, 1.0], [6100.0, 1.0], [6000.0, 2.0], [6300.0, 3.0], [6200.0, 2.0], [6500.0, 4.0], [6400.0, 1.0], [6700.0, 2.0], [6900.0, 1.0], [6800.0, 1.0], [7100.0, 2.0], [7000.0, 4.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7700.0, 2.0], [7900.0, 2.0], [8000.0, 3.0], [8100.0, 4.0], [8600.0, 1.0], [8400.0, 3.0], [8300.0, 2.0], [9100.0, 1.0], [9200.0, 1.0], [8900.0, 1.0], [9500.0, 2.0], [9400.0, 1.0], [9600.0, 3.0], [9700.0, 1.0], [9800.0, 2.0], [10200.0, 1.0], [9900.0, 2.0], [10700.0, 1.0], [10500.0, 2.0], [10400.0, 2.0], [10300.0, 1.0], [11200.0, 2.0], [10900.0, 2.0], [11000.0, 1.0], [11100.0, 1.0], [11700.0, 4.0], [11400.0, 2.0], [11500.0, 2.0], [11800.0, 2.0], [12000.0, 3.0], [12100.0, 1.0], [12200.0, 1.0], [12300.0, 2.0], [12600.0, 1.0], [12400.0, 1.0], [13000.0, 4.0], [13300.0, 3.0], [13200.0, 2.0], [12800.0, 2.0], [13800.0, 1.0], [13600.0, 3.0], [13500.0, 2.0], [13700.0, 2.0], [13400.0, 3.0], [14200.0, 2.0], [13900.0, 3.0], [14300.0, 2.0], [14000.0, 2.0], [14500.0, 3.0], [14400.0, 1.0], [14800.0, 1.0], [15000.0, 1.0], [15200.0, 1.0], [15100.0, 1.0], [15700.0, 2.0], [15400.0, 2.0], [15500.0, 1.0], [16300.0, 3.0], [15900.0, 1.0], [16200.0, 1.0], [17000.0, 3.0], [16800.0, 3.0], [17400.0, 1.0], [17200.0, 2.0], [17800.0, 2.0], [18200.0, 1.0], [18800.0, 1.0], [18600.0, 2.0], [20400.0, 2.0], [19800.0, 1.0], [20200.0, 1.0], [21200.0, 3.0], [21000.0, 1.0], [20800.0, 1.0], [21400.0, 1.0], [22400.0, 1.0], [22200.0, 1.0], [23400.0, 2.0], [24200.0, 2.0], [23600.0, 1.0], [24400.0, 1.0], [24600.0, 1.0], [25600.0, 2.0], [26600.0, 1.0], [25800.0, 1.0], [27200.0, 1.0], [26800.0, 2.0], [27000.0, 1.0], [27400.0, 1.0], [29000.0, 1.0], [29400.0, 1.0], [29600.0, 1.0], [28800.0, 2.0], [30600.0, 2.0], [31400.0, 1.0], [32600.0, 1.0], [32000.0, 1.0], [32800.0, 1.0], [33200.0, 1.0], [34800.0, 1.0], [36000.0, 2.0], [35200.0, 1.0], [36400.0, 1.0], [35600.0, 1.0], [38000.0, 1.0], [40400.0, 1.0], [40800.0, 1.0], [41600.0, 1.0], [44400.0, 2.0], [44800.0, 1.0], [45600.0, 1.0], [46800.0, 1.0], [50000.0, 1.0], [51600.0, 2.0], [53200.0, 1.0], [60400.0, 6.0], [60800.0, 2.0], [33900.0, 1.0], [33500.0, 1.0], [35900.0, 1.0], [36700.0, 1.0], [36300.0, 3.0], [35100.0, 2.0], [38700.0, 3.0], [38300.0, 1.0], [37900.0, 1.0], [39500.0, 2.0], [40300.0, 1.0], [41500.0, 1.0], [42300.0, 1.0], [41100.0, 1.0], [41900.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [44700.0, 1.0], [46700.0, 1.0], [46300.0, 1.0], [45100.0, 1.0], [49100.0, 1.0], [60700.0, 1.0], [60300.0, 3.0], [16500.0, 2.0], [16700.0, 1.0], [16900.0, 1.0], [17700.0, 2.0], [17500.0, 1.0], [18300.0, 1.0], [18500.0, 1.0], [18900.0, 2.0], [19300.0, 1.0], [20100.0, 2.0], [19900.0, 1.0], [19700.0, 2.0], [20300.0, 2.0], [21100.0, 1.0], [20500.0, 1.0], [21500.0, 1.0], [20900.0, 3.0], [21300.0, 1.0], [22100.0, 1.0], [21900.0, 1.0], [22700.0, 1.0], [22900.0, 2.0], [24100.0, 1.0], [24300.0, 2.0], [25500.0, 2.0], [25100.0, 2.0], [25900.0, 2.0], [26900.0, 2.0], [27300.0, 1.0], [28500.0, 1.0], [29300.0, 1.0], [28700.0, 3.0], [28900.0, 1.0], [29100.0, 1.0], [30700.0, 2.0], [29700.0, 1.0], [30500.0, 1.0], [29900.0, 1.0], [30900.0, 1.0], [31100.0, 1.0], [31300.0, 1.0], [32100.0, 1.0], [33000.0, 1.0], [35800.0, 1.0], [35400.0, 2.0], [35000.0, 2.0], [38600.0, 1.0], [37800.0, 2.0], [37400.0, 3.0], [41000.0, 1.0], [41400.0, 2.0], [42200.0, 1.0], [43000.0, 1.0], [43400.0, 2.0], [44200.0, 1.0], [45800.0, 2.0], [53400.0, 1.0], [59800.0, 1.0], [60600.0, 4.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 116.0], [33700.0, 1.0], [32900.0, 1.0], [34500.0, 1.0], [35300.0, 2.0], [36100.0, 2.0], [34900.0, 1.0], [38100.0, 1.0], [38500.0, 1.0], [38900.0, 1.0], [36900.0, 1.0], [40100.0, 2.0], [40900.0, 2.0], [40500.0, 1.0], [39300.0, 1.0], [41300.0, 1.0], [45300.0, 2.0], [46100.0, 1.0], [49700.0, 2.0], [200.0, 5.0], [51300.0, 2.0], [57700.0, 1.0], [60100.0, 17.0], [300.0, 1.0], [1100.0, 1.0], [1700.0, 1.0], [2900.0, 1.0], [4500.0, 2.0], [4600.0, 2.0], [4800.0, 1.0], [4900.0, 3.0], [5000.0, 1.0], [5100.0, 3.0], [5300.0, 3.0], [5200.0, 2.0], [5400.0, 2.0], [5600.0, 2.0], [5700.0, 3.0], [5900.0, 5.0], [6100.0, 4.0], [6300.0, 2.0], [6600.0, 4.0], [6400.0, 2.0], [6500.0, 1.0], [6700.0, 2.0], [7000.0, 2.0], [7200.0, 3.0], [7500.0, 1.0], [7600.0, 4.0], [7900.0, 3.0], [7700.0, 5.0], [7800.0, 1.0], [8000.0, 1.0], [8300.0, 1.0], [8600.0, 1.0], [8800.0, 2.0], [9200.0, 3.0], [8900.0, 1.0], [9500.0, 2.0], [9400.0, 1.0], [9300.0, 3.0], [10200.0, 1.0], [10100.0, 2.0], [10000.0, 1.0], [9900.0, 2.0], [10400.0, 1.0], [10600.0, 2.0], [10700.0, 1.0], [11000.0, 3.0], [10800.0, 1.0], [11200.0, 2.0], [10900.0, 1.0], [11300.0, 4.0], [11400.0, 2.0], [11600.0, 1.0], [11700.0, 2.0], [11800.0, 1.0], [12000.0, 1.0], [11900.0, 2.0], [12200.0, 1.0], [12600.0, 2.0], [12700.0, 2.0], [12400.0, 1.0], [12300.0, 1.0], [12500.0, 2.0], [13000.0, 5.0], [13100.0, 2.0], [13300.0, 3.0], [12900.0, 1.0], [13200.0, 1.0], [12800.0, 1.0], [13600.0, 2.0], [13800.0, 3.0], [13500.0, 3.0], [13400.0, 1.0], [14300.0, 1.0], [14100.0, 2.0], [14000.0, 2.0], [14200.0, 1.0], [14800.0, 2.0], [14700.0, 1.0], [14400.0, 1.0], [15200.0, 1.0], [15000.0, 1.0], [15100.0, 2.0], [15400.0, 1.0], [15600.0, 1.0], [15800.0, 1.0], [15700.0, 1.0], [16000.0, 2.0], [16100.0, 2.0], [15900.0, 1.0], [16300.0, 1.0], [17400.0, 2.0], [17200.0, 1.0], [16400.0, 2.0], [16600.0, 1.0], [16800.0, 2.0], [18200.0, 3.0], [19400.0, 1.0], [19000.0, 1.0], [18600.0, 1.0], [19800.0, 2.0], [20000.0, 2.0], [20400.0, 2.0], [20800.0, 2.0], [21000.0, 1.0], [22400.0, 1.0], [22000.0, 2.0], [21600.0, 1.0], [22600.0, 1.0], [23000.0, 2.0], [23800.0, 2.0], [24200.0, 2.0], [25200.0, 2.0], [26400.0, 3.0], [26600.0, 2.0], [26200.0, 1.0], [25600.0, 1.0], [26800.0, 1.0], [27000.0, 1.0], [28200.0, 2.0], [28600.0, 1.0], [28400.0, 1.0], [29000.0, 1.0], [30600.0, 1.0], [30400.0, 1.0], [30200.0, 1.0], [31000.0, 1.0], [32600.0, 2.0], [32200.0, 1.0], [32400.0, 1.0], [34800.0, 3.0], [33200.0, 1.0], [35600.0, 2.0], [36000.0, 1.0], [35200.0, 1.0], [38000.0, 1.0], [37600.0, 2.0], [38400.0, 1.0], [37200.0, 1.0], [41600.0, 2.0], [42400.0, 1.0], [43600.0, 1.0], [44000.0, 2.0], [44400.0, 1.0], [46400.0, 2.0], [49200.0, 1.0], [52800.0, 1.0], [60400.0, 2.0], [33500.0, 1.0], [34700.0, 1.0], [36300.0, 3.0], [35500.0, 1.0], [35900.0, 1.0], [35100.0, 1.0], [37500.0, 2.0], [39100.0, 2.0], [40700.0, 1.0], [42700.0, 2.0], [41100.0, 2.0], [41900.0, 1.0], [43900.0, 1.0], [44300.0, 1.0], [44700.0, 1.0], [45500.0, 1.0], [46700.0, 1.0], [48700.0, 1.0], [53100.0, 1.0], [60300.0, 4.0], [16700.0, 2.0], [17100.0, 1.0], [16500.0, 1.0], [16900.0, 1.0], [17900.0, 2.0], [17500.0, 1.0], [18700.0, 1.0], [18500.0, 1.0], [19300.0, 2.0], [20100.0, 1.0], [19900.0, 2.0], [19700.0, 1.0], [19500.0, 1.0], [20700.0, 2.0], [21100.0, 1.0], [20900.0, 2.0], [20500.0, 2.0], [22500.0, 1.0], [21700.0, 1.0], [23300.0, 1.0], [23900.0, 3.0], [25300.0, 2.0], [24700.0, 1.0], [25500.0, 1.0], [24900.0, 1.0], [25700.0, 1.0], [27100.0, 1.0], [28300.0, 3.0], [28700.0, 2.0], [29300.0, 2.0], [29100.0, 1.0], [29500.0, 1.0], [30300.0, 2.0], [30700.0, 1.0], [30100.0, 1.0], [31700.0, 2.0], [31100.0, 1.0], [33400.0, 2.0], [34600.0, 1.0], [35400.0, 2.0], [35000.0, 1.0], [36600.0, 1.0], [38600.0, 2.0], [38200.0, 2.0], [37000.0, 1.0], [40600.0, 1.0], [39400.0, 1.0], [39800.0, 2.0], [42200.0, 1.0], [43000.0, 2.0], [41000.0, 1.0], [49000.0, 1.0], [52600.0, 1.0], [58200.0, 1.0], [60200.0, 2.0], [59400.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[8200.0, 1.0], [300.0, 179.0], [600.0, 3.0], [400.0, 225.0], [200.0, 99.0], [1700.0, 1.0], [7200.0, 1.0], [500.0, 18.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 367.0, "series": [{"data": [[0.0, 367.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 350.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 315.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.3333333333333333, "minX": 1.68520422E12, "maxY": 25.0, "series": [{"data": [[1.6852044E12, 7.684210526315788], [1.68520422E12, 3.2692307692307696], [1.68520506E12, 16.066666666666666], [1.68520476E12, 17.741721854304647], [1.68520446E12, 10.0], [1.68520464E12, 15.0], [1.68520434E12, 5.0], [1.685205E12, 25.0], [1.6852047E12, 15.0], [1.68520488E12, 20.0], [1.68520458E12, 12.375000000000002], [1.68520428E12, 5.0], [1.68520494E12, 22.687022900763356], [1.68520512E12, 1.3333333333333333], [1.68520482E12, 20.0], [1.68520452E12, 10.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68520512E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 216.5, "minX": 1.0, "maxY": 60822.0, "series": [{"data": [[2.0, 20889.25], [3.0, 60822.0], [4.0, 25988.25], [5.0, 19025.25806451613], [6.0, 60607.0], [7.0, 32992.0], [8.0, 29866.25], [9.0, 60485.0], [10.0, 14516.452380952374], [11.0, 10082.400000000001], [12.0, 28197.0], [13.0, 24533.11111111111], [14.0, 18958.714285714286], [15.0, 18207.436781609198], [16.0, 15811.416666666666], [1.0, 60517.0], [17.0, 19129.833333333332], [18.0, 21321.78571428571], [19.0, 24695.09090909091], [20.0, 19155.163934426248], [21.0, 17041.9], [22.0, 9342.444444444445], [23.0, 20538.94117647059], [24.0, 24090.0], [25.0, 21436.347826086956]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.314990512333978, 19099.481973434544]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 20547.25], [3.0, 60413.0], [4.0, 25749.25], [5.0, 18677.25806451613], [6.0, 60199.0], [7.0, 32606.0], [8.0, 29470.25], [9.0, 60208.0], [10.0, 14162.178571428578], [11.0, 9736.5], [12.0, 27839.75], [13.0, 24218.88888888889], [14.0, 18603.285714285714], [15.0, 17836.701149425295], [16.0, 15469.833333333332], [1.0, 60301.0], [17.0, 18783.0], [18.0, 20937.285714285714], [19.0, 24334.272727272728], [20.0, 18807.581967213115], [21.0, 16730.0], [22.0, 10134.25], [23.0, 21458.500000000004], [24.0, 23688.75], [25.0, 21132.485294117643]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.274809160305363, 18820.00000000001]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 280.3333333333333], [3.0, 216.5], [4.0, 301.5], [5.0, 358.774193548387], [6.0, 385.0], [7.0, 373.25], [8.0, 394.4], [9.0, 327.0], [10.0, 352.28571428571416], [11.0, 349.7], [12.0, 301.5], [13.0, 390.2], [14.0, 358.0], [15.0, 363.25287356321826], [1.0, 441.0], [16.0, 386.33333333333337], [17.0, 402.5], [18.0, 361.15384615384613], [19.0, 328.33333333333337], [20.0, 334.1557377049181], [21.0, 384.1111111111111], [22.0, 361.8], [23.0, 331.7647058823529], [24.0, 331.0], [25.0, 624.4057971014496]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[16.32068311195446, 386.6110056925997]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 23.133333333333333, "minX": 1.68520422E12, "maxY": 8261.483333333334, "series": [{"data": [[1.6852044E12, 937.8833333333333], [1.68520422E12, 695.1], [1.68520506E12, 749.4333333333333], [1.68520476E12, 2677.616666666667], [1.68520446E12, 1281.4666666666667], [1.68520464E12, 1981.35], [1.68520434E12, 916.8833333333333], [1.685205E12, 2928.4333333333334], [1.6852047E12, 2970.1], [1.68520488E12, 3392.05], [1.68520458E12, 2448.7166666666667], [1.68520428E12, 1064.4666666666667], [1.68520494E12, 2806.766666666667], [1.68520512E12, 23.133333333333333], [1.68520482E12, 3904.133333333333], [1.68520452E12, 1781.3833333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6852044E12, 1419.6333333333334], [1.68520422E12, 1250.1], [1.68520506E12, 3716.616666666667], [1.68520476E12, 6868.066666666667], [1.68520446E12, 4295.2], [1.68520464E12, 3982.016666666667], [1.68520434E12, 1645.2666666666667], [1.685205E12, 8052.1], [1.6852047E12, 7366.55], [1.68520488E12, 8261.483333333334], [1.68520458E12, 4706.583333333333], [1.68520428E12, 2022.4666666666667], [1.68520494E12, 6909.8], [1.68520512E12, 354.51666666666665], [1.68520482E12, 7978.883333333333], [1.68520452E12, 6005.816666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68520512E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 292.4166666666667, "minX": 1.68520422E12, "maxY": 60517.0, "series": [{"data": [[1.6852044E12, 21427.090909090908], [1.68520422E12, 10822.285714285714], [1.68520506E12, 43601.78571428571], [1.68520476E12, 16380.591836734693], [1.68520446E12, 17202.666666666664], [1.68520464E12, 24753.32142857143], [1.68520434E12, 19748.46153846154], [1.685205E12, 21445.254237288125], [1.6852047E12, 15122.372549019608], [1.68520488E12, 20936.981818181815], [1.68520458E12, 13834.156250000002], [1.68520428E12, 16861.86666666667], [1.68520494E12, 17836.214285714294], [1.68520512E12, 60517.0], [1.68520482E12, 17387.035087719294], [1.68520452E12, 11840.938775510202]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852044E12, 18952.0], [1.68520422E12, 10533.57142857143], [1.68520506E12, 47031.346153846156], [1.68520476E12, 16882.187499999993], [1.68520446E12, 17296.58620689655], [1.68520464E12, 24695.77777777778], [1.68520434E12, 20182.83333333333], [1.685205E12, 20938.431034482754], [1.6852047E12, 14697.096153846158], [1.68520488E12, 20744.98214285715], [1.68520458E12, 11064.729729729728], [1.68520428E12, 16542.86666666667], [1.68520494E12, 16071.928571428572], [1.68520512E12, 60205.5], [1.68520482E12, 16698.824561403515], [1.68520452E12, 13122.933333333332]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852044E12, 384.5625], [1.68520422E12, 292.4166666666667], [1.68520506E12, 333.66666666666663], [1.68520476E12, 362.7407407407407], [1.68520446E12, 377.4285714285714], [1.68520464E12, 392.9259259259259], [1.68520434E12, 391.6923076923077], [1.685205E12, 675.2586206896553], [1.6852047E12, 345.17647058823525], [1.68520488E12, 317.0714285714286], [1.68520458E12, 359.6511627906977], [1.68520428E12, 330.78571428571433], [1.68520494E12, 352.27659574468095], [1.68520482E12, 351.5263157894737], [1.68520452E12, 333.5111111111111]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68520512E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 291.33333333333337, "minX": 1.68520422E12, "maxY": 60516.0, "series": [{"data": [[1.6852044E12, 21418.727272727276], [1.68520422E12, 10819.857142857143], [1.68520506E12, 43601.28571428572], [1.68520476E12, 16380.244897959186], [1.68520446E12, 17202.399999999998], [1.68520464E12, 24753.035714285717], [1.68520434E12, 19748.076923076926], [1.685205E12, 21445.016949152534], [1.6852047E12, 15122.137254901962], [1.68520488E12, 20936.85454545455], [1.68520458E12, 13833.874999999998], [1.68520428E12, 16855.8], [1.68520494E12, 17836.023809523813], [1.68520512E12, 60516.0], [1.68520482E12, 17386.894736842096], [1.68520452E12, 11840.612244897955]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852044E12, 18944.18181818182], [1.68520422E12, 10532.999999999998], [1.68520506E12, 47031.30769230769], [1.68520476E12, 16882.145833333332], [1.68520446E12, 17296.41379310345], [1.68520464E12, 24695.740740740734], [1.68520434E12, 20182.5], [1.685205E12, 20938.36206896553], [1.6852047E12, 14697.019230769234], [1.68520488E12, 20744.946428571424], [1.68520458E12, 11064.594594594595], [1.68520428E12, 16542.6], [1.68520494E12, 16071.857142857145], [1.68520512E12, 60205.5], [1.68520482E12, 16698.736842105267], [1.68520452E12, 13122.777777777777]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852044E12, 384.24999999999994], [1.68520422E12, 291.33333333333337], [1.68520506E12, 333.3333333333333], [1.68520476E12, 362.46296296296293], [1.68520446E12, 377.32142857142856], [1.68520464E12, 392.8518518518519], [1.68520434E12, 391.5384615384615], [1.685205E12, 674.9137931034481], [1.6852047E12, 345.01960784313724], [1.68520488E12, 316.96428571428584], [1.68520458E12, 359.4418604651163], [1.68520428E12, 324.5714285714285], [1.68520494E12, 352.23404255319167], [1.68520482E12, 351.42105263157885], [1.68520452E12, 333.35555555555555]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68520512E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68520422E12, "maxY": 211.5862068965517, "series": [{"data": [[1.6852044E12, 203.0909090909091], [1.68520422E12, 138.71428571428572], [1.68520506E12, 181.5], [1.68520476E12, 173.46938775510202], [1.68520446E12, 189.26666666666668], [1.68520464E12, 186.64285714285717], [1.68520434E12, 179.23076923076923], [1.685205E12, 204.2542372881356], [1.6852047E12, 180.72549019607845], [1.68520488E12, 160.25454545454545], [1.68520458E12, 168.31250000000003], [1.68520428E12, 156.46666666666667], [1.68520494E12, 157.11904761904762], [1.68520512E12, 106.0], [1.68520482E12, 177.8070175438597], [1.68520452E12, 171.469387755102]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6852044E12, 0.0], [1.68520422E12, 0.0], [1.68520506E12, 0.0], [1.68520476E12, 0.0], [1.68520446E12, 0.0], [1.68520464E12, 0.0], [1.68520434E12, 0.0], [1.685205E12, 0.0], [1.6852047E12, 0.0], [1.68520488E12, 0.0], [1.68520458E12, 0.0], [1.68520428E12, 0.0], [1.68520494E12, 0.0], [1.68520512E12, 0.0], [1.68520482E12, 0.0], [1.68520452E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6852044E12, 182.8125], [1.68520422E12, 140.41666666666669], [1.68520506E12, 185.66666666666666], [1.68520476E12, 175.37037037037035], [1.68520446E12, 186.96428571428572], [1.68520464E12, 193.40740740740742], [1.68520434E12, 200.3846153846154], [1.685205E12, 211.5862068965517], [1.6852047E12, 172.0196078431373], [1.68520488E12, 153.24999999999994], [1.68520458E12, 173.3953488372093], [1.68520428E12, 160.42857142857144], [1.68520494E12, 169.0212765957447], [1.68520482E12, 172.91228070175436], [1.68520452E12, 170.95555555555555]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68520512E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 215.0, "minX": 1.68520422E12, "maxY": 53188.0, "series": [{"data": [[1.6852044E12, 30679.0], [1.68520422E12, 14809.0], [1.68520506E12, 49752.0], [1.68520476E12, 53188.0], [1.68520446E12, 40622.0], [1.68520464E12, 45379.0], [1.68520434E12, 29073.0], [1.685205E12, 28300.0], [1.6852047E12, 39467.0], [1.68520488E12, 52674.0], [1.68520458E12, 31725.0], [1.68520428E12, 25755.0], [1.68520494E12, 37257.0], [1.68520482E12, 44384.0], [1.68520452E12, 43099.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6852044E12, 27205.400000000005], [1.68520422E12, 14327.0], [1.68520506E12, 49750.8], [1.68520476E12, 45391.0], [1.68520446E12, 38394.6], [1.68520464E12, 41038.5], [1.68520434E12, 28404.0], [1.685205E12, 20652.0], [1.6852047E12, 34272.6], [1.68520488E12, 16343.0], [1.68520458E12, 24667.000000000015], [1.68520428E12, 22685.0], [1.68520494E12, 30973.8], [1.68520482E12, 37557.8], [1.68520452E12, 40933.700000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6852044E12, 30679.0], [1.68520422E12, 14809.0], [1.68520506E12, 49752.0], [1.68520476E12, 53188.0], [1.68520446E12, 40622.0], [1.68520464E12, 45379.0], [1.68520434E12, 29073.0], [1.685205E12, 28300.0], [1.6852047E12, 39467.0], [1.68520488E12, 52674.0], [1.68520458E12, 31725.0], [1.68520428E12, 25755.0], [1.68520494E12, 37257.0], [1.68520482E12, 44371.119999999995], [1.68520452E12, 43099.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6852044E12, 29971.899999999998], [1.68520422E12, 14809.0], [1.68520506E12, 49752.0], [1.68520476E12, 49270.149999999994], [1.68520446E12, 40026.5], [1.68520464E12, 42150.5], [1.68520434E12, 28963.2], [1.685205E12, 25011.25], [1.6852047E12, 38256.19999999999], [1.68520488E12, 31307.75], [1.68520458E12, 29068.699999999997], [1.68520428E12, 25556.5], [1.68520494E12, 35059.6], [1.68520482E12, 40366.6], [1.68520452E12, 42640.85]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6852044E12, 303.0], [1.68520422E12, 216.0], [1.68520506E12, 216.0], [1.68520476E12, 218.0], [1.68520446E12, 277.0], [1.68520464E12, 215.0], [1.68520434E12, 299.0], [1.685205E12, 227.0], [1.6852047E12, 224.0], [1.68520488E12, 215.0], [1.68520458E12, 216.0], [1.68520428E12, 231.0], [1.68520494E12, 218.0], [1.68520482E12, 215.0], [1.68520452E12, 222.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6852044E12, 407.0], [1.68520422E12, 306.0], [1.68520506E12, 40153.0], [1.68520476E12, 5521.5], [1.68520446E12, 26837.0], [1.68520464E12, 2512.0], [1.68520434E12, 608.0], [1.685205E12, 472.5], [1.6852047E12, 5944.0], [1.68520488E12, 408.0], [1.68520458E12, 409.0], [1.68520428E12, 8844.0], [1.68520494E12, 409.0], [1.68520482E12, 4600.0], [1.68520452E12, 22209.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68520506E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 145.5, "minX": 1.0, "maxY": 25551.0, "series": [{"data": [[1.0, 410.0], [4.0, 5944.0], [2.0, 461.0], [8.0, 408.0], [9.0, 407.0], [18.0, 510.0], [5.0, 408.0], [20.0, 306.0], [3.0, 5223.0], [6.0, 14027.5], [26.0, 225.0], [7.0, 2554.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 268.0], [1.0, 362.5], [4.0, 214.0], [8.0, 145.5], [9.0, 245.0], [18.0, 453.0], [5.0, 196.5], [20.0, 21055.0], [3.0, 216.0], [6.0, 260.5], [26.0, 25551.0], [7.0, 290.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 145.5, "minX": 1.0, "maxY": 25551.0, "series": [{"data": [[1.0, 410.0], [4.0, 5944.0], [2.0, 461.0], [8.0, 408.0], [9.0, 407.0], [18.0, 510.0], [5.0, 408.0], [20.0, 306.0], [3.0, 5223.0], [6.0, 14027.5], [26.0, 225.0], [7.0, 2554.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 268.0], [1.0, 362.5], [4.0, 214.0], [8.0, 145.5], [9.0, 245.0], [18.0, 453.0], [5.0, 196.5], [20.0, 21055.0], [3.0, 216.0], [6.0, 260.5], [26.0, 25551.0], [7.0, 290.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.68520422E12, "maxY": 2.033333333333333, "series": [{"data": [[1.6852044E12, 0.5], [1.68520422E12, 0.4], [1.68520506E12, 0.16666666666666666], [1.68520476E12, 1.75], [1.68520446E12, 0.9666666666666667], [1.68520464E12, 0.95], [1.68520434E12, 0.4166666666666667], [1.685205E12, 2.033333333333333], [1.6852047E12, 1.7166666666666666], [1.68520488E12, 1.8], [1.68520458E12, 1.4333333333333333], [1.68520428E12, 0.48333333333333334], [1.68520494E12, 1.5666666666666667], [1.68520482E12, 1.9166666666666667], [1.68520452E12, 1.4166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68520506E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68520422E12, "maxY": 1.7166666666666666, "series": [{"data": [[1.6852044E12, 0.4166666666666667], [1.68520422E12, 0.31666666666666665], [1.68520506E12, 0.25], [1.68520476E12, 1.0], [1.68520446E12, 0.4166666666666667], [1.68520464E12, 0.9], [1.68520434E12, 0.4166666666666667], [1.685205E12, 1.0666666666666667], [1.6852047E12, 1.1833333333333333], [1.68520488E12, 1.4], [1.68520458E12, 1.0166666666666666], [1.68520428E12, 0.48333333333333334], [1.68520494E12, 1.1833333333333333], [1.68520482E12, 1.7166666666666666], [1.68520452E12, 0.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6852044E12, 0.03333333333333333], [1.68520488E12, 0.38333333333333336], [1.68520458E12, 0.31666666666666665], [1.68520506E12, 0.08333333333333333], [1.68520476E12, 0.7], [1.68520446E12, 0.5333333333333333], [1.68520494E12, 0.3], [1.68520482E12, 0.18333333333333332], [1.68520452E12, 1.0], [1.685205E12, 0.7666666666666667], [1.6852047E12, 0.5333333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68520488E12, 0.08333333333333333], [1.68520506E12, 0.2], [1.68520512E12, 0.03333333333333333], [1.685205E12, 0.1]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68520512E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68520422E12, "maxY": 0.8666666666666667, "series": [{"data": [[1.6852044E12, 0.25], [1.68520422E12, 0.2], [1.68520506E12, 0.05], [1.68520476E12, 0.48333333333333334], [1.68520446E12, 0.16666666666666666], [1.68520464E12, 0.45], [1.68520434E12, 0.21666666666666667], [1.685205E12, 0.7333333333333333], [1.6852047E12, 0.5333333333333333], [1.68520488E12, 0.8666666666666667], [1.68520458E12, 0.6], [1.68520428E12, 0.23333333333333334], [1.68520494E12, 0.6333333333333333], [1.68520482E12, 0.85], [1.68520452E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.6852044E12, 0.016666666666666666], [1.68520488E12, 0.06666666666666667], [1.68520458E12, 0.11666666666666667], [1.68520506E12, 0.05], [1.68520476E12, 0.4166666666666667], [1.68520446E12, 0.3], [1.68520494E12, 0.15], [1.68520482E12, 0.1], [1.68520452E12, 0.5333333333333333], [1.685205E12, 0.23333333333333334], [1.6852047E12, 0.31666666666666665]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.6852044E12, 0.016666666666666666], [1.68520488E12, 0.4], [1.68520458E12, 0.2], [1.68520506E12, 0.23333333333333334], [1.68520476E12, 0.2833333333333333], [1.68520446E12, 0.23333333333333334], [1.68520494E12, 0.15], [1.68520512E12, 0.03333333333333333], [1.68520482E12, 0.08333333333333333], [1.68520452E12, 0.4666666666666667], [1.685205E12, 0.6333333333333333], [1.6852047E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6852044E12, 0.16666666666666666], [1.68520422E12, 0.11666666666666667], [1.68520506E12, 0.13333333333333333], [1.68520476E12, 0.23333333333333334], [1.68520446E12, 0.18333333333333332], [1.68520464E12, 0.4666666666666667], [1.68520434E12, 0.21666666666666667], [1.685205E12, 0.31666666666666665], [1.6852047E12, 0.5], [1.68520488E12, 0.5], [1.68520458E12, 0.3333333333333333], [1.68520428E12, 0.25], [1.68520494E12, 0.43333333333333335], [1.68520482E12, 0.6333333333333333], [1.68520452E12, 0.05]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.6852044E12, 0.016666666666666666], [1.68520488E12, 0.4166666666666667], [1.68520458E12, 0.2], [1.68520506E12, 0.3333333333333333], [1.68520476E12, 0.5833333333333334], [1.68520446E12, 0.31666666666666665], [1.68520494E12, 0.26666666666666666], [1.68520512E12, 0.016666666666666666], [1.68520482E12, 0.31666666666666665], [1.68520452E12, 0.7666666666666667], [1.685205E12, 0.6666666666666666], [1.6852047E12, 0.35]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6852044E12, 0.16666666666666666], [1.68520422E12, 0.11666666666666667], [1.68520506E12, 0.2], [1.68520476E12, 0.5166666666666667], [1.68520446E12, 0.25], [1.68520464E12, 0.45], [1.68520434E12, 0.2], [1.685205E12, 0.3333333333333333], [1.6852047E12, 0.65], [1.68520488E12, 0.5333333333333333], [1.68520458E12, 0.4166666666666667], [1.68520428E12, 0.25], [1.68520494E12, 0.55], [1.68520482E12, 0.8666666666666667], [1.68520452E12, 0.2833333333333333]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68520512E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68520422E12, "maxY": 2.35, "series": [{"data": [[1.6852044E12, 0.5833333333333334], [1.68520422E12, 0.43333333333333335], [1.68520506E12, 0.38333333333333336], [1.68520476E12, 1.2333333333333334], [1.68520446E12, 0.6], [1.68520464E12, 1.3666666666666667], [1.68520434E12, 0.6333333333333333], [1.685205E12, 1.3833333333333333], [1.6852047E12, 1.6833333333333333], [1.68520488E12, 1.9], [1.68520458E12, 1.35], [1.68520428E12, 0.7333333333333333], [1.68520494E12, 1.6166666666666667], [1.68520482E12, 2.35], [1.68520452E12, 0.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6852044E12, 0.05], [1.68520488E12, 0.8833333333333333], [1.68520458E12, 0.5166666666666667], [1.68520506E12, 0.6166666666666667], [1.68520476E12, 1.2833333333333334], [1.68520446E12, 0.85], [1.68520494E12, 0.5666666666666667], [1.68520512E12, 0.05], [1.68520482E12, 0.5], [1.68520452E12, 1.7666666666666666], [1.685205E12, 1.5333333333333334], [1.6852047E12, 0.8833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68520512E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

