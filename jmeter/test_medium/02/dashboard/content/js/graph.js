/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 102.0, "minX": 0.0, "maxY": 120721.0, "series": [{"data": [[0.0, 205.0], [0.1, 205.0], [0.2, 206.0], [0.3, 207.0], [0.4, 210.0], [0.5, 213.0], [0.6, 249.0], [0.7, 306.0], [0.8, 308.0], [0.9, 308.0], [1.0, 308.0], [1.1, 308.0], [1.2, 309.0], [1.3, 309.0], [1.4, 309.0], [1.5, 309.0], [1.6, 309.0], [1.7, 309.0], [1.8, 309.0], [1.9, 309.0], [2.0, 309.0], [2.1, 309.0], [2.2, 309.0], [2.3, 310.0], [2.4, 310.0], [2.5, 310.0], [2.6, 310.0], [2.7, 310.0], [2.8, 310.0], [2.9, 310.0], [3.0, 310.0], [3.1, 310.0], [3.2, 310.0], [3.3, 310.0], [3.4, 310.0], [3.5, 310.0], [3.6, 310.0], [3.7, 310.0], [3.8, 310.0], [3.9, 310.0], [4.0, 310.0], [4.1, 310.0], [4.2, 310.0], [4.3, 310.0], [4.4, 310.0], [4.5, 311.0], [4.6, 311.0], [4.7, 311.0], [4.8, 311.0], [4.9, 311.0], [5.0, 311.0], [5.1, 311.0], [5.2, 311.0], [5.3, 311.0], [5.4, 311.0], [5.5, 311.0], [5.6, 311.0], [5.7, 311.0], [5.8, 311.0], [5.9, 311.0], [6.0, 311.0], [6.1, 311.0], [6.2, 311.0], [6.3, 311.0], [6.4, 311.0], [6.5, 311.0], [6.6, 311.0], [6.7, 311.0], [6.8, 311.0], [6.9, 311.0], [7.0, 311.0], [7.1, 311.0], [7.2, 312.0], [7.3, 312.0], [7.4, 312.0], [7.5, 312.0], [7.6, 312.0], [7.7, 312.0], [7.8, 312.0], [7.9, 312.0], [8.0, 312.0], [8.1, 312.0], [8.2, 312.0], [8.3, 312.0], [8.4, 312.0], [8.5, 312.0], [8.6, 312.0], [8.7, 312.0], [8.8, 312.0], [8.9, 312.0], [9.0, 312.0], [9.1, 312.0], [9.2, 312.0], [9.3, 312.0], [9.4, 312.0], [9.5, 312.0], [9.6, 312.0], [9.7, 312.0], [9.8, 312.0], [9.9, 312.0], [10.0, 312.0], [10.1, 312.0], [10.2, 312.0], [10.3, 312.0], [10.4, 312.0], [10.5, 312.0], [10.6, 313.0], [10.7, 313.0], [10.8, 313.0], [10.9, 313.0], [11.0, 313.0], [11.1, 313.0], [11.2, 313.0], [11.3, 313.0], [11.4, 313.0], [11.5, 313.0], [11.6, 313.0], [11.7, 313.0], [11.8, 313.0], [11.9, 313.0], [12.0, 313.0], [12.1, 313.0], [12.2, 313.0], [12.3, 314.0], [12.4, 314.0], [12.5, 314.0], [12.6, 314.0], [12.7, 314.0], [12.8, 314.0], [12.9, 314.0], [13.0, 314.0], [13.1, 314.0], [13.2, 314.0], [13.3, 314.0], [13.4, 314.0], [13.5, 314.0], [13.6, 314.0], [13.7, 314.0], [13.8, 314.0], [13.9, 314.0], [14.0, 314.0], [14.1, 314.0], [14.2, 315.0], [14.3, 315.0], [14.4, 315.0], [14.5, 315.0], [14.6, 315.0], [14.7, 315.0], [14.8, 315.0], [14.9, 315.0], [15.0, 315.0], [15.1, 315.0], [15.2, 315.0], [15.3, 315.0], [15.4, 315.0], [15.5, 315.0], [15.6, 315.0], [15.7, 315.0], [15.8, 315.0], [15.9, 315.0], [16.0, 316.0], [16.1, 316.0], [16.2, 316.0], [16.3, 316.0], [16.4, 316.0], [16.5, 316.0], [16.6, 316.0], [16.7, 317.0], [16.8, 317.0], [16.9, 317.0], [17.0, 317.0], [17.1, 317.0], [17.2, 317.0], [17.3, 317.0], [17.4, 317.0], [17.5, 317.0], [17.6, 318.0], [17.7, 318.0], [17.8, 318.0], [17.9, 318.0], [18.0, 318.0], [18.1, 319.0], [18.2, 319.0], [18.3, 319.0], [18.4, 319.0], [18.5, 319.0], [18.6, 319.0], [18.7, 319.0], [18.8, 319.0], [18.9, 320.0], [19.0, 320.0], [19.1, 320.0], [19.2, 321.0], [19.3, 321.0], [19.4, 321.0], [19.5, 321.0], [19.6, 321.0], [19.7, 322.0], [19.8, 322.0], [19.9, 323.0], [20.0, 323.0], [20.1, 323.0], [20.2, 323.0], [20.3, 324.0], [20.4, 324.0], [20.5, 324.0], [20.6, 324.0], [20.7, 326.0], [20.8, 326.0], [20.9, 327.0], [21.0, 328.0], [21.1, 329.0], [21.2, 330.0], [21.3, 330.0], [21.4, 330.0], [21.5, 330.0], [21.6, 330.0], [21.7, 331.0], [21.8, 331.0], [21.9, 332.0], [22.0, 332.0], [22.1, 332.0], [22.2, 333.0], [22.3, 333.0], [22.4, 333.0], [22.5, 334.0], [22.6, 335.0], [22.7, 335.0], [22.8, 335.0], [22.9, 335.0], [23.0, 336.0], [23.1, 336.0], [23.2, 336.0], [23.3, 337.0], [23.4, 338.0], [23.5, 338.0], [23.6, 338.0], [23.7, 339.0], [23.8, 339.0], [23.9, 339.0], [24.0, 339.0], [24.1, 339.0], [24.2, 340.0], [24.3, 340.0], [24.4, 340.0], [24.5, 340.0], [24.6, 340.0], [24.7, 340.0], [24.8, 340.0], [24.9, 340.0], [25.0, 340.0], [25.1, 341.0], [25.2, 341.0], [25.3, 341.0], [25.4, 341.0], [25.5, 341.0], [25.6, 341.0], [25.7, 341.0], [25.8, 342.0], [25.9, 342.0], [26.0, 342.0], [26.1, 342.0], [26.2, 342.0], [26.3, 342.0], [26.4, 342.0], [26.5, 342.0], [26.6, 342.0], [26.7, 343.0], [26.8, 343.0], [26.9, 343.0], [27.0, 343.0], [27.1, 344.0], [27.2, 344.0], [27.3, 344.0], [27.4, 344.0], [27.5, 345.0], [27.6, 345.0], [27.7, 345.0], [27.8, 346.0], [27.9, 346.0], [28.0, 347.0], [28.1, 347.0], [28.2, 347.0], [28.3, 347.0], [28.4, 348.0], [28.5, 348.0], [28.6, 348.0], [28.7, 349.0], [28.8, 349.0], [28.9, 349.0], [29.0, 349.0], [29.1, 349.0], [29.2, 349.0], [29.3, 350.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 352.0], [29.9, 352.0], [30.0, 352.0], [30.1, 352.0], [30.2, 354.0], [30.3, 354.0], [30.4, 354.0], [30.5, 355.0], [30.6, 355.0], [30.7, 355.0], [30.8, 355.0], [30.9, 355.0], [31.0, 356.0], [31.1, 357.0], [31.2, 357.0], [31.3, 357.0], [31.4, 357.0], [31.5, 358.0], [31.6, 358.0], [31.7, 358.0], [31.8, 359.0], [31.9, 359.0], [32.0, 360.0], [32.1, 361.0], [32.2, 361.0], [32.3, 361.0], [32.4, 362.0], [32.5, 362.0], [32.6, 363.0], [32.7, 363.0], [32.8, 363.0], [32.9, 364.0], [33.0, 365.0], [33.1, 366.0], [33.2, 366.0], [33.3, 368.0], [33.4, 368.0], [33.5, 369.0], [33.6, 369.0], [33.7, 370.0], [33.8, 370.0], [33.9, 370.0], [34.0, 371.0], [34.1, 371.0], [34.2, 371.0], [34.3, 371.0], [34.4, 373.0], [34.5, 373.0], [34.6, 373.0], [34.7, 374.0], [34.8, 375.0], [34.9, 375.0], [35.0, 375.0], [35.1, 375.0], [35.2, 375.0], [35.3, 375.0], [35.4, 376.0], [35.5, 377.0], [35.6, 377.0], [35.7, 377.0], [35.8, 379.0], [35.9, 380.0], [36.0, 380.0], [36.1, 380.0], [36.2, 380.0], [36.3, 382.0], [36.4, 383.0], [36.5, 385.0], [36.6, 385.0], [36.7, 385.0], [36.8, 385.0], [36.9, 386.0], [37.0, 386.0], [37.1, 387.0], [37.2, 387.0], [37.3, 387.0], [37.4, 388.0], [37.5, 388.0], [37.6, 389.0], [37.7, 389.0], [37.8, 390.0], [37.9, 390.0], [38.0, 390.0], [38.1, 391.0], [38.2, 393.0], [38.3, 394.0], [38.4, 394.0], [38.5, 395.0], [38.6, 398.0], [38.7, 398.0], [38.8, 398.0], [38.9, 398.0], [39.0, 399.0], [39.1, 400.0], [39.2, 401.0], [39.3, 402.0], [39.4, 403.0], [39.5, 403.0], [39.6, 403.0], [39.7, 406.0], [39.8, 407.0], [39.9, 408.0], [40.0, 410.0], [40.1, 410.0], [40.2, 411.0], [40.3, 412.0], [40.4, 412.0], [40.5, 413.0], [40.6, 413.0], [40.7, 413.0], [40.8, 413.0], [40.9, 414.0], [41.0, 415.0], [41.1, 415.0], [41.2, 415.0], [41.3, 416.0], [41.4, 417.0], [41.5, 417.0], [41.6, 418.0], [41.7, 419.0], [41.8, 420.0], [41.9, 420.0], [42.0, 421.0], [42.1, 422.0], [42.2, 422.0], [42.3, 422.0], [42.4, 423.0], [42.5, 424.0], [42.6, 424.0], [42.7, 424.0], [42.8, 424.0], [42.9, 426.0], [43.0, 428.0], [43.1, 430.0], [43.2, 430.0], [43.3, 430.0], [43.4, 430.0], [43.5, 433.0], [43.6, 434.0], [43.7, 435.0], [43.8, 435.0], [43.9, 436.0], [44.0, 439.0], [44.1, 440.0], [44.2, 440.0], [44.3, 442.0], [44.4, 442.0], [44.5, 445.0], [44.6, 446.0], [44.7, 447.0], [44.8, 450.0], [44.9, 451.0], [45.0, 452.0], [45.1, 453.0], [45.2, 454.0], [45.3, 454.0], [45.4, 454.0], [45.5, 458.0], [45.6, 458.0], [45.7, 459.0], [45.8, 460.0], [45.9, 464.0], [46.0, 465.0], [46.1, 465.0], [46.2, 471.0], [46.3, 472.0], [46.4, 473.0], [46.5, 474.0], [46.6, 475.0], [46.7, 476.0], [46.8, 479.0], [46.9, 480.0], [47.0, 482.0], [47.1, 482.0], [47.2, 483.0], [47.3, 484.0], [47.4, 488.0], [47.5, 489.0], [47.6, 489.0], [47.7, 491.0], [47.8, 491.0], [47.9, 492.0], [48.0, 493.0], [48.1, 500.0], [48.2, 500.0], [48.3, 502.0], [48.4, 503.0], [48.5, 505.0], [48.6, 506.0], [48.7, 507.0], [48.8, 508.0], [48.9, 510.0], [49.0, 510.0], [49.1, 510.0], [49.2, 510.0], [49.3, 510.0], [49.4, 511.0], [49.5, 511.0], [49.6, 512.0], [49.7, 512.0], [49.8, 512.0], [49.9, 512.0], [50.0, 512.0], [50.1, 513.0], [50.2, 513.0], [50.3, 513.0], [50.4, 513.0], [50.5, 513.0], [50.6, 514.0], [50.7, 514.0], [50.8, 514.0], [50.9, 514.0], [51.0, 514.0], [51.1, 515.0], [51.2, 515.0], [51.3, 515.0], [51.4, 515.0], [51.5, 515.0], [51.6, 516.0], [51.7, 516.0], [51.8, 516.0], [51.9, 516.0], [52.0, 516.0], [52.1, 516.0], [52.2, 517.0], [52.3, 518.0], [52.4, 518.0], [52.5, 518.0], [52.6, 518.0], [52.7, 519.0], [52.8, 523.0], [52.9, 523.0], [53.0, 523.0], [53.1, 527.0], [53.2, 528.0], [53.3, 528.0], [53.4, 529.0], [53.5, 531.0], [53.6, 531.0], [53.7, 531.0], [53.8, 533.0], [53.9, 533.0], [54.0, 533.0], [54.1, 534.0], [54.2, 534.0], [54.3, 537.0], [54.4, 538.0], [54.5, 539.0], [54.6, 539.0], [54.7, 541.0], [54.8, 541.0], [54.9, 542.0], [55.0, 545.0], [55.1, 545.0], [55.2, 546.0], [55.3, 546.0], [55.4, 547.0], [55.5, 548.0], [55.6, 548.0], [55.7, 549.0], [55.8, 552.0], [55.9, 552.0], [56.0, 552.0], [56.1, 552.0], [56.2, 554.0], [56.3, 554.0], [56.4, 555.0], [56.5, 557.0], [56.6, 558.0], [56.7, 558.0], [56.8, 559.0], [56.9, 560.0], [57.0, 561.0], [57.1, 562.0], [57.2, 564.0], [57.3, 565.0], [57.4, 572.0], [57.5, 572.0], [57.6, 573.0], [57.7, 576.0], [57.8, 578.0], [57.9, 580.0], [58.0, 580.0], [58.1, 581.0], [58.2, 581.0], [58.3, 582.0], [58.4, 585.0], [58.5, 585.0], [58.6, 586.0], [58.7, 588.0], [58.8, 595.0], [58.9, 596.0], [59.0, 596.0], [59.1, 597.0], [59.2, 603.0], [59.3, 604.0], [59.4, 614.0], [59.5, 616.0], [59.6, 617.0], [59.7, 618.0], [59.8, 621.0], [59.9, 621.0], [60.0, 625.0], [60.1, 634.0], [60.2, 640.0], [60.3, 658.0], [60.4, 678.0], [60.5, 693.0], [60.6, 699.0], [60.7, 746.0], [60.8, 763.0], [60.9, 784.0], [61.0, 822.0], [61.1, 908.0], [61.2, 952.0], [61.3, 990.0], [61.4, 1007.0], [61.5, 1026.0], [61.6, 1031.0], [61.7, 1041.0], [61.8, 1068.0], [61.9, 1069.0], [62.0, 1091.0], [62.1, 1096.0], [62.2, 1105.0], [62.3, 1207.0], [62.4, 1297.0], [62.5, 1321.0], [62.6, 1380.0], [62.7, 1398.0], [62.8, 1436.0], [62.9, 1447.0], [63.0, 1520.0], [63.1, 1536.0], [63.2, 1560.0], [63.3, 2193.0], [63.4, 2439.0], [63.5, 2460.0], [63.6, 2820.0], [63.7, 3078.0], [63.8, 3911.0], [63.9, 4546.0], [64.0, 4610.0], [64.1, 4622.0], [64.2, 4724.0], [64.3, 4752.0], [64.4, 4829.0], [64.5, 4871.0], [64.6, 5020.0], [64.7, 5168.0], [64.8, 5223.0], [64.9, 5335.0], [65.0, 5349.0], [65.1, 5362.0], [65.2, 5404.0], [65.3, 5440.0], [65.4, 5456.0], [65.5, 5457.0], [65.6, 5481.0], [65.7, 5557.0], [65.8, 5593.0], [65.9, 5607.0], [66.0, 5627.0], [66.1, 5665.0], [66.2, 5699.0], [66.3, 5728.0], [66.4, 5738.0], [66.5, 5803.0], [66.6, 5830.0], [66.7, 5836.0], [66.8, 5911.0], [66.9, 5999.0], [67.0, 6022.0], [67.1, 6105.0], [67.2, 6190.0], [67.3, 6253.0], [67.4, 6270.0], [67.5, 6327.0], [67.6, 6529.0], [67.7, 6548.0], [67.8, 6602.0], [67.9, 6623.0], [68.0, 6655.0], [68.1, 6824.0], [68.2, 6859.0], [68.3, 6889.0], [68.4, 7025.0], [68.5, 7032.0], [68.6, 7048.0], [68.7, 7054.0], [68.8, 7111.0], [68.9, 7156.0], [69.0, 7188.0], [69.1, 7376.0], [69.2, 7428.0], [69.3, 7481.0], [69.4, 7526.0], [69.5, 7941.0], [69.6, 8098.0], [69.7, 8103.0], [69.8, 8243.0], [69.9, 8378.0], [70.0, 8412.0], [70.1, 8461.0], [70.2, 8609.0], [70.3, 8687.0], [70.4, 8970.0], [70.5, 9007.0], [70.6, 9067.0], [70.7, 9309.0], [70.8, 9311.0], [70.9, 9328.0], [71.0, 9396.0], [71.1, 9397.0], [71.2, 9410.0], [71.3, 9689.0], [71.4, 9912.0], [71.5, 9935.0], [71.6, 9937.0], [71.7, 9952.0], [71.8, 10013.0], [71.9, 10053.0], [72.0, 10074.0], [72.1, 10198.0], [72.2, 10425.0], [72.3, 10426.0], [72.4, 10618.0], [72.5, 10655.0], [72.6, 10848.0], [72.7, 11003.0], [72.8, 11043.0], [72.9, 11089.0], [73.0, 11257.0], [73.1, 11464.0], [73.2, 11517.0], [73.3, 11542.0], [73.4, 11547.0], [73.5, 11636.0], [73.6, 11658.0], [73.7, 11738.0], [73.8, 11809.0], [73.9, 11930.0], [74.0, 12163.0], [74.1, 12363.0], [74.2, 12560.0], [74.3, 12607.0], [74.4, 12633.0], [74.5, 12735.0], [74.6, 12754.0], [74.7, 13062.0], [74.8, 13189.0], [74.9, 13239.0], [75.0, 13245.0], [75.1, 13517.0], [75.2, 13676.0], [75.3, 13732.0], [75.4, 13760.0], [75.5, 13767.0], [75.6, 13863.0], [75.7, 13928.0], [75.8, 13944.0], [75.9, 14165.0], [76.0, 14631.0], [76.1, 14826.0], [76.2, 14968.0], [76.3, 14969.0], [76.4, 15098.0], [76.5, 15276.0], [76.6, 15327.0], [76.7, 15391.0], [76.8, 15626.0], [76.9, 15693.0], [77.0, 15781.0], [77.1, 15846.0], [77.2, 15905.0], [77.3, 15975.0], [77.4, 16103.0], [77.5, 16366.0], [77.6, 16523.0], [77.7, 16531.0], [77.8, 16584.0], [77.9, 16611.0], [78.0, 16629.0], [78.1, 16698.0], [78.2, 16703.0], [78.3, 16978.0], [78.4, 17437.0], [78.5, 17846.0], [78.6, 17898.0], [78.7, 18291.0], [78.8, 18388.0], [78.9, 18399.0], [79.0, 18484.0], [79.1, 18643.0], [79.2, 18879.0], [79.3, 18895.0], [79.4, 19386.0], [79.5, 19796.0], [79.6, 19995.0], [79.7, 20073.0], [79.8, 20507.0], [79.9, 20556.0], [80.0, 20575.0], [80.1, 20597.0], [80.2, 20964.0], [80.3, 21024.0], [80.4, 21208.0], [80.5, 21248.0], [80.6, 21515.0], [80.7, 21580.0], [80.8, 21596.0], [80.9, 21688.0], [81.0, 21960.0], [81.1, 21972.0], [81.2, 22161.0], [81.3, 22435.0], [81.4, 22482.0], [81.5, 22748.0], [81.6, 22867.0], [81.7, 23018.0], [81.8, 23038.0], [81.9, 23047.0], [82.0, 23114.0], [82.1, 23251.0], [82.2, 23252.0], [82.3, 23400.0], [82.4, 23431.0], [82.5, 23794.0], [82.6, 23820.0], [82.7, 23860.0], [82.8, 23950.0], [82.9, 24143.0], [83.0, 24305.0], [83.1, 24407.0], [83.2, 24409.0], [83.3, 24809.0], [83.4, 24826.0], [83.5, 24867.0], [83.6, 25295.0], [83.7, 25327.0], [83.8, 25395.0], [83.9, 25609.0], [84.0, 26113.0], [84.1, 26590.0], [84.2, 26656.0], [84.3, 26889.0], [84.4, 27487.0], [84.5, 27695.0], [84.6, 27737.0], [84.7, 27764.0], [84.8, 28230.0], [84.9, 28248.0], [85.0, 28500.0], [85.1, 28818.0], [85.2, 29024.0], [85.3, 29180.0], [85.4, 29188.0], [85.5, 29429.0], [85.6, 29716.0], [85.7, 29937.0], [85.8, 29990.0], [85.9, 30488.0], [86.0, 30553.0], [86.1, 30566.0], [86.2, 30869.0], [86.3, 31034.0], [86.4, 31051.0], [86.5, 31225.0], [86.6, 31435.0], [86.7, 31548.0], [86.8, 31742.0], [86.9, 31759.0], [87.0, 31972.0], [87.1, 32337.0], [87.2, 32365.0], [87.3, 32366.0], [87.4, 32864.0], [87.5, 33267.0], [87.6, 33380.0], [87.7, 33452.0], [87.8, 33600.0], [87.9, 33815.0], [88.0, 33829.0], [88.1, 34146.0], [88.2, 34330.0], [88.3, 34574.0], [88.4, 35037.0], [88.5, 35420.0], [88.6, 35457.0], [88.7, 35686.0], [88.8, 36244.0], [88.9, 36383.0], [89.0, 36832.0], [89.1, 37530.0], [89.2, 37584.0], [89.3, 37644.0], [89.4, 37932.0], [89.5, 37937.0], [89.6, 38941.0], [89.7, 40544.0], [89.8, 40854.0], [89.9, 41466.0], [90.0, 42077.0], [90.1, 42906.0], [90.2, 43418.0], [90.3, 44068.0], [90.4, 44469.0], [90.5, 47783.0], [90.6, 47803.0], [90.7, 47968.0], [90.8, 48348.0], [90.9, 50246.0], [91.0, 50667.0], [91.1, 50964.0], [91.2, 51083.0], [91.3, 55227.0], [91.4, 55802.0], [91.5, 56730.0], [91.6, 57611.0], [91.7, 58882.0], [91.8, 59486.0], [91.9, 59633.0], [92.0, 60127.0], [92.1, 60313.0], [92.2, 60315.0], [92.3, 60316.0], [92.4, 60322.0], [92.5, 60323.0], [92.6, 60324.0], [92.7, 60335.0], [92.8, 60351.0], [92.9, 60357.0], [93.0, 60357.0], [93.1, 60361.0], [93.2, 60375.0], [93.3, 60376.0], [93.4, 60389.0], [93.5, 60389.0], [93.6, 60393.0], [93.7, 60394.0], [93.8, 60395.0], [93.9, 60415.0], [94.0, 60418.0], [94.1, 60420.0], [94.2, 60421.0], [94.3, 60424.0], [94.4, 60428.0], [94.5, 60428.0], [94.6, 60434.0], [94.7, 60442.0], [94.8, 60445.0], [94.9, 60457.0], [95.0, 60468.0], [95.1, 60470.0], [95.2, 60472.0], [95.3, 60473.0], [95.4, 60475.0], [95.5, 60481.0], [95.6, 60484.0], [95.7, 60486.0], [95.8, 60492.0], [95.9, 60505.0], [96.0, 60505.0], [96.1, 60509.0], [96.2, 60516.0], [96.3, 60516.0], [96.4, 60516.0], [96.5, 60517.0], [96.6, 60520.0], [96.7, 60525.0], [96.8, 60528.0], [96.9, 60533.0], [97.0, 60550.0], [97.1, 60553.0], [97.2, 60558.0], [97.3, 60567.0], [97.4, 60581.0], [97.5, 60590.0], [97.6, 60591.0], [97.7, 60591.0], [97.8, 60612.0], [97.9, 60614.0], [98.0, 60616.0], [98.1, 60673.0], [98.2, 60696.0], [98.3, 60699.0], [98.4, 60725.0], [98.5, 60763.0], [98.6, 60828.0], [98.7, 61276.0], [98.8, 61408.0], [98.9, 65478.0], [99.0, 65687.0], [99.1, 66626.0], [99.2, 67461.0], [99.3, 68854.0], [99.4, 69144.0], [99.5, 72624.0], [99.6, 73693.0], [99.7, 100931.0], [99.8, 120563.0], [99.9, 120653.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 102.0], [0.1, 103.0], [0.2, 103.0], [0.3, 103.0], [0.4, 103.0], [0.5, 103.0], [0.6, 103.0], [0.7, 103.0], [0.8, 103.0], [0.9, 103.0], [1.0, 103.0], [1.1, 103.0], [1.2, 103.0], [1.3, 103.0], [1.4, 103.0], [1.5, 103.0], [1.6, 103.0], [1.7, 103.0], [1.8, 103.0], [1.9, 103.0], [2.0, 103.0], [2.1, 103.0], [2.2, 103.0], [2.3, 103.0], [2.4, 104.0], [2.5, 104.0], [2.6, 104.0], [2.7, 104.0], [2.8, 104.0], [2.9, 104.0], [3.0, 104.0], [3.1, 104.0], [3.2, 104.0], [3.3, 104.0], [3.4, 104.0], [3.5, 104.0], [3.6, 104.0], [3.7, 104.0], [3.8, 104.0], [3.9, 104.0], [4.0, 104.0], [4.1, 104.0], [4.2, 104.0], [4.3, 104.0], [4.4, 104.0], [4.5, 104.0], [4.6, 104.0], [4.7, 104.0], [4.8, 104.0], [4.9, 104.0], [5.0, 104.0], [5.1, 104.0], [5.2, 104.0], [5.3, 104.0], [5.4, 104.0], [5.5, 104.0], [5.6, 104.0], [5.7, 104.0], [5.8, 104.0], [5.9, 104.0], [6.0, 104.0], [6.1, 104.0], [6.2, 104.0], [6.3, 104.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 104.0], [7.2, 104.0], [7.3, 104.0], [7.4, 104.0], [7.5, 104.0], [7.6, 104.0], [7.7, 104.0], [7.8, 104.0], [7.9, 104.0], [8.0, 104.0], [8.1, 104.0], [8.2, 104.0], [8.3, 104.0], [8.4, 104.0], [8.5, 104.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 104.0], [9.0, 104.0], [9.1, 104.0], [9.2, 104.0], [9.3, 104.0], [9.4, 104.0], [9.5, 104.0], [9.6, 104.0], [9.7, 104.0], [9.8, 105.0], [9.9, 105.0], [10.0, 105.0], [10.1, 105.0], [10.2, 105.0], [10.3, 105.0], [10.4, 105.0], [10.5, 105.0], [10.6, 105.0], [10.7, 105.0], [10.8, 105.0], [10.9, 105.0], [11.0, 105.0], [11.1, 105.0], [11.2, 105.0], [11.3, 105.0], [11.4, 105.0], [11.5, 105.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 105.0], [12.0, 105.0], [12.1, 105.0], [12.2, 105.0], [12.3, 105.0], [12.4, 105.0], [12.5, 105.0], [12.6, 105.0], [12.7, 105.0], [12.8, 105.0], [12.9, 105.0], [13.0, 105.0], [13.1, 105.0], [13.2, 105.0], [13.3, 105.0], [13.4, 105.0], [13.5, 105.0], [13.6, 105.0], [13.7, 105.0], [13.8, 105.0], [13.9, 105.0], [14.0, 105.0], [14.1, 105.0], [14.2, 105.0], [14.3, 105.0], [14.4, 105.0], [14.5, 105.0], [14.6, 105.0], [14.7, 105.0], [14.8, 105.0], [14.9, 105.0], [15.0, 105.0], [15.1, 105.0], [15.2, 105.0], [15.3, 105.0], [15.4, 105.0], [15.5, 105.0], [15.6, 105.0], [15.7, 105.0], [15.8, 105.0], [15.9, 105.0], [16.0, 105.0], [16.1, 105.0], [16.2, 105.0], [16.3, 105.0], [16.4, 105.0], [16.5, 105.0], [16.6, 105.0], [16.7, 105.0], [16.8, 105.0], [16.9, 105.0], [17.0, 106.0], [17.1, 106.0], [17.2, 106.0], [17.3, 106.0], [17.4, 106.0], [17.5, 106.0], [17.6, 106.0], [17.7, 106.0], [17.8, 106.0], [17.9, 106.0], [18.0, 106.0], [18.1, 106.0], [18.2, 106.0], [18.3, 106.0], [18.4, 106.0], [18.5, 106.0], [18.6, 106.0], [18.7, 106.0], [18.8, 106.0], [18.9, 106.0], [19.0, 106.0], [19.1, 106.0], [19.2, 106.0], [19.3, 106.0], [19.4, 106.0], [19.5, 106.0], [19.6, 106.0], [19.7, 106.0], [19.8, 106.0], [19.9, 106.0], [20.0, 106.0], [20.1, 106.0], [20.2, 106.0], [20.3, 106.0], [20.4, 106.0], [20.5, 106.0], [20.6, 106.0], [20.7, 106.0], [20.8, 106.0], [20.9, 106.0], [21.0, 106.0], [21.1, 106.0], [21.2, 106.0], [21.3, 106.0], [21.4, 106.0], [21.5, 106.0], [21.6, 106.0], [21.7, 106.0], [21.8, 106.0], [21.9, 106.0], [22.0, 106.0], [22.1, 106.0], [22.2, 106.0], [22.3, 106.0], [22.4, 106.0], [22.5, 106.0], [22.6, 106.0], [22.7, 106.0], [22.8, 106.0], [22.9, 106.0], [23.0, 106.0], [23.1, 106.0], [23.2, 106.0], [23.3, 106.0], [23.4, 106.0], [23.5, 106.0], [23.6, 106.0], [23.7, 106.0], [23.8, 106.0], [23.9, 106.0], [24.0, 106.0], [24.1, 106.0], [24.2, 106.0], [24.3, 106.0], [24.4, 106.0], [24.5, 106.0], [24.6, 106.0], [24.7, 106.0], [24.8, 106.0], [24.9, 106.0], [25.0, 106.0], [25.1, 106.0], [25.2, 107.0], [25.3, 107.0], [25.4, 107.0], [25.5, 107.0], [25.6, 107.0], [25.7, 107.0], [25.8, 107.0], [25.9, 107.0], [26.0, 107.0], [26.1, 107.0], [26.2, 107.0], [26.3, 107.0], [26.4, 107.0], [26.5, 107.0], [26.6, 107.0], [26.7, 107.0], [26.8, 107.0], [26.9, 107.0], [27.0, 107.0], [27.1, 107.0], [27.2, 107.0], [27.3, 107.0], [27.4, 107.0], [27.5, 107.0], [27.6, 107.0], [27.7, 107.0], [27.8, 107.0], [27.9, 107.0], [28.0, 107.0], [28.1, 107.0], [28.2, 107.0], [28.3, 107.0], [28.4, 107.0], [28.5, 107.0], [28.6, 107.0], [28.7, 107.0], [28.8, 107.0], [28.9, 107.0], [29.0, 107.0], [29.1, 108.0], [29.2, 108.0], [29.3, 108.0], [29.4, 108.0], [29.5, 108.0], [29.6, 108.0], [29.7, 108.0], [29.8, 108.0], [29.9, 108.0], [30.0, 108.0], [30.1, 108.0], [30.2, 109.0], [30.3, 109.0], [30.4, 109.0], [30.5, 109.0], [30.6, 109.0], [30.7, 109.0], [30.8, 109.0], [30.9, 109.0], [31.0, 110.0], [31.1, 110.0], [31.2, 110.0], [31.3, 111.0], [31.4, 111.0], [31.5, 111.0], [31.6, 111.0], [31.7, 111.0], [31.8, 112.0], [31.9, 112.0], [32.0, 112.0], [32.1, 112.0], [32.2, 112.0], [32.3, 112.0], [32.4, 112.0], [32.5, 112.0], [32.6, 113.0], [32.7, 113.0], [32.8, 113.0], [32.9, 113.0], [33.0, 113.0], [33.1, 113.0], [33.2, 114.0], [33.3, 114.0], [33.4, 114.0], [33.5, 114.0], [33.6, 115.0], [33.7, 115.0], [33.8, 116.0], [33.9, 116.0], [34.0, 116.0], [34.1, 117.0], [34.2, 117.0], [34.3, 117.0], [34.4, 117.0], [34.5, 118.0], [34.6, 118.0], [34.7, 118.0], [34.8, 119.0], [34.9, 120.0], [35.0, 120.0], [35.1, 120.0], [35.2, 120.0], [35.3, 121.0], [35.4, 121.0], [35.5, 121.0], [35.6, 122.0], [35.7, 122.0], [35.8, 123.0], [35.9, 123.0], [36.0, 123.0], [36.1, 123.0], [36.2, 123.0], [36.3, 123.0], [36.4, 123.0], [36.5, 124.0], [36.6, 124.0], [36.7, 124.0], [36.8, 124.0], [36.9, 124.0], [37.0, 125.0], [37.1, 125.0], [37.2, 125.0], [37.3, 125.0], [37.4, 125.0], [37.5, 126.0], [37.6, 126.0], [37.7, 126.0], [37.8, 126.0], [37.9, 126.0], [38.0, 127.0], [38.1, 127.0], [38.2, 127.0], [38.3, 127.0], [38.4, 127.0], [38.5, 128.0], [38.6, 128.0], [38.7, 128.0], [38.8, 129.0], [38.9, 129.0], [39.0, 129.0], [39.1, 129.0], [39.2, 129.0], [39.3, 130.0], [39.4, 130.0], [39.5, 130.0], [39.6, 131.0], [39.7, 131.0], [39.8, 131.0], [39.9, 131.0], [40.0, 132.0], [40.1, 132.0], [40.2, 132.0], [40.3, 132.0], [40.4, 132.0], [40.5, 133.0], [40.6, 133.0], [40.7, 133.0], [40.8, 133.0], [40.9, 133.0], [41.0, 133.0], [41.1, 133.0], [41.2, 133.0], [41.3, 133.0], [41.4, 133.0], [41.5, 133.0], [41.6, 133.0], [41.7, 133.0], [41.8, 134.0], [41.9, 134.0], [42.0, 134.0], [42.1, 134.0], [42.2, 134.0], [42.3, 134.0], [42.4, 135.0], [42.5, 135.0], [42.6, 135.0], [42.7, 135.0], [42.8, 135.0], [42.9, 135.0], [43.0, 135.0], [43.1, 135.0], [43.2, 135.0], [43.3, 136.0], [43.4, 136.0], [43.5, 136.0], [43.6, 136.0], [43.7, 136.0], [43.8, 137.0], [43.9, 137.0], [44.0, 137.0], [44.1, 137.0], [44.2, 137.0], [44.3, 137.0], [44.4, 137.0], [44.5, 138.0], [44.6, 138.0], [44.7, 138.0], [44.8, 138.0], [44.9, 138.0], [45.0, 138.0], [45.1, 138.0], [45.2, 139.0], [45.3, 139.0], [45.4, 139.0], [45.5, 139.0], [45.6, 139.0], [45.7, 139.0], [45.8, 140.0], [45.9, 140.0], [46.0, 140.0], [46.1, 140.0], [46.2, 140.0], [46.3, 140.0], [46.4, 141.0], [46.5, 141.0], [46.6, 141.0], [46.7, 142.0], [46.8, 142.0], [46.9, 142.0], [47.0, 142.0], [47.1, 142.0], [47.2, 142.0], [47.3, 142.0], [47.4, 142.0], [47.5, 142.0], [47.6, 143.0], [47.7, 143.0], [47.8, 143.0], [47.9, 143.0], [48.0, 143.0], [48.1, 143.0], [48.2, 143.0], [48.3, 143.0], [48.4, 144.0], [48.5, 144.0], [48.6, 144.0], [48.7, 145.0], [48.8, 146.0], [48.9, 146.0], [49.0, 146.0], [49.1, 146.0], [49.2, 147.0], [49.3, 147.0], [49.4, 147.0], [49.5, 147.0], [49.6, 148.0], [49.7, 148.0], [49.8, 148.0], [49.9, 148.0], [50.0, 148.0], [50.1, 148.0], [50.2, 148.0], [50.3, 148.0], [50.4, 149.0], [50.5, 150.0], [50.6, 150.0], [50.7, 150.0], [50.8, 150.0], [50.9, 150.0], [51.0, 151.0], [51.1, 151.0], [51.2, 153.0], [51.3, 153.0], [51.4, 153.0], [51.5, 153.0], [51.6, 153.0], [51.7, 154.0], [51.8, 154.0], [51.9, 154.0], [52.0, 155.0], [52.1, 156.0], [52.2, 156.0], [52.3, 156.0], [52.4, 157.0], [52.5, 157.0], [52.6, 158.0], [52.7, 160.0], [52.8, 161.0], [52.9, 161.0], [53.0, 162.0], [53.1, 162.0], [53.2, 163.0], [53.3, 163.0], [53.4, 163.0], [53.5, 163.0], [53.6, 164.0], [53.7, 164.0], [53.8, 165.0], [53.9, 165.0], [54.0, 166.0], [54.1, 166.0], [54.2, 166.0], [54.3, 166.0], [54.4, 167.0], [54.5, 167.0], [54.6, 168.0], [54.7, 169.0], [54.8, 170.0], [54.9, 170.0], [55.0, 170.0], [55.1, 171.0], [55.2, 171.0], [55.3, 172.0], [55.4, 173.0], [55.5, 173.0], [55.6, 175.0], [55.7, 175.0], [55.8, 175.0], [55.9, 176.0], [56.0, 178.0], [56.1, 178.0], [56.2, 179.0], [56.3, 179.0], [56.4, 179.0], [56.5, 179.0], [56.6, 180.0], [56.7, 180.0], [56.8, 181.0], [56.9, 182.0], [57.0, 182.0], [57.1, 182.0], [57.2, 183.0], [57.3, 184.0], [57.4, 184.0], [57.5, 184.0], [57.6, 186.0], [57.7, 186.0], [57.8, 187.0], [57.9, 187.0], [58.0, 188.0], [58.1, 188.0], [58.2, 189.0], [58.3, 189.0], [58.4, 190.0], [58.5, 190.0], [58.6, 191.0], [58.7, 191.0], [58.8, 192.0], [58.9, 193.0], [59.0, 194.0], [59.1, 194.0], [59.2, 194.0], [59.3, 195.0], [59.4, 195.0], [59.5, 196.0], [59.6, 196.0], [59.7, 197.0], [59.8, 197.0], [59.9, 197.0], [60.0, 201.0], [60.1, 201.0], [60.2, 203.0], [60.3, 203.0], [60.4, 204.0], [60.5, 204.0], [60.6, 205.0], [60.7, 206.0], [60.8, 207.0], [60.9, 207.0], [61.0, 207.0], [61.1, 208.0], [61.2, 209.0], [61.3, 209.0], [61.4, 209.0], [61.5, 209.0], [61.6, 210.0], [61.7, 214.0], [61.8, 215.0], [61.9, 216.0], [62.0, 222.0], [62.1, 226.0], [62.2, 231.0], [62.3, 238.0], [62.4, 293.0], [62.5, 327.0], [62.6, 369.0], [62.7, 454.0], [62.8, 495.0], [62.9, 623.0], [63.0, 632.0], [63.1, 761.0], [63.2, 887.0], [63.3, 897.0], [63.4, 968.0], [63.5, 971.0], [63.6, 1044.0], [63.7, 1081.0], [63.8, 1087.0], [63.9, 1099.0], [64.0, 1151.0], [64.1, 1188.0], [64.2, 1213.0], [64.3, 1237.0], [64.4, 2514.0], [64.5, 2870.0], [64.6, 3501.0], [64.7, 4264.0], [64.8, 4340.0], [64.9, 4413.0], [65.0, 4476.0], [65.1, 4518.0], [65.2, 4574.0], [65.3, 4674.0], [65.4, 4842.0], [65.5, 5012.0], [65.6, 5039.0], [65.7, 5058.0], [65.8, 5070.0], [65.9, 5080.0], [66.0, 5112.0], [66.1, 5148.0], [66.2, 5149.0], [66.3, 5152.0], [66.4, 5184.0], [66.5, 5225.0], [66.6, 5230.0], [66.7, 5263.0], [66.8, 5285.0], [66.9, 5310.0], [67.0, 5322.0], [67.1, 5355.0], [67.2, 5406.0], [67.3, 5406.0], [67.4, 5411.0], [67.5, 5427.0], [67.6, 5462.0], [67.7, 5494.0], [67.8, 5495.0], [67.9, 5604.0], [68.0, 5716.0], [68.1, 5815.0], [68.2, 5986.0], [68.3, 6089.0], [68.4, 6218.0], [68.5, 6249.0], [68.6, 6297.0], [68.7, 6314.0], [68.8, 6416.0], [68.9, 6452.0], [69.0, 6640.0], [69.1, 6659.0], [69.2, 6708.0], [69.3, 6719.0], [69.4, 6721.0], [69.5, 6742.0], [69.6, 6843.0], [69.7, 6875.0], [69.8, 6969.0], [69.9, 6969.0], [70.0, 7146.0], [70.1, 7177.0], [70.2, 7297.0], [70.3, 7358.0], [70.4, 7699.0], [70.5, 7935.0], [70.6, 8036.0], [70.7, 8105.0], [70.8, 8173.0], [70.9, 8207.0], [71.0, 8235.0], [71.1, 8290.0], [71.2, 8438.0], [71.3, 8659.0], [71.4, 8730.0], [71.5, 8757.0], [71.6, 8812.0], [71.7, 8922.0], [71.8, 8985.0], [71.9, 8999.0], [72.0, 9031.0], [72.1, 9132.0], [72.2, 9189.0], [72.3, 9345.0], [72.4, 9511.0], [72.5, 9530.0], [72.6, 9596.0], [72.7, 9604.0], [72.8, 9723.0], [72.9, 9744.0], [73.0, 9828.0], [73.1, 9849.0], [73.2, 9880.0], [73.3, 10025.0], [73.4, 10127.0], [73.5, 10212.0], [73.6, 10342.0], [73.7, 10636.0], [73.8, 10637.0], [73.9, 10679.0], [74.0, 10937.0], [74.1, 10949.0], [74.2, 11113.0], [74.3, 11143.0], [74.4, 11204.0], [74.5, 11251.0], [74.6, 11311.0], [74.7, 11319.0], [74.8, 11335.0], [74.9, 11400.0], [75.0, 11850.0], [75.1, 11937.0], [75.2, 12042.0], [75.3, 12154.0], [75.4, 12289.0], [75.5, 12302.0], [75.6, 12327.0], [75.7, 12365.0], [75.8, 12758.0], [75.9, 12838.0], [76.0, 12978.0], [76.1, 13036.0], [76.2, 13108.0], [76.3, 13271.0], [76.4, 13360.0], [76.5, 13372.0], [76.6, 13381.0], [76.7, 13386.0], [76.8, 13634.0], [76.9, 13640.0], [77.0, 13721.0], [77.1, 13838.0], [77.2, 14330.0], [77.3, 14515.0], [77.4, 14551.0], [77.5, 14654.0], [77.6, 14794.0], [77.7, 14982.0], [77.8, 15020.0], [77.9, 15024.0], [78.0, 15248.0], [78.1, 15375.0], [78.2, 15438.0], [78.3, 15502.0], [78.4, 15566.0], [78.5, 15584.0], [78.6, 15698.0], [78.7, 15821.0], [78.8, 16057.0], [78.9, 16133.0], [79.0, 16185.0], [79.1, 16277.0], [79.2, 16317.0], [79.3, 16319.0], [79.4, 16397.0], [79.5, 16495.0], [79.6, 17199.0], [79.7, 17440.0], [79.8, 17559.0], [79.9, 17773.0], [80.0, 18054.0], [80.1, 18191.0], [80.2, 18265.0], [80.3, 18302.0], [80.4, 18470.0], [80.5, 18487.0], [80.6, 18692.0], [80.7, 18979.0], [80.8, 19762.0], [80.9, 19849.0], [81.0, 20144.0], [81.1, 20243.0], [81.2, 20300.0], [81.3, 20367.0], [81.4, 20557.0], [81.5, 20652.0], [81.6, 20856.0], [81.7, 20973.0], [81.8, 21000.0], [81.9, 21256.0], [82.0, 21469.0], [82.1, 21513.0], [82.2, 21582.0], [82.3, 21648.0], [82.4, 21956.0], [82.5, 22056.0], [82.6, 22239.0], [82.7, 22525.0], [82.8, 22606.0], [82.9, 22640.0], [83.0, 22701.0], [83.1, 22733.0], [83.2, 22927.0], [83.3, 22945.0], [83.4, 22945.0], [83.5, 23120.0], [83.6, 23191.0], [83.7, 23496.0], [83.8, 23513.0], [83.9, 23543.0], [84.0, 23654.0], [84.1, 23734.0], [84.2, 23754.0], [84.3, 23897.0], [84.4, 24090.0], [84.5, 24097.0], [84.6, 24399.0], [84.7, 24460.0], [84.8, 24592.0], [84.9, 24887.0], [85.0, 24920.0], [85.1, 24996.0], [85.2, 25538.0], [85.3, 25700.0], [85.4, 26247.0], [85.5, 26281.0], [85.6, 26847.0], [85.7, 27232.0], [85.8, 27331.0], [85.9, 27412.0], [86.0, 27625.0], [86.1, 27822.0], [86.2, 27942.0], [86.3, 28195.0], [86.4, 28596.0], [86.5, 28618.0], [86.6, 28780.0], [86.7, 28923.0], [86.8, 29121.0], [86.9, 29317.0], [87.0, 29534.0], [87.1, 29583.0], [87.2, 30098.0], [87.3, 30328.0], [87.4, 30345.0], [87.5, 30460.0], [87.6, 30726.0], [87.7, 30801.0], [87.8, 30918.0], [87.9, 31109.0], [88.0, 31252.0], [88.1, 31361.0], [88.2, 31419.0], [88.3, 31560.0], [88.4, 31957.0], [88.5, 32033.0], [88.6, 32157.0], [88.7, 32638.0], [88.8, 33038.0], [88.9, 33107.0], [89.0, 33244.0], [89.1, 33261.0], [89.2, 33481.0], [89.3, 33624.0], [89.4, 33737.0], [89.5, 34023.0], [89.6, 35093.0], [89.7, 35187.0], [89.8, 35218.0], [89.9, 35394.0], [90.0, 36155.0], [90.1, 36267.0], [90.2, 36489.0], [90.3, 37149.0], [90.4, 37419.0], [90.5, 37525.0], [90.6, 37627.0], [90.7, 38431.0], [90.8, 40137.0], [90.9, 40445.0], [91.0, 40516.0], [91.1, 41059.0], [91.2, 42698.0], [91.3, 43114.0], [91.4, 43700.0], [91.5, 47107.0], [91.6, 47593.0], [91.7, 47661.0], [91.8, 48143.0], [91.9, 49048.0], [92.0, 50103.0], [92.1, 50431.0], [92.2, 50633.0], [92.3, 54818.0], [92.4, 55582.0], [92.5, 56293.0], [92.6, 56424.0], [92.7, 57353.0], [92.8, 58634.0], [92.9, 59278.0], [93.0, 59388.0], [93.1, 59680.0], [93.2, 60104.0], [93.3, 60105.0], [93.4, 60105.0], [93.5, 60106.0], [93.6, 60107.0], [93.7, 60107.0], [93.8, 60107.0], [93.9, 60108.0], [94.0, 60110.0], [94.1, 60111.0], [94.2, 60111.0], [94.3, 60113.0], [94.4, 60116.0], [94.5, 60117.0], [94.6, 60118.0], [94.7, 60119.0], [94.8, 60124.0], [94.9, 60126.0], [95.0, 60128.0], [95.1, 60138.0], [95.2, 60139.0], [95.3, 60144.0], [95.4, 60144.0], [95.5, 60145.0], [95.6, 60149.0], [95.7, 60150.0], [95.8, 60151.0], [95.9, 60155.0], [96.0, 60160.0], [96.1, 60164.0], [96.2, 60164.0], [96.3, 60167.0], [96.4, 60170.0], [96.5, 60175.0], [96.6, 60177.0], [96.7, 60178.0], [96.8, 60181.0], [96.9, 60181.0], [97.0, 60182.0], [97.1, 60182.0], [97.2, 60187.0], [97.3, 60187.0], [97.4, 60190.0], [97.5, 60192.0], [97.6, 60200.0], [97.7, 60200.0], [97.8, 60206.0], [97.9, 60207.0], [98.0, 60209.0], [98.1, 60209.0], [98.2, 60211.0], [98.3, 60215.0], [98.4, 60230.0], [98.5, 60235.0], [98.6, 60253.0], [98.7, 60259.0], [98.8, 60261.0], [98.9, 60264.0], [99.0, 60264.0], [99.1, 60272.0], [99.2, 60295.0], [99.3, 60317.0], [99.4, 60320.0], [99.5, 60346.0], [99.6, 60355.0], [99.7, 60380.0], [99.8, 60410.0], [99.9, 60416.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 204.0], [0.1, 204.0], [0.2, 204.0], [0.3, 204.0], [0.4, 204.0], [0.5, 204.0], [0.6, 204.0], [0.7, 204.0], [0.8, 205.0], [0.9, 205.0], [1.0, 205.0], [1.1, 205.0], [1.2, 205.0], [1.3, 205.0], [1.4, 205.0], [1.5, 205.0], [1.6, 205.0], [1.7, 205.0], [1.8, 205.0], [1.9, 205.0], [2.0, 205.0], [2.1, 205.0], [2.2, 205.0], [2.3, 205.0], [2.4, 205.0], [2.5, 205.0], [2.6, 205.0], [2.7, 205.0], [2.8, 205.0], [2.9, 205.0], [3.0, 205.0], [3.1, 205.0], [3.2, 205.0], [3.3, 205.0], [3.4, 205.0], [3.5, 205.0], [3.6, 205.0], [3.7, 205.0], [3.8, 205.0], [3.9, 205.0], [4.0, 205.0], [4.1, 205.0], [4.2, 205.0], [4.3, 205.0], [4.4, 205.0], [4.5, 205.0], [4.6, 205.0], [4.7, 205.0], [4.8, 205.0], [4.9, 205.0], [5.0, 206.0], [5.1, 206.0], [5.2, 206.0], [5.3, 206.0], [5.4, 206.0], [5.5, 206.0], [5.6, 206.0], [5.7, 206.0], [5.8, 206.0], [5.9, 206.0], [6.0, 206.0], [6.1, 206.0], [6.2, 206.0], [6.3, 206.0], [6.4, 206.0], [6.5, 206.0], [6.6, 206.0], [6.7, 206.0], [6.8, 206.0], [6.9, 206.0], [7.0, 206.0], [7.1, 206.0], [7.2, 206.0], [7.3, 206.0], [7.4, 206.0], [7.5, 206.0], [7.6, 206.0], [7.7, 206.0], [7.8, 206.0], [7.9, 206.0], [8.0, 206.0], [8.1, 206.0], [8.2, 206.0], [8.3, 206.0], [8.4, 206.0], [8.5, 206.0], [8.6, 206.0], [8.7, 206.0], [8.8, 206.0], [8.9, 206.0], [9.0, 206.0], [9.1, 206.0], [9.2, 206.0], [9.3, 206.0], [9.4, 206.0], [9.5, 206.0], [9.6, 206.0], [9.7, 206.0], [9.8, 206.0], [9.9, 206.0], [10.0, 206.0], [10.1, 206.0], [10.2, 206.0], [10.3, 206.0], [10.4, 206.0], [10.5, 206.0], [10.6, 206.0], [10.7, 206.0], [10.8, 206.0], [10.9, 206.0], [11.0, 206.0], [11.1, 206.0], [11.2, 206.0], [11.3, 206.0], [11.4, 206.0], [11.5, 206.0], [11.6, 206.0], [11.7, 206.0], [11.8, 206.0], [11.9, 206.0], [12.0, 206.0], [12.1, 206.0], [12.2, 207.0], [12.3, 207.0], [12.4, 207.0], [12.5, 207.0], [12.6, 207.0], [12.7, 207.0], [12.8, 207.0], [12.9, 207.0], [13.0, 207.0], [13.1, 207.0], [13.2, 207.0], [13.3, 207.0], [13.4, 207.0], [13.5, 207.0], [13.6, 207.0], [13.7, 207.0], [13.8, 207.0], [13.9, 207.0], [14.0, 207.0], [14.1, 207.0], [14.2, 207.0], [14.3, 207.0], [14.4, 207.0], [14.5, 207.0], [14.6, 207.0], [14.7, 207.0], [14.8, 207.0], [14.9, 207.0], [15.0, 207.0], [15.1, 207.0], [15.2, 207.0], [15.3, 207.0], [15.4, 207.0], [15.5, 207.0], [15.6, 207.0], [15.7, 207.0], [15.8, 207.0], [15.9, 207.0], [16.0, 207.0], [16.1, 207.0], [16.2, 207.0], [16.3, 207.0], [16.4, 207.0], [16.5, 207.0], [16.6, 207.0], [16.7, 207.0], [16.8, 207.0], [16.9, 207.0], [17.0, 207.0], [17.1, 207.0], [17.2, 207.0], [17.3, 207.0], [17.4, 207.0], [17.5, 207.0], [17.6, 207.0], [17.7, 207.0], [17.8, 207.0], [17.9, 207.0], [18.0, 207.0], [18.1, 207.0], [18.2, 208.0], [18.3, 208.0], [18.4, 208.0], [18.5, 208.0], [18.6, 208.0], [18.7, 208.0], [18.8, 208.0], [18.9, 208.0], [19.0, 208.0], [19.1, 208.0], [19.2, 208.0], [19.3, 208.0], [19.4, 208.0], [19.5, 208.0], [19.6, 208.0], [19.7, 208.0], [19.8, 208.0], [19.9, 208.0], [20.0, 208.0], [20.1, 208.0], [20.2, 208.0], [20.3, 208.0], [20.4, 208.0], [20.5, 208.0], [20.6, 208.0], [20.7, 208.0], [20.8, 208.0], [20.9, 208.0], [21.0, 208.0], [21.1, 208.0], [21.2, 208.0], [21.3, 208.0], [21.4, 208.0], [21.5, 208.0], [21.6, 208.0], [21.7, 208.0], [21.8, 208.0], [21.9, 208.0], [22.0, 208.0], [22.1, 208.0], [22.2, 208.0], [22.3, 208.0], [22.4, 208.0], [22.5, 208.0], [22.6, 208.0], [22.7, 208.0], [22.8, 208.0], [22.9, 208.0], [23.0, 208.0], [23.1, 208.0], [23.2, 208.0], [23.3, 208.0], [23.4, 208.0], [23.5, 209.0], [23.6, 209.0], [23.7, 209.0], [23.8, 209.0], [23.9, 209.0], [24.0, 209.0], [24.1, 209.0], [24.2, 209.0], [24.3, 209.0], [24.4, 209.0], [24.5, 209.0], [24.6, 209.0], [24.7, 209.0], [24.8, 209.0], [24.9, 209.0], [25.0, 209.0], [25.1, 209.0], [25.2, 209.0], [25.3, 209.0], [25.4, 209.0], [25.5, 209.0], [25.6, 209.0], [25.7, 209.0], [25.8, 209.0], [25.9, 209.0], [26.0, 209.0], [26.1, 209.0], [26.2, 209.0], [26.3, 209.0], [26.4, 209.0], [26.5, 209.0], [26.6, 209.0], [26.7, 209.0], [26.8, 209.0], [26.9, 209.0], [27.0, 209.0], [27.1, 209.0], [27.2, 209.0], [27.3, 209.0], [27.4, 210.0], [27.5, 210.0], [27.6, 210.0], [27.7, 210.0], [27.8, 210.0], [27.9, 210.0], [28.0, 210.0], [28.1, 210.0], [28.2, 210.0], [28.3, 210.0], [28.4, 210.0], [28.5, 210.0], [28.6, 210.0], [28.7, 210.0], [28.8, 210.0], [28.9, 210.0], [29.0, 210.0], [29.1, 210.0], [29.2, 210.0], [29.3, 210.0], [29.4, 210.0], [29.5, 210.0], [29.6, 210.0], [29.7, 210.0], [29.8, 210.0], [29.9, 211.0], [30.0, 211.0], [30.1, 211.0], [30.2, 211.0], [30.3, 211.0], [30.4, 211.0], [30.5, 211.0], [30.6, 211.0], [30.7, 211.0], [30.8, 211.0], [30.9, 211.0], [31.0, 211.0], [31.1, 211.0], [31.2, 212.0], [31.3, 212.0], [31.4, 212.0], [31.5, 212.0], [31.6, 212.0], [31.7, 213.0], [31.8, 213.0], [31.9, 213.0], [32.0, 213.0], [32.1, 213.0], [32.2, 213.0], [32.3, 213.0], [32.4, 213.0], [32.5, 214.0], [32.6, 214.0], [32.7, 214.0], [32.8, 214.0], [32.9, 214.0], [33.0, 214.0], [33.1, 214.0], [33.2, 214.0], [33.3, 215.0], [33.4, 215.0], [33.5, 215.0], [33.6, 216.0], [33.7, 216.0], [33.8, 216.0], [33.9, 216.0], [34.0, 216.0], [34.1, 216.0], [34.2, 217.0], [34.3, 217.0], [34.4, 218.0], [34.5, 218.0], [34.6, 218.0], [34.7, 218.0], [34.8, 219.0], [34.9, 219.0], [35.0, 220.0], [35.1, 220.0], [35.2, 220.0], [35.3, 221.0], [35.4, 222.0], [35.5, 223.0], [35.6, 223.0], [35.7, 223.0], [35.8, 224.0], [35.9, 224.0], [36.0, 225.0], [36.1, 225.0], [36.2, 225.0], [36.3, 226.0], [36.4, 226.0], [36.5, 226.0], [36.6, 226.0], [36.7, 227.0], [36.8, 227.0], [36.9, 228.0], [37.0, 228.0], [37.1, 228.0], [37.2, 228.0], [37.3, 229.0], [37.4, 229.0], [37.5, 229.0], [37.6, 229.0], [37.7, 229.0], [37.8, 229.0], [37.9, 230.0], [38.0, 230.0], [38.1, 230.0], [38.2, 230.0], [38.3, 230.0], [38.4, 231.0], [38.5, 231.0], [38.6, 231.0], [38.7, 231.0], [38.8, 231.0], [38.9, 231.0], [39.0, 231.0], [39.1, 232.0], [39.2, 232.0], [39.3, 233.0], [39.4, 233.0], [39.5, 233.0], [39.6, 233.0], [39.7, 233.0], [39.8, 234.0], [39.9, 234.0], [40.0, 234.0], [40.1, 234.0], [40.2, 234.0], [40.3, 234.0], [40.4, 234.0], [40.5, 235.0], [40.6, 235.0], [40.7, 235.0], [40.8, 235.0], [40.9, 235.0], [41.0, 236.0], [41.1, 236.0], [41.2, 236.0], [41.3, 236.0], [41.4, 236.0], [41.5, 236.0], [41.6, 236.0], [41.7, 236.0], [41.8, 236.0], [41.9, 236.0], [42.0, 236.0], [42.1, 237.0], [42.2, 237.0], [42.3, 237.0], [42.4, 237.0], [42.5, 237.0], [42.6, 237.0], [42.7, 237.0], [42.8, 237.0], [42.9, 237.0], [43.0, 238.0], [43.1, 238.0], [43.2, 238.0], [43.3, 238.0], [43.4, 238.0], [43.5, 238.0], [43.6, 239.0], [43.7, 239.0], [43.8, 239.0], [43.9, 239.0], [44.0, 239.0], [44.1, 240.0], [44.2, 240.0], [44.3, 240.0], [44.4, 241.0], [44.5, 241.0], [44.6, 241.0], [44.7, 241.0], [44.8, 242.0], [44.9, 242.0], [45.0, 242.0], [45.1, 242.0], [45.2, 243.0], [45.3, 243.0], [45.4, 243.0], [45.5, 244.0], [45.6, 244.0], [45.7, 244.0], [45.8, 244.0], [45.9, 244.0], [46.0, 245.0], [46.1, 245.0], [46.2, 245.0], [46.3, 245.0], [46.4, 245.0], [46.5, 246.0], [46.6, 246.0], [46.7, 247.0], [46.8, 247.0], [46.9, 247.0], [47.0, 247.0], [47.1, 248.0], [47.2, 248.0], [47.3, 248.0], [47.4, 248.0], [47.5, 248.0], [47.6, 249.0], [47.7, 249.0], [47.8, 249.0], [47.9, 249.0], [48.0, 250.0], [48.1, 250.0], [48.2, 251.0], [48.3, 251.0], [48.4, 251.0], [48.5, 251.0], [48.6, 251.0], [48.7, 252.0], [48.8, 252.0], [48.9, 253.0], [49.0, 253.0], [49.1, 253.0], [49.2, 255.0], [49.3, 257.0], [49.4, 258.0], [49.5, 258.0], [49.6, 260.0], [49.7, 263.0], [49.8, 264.0], [49.9, 264.0], [50.0, 265.0], [50.1, 267.0], [50.2, 268.0], [50.3, 268.0], [50.4, 270.0], [50.5, 271.0], [50.6, 272.0], [50.7, 273.0], [50.8, 276.0], [50.9, 277.0], [51.0, 278.0], [51.1, 279.0], [51.2, 283.0], [51.3, 283.0], [51.4, 285.0], [51.5, 286.0], [51.6, 286.0], [51.7, 287.0], [51.8, 287.0], [51.9, 290.0], [52.0, 292.0], [52.1, 293.0], [52.2, 294.0], [52.3, 295.0], [52.4, 295.0], [52.5, 295.0], [52.6, 295.0], [52.7, 296.0], [52.8, 296.0], [52.9, 296.0], [53.0, 297.0], [53.1, 298.0], [53.2, 298.0], [53.3, 298.0], [53.4, 298.0], [53.5, 300.0], [53.6, 300.0], [53.7, 300.0], [53.8, 301.0], [53.9, 301.0], [54.0, 301.0], [54.1, 301.0], [54.2, 302.0], [54.3, 302.0], [54.4, 303.0], [54.5, 303.0], [54.6, 303.0], [54.7, 303.0], [54.8, 303.0], [54.9, 304.0], [55.0, 304.0], [55.1, 304.0], [55.2, 304.0], [55.3, 304.0], [55.4, 304.0], [55.5, 304.0], [55.6, 304.0], [55.7, 304.0], [55.8, 304.0], [55.9, 305.0], [56.0, 305.0], [56.1, 305.0], [56.2, 305.0], [56.3, 305.0], [56.4, 305.0], [56.5, 305.0], [56.6, 305.0], [56.7, 305.0], [56.8, 305.0], [56.9, 305.0], [57.0, 305.0], [57.1, 305.0], [57.2, 306.0], [57.3, 306.0], [57.4, 306.0], [57.5, 306.0], [57.6, 306.0], [57.7, 306.0], [57.8, 306.0], [57.9, 306.0], [58.0, 306.0], [58.1, 306.0], [58.2, 306.0], [58.3, 306.0], [58.4, 306.0], [58.5, 306.0], [58.6, 306.0], [58.7, 306.0], [58.8, 306.0], [58.9, 306.0], [59.0, 306.0], [59.1, 306.0], [59.2, 307.0], [59.3, 307.0], [59.4, 307.0], [59.5, 307.0], [59.6, 307.0], [59.7, 307.0], [59.8, 307.0], [59.9, 307.0], [60.0, 307.0], [60.1, 307.0], [60.2, 307.0], [60.3, 307.0], [60.4, 307.0], [60.5, 307.0], [60.6, 307.0], [60.7, 307.0], [60.8, 307.0], [60.9, 308.0], [61.0, 308.0], [61.1, 308.0], [61.2, 308.0], [61.3, 308.0], [61.4, 308.0], [61.5, 308.0], [61.6, 308.0], [61.7, 308.0], [61.8, 309.0], [61.9, 309.0], [62.0, 309.0], [62.1, 309.0], [62.2, 309.0], [62.3, 309.0], [62.4, 310.0], [62.5, 310.0], [62.6, 310.0], [62.7, 310.0], [62.8, 310.0], [62.9, 310.0], [63.0, 310.0], [63.1, 310.0], [63.2, 311.0], [63.3, 311.0], [63.4, 311.0], [63.5, 311.0], [63.6, 311.0], [63.7, 313.0], [63.8, 313.0], [63.9, 313.0], [64.0, 314.0], [64.1, 314.0], [64.2, 314.0], [64.3, 315.0], [64.4, 315.0], [64.5, 316.0], [64.6, 316.0], [64.7, 316.0], [64.8, 316.0], [64.9, 317.0], [65.0, 317.0], [65.1, 317.0], [65.2, 318.0], [65.3, 319.0], [65.4, 319.0], [65.5, 320.0], [65.6, 320.0], [65.7, 321.0], [65.8, 321.0], [65.9, 321.0], [66.0, 322.0], [66.1, 323.0], [66.2, 323.0], [66.3, 324.0], [66.4, 324.0], [66.5, 324.0], [66.6, 325.0], [66.7, 326.0], [66.8, 326.0], [66.9, 326.0], [67.0, 326.0], [67.1, 327.0], [67.2, 328.0], [67.3, 328.0], [67.4, 329.0], [67.5, 330.0], [67.6, 330.0], [67.7, 331.0], [67.8, 331.0], [67.9, 334.0], [68.0, 335.0], [68.1, 335.0], [68.2, 337.0], [68.3, 338.0], [68.4, 339.0], [68.5, 340.0], [68.6, 341.0], [68.7, 341.0], [68.8, 342.0], [68.9, 343.0], [69.0, 343.0], [69.1, 343.0], [69.2, 344.0], [69.3, 344.0], [69.4, 344.0], [69.5, 345.0], [69.6, 346.0], [69.7, 347.0], [69.8, 349.0], [69.9, 349.0], [70.0, 350.0], [70.1, 351.0], [70.2, 351.0], [70.3, 351.0], [70.4, 352.0], [70.5, 352.0], [70.6, 355.0], [70.7, 358.0], [70.8, 358.0], [70.9, 359.0], [71.0, 360.0], [71.1, 360.0], [71.2, 361.0], [71.3, 363.0], [71.4, 363.0], [71.5, 363.0], [71.6, 367.0], [71.7, 367.0], [71.8, 368.0], [71.9, 368.0], [72.0, 369.0], [72.1, 369.0], [72.2, 370.0], [72.3, 370.0], [72.4, 371.0], [72.5, 372.0], [72.6, 372.0], [72.7, 372.0], [72.8, 374.0], [72.9, 375.0], [73.0, 376.0], [73.1, 377.0], [73.2, 379.0], [73.3, 379.0], [73.4, 379.0], [73.5, 384.0], [73.6, 387.0], [73.7, 388.0], [73.8, 388.0], [73.9, 389.0], [74.0, 389.0], [74.1, 389.0], [74.2, 389.0], [74.3, 390.0], [74.4, 390.0], [74.5, 392.0], [74.6, 392.0], [74.7, 394.0], [74.8, 394.0], [74.9, 396.0], [75.0, 397.0], [75.1, 397.0], [75.2, 398.0], [75.3, 399.0], [75.4, 399.0], [75.5, 400.0], [75.6, 400.0], [75.7, 401.0], [75.8, 401.0], [75.9, 401.0], [76.0, 402.0], [76.1, 402.0], [76.2, 403.0], [76.3, 403.0], [76.4, 403.0], [76.5, 404.0], [76.6, 404.0], [76.7, 404.0], [76.8, 404.0], [76.9, 404.0], [77.0, 405.0], [77.1, 405.0], [77.2, 405.0], [77.3, 405.0], [77.4, 405.0], [77.5, 405.0], [77.6, 406.0], [77.7, 406.0], [77.8, 406.0], [77.9, 406.0], [78.0, 406.0], [78.1, 406.0], [78.2, 406.0], [78.3, 406.0], [78.4, 406.0], [78.5, 406.0], [78.6, 406.0], [78.7, 406.0], [78.8, 406.0], [78.9, 406.0], [79.0, 407.0], [79.1, 407.0], [79.2, 407.0], [79.3, 407.0], [79.4, 407.0], [79.5, 407.0], [79.6, 407.0], [79.7, 407.0], [79.8, 407.0], [79.9, 407.0], [80.0, 407.0], [80.1, 407.0], [80.2, 407.0], [80.3, 407.0], [80.4, 407.0], [80.5, 407.0], [80.6, 407.0], [80.7, 407.0], [80.8, 407.0], [80.9, 407.0], [81.0, 407.0], [81.1, 407.0], [81.2, 407.0], [81.3, 407.0], [81.4, 407.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 408.0], [83.5, 408.0], [83.6, 408.0], [83.7, 408.0], [83.8, 408.0], [83.9, 408.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 408.0], [84.4, 408.0], [84.5, 408.0], [84.6, 408.0], [84.7, 408.0], [84.8, 408.0], [84.9, 408.0], [85.0, 408.0], [85.1, 408.0], [85.2, 408.0], [85.3, 408.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 409.0], [86.0, 409.0], [86.1, 409.0], [86.2, 409.0], [86.3, 409.0], [86.4, 409.0], [86.5, 409.0], [86.6, 409.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 409.0], [87.2, 409.0], [87.3, 409.0], [87.4, 409.0], [87.5, 409.0], [87.6, 409.0], [87.7, 409.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 409.0], [89.1, 409.0], [89.2, 409.0], [89.3, 409.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 410.0], [90.3, 410.0], [90.4, 410.0], [90.5, 410.0], [90.6, 410.0], [90.7, 410.0], [90.8, 410.0], [90.9, 410.0], [91.0, 410.0], [91.1, 410.0], [91.2, 410.0], [91.3, 410.0], [91.4, 410.0], [91.5, 410.0], [91.6, 410.0], [91.7, 410.0], [91.8, 410.0], [91.9, 410.0], [92.0, 410.0], [92.1, 410.0], [92.2, 411.0], [92.3, 411.0], [92.4, 411.0], [92.5, 411.0], [92.6, 411.0], [92.7, 411.0], [92.8, 411.0], [92.9, 412.0], [93.0, 412.0], [93.1, 412.0], [93.2, 412.0], [93.3, 412.0], [93.4, 412.0], [93.5, 413.0], [93.6, 413.0], [93.7, 414.0], [93.8, 414.0], [93.9, 415.0], [94.0, 416.0], [94.1, 417.0], [94.2, 417.0], [94.3, 418.0], [94.4, 448.0], [94.5, 453.0], [94.6, 508.0], [94.7, 510.0], [94.8, 511.0], [94.9, 511.0], [95.0, 512.0], [95.1, 528.0], [95.2, 600.0], [95.3, 605.0], [95.4, 611.0], [95.5, 612.0], [95.6, 657.0], [95.7, 671.0], [95.8, 694.0], [95.9, 717.0], [96.0, 718.0], [96.1, 818.0], [96.2, 847.0], [96.3, 877.0], [96.4, 884.0], [96.5, 913.0], [96.6, 927.0], [96.7, 963.0], [96.8, 964.0], [96.9, 965.0], [97.0, 980.0], [97.1, 1023.0], [97.2, 1123.0], [97.3, 1217.0], [97.4, 2191.0], [97.5, 2231.0], [97.6, 2354.0], [97.7, 3466.0], [97.8, 5015.0], [97.9, 5208.0], [98.0, 6160.0], [98.1, 7986.0], [98.2, 20156.0], [98.3, 34187.0], [98.4, 34390.0], [98.5, 41971.0], [98.6, 44323.0], [98.7, 60225.0], [98.8, 60259.0], [98.9, 60307.0], [99.0, 60307.0], [99.1, 60308.0], [99.2, 60309.0], [99.3, 60312.0], [99.4, 60312.0], [99.5, 60315.0], [99.6, 60318.0], [99.7, 60398.0], [99.8, 60414.0], [99.9, 60415.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 750.0, "series": [{"data": [[68300.0, 1.0], [69100.0, 1.0], [93100.0, 1.0], [33300.0, 1.0], [32900.0, 1.0], [34100.0, 1.0], [34500.0, 1.0], [37700.0, 1.0], [38900.0, 1.0], [40500.0, 1.0], [42100.0, 1.0], [42900.0, 1.0], [47700.0, 1.0], [49300.0, 1.0], [50900.0, 1.0], [200.0, 8.0], [60500.0, 23.0], [60100.0, 1.0], [67400.0, 1.0], [66600.0, 1.0], [300.0, 485.0], [400.0, 114.0], [500.0, 140.0], [600.0, 18.0], [700.0, 4.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 10.0], [1100.0, 1.0], [1200.0, 3.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 3.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 2.0], [2800.0, 1.0], [3000.0, 1.0], [3500.0, 1.0], [3900.0, 1.0], [4500.0, 1.0], [4600.0, 3.0], [4800.0, 2.0], [4700.0, 2.0], [4900.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5200.0, 2.0], [5300.0, 3.0], [5600.0, 5.0], [5400.0, 7.0], [5500.0, 2.0], [5800.0, 4.0], [5700.0, 3.0], [6000.0, 1.0], [5900.0, 2.0], [6100.0, 3.0], [6300.0, 1.0], [6200.0, 2.0], [100900.0, 1.0], [6600.0, 4.0], [6400.0, 1.0], [6500.0, 2.0], [6800.0, 3.0], [6900.0, 1.0], [7000.0, 5.0], [7100.0, 3.0], [7400.0, 2.0], [7300.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [8100.0, 1.0], [8000.0, 1.0], [8600.0, 3.0], [8400.0, 2.0], [8300.0, 2.0], [8200.0, 1.0], [9000.0, 2.0], [8900.0, 1.0], [9100.0, 1.0], [9300.0, 6.0], [9600.0, 1.0], [9400.0, 1.0], [10000.0, 4.0], [9900.0, 4.0], [9800.0, 1.0], [10200.0, 1.0], [10100.0, 1.0], [10600.0, 3.0], [10400.0, 2.0], [11000.0, 3.0], [11200.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [11500.0, 4.0], [11700.0, 1.0], [11400.0, 1.0], [11600.0, 3.0], [12100.0, 1.0], [12200.0, 1.0], [11800.0, 1.0], [11900.0, 1.0], [12500.0, 1.0], [12600.0, 3.0], [12700.0, 2.0], [12300.0, 1.0], [13200.0, 3.0], [13000.0, 1.0], [13100.0, 1.0], [13600.0, 2.0], [13700.0, 4.0], [13500.0, 1.0], [13800.0, 1.0], [14100.0, 1.0], [14200.0, 1.0], [13900.0, 2.0], [14800.0, 1.0], [14600.0, 1.0], [15000.0, 2.0], [15300.0, 2.0], [15200.0, 1.0], [14900.0, 2.0], [15700.0, 2.0], [15400.0, 1.0], [15800.0, 1.0], [15600.0, 2.0], [15900.0, 2.0], [16300.0, 2.0], [16100.0, 1.0], [17400.0, 1.0], [16600.0, 3.0], [18400.0, 1.0], [17800.0, 2.0], [18200.0, 1.0], [18600.0, 2.0], [18800.0, 2.0], [20000.0, 1.0], [20200.0, 1.0], [21200.0, 2.0], [20600.0, 1.0], [21000.0, 1.0], [22400.0, 2.0], [22200.0, 1.0], [21600.0, 1.0], [23000.0, 3.0], [23200.0, 3.0], [23400.0, 2.0], [22800.0, 1.0], [24400.0, 3.0], [24000.0, 1.0], [23800.0, 2.0], [24800.0, 3.0], [25200.0, 1.0], [25600.0, 1.0], [26600.0, 1.0], [27600.0, 1.0], [27200.0, 1.0], [27400.0, 1.0], [26800.0, 1.0], [28200.0, 2.0], [27800.0, 1.0], [29000.0, 2.0], [29400.0, 1.0], [28800.0, 1.0], [30400.0, 1.0], [31400.0, 2.0], [30800.0, 1.0], [31000.0, 2.0], [31200.0, 1.0], [33200.0, 1.0], [32800.0, 1.0], [33600.0, 1.0], [35600.0, 1.0], [36800.0, 1.0], [36400.0, 1.0], [37600.0, 1.0], [40800.0, 1.0], [42000.0, 1.0], [44000.0, 1.0], [44400.0, 1.0], [55200.0, 1.0], [57600.0, 1.0], [58800.0, 1.0], [60400.0, 26.0], [60800.0, 1.0], [61200.0, 1.0], [59600.0, 1.0], [61600.0, 1.0], [65600.0, 1.0], [68800.0, 1.0], [73600.0, 1.0], [120700.0, 1.0], [34300.0, 1.0], [36300.0, 1.0], [37900.0, 2.0], [37500.0, 2.0], [39500.0, 1.0], [47900.0, 1.0], [48300.0, 1.0], [56700.0, 1.0], [58300.0, 1.0], [59900.0, 1.0], [60300.0, 22.0], [60700.0, 3.0], [72600.0, 1.0], [120600.0, 1.0], [120500.0, 1.0], [16900.0, 2.0], [16700.0, 1.0], [16500.0, 4.0], [18100.0, 1.0], [18300.0, 2.0], [19300.0, 1.0], [18900.0, 1.0], [19900.0, 1.0], [19700.0, 1.0], [21500.0, 3.0], [20900.0, 1.0], [20500.0, 4.0], [21300.0, 1.0], [21900.0, 3.0], [22100.0, 1.0], [22900.0, 1.0], [23100.0, 1.0], [22700.0, 1.0], [23500.0, 1.0], [23700.0, 1.0], [24100.0, 1.0], [24300.0, 1.0], [23900.0, 1.0], [25300.0, 2.0], [24900.0, 1.0], [26500.0, 1.0], [25700.0, 1.0], [26100.0, 1.0], [27700.0, 2.0], [28500.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [30300.0, 1.0], [29900.0, 2.0], [30500.0, 2.0], [29700.0, 1.0], [31700.0, 2.0], [30900.0, 1.0], [31500.0, 1.0], [32300.0, 3.0], [31900.0, 2.0], [33400.0, 2.0], [33800.0, 2.0], [34200.0, 1.0], [35400.0, 3.0], [36200.0, 1.0], [35000.0, 1.0], [41400.0, 1.0], [43400.0, 1.0], [47800.0, 1.0], [47400.0, 1.0], [50200.0, 1.0], [51000.0, 1.0], [50600.0, 1.0], [55000.0, 1.0], [55800.0, 1.0], [60600.0, 8.0], [61400.0, 1.0], [59400.0, 1.0], [65400.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 750.0], [33700.0, 1.0], [33300.0, 1.0], [35300.0, 1.0], [36100.0, 1.0], [40100.0, 1.0], [40500.0, 1.0], [43700.0, 1.0], [48100.0, 1.0], [47300.0, 1.0], [50100.0, 1.0], [200.0, 31.0], [57300.0, 1.0], [58100.0, 1.0], [59300.0, 1.0], [60100.0, 54.0], [300.0, 2.0], [400.0, 3.0], [600.0, 2.0], [700.0, 1.0], [800.0, 3.0], [900.0, 2.0], [1000.0, 5.0], [1100.0, 3.0], [1200.0, 2.0], [1400.0, 1.0], [2500.0, 1.0], [2800.0, 1.0], [3500.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4500.0, 3.0], [4400.0, 2.0], [4600.0, 1.0], [4800.0, 1.0], [5000.0, 7.0], [5100.0, 6.0], [5200.0, 5.0], [5300.0, 4.0], [5400.0, 8.0], [5600.0, 2.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [6200.0, 3.0], [6300.0, 2.0], [6600.0, 3.0], [6400.0, 2.0], [6900.0, 2.0], [6700.0, 4.0], [6800.0, 3.0], [7000.0, 1.0], [7100.0, 2.0], [7300.0, 1.0], [7200.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7900.0, 1.0], [8100.0, 3.0], [8000.0, 1.0], [8700.0, 3.0], [8600.0, 1.0], [8200.0, 3.0], [8300.0, 1.0], [8400.0, 1.0], [8800.0, 1.0], [9100.0, 2.0], [9000.0, 2.0], [8900.0, 3.0], [9500.0, 3.0], [9400.0, 1.0], [9700.0, 2.0], [9600.0, 2.0], [9300.0, 1.0], [9800.0, 4.0], [10100.0, 1.0], [10200.0, 2.0], [10000.0, 1.0], [10300.0, 1.0], [10600.0, 3.0], [10700.0, 1.0], [11100.0, 2.0], [11200.0, 3.0], [10900.0, 2.0], [11300.0, 4.0], [11400.0, 1.0], [12100.0, 1.0], [11900.0, 2.0], [11800.0, 1.0], [12200.0, 1.0], [12000.0, 1.0], [12300.0, 4.0], [12700.0, 1.0], [13300.0, 4.0], [12800.0, 1.0], [13200.0, 2.0], [12900.0, 2.0], [13100.0, 1.0], [13000.0, 1.0], [13400.0, 1.0], [13800.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [13900.0, 1.0], [14300.0, 1.0], [14700.0, 2.0], [14500.0, 2.0], [14600.0, 1.0], [15000.0, 2.0], [14900.0, 1.0], [15200.0, 2.0], [15300.0, 1.0], [15500.0, 4.0], [15600.0, 1.0], [15400.0, 1.0], [15800.0, 1.0], [16300.0, 3.0], [16200.0, 2.0], [16100.0, 2.0], [16000.0, 2.0], [16400.0, 1.0], [17400.0, 1.0], [18200.0, 1.0], [18400.0, 2.0], [18000.0, 1.0], [19400.0, 1.0], [18600.0, 1.0], [20200.0, 2.0], [19800.0, 1.0], [21200.0, 1.0], [21000.0, 1.0], [20800.0, 2.0], [21400.0, 1.0], [20600.0, 1.0], [22000.0, 1.0], [21600.0, 1.0], [22200.0, 1.0], [22600.0, 2.0], [23400.0, 1.0], [22800.0, 1.0], [24400.0, 1.0], [24000.0, 3.0], [23600.0, 2.0], [23800.0, 1.0], [25200.0, 1.0], [24800.0, 1.0], [26200.0, 2.0], [26600.0, 1.0], [27400.0, 2.0], [26800.0, 1.0], [27600.0, 1.0], [27200.0, 1.0], [28600.0, 1.0], [27800.0, 1.0], [30000.0, 1.0], [30400.0, 1.0], [31400.0, 1.0], [31200.0, 1.0], [30800.0, 1.0], [31600.0, 1.0], [32600.0, 1.0], [32000.0, 1.0], [33200.0, 2.0], [33600.0, 1.0], [34000.0, 1.0], [36400.0, 1.0], [35200.0, 1.0], [38400.0, 1.0], [37600.0, 1.0], [37200.0, 1.0], [40400.0, 1.0], [47600.0, 1.0], [50000.0, 1.0], [50400.0, 1.0], [54800.0, 2.0], [56400.0, 1.0], [59200.0, 1.0], [59600.0, 1.0], [60400.0, 3.0], [33100.0, 1.0], [34700.0, 1.0], [35900.0, 1.0], [35100.0, 1.0], [37500.0, 1.0], [37100.0, 1.0], [39100.0, 1.0], [43100.0, 1.0], [47100.0, 1.0], [47500.0, 1.0], [55500.0, 1.0], [60300.0, 6.0], [17100.0, 1.0], [16700.0, 1.0], [18300.0, 2.0], [17700.0, 1.0], [17500.0, 1.0], [17900.0, 1.0], [18100.0, 1.0], [18900.0, 1.0], [19700.0, 1.0], [20100.0, 1.0], [20300.0, 2.0], [21500.0, 2.0], [20500.0, 1.0], [20900.0, 1.0], [21300.0, 1.0], [21900.0, 2.0], [22500.0, 2.0], [22900.0, 3.0], [23100.0, 3.0], [22700.0, 2.0], [23500.0, 2.0], [24300.0, 1.0], [24500.0, 2.0], [23700.0, 2.0], [24900.0, 2.0], [25500.0, 1.0], [25700.0, 1.0], [27300.0, 1.0], [28500.0, 2.0], [27900.0, 1.0], [28100.0, 1.0], [29500.0, 2.0], [28900.0, 2.0], [29100.0, 1.0], [29300.0, 1.0], [28700.0, 1.0], [29900.0, 1.0], [30500.0, 1.0], [30300.0, 2.0], [30700.0, 1.0], [31100.0, 2.0], [31500.0, 1.0], [31300.0, 1.0], [30900.0, 1.0], [32100.0, 1.0], [32700.0, 1.0], [31900.0, 1.0], [33000.0, 1.0], [33400.0, 1.0], [36200.0, 1.0], [35000.0, 1.0], [37400.0, 1.0], [41800.0, 1.0], [41000.0, 1.0], [42600.0, 1.0], [49000.0, 1.0], [50600.0, 1.0], [56200.0, 1.0], [58600.0, 1.0], [60200.0, 22.0], [59800.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[600.0, 8.0], [700.0, 3.0], [800.0, 5.0], [14000.0, 1.0], [900.0, 8.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [20100.0, 1.0], [2000.0, 1.0], [34100.0, 1.0], [34300.0, 1.0], [2100.0, 1.0], [36800.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [41900.0, 1.0], [44300.0, 1.0], [200.0, 675.0], [3400.0, 1.0], [60300.0, 11.0], [60200.0, 3.0], [60400.0, 3.0], [4500.0, 1.0], [300.0, 279.0], [5000.0, 1.0], [5200.0, 1.0], [6100.0, 1.0], [400.0, 241.0], [7900.0, 1.0], [500.0, 8.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 120700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1745.0, "series": [{"data": [[0.0, 425.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 11.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 333.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1745.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.772727272727273, "minX": 1.6854606E12, "maxY": 25.0, "series": [{"data": [[1.6854606E12, 2.772727272727273], [1.68546156E12, 20.380414312617702], [1.68546126E12, 20.0], [1.6854612E12, 19.877192982456137], [1.6854609E12, 10.0], [1.68546186E12, 4.99009900990099], [1.68546084E12, 9.965811965811966], [1.6854618E12, 8.100649350649341], [1.6854615E12, 24.8688524590164], [1.68546144E12, 25.0], [1.68546114E12, 17.374999999999993], [1.68546108E12, 15.0], [1.68546078E12, 7.268292682926829], [1.68546174E12, 10.0], [1.68546072E12, 5.0], [1.68546168E12, 13.94623655913979], [1.68546138E12, 24.960000000000008], [1.68546132E12, 22.059829059829056], [1.68546102E12, 14.944444444444443], [1.68546096E12, 11.801980198019802], [1.68546192E12, 3.7000000000000006], [1.68546066E12, 5.0], [1.68546162E12, 18.000000000000007]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546192E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 148.0, "minX": 1.0, "maxY": 35465.869565217385, "series": [{"data": [[2.0, 5733.666666666666], [3.0, 430.3333333333333], [4.0, 6977.666666666667], [5.0, 4302.638461538462], [6.0, 22568.8], [7.0, 2070.5], [8.0, 14433.333333333332], [9.0, 5969.699999999999], [10.0, 3309.5534591194964], [11.0, 20725.888888888887], [12.0, 4226.384615384615], [13.0, 13598.444444444443], [14.0, 11898.866666666669], [15.0, 8990.441964285723], [1.0, 7428.0], [16.0, 21456.666666666664], [17.0, 34562.54545454545], [18.0, 27199.85714285714], [19.0, 35465.869565217385], [20.0, 8891.142222222214], [21.0, 22279.219512195126], [22.0, 31869.583333333332], [23.0, 32776.72222222222], [24.0, 35313.38461538462], [25.0, 24342.68571428572]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[14.938985736925495, 11037.835974643416]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 5438.666666666666], [3.0, 148.0], [4.0, 7955.2], [5.0, 4004.410852713178], [6.0, 22216.2], [7.0, 1847.625], [8.0, 21188.5], [9.0, 6323.333333333334], [10.0, 3061.473186119876], [11.0, 22939.875], [12.0, 4325.166666666666], [13.0, 14947.499999999998], [14.0, 12460.857142857141], [15.0, 8653.408071748878], [1.0, 7060.0], [16.0, 21114.4], [17.0, 34267.818181818184], [18.0, 26921.571428571428], [19.0, 35137.91304347826], [20.0, 8606.08928571429], [21.0, 21964.853658536587], [22.0, 21537.916666666668], [23.0, 29152.444444444445], [24.0, 30411.46153846154], [25.0, 16709.478571428557]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[14.983200000000016, 9817.039199999987]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 351.0], [3.0, 339.5], [4.0, 354.83333333333337], [5.0, 331.16030534351154], [6.0, 317.5], [7.0, 279.5], [8.0, 352.25], [9.0, 329.625], [10.0, 257.2570532915362], [11.0, 253.10000000000005], [12.0, 277.08333333333337], [13.0, 296.7777777777778], [14.0, 325.57142857142856], [15.0, 367.5644444444444], [1.0, 332.5], [16.0, 343.6428571428571], [17.0, 327.54545454545456], [18.0, 284.875], [19.0, 346.2727272727273], [20.0, 288.71739130434764], [21.0, 2504.903225806452], [22.0, 10314.0], [23.0, 6615.157894736843], [24.0, 315.33333333333337], [25.0, 6960.386206896559]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[14.921677215189879, 1312.6281645569595]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 158.43333333333334, "minX": 1.6854606E12, "maxY": 26149.133333333335, "series": [{"data": [[1.6854606E12, 585.4333333333333], [1.68546156E12, 4548.166666666667], [1.68546126E12, 2360.133333333333], [1.6854612E12, 2898.233333333333], [1.6854609E12, 1400.4666666666667], [1.68546186E12, 1527.75], [1.68546084E12, 1528.8], [1.6854618E12, 2319.9166666666665], [1.6854615E12, 1799.8333333333333], [1.68546144E12, 2600.483333333333], [1.68546114E12, 2013.9166666666667], [1.68546108E12, 3021.4333333333334], [1.68546078E12, 923.4166666666666], [1.68546174E12, 3428.95], [1.68546072E12, 954.8], [1.68546168E12, 3638.6666666666665], [1.68546138E12, 2259.266666666667], [1.68546132E12, 2024.5833333333333], [1.68546102E12, 3712.5666666666666], [1.68546096E12, 2049.6], [1.68546192E12, 158.43333333333334], [1.68546066E12, 990.2666666666667], [1.68546162E12, 1197.4666666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6854606E12, 678.6666666666666], [1.68546156E12, 26149.133333333335], [1.68546126E12, 6647.833333333333], [1.6854612E12, 5552.433333333333], [1.6854609E12, 4550.2], [1.68546186E12, 10528.1], [1.68546084E12, 5025.4], [1.6854618E12, 15198.4], [1.6854615E12, 5452.016666666666], [1.68546144E12, 9144.966666666667], [1.68546114E12, 3223.1], [1.68546108E12, 8091.866666666667], [1.68546078E12, 1653.1833333333334], [1.68546174E12, 22355.416666666668], [1.68546072E12, 2138.233333333333], [1.68546168E12, 21947.5], [1.68546138E12, 7399.35], [1.68546132E12, 4666.816666666667], [1.68546102E12, 8756.733333333334], [1.68546096E12, 5008.166666666667], [1.68546192E12, 1032.8833333333334], [1.68546066E12, 1585.45], [1.68546162E12, 5171.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546192E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 120.13245033112582, "minX": 1.6854606E12, "maxY": 30163.102564102563, "series": [{"data": [[1.6854606E12, 10782.833333333334], [1.68546156E12, 7151.988636363635], [1.68546126E12, 23606.333333333332], [1.6854612E12, 19252.68571428571], [1.6854609E12, 14263.63157894737], [1.68546186E12, 459.1791044776119], [1.68546084E12, 9080.63157894737], [1.6854618E12, 389.242718446602], [1.6854615E12, 18562.5641025641], [1.68546144E12, 28725.656716417914], [1.68546114E12, 28527.451612903227], [1.68546108E12, 14751.408163265305], [1.68546078E12, 17564.07692307692], [1.68546174E12, 352.42105263157885], [1.68546072E12, 18608.285714285714], [1.68546168E12, 2788.7484276729547], [1.68546138E12, 23740.142857142855], [1.68546132E12, 30163.102564102563], [1.68546102E12, 11028.300000000003], [1.68546096E12, 19062.250000000007], [1.68546192E12, 410.66666666666663], [1.68546066E12, 19329.846153846156], [1.68546162E12, 25429.43902439024]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854606E12, 10444.833333333334], [1.68546156E12, 7702.433333333337], [1.68546126E12, 23397.06666666666], [1.6854612E12, 18433.435897435895], [1.6854609E12, 13585.416666666668], [1.68546186E12, 140.60294117647067], [1.68546084E12, 9326.25641025641], [1.6854618E12, 126.96116504854368], [1.6854615E12, 10555.04761904762], [1.68546144E12, 19218.450000000004], [1.68546114E12, 29872.538461538457], [1.68546108E12, 14070.580000000002], [1.68546078E12, 17477.36363636364], [1.68546174E12, 120.13245033112582], [1.68546072E12, 18244.5], [1.68546168E12, 3689.0849673202647], [1.68546138E12, 19537.809523809516], [1.68546132E12, 24344.405405405396], [1.68546102E12, 11561.23728813559], [1.68546096E12, 17314.272727272728], [1.68546192E12, 148.42857142857144], [1.68546066E12, 18970.153846153848], [1.68546162E12, 23489.97222222222]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854606E12, 355.09999999999997], [1.68546156E12, 290.27428571428567], [1.68546126E12, 349.90000000000003], [1.6854612E12, 300.525], [1.6854609E12, 356.2222222222222], [1.68546186E12, 319.97014925373134], [1.68546084E12, 309.5], [1.6854618E12, 264.28431372549016], [1.6854615E12, 315.609756097561], [1.68546144E12, 10160.611940298506], [1.68546114E12, 328.51612903225805], [1.68546108E12, 314.6938775510204], [1.68546078E12, 349.94117647058823], [1.68546174E12, 232.95394736842098], [1.68546072E12, 388.9166666666667], [1.68546168E12, 370.5098039215684], [1.68546138E12, 7726.975609756098], [1.68546132E12, 7651.512195121953], [1.68546102E12, 310.3770491803279], [1.68546096E12, 309.1666666666667], [1.68546192E12, 341.42857142857144], [1.68546066E12, 343.07142857142856], [1.68546162E12, 481.40624999999994]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546192E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 120.10596026490072, "minX": 1.6854606E12, "maxY": 30162.94871794871, "series": [{"data": [[1.6854606E12, 10780.833333333334], [1.68546156E12, 7151.602272727274], [1.68546126E12, 23605.85714285715], [1.6854612E12, 19251.88571428571], [1.6854609E12, 14263.473684210529], [1.68546186E12, 459.1492537313433], [1.68546084E12, 9079.473684210527], [1.6854618E12, 389.1650485436894], [1.6854615E12, 18562.230769230766], [1.68546144E12, 28725.268656716427], [1.68546114E12, 28525.354838709678], [1.68546108E12, 14750.918367346938], [1.68546078E12, 17563.384615384617], [1.68546174E12, 352.36184210526295], [1.68546072E12, 18607.5], [1.68546168E12, 2783.2830188679254], [1.68546138E12, 23739.90476190476], [1.68546132E12, 30162.94871794871], [1.68546102E12, 11027.283333333331], [1.68546096E12, 19061.90625], [1.68546192E12, 410.66666666666663], [1.68546066E12, 19329.076923076926], [1.68546162E12, 25426.21951219512]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854606E12, 10444.666666666666], [1.68546156E12, 7702.3666666666695], [1.68546126E12, 23396.911111111105], [1.6854612E12, 18433.076923076922], [1.6854609E12, 13585.333333333332], [1.68546186E12, 140.58823529411774], [1.68546084E12, 9325.743589743588], [1.6854618E12, 126.92233009708735], [1.6854615E12, 10554.92857142857], [1.68546144E12, 19218.350000000002], [1.68546114E12, 29872.269230769227], [1.68546108E12, 14070.439999999997], [1.68546078E12, 17476.909090909092], [1.68546174E12, 120.10596026490072], [1.68546072E12, 18244.357142857138], [1.68546168E12, 3689.058823529411], [1.68546138E12, 19537.69047619048], [1.68546132E12, 24344.297297297286], [1.68546102E12, 11560.94915254237], [1.68546096E12, 17314.15151515152], [1.68546192E12, 148.42857142857144], [1.68546066E12, 18969.846153846152], [1.68546162E12, 23489.94444444445]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854606E12, 353.79999999999995], [1.68546156E12, 289.8685714285715], [1.68546126E12, 349.825], [1.6854612E12, 299.82500000000005], [1.6854609E12, 356.1388888888889], [1.68546186E12, 319.95522388059703], [1.68546084E12, 308.90000000000003], [1.6854618E12, 264.24509803921563], [1.6854615E12, 315.29268292682923], [1.68546144E12, 10160.343283582086], [1.68546114E12, 326.8387096774192], [1.68546108E12, 314.4897959183674], [1.68546078E12, 349.764705882353], [1.68546174E12, 232.9210526315789], [1.68546072E12, 388.0833333333333], [1.68546168E12, 364.8431372549019], [1.68546138E12, 7726.853658536585], [1.68546132E12, 7651.341463414634], [1.68546102E12, 309.5409836065574], [1.68546096E12, 308.94444444444446], [1.68546192E12, 341.42857142857144], [1.68546066E12, 342.7857142857142], [1.68546162E12, 478.0937499999999]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546192E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6854606E12, "maxY": 201.66666666666669, "series": [{"data": [[1.6854606E12, 163.16666666666666], [1.68546156E12, 123.40909090909086], [1.68546126E12, 176.7380952380952], [1.6854612E12, 135.88571428571427], [1.6854609E12, 162.2105263157895], [1.68546186E12, 155.5820895522388], [1.68546084E12, 152.76315789473682], [1.6854618E12, 129.38834951456315], [1.6854615E12, 143.00000000000003], [1.68546144E12, 179.37313432835836], [1.68546114E12, 153.8064516129032], [1.68546108E12, 156.28571428571436], [1.68546078E12, 159.23076923076925], [1.68546174E12, 111.01315789473678], [1.68546072E12, 174.92857142857144], [1.68546168E12, 113.49056603773583], [1.68546138E12, 190.52380952380952], [1.68546132E12, 169.0769230769231], [1.68546102E12, 159.89999999999995], [1.68546096E12, 162.28125], [1.68546192E12, 155.33333333333331], [1.68546066E12, 176.9230769230769], [1.68546162E12, 147.92682926829264]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.6854606E12, 0.0], [1.68546156E12, 0.0], [1.68546126E12, 0.0], [1.6854612E12, 0.0], [1.6854609E12, 0.0], [1.68546186E12, 0.0], [1.68546084E12, 0.0], [1.6854618E12, 0.0], [1.6854615E12, 2.452380952380952], [1.68546144E12, 25.866666666666656], [1.68546114E12, 0.0], [1.68546108E12, 0.0], [1.68546078E12, 0.0], [1.68546174E12, 0.0], [1.68546072E12, 0.0], [1.68546168E12, 0.0], [1.68546138E12, 8.30952380952381], [1.68546132E12, 11.702702702702704], [1.68546102E12, 0.0], [1.68546096E12, 0.0], [1.68546192E12, 0.0], [1.68546066E12, 0.0], [1.68546162E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.6854606E12, 167.7], [1.68546156E12, 121.04000000000002], [1.68546126E12, 167.32500000000002], [1.6854612E12, 149.14999999999998], [1.6854609E12, 174.05555555555551], [1.68546186E12, 155.58208955223878], [1.68546084E12, 145.24999999999997], [1.6854618E12, 129.64705882352942], [1.6854615E12, 141.78048780487808], [1.68546144E12, 148.56716417910442], [1.68546114E12, 158.12903225806454], [1.68546108E12, 155.48979591836735], [1.68546078E12, 157.00000000000003], [1.68546174E12, 111.01973684210527], [1.68546072E12, 201.66666666666669], [1.68546168E12, 110.19607843137257], [1.68546138E12, 176.3170731707317], [1.68546132E12, 166.3170731707317], [1.68546102E12, 155.7049180327869], [1.68546096E12, 156.3888888888889], [1.68546192E12, 162.2857142857143], [1.68546066E12, 159.78571428571428], [1.68546162E12, 178.25]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546192E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 207.0, "minX": 1.6854606E12, "maxY": 60178.0, "series": [{"data": [[1.6854606E12, 13372.0], [1.68546156E12, 59388.0], [1.68546126E12, 60178.0], [1.6854612E12, 33389.0], [1.6854609E12, 48143.0], [1.68546084E12, 37525.0], [1.6854615E12, 56293.0], [1.68546144E12, 11955.0], [1.68546114E12, 59680.0], [1.68546108E12, 42698.0], [1.68546078E12, 24592.0], [1.68546072E12, 29915.0], [1.68546168E12, 7986.0], [1.68546138E12, 18470.0], [1.68546132E12, 13640.0], [1.68546102E12, 36155.0], [1.68546096E12, 41804.0], [1.68546066E12, 27488.0], [1.68546162E12, 2049.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6854606E12, 13301.3], [1.68546156E12, 58707.200000000004], [1.68546126E12, 12522.199999999999], [1.6854612E12, 29317.0], [1.6854609E12, 47633.8], [1.68546084E12, 36204.00000000001], [1.6854615E12, 42227.0], [1.68546144E12, 8980.400000000007], [1.68546114E12, 49540.0], [1.68546108E12, 33338.8], [1.68546078E12, 24429.5], [1.68546072E12, 25307.400000000005], [1.68546168E12, 7986.0], [1.68546138E12, 12982.800000000003], [1.68546132E12, 8025.599999999997], [1.68546102E12, 22641.800000000003], [1.68546096E12, 38302.799999999996], [1.68546066E12, 26491.0], [1.68546162E12, 1140.1999999999991]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6854606E12, 13372.0], [1.68546156E12, 59388.0], [1.68546126E12, 60178.0], [1.6854612E12, 33389.0], [1.6854609E12, 48143.0], [1.68546084E12, 37525.0], [1.6854615E12, 56293.0], [1.68546144E12, 11955.0], [1.68546114E12, 59680.0], [1.68546108E12, 42698.0], [1.68546078E12, 24592.0], [1.68546072E12, 29915.0], [1.68546168E12, 7986.0], [1.68546138E12, 18470.0], [1.68546132E12, 13640.0], [1.68546102E12, 36155.0], [1.68546096E12, 41804.0], [1.68546066E12, 27488.0], [1.68546162E12, 2049.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6854606E12, 13372.0], [1.68546156E12, 59377.0], [1.68546126E12, 24077.199999999815], [1.6854612E12, 31560.0], [1.6854609E12, 48046.6], [1.68546084E12, 37493.2], [1.6854615E12, 55211.5], [1.68546144E12, 11257.3], [1.68546114E12, 57557.75], [1.68546108E12, 35403.0], [1.68546078E12, 24559.0], [1.68546072E12, 29781.649999999998], [1.68546168E12, 7986.0], [1.68546138E12, 15525.949999999995], [1.68546132E12, 12374.199999999986], [1.68546102E12, 23854.8], [1.68546096E12, 40721.299999999996], [1.68546066E12, 27425.2], [1.68546162E12, 2049.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6854606E12, 288.0], [1.68546156E12, 209.0], [1.68546126E12, 210.0], [1.6854612E12, 208.0], [1.6854609E12, 210.0], [1.68546084E12, 235.0], [1.6854615E12, 209.0], [1.68546144E12, 208.0], [1.68546114E12, 208.0], [1.68546108E12, 208.0], [1.68546078E12, 233.0], [1.68546072E12, 298.0], [1.68546168E12, 308.0], [1.68546138E12, 213.0], [1.68546132E12, 212.0], [1.68546102E12, 208.0], [1.68546096E12, 207.0], [1.68546066E12, 219.0], [1.68546162E12, 216.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6854606E12, 392.0], [1.68546156E12, 345.0], [1.68546126E12, 412.0], [1.6854612E12, 418.0], [1.6854609E12, 21386.0], [1.68546084E12, 17440.0], [1.6854615E12, 408.5], [1.68546144E12, 314.0], [1.68546114E12, 411.0], [1.68546108E12, 411.0], [1.68546078E12, 407.5], [1.68546072E12, 7193.0], [1.68546168E12, 2191.0], [1.68546138E12, 412.0], [1.68546132E12, 408.0], [1.68546102E12, 407.0], [1.68546096E12, 2442.5], [1.68546066E12, 409.0], [1.68546162E12, 408.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546168E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 110.0, "minX": 1.0, "maxY": 20156.0, "series": [{"data": [[2.0, 409.0], [8.0, 390.0], [9.0, 399.0], [10.0, 10679.0], [3.0, 409.0], [12.0, 215.0], [13.0, 360.5], [1.0, 409.0], [4.0, 412.0], [5.0, 409.0], [22.0, 231.0], [6.0, 412.0], [7.0, 2734.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 210.0], [8.0, 177.5], [9.0, 205.0], [10.0, 189.0], [11.0, 204.0], [3.0, 209.0], [12.0, 205.0], [13.0, 204.0], [14.0, 206.0], [15.0, 110.0], [1.0, 305.0], [4.0, 207.0], [5.0, 197.0], [20.0, 17186.5], [22.0, 20156.0], [6.0, 205.0], [7.0, 205.0], [28.0, 1637.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 28.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 110.0, "minX": 1.0, "maxY": 20156.0, "series": [{"data": [[2.0, 409.0], [8.0, 390.0], [9.0, 399.0], [10.0, 10679.0], [3.0, 409.0], [12.0, 215.0], [13.0, 354.0], [1.0, 409.0], [4.0, 412.0], [5.0, 409.0], [22.0, 231.0], [6.0, 412.0], [7.0, 2733.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 210.0], [8.0, 177.5], [9.0, 205.0], [10.0, 189.0], [11.0, 204.0], [3.0, 209.0], [12.0, 205.0], [13.0, 204.0], [14.0, 206.0], [15.0, 110.0], [1.0, 305.0], [4.0, 207.0], [5.0, 197.0], [20.0, 17186.5], [22.0, 20156.0], [6.0, 205.0], [7.0, 205.0], [28.0, 1637.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 28.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.6854606E12, "maxY": 5.816666666666666, "series": [{"data": [[1.6854606E12, 0.2833333333333333], [1.68546156E12, 5.816666666666666], [1.68546126E12, 1.4333333333333333], [1.6854612E12, 1.35], [1.6854609E12, 1.1833333333333333], [1.68546186E12, 2.2666666666666666], [1.68546084E12, 1.35], [1.6854618E12, 3.4166666666666665], [1.6854615E12, 1.5], [1.68546144E12, 1.9833333333333334], [1.68546114E12, 1.0166666666666666], [1.68546108E12, 1.6833333333333333], [1.68546078E12, 0.5333333333333333], [1.68546174E12, 5.016666666666667], [1.68546072E12, 0.43333333333333335], [1.68546168E12, 4.966666666666667], [1.68546138E12, 1.4], [1.68546132E12, 1.3166666666666667], [1.68546102E12, 1.9666666666666666], [1.68546096E12, 1.2333333333333334], [1.68546192E12, 0.21666666666666667], [1.68546066E12, 0.48333333333333334], [1.68546162E12, 1.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546192E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6854606E12, "maxY": 5.3, "series": [{"data": [[1.6854606E12, 0.26666666666666666], [1.68546156E12, 0.35], [1.68546126E12, 0.9166666666666666], [1.6854612E12, 1.3166666666666667], [1.6854609E12, 0.38333333333333336], [1.68546084E12, 0.4166666666666667], [1.6854615E12, 0.5666666666666667], [1.68546144E12, 0.7666666666666667], [1.68546114E12, 0.9], [1.68546108E12, 1.25], [1.68546078E12, 0.4], [1.68546072E12, 0.43333333333333335], [1.68546168E12, 0.11666666666666667], [1.68546138E12, 0.8666666666666667], [1.68546132E12, 0.75], [1.68546102E12, 1.55], [1.68546096E12, 0.8333333333333334], [1.68546066E12, 0.45], [1.68546162E12, 0.2833333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68546156E12, 5.3], [1.68546126E12, 0.3], [1.6854609E12, 0.8166666666666667], [1.68546186E12, 2.25], [1.68546084E12, 0.9], [1.6854618E12, 3.4166666666666665], [1.6854615E12, 0.8], [1.68546144E12, 1.0166666666666666], [1.68546114E12, 0.03333333333333333], [1.68546108E12, 0.4], [1.68546078E12, 0.06666666666666667], [1.68546174E12, 5.05], [1.68546168E12, 4.916666666666667], [1.68546138E12, 0.26666666666666666], [1.68546132E12, 0.25], [1.68546102E12, 0.45], [1.68546096E12, 0.31666666666666665], [1.68546192E12, 0.23333333333333334], [1.68546162E12, 0.6166666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68546156E12, 0.26666666666666666], [1.68546126E12, 0.2], [1.68546168E12, 0.06666666666666667], [1.68546138E12, 0.25], [1.68546132E12, 0.3], [1.6854615E12, 0.016666666666666666], [1.68546144E12, 0.3333333333333333], [1.68546114E12, 0.016666666666666666], [1.68546162E12, 0.23333333333333334]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546192E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6854606E12, "maxY": 2.95, "series": [{"data": [[1.6854606E12, 0.16666666666666666], [1.68546156E12, 0.3], [1.68546126E12, 0.4666666666666667], [1.6854612E12, 0.6666666666666666], [1.6854609E12, 0.15], [1.68546084E12, 0.2], [1.6854615E12, 0.3333333333333333], [1.68546144E12, 0.5666666666666667], [1.68546114E12, 0.48333333333333334], [1.68546108E12, 0.6666666666666666], [1.68546078E12, 0.25], [1.68546072E12, 0.2], [1.68546168E12, 0.11666666666666667], [1.68546138E12, 0.5], [1.68546132E12, 0.4666666666666667], [1.68546102E12, 0.8833333333333333], [1.68546096E12, 0.4166666666666667], [1.68546066E12, 0.23333333333333334], [1.68546162E12, 0.2833333333333333]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68546156E12, 2.6166666666666667], [1.68546126E12, 0.2], [1.6854609E12, 0.45], [1.68546186E12, 1.1166666666666667], [1.68546084E12, 0.4666666666666667], [1.6854618E12, 1.7], [1.6854615E12, 0.35], [1.68546144E12, 0.55], [1.68546114E12, 0.03333333333333333], [1.68546108E12, 0.15], [1.68546078E12, 0.03333333333333333], [1.68546174E12, 2.533333333333333], [1.68546168E12, 2.433333333333333], [1.68546138E12, 0.18333333333333332], [1.68546132E12, 0.21666666666666667], [1.68546102E12, 0.13333333333333333], [1.68546096E12, 0.18333333333333332], [1.68546192E12, 0.11666666666666667], [1.68546162E12, 0.25]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68546156E12, 2.95], [1.68546126E12, 0.3], [1.6854609E12, 0.36666666666666664], [1.68546186E12, 1.1333333333333333], [1.68546084E12, 0.43333333333333335], [1.6854618E12, 1.7166666666666666], [1.6854615E12, 0.4666666666666667], [1.68546144E12, 0.8], [1.68546114E12, 0.016666666666666666], [1.68546108E12, 0.25], [1.68546078E12, 0.03333333333333333], [1.68546174E12, 2.5166666666666666], [1.68546168E12, 2.55], [1.68546138E12, 0.3333333333333333], [1.68546132E12, 0.3333333333333333], [1.68546102E12, 0.31666666666666665], [1.68546096E12, 0.13333333333333333], [1.68546192E12, 0.11666666666666667], [1.68546162E12, 0.6]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.6854606E12, 0.1], [1.68546156E12, 0.016666666666666666], [1.68546126E12, 0.26666666666666666], [1.6854612E12, 0.5833333333333334], [1.68546084E12, 0.11666666666666667], [1.6854615E12, 0.1], [1.68546144E12, 0.13333333333333333], [1.68546114E12, 0.45], [1.68546108E12, 0.38333333333333336], [1.68546078E12, 0.16666666666666666], [1.68546072E12, 0.23333333333333334], [1.68546138E12, 0.16666666666666666], [1.68546132E12, 0.16666666666666666], [1.68546102E12, 0.6], [1.68546096E12, 0.2], [1.68546066E12, 0.21666666666666667]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68546156E12, 2.9166666666666665], [1.68546126E12, 0.43333333333333335], [1.6854609E12, 0.6333333333333333], [1.68546186E12, 1.1166666666666667], [1.68546084E12, 0.5166666666666667], [1.6854618E12, 1.7166666666666666], [1.6854615E12, 0.55], [1.68546144E12, 0.9833333333333333], [1.68546114E12, 0.06666666666666667], [1.68546108E12, 0.43333333333333335], [1.68546078E12, 0.05], [1.68546174E12, 2.533333333333333], [1.68546168E12, 2.65], [1.68546138E12, 0.5333333333333333], [1.68546132E12, 0.48333333333333334], [1.68546102E12, 0.4], [1.68546096E12, 0.3333333333333333], [1.68546192E12, 0.1], [1.68546162E12, 0.6833333333333333]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.6854606E12, 0.1], [1.68546156E12, 0.05], [1.68546126E12, 0.45], [1.6854612E12, 0.65], [1.6854609E12, 0.23333333333333334], [1.68546084E12, 0.21666666666666667], [1.6854615E12, 0.23333333333333334], [1.68546144E12, 0.2], [1.68546114E12, 0.4166666666666667], [1.68546108E12, 0.5833333333333334], [1.68546078E12, 0.15], [1.68546072E12, 0.23333333333333334], [1.68546138E12, 0.36666666666666664], [1.68546132E12, 0.2833333333333333], [1.68546102E12, 0.6666666666666666], [1.68546096E12, 0.4166666666666667], [1.68546066E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546192E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.6854606E12, "maxY": 8.483333333333333, "series": [{"data": [[1.6854606E12, 0.36666666666666664], [1.68546156E12, 0.36666666666666664], [1.68546126E12, 1.1833333333333333], [1.6854612E12, 1.9], [1.6854609E12, 0.38333333333333336], [1.68546084E12, 0.5333333333333333], [1.6854615E12, 0.6666666666666666], [1.68546144E12, 0.9], [1.68546114E12, 1.35], [1.68546108E12, 1.6333333333333333], [1.68546078E12, 0.5666666666666667], [1.68546072E12, 0.6666666666666666], [1.68546168E12, 0.11666666666666667], [1.68546138E12, 1.0333333333333334], [1.68546132E12, 0.9166666666666666], [1.68546102E12, 2.15], [1.68546096E12, 1.0333333333333334], [1.68546066E12, 0.6666666666666666], [1.68546162E12, 0.2833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68546156E12, 8.483333333333333], [1.68546126E12, 0.9333333333333333], [1.6854609E12, 1.45], [1.68546186E12, 3.3666666666666667], [1.68546084E12, 1.4166666666666667], [1.6854618E12, 5.133333333333334], [1.6854615E12, 1.3666666666666667], [1.68546144E12, 2.3333333333333335], [1.68546114E12, 0.11666666666666667], [1.68546108E12, 0.8333333333333334], [1.68546078E12, 0.11666666666666667], [1.68546174E12, 7.583333333333333], [1.68546168E12, 7.633333333333334], [1.68546138E12, 1.05], [1.68546132E12, 1.0333333333333334], [1.68546102E12, 0.85], [1.68546096E12, 0.65], [1.68546192E12, 0.3333333333333333], [1.68546162E12, 1.5333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546192E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

