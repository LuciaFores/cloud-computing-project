/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 107.0, "minX": 0.0, "maxY": 60708.0, "series": [{"data": [[0.0, 320.0], [0.1, 320.0], [0.2, 320.0], [0.3, 320.0], [0.4, 328.0], [0.5, 328.0], [0.6, 330.0], [0.7, 333.0], [0.8, 333.0], [0.9, 334.0], [1.0, 334.0], [1.1, 345.0], [1.2, 345.0], [1.3, 363.0], [1.4, 366.0], [1.5, 366.0], [1.6, 366.0], [1.7, 366.0], [1.8, 367.0], [1.9, 367.0], [2.0, 375.0], [2.1, 381.0], [2.2, 381.0], [2.3, 382.0], [2.4, 382.0], [2.5, 392.0], [2.6, 392.0], [2.7, 398.0], [2.8, 402.0], [2.9, 402.0], [3.0, 402.0], [3.1, 402.0], [3.2, 406.0], [3.3, 406.0], [3.4, 407.0], [3.5, 408.0], [3.6, 408.0], [3.7, 409.0], [3.8, 409.0], [3.9, 410.0], [4.0, 410.0], [4.1, 412.0], [4.2, 413.0], [4.3, 413.0], [4.4, 413.0], [4.5, 413.0], [4.6, 413.0], [4.7, 413.0], [4.8, 414.0], [4.9, 415.0], [5.0, 415.0], [5.1, 416.0], [5.2, 416.0], [5.3, 418.0], [5.4, 418.0], [5.5, 418.0], [5.6, 421.0], [5.7, 421.0], [5.8, 422.0], [5.9, 422.0], [6.0, 425.0], [6.1, 425.0], [6.2, 426.0], [6.3, 434.0], [6.4, 434.0], [6.5, 435.0], [6.6, 435.0], [6.7, 435.0], [6.8, 435.0], [6.9, 439.0], [7.0, 439.0], [7.1, 439.0], [7.2, 440.0], [7.3, 440.0], [7.4, 442.0], [7.5, 442.0], [7.6, 447.0], [7.7, 447.0], [7.8, 447.0], [7.9, 450.0], [8.0, 450.0], [8.1, 450.0], [8.2, 450.0], [8.3, 453.0], [8.4, 458.0], [8.5, 458.0], [8.6, 460.0], [8.7, 460.0], [8.8, 462.0], [8.9, 462.0], [9.0, 464.0], [9.1, 470.0], [9.2, 470.0], [9.3, 474.0], [9.4, 474.0], [9.5, 474.0], [9.6, 476.0], [9.7, 476.0], [9.8, 476.0], [9.9, 476.0], [10.0, 486.0], [10.1, 486.0], [10.2, 490.0], [10.3, 490.0], [10.4, 490.0], [10.5, 495.0], [10.6, 495.0], [10.7, 498.0], [10.8, 498.0], [10.9, 506.0], [11.0, 513.0], [11.1, 513.0], [11.2, 515.0], [11.3, 515.0], [11.4, 515.0], [11.5, 515.0], [11.6, 516.0], [11.7, 516.0], [11.8, 516.0], [11.9, 516.0], [12.0, 516.0], [12.1, 517.0], [12.2, 517.0], [12.3, 517.0], [12.4, 517.0], [12.5, 517.0], [12.6, 520.0], [12.7, 520.0], [12.8, 521.0], [12.9, 521.0], [13.0, 523.0], [13.1, 523.0], [13.2, 523.0], [13.3, 526.0], [13.4, 526.0], [13.5, 527.0], [13.6, 527.0], [13.7, 530.0], [13.8, 531.0], [13.9, 531.0], [14.0, 531.0], [14.1, 531.0], [14.2, 532.0], [14.3, 532.0], [14.4, 532.0], [14.5, 543.0], [14.6, 543.0], [14.7, 548.0], [14.8, 548.0], [14.9, 548.0], [15.0, 548.0], [15.1, 550.0], [15.2, 552.0], [15.3, 552.0], [15.4, 553.0], [15.5, 553.0], [15.6, 553.0], [15.7, 553.0], [15.8, 557.0], [15.9, 557.0], [16.0, 557.0], [16.1, 560.0], [16.2, 560.0], [16.3, 560.0], [16.4, 560.0], [16.5, 562.0], [16.6, 563.0], [16.7, 563.0], [16.8, 563.0], [16.9, 563.0], [17.0, 564.0], [17.1, 564.0], [17.2, 569.0], [17.3, 570.0], [17.4, 570.0], [17.5, 573.0], [17.6, 573.0], [17.7, 583.0], [17.8, 583.0], [17.9, 584.0], [18.0, 586.0], [18.1, 586.0], [18.2, 590.0], [18.3, 590.0], [18.4, 593.0], [18.5, 596.0], [18.6, 596.0], [18.7, 597.0], [18.8, 597.0], [18.9, 600.0], [19.0, 600.0], [19.1, 609.0], [19.2, 610.0], [19.3, 610.0], [19.4, 610.0], [19.5, 610.0], [19.6, 611.0], [19.7, 611.0], [19.8, 618.0], [19.9, 623.0], [20.0, 623.0], [20.1, 634.0], [20.2, 634.0], [20.3, 646.0], [20.4, 646.0], [20.5, 646.0], [20.6, 649.0], [20.7, 649.0], [20.8, 653.0], [20.9, 653.0], [21.0, 659.0], [21.1, 659.0], [21.2, 671.0], [21.3, 703.0], [21.4, 703.0], [21.5, 706.0], [21.6, 706.0], [21.7, 713.0], [21.8, 713.0], [21.9, 761.0], [22.0, 798.0], [22.1, 798.0], [22.2, 1703.0], [22.3, 1703.0], [22.4, 5219.0], [22.5, 5219.0], [22.6, 5290.0], [22.7, 5462.0], [22.8, 5462.0], [22.9, 5676.0], [23.0, 5676.0], [23.1, 5711.0], [23.2, 5711.0], [23.3, 5796.0], [23.4, 5836.0], [23.5, 5836.0], [23.6, 5906.0], [23.7, 5906.0], [23.8, 5914.0], [23.9, 5914.0], [24.0, 5992.0], [24.1, 6020.0], [24.2, 6020.0], [24.3, 6135.0], [24.4, 6135.0], [24.5, 6302.0], [24.6, 6302.0], [24.7, 6320.0], [24.8, 6475.0], [24.9, 6475.0], [25.0, 6753.0], [25.1, 6753.0], [25.2, 6764.0], [25.3, 6764.0], [25.4, 6817.0], [25.5, 6856.0], [25.6, 6856.0], [25.7, 6949.0], [25.8, 6949.0], [25.9, 7028.0], [26.0, 7028.0], [26.1, 7129.0], [26.2, 7150.0], [26.3, 7150.0], [26.4, 7211.0], [26.5, 7211.0], [26.6, 7224.0], [26.7, 7224.0], [26.8, 7247.0], [26.9, 7281.0], [27.0, 7281.0], [27.1, 7298.0], [27.2, 7298.0], [27.3, 7344.0], [27.4, 7359.0], [27.5, 7359.0], [27.6, 7382.0], [27.7, 7382.0], [27.8, 7457.0], [27.9, 7457.0], [28.0, 7537.0], [28.1, 7592.0], [28.2, 7592.0], [28.3, 7638.0], [28.4, 7638.0], [28.5, 7707.0], [28.6, 7707.0], [28.7, 7820.0], [28.8, 8102.0], [28.9, 8102.0], [29.0, 8277.0], [29.1, 8277.0], [29.2, 8456.0], [29.3, 8456.0], [29.4, 8641.0], [29.5, 8657.0], [29.6, 8657.0], [29.7, 8678.0], [29.8, 8678.0], [29.9, 8873.0], [30.0, 8873.0], [30.1, 8954.0], [30.2, 9036.0], [30.3, 9036.0], [30.4, 9101.0], [30.5, 9101.0], [30.6, 9107.0], [30.7, 9107.0], [30.8, 9199.0], [30.9, 9223.0], [31.0, 9223.0], [31.1, 9256.0], [31.2, 9256.0], [31.3, 9291.0], [31.4, 9291.0], [31.5, 9352.0], [31.6, 9545.0], [31.7, 9545.0], [31.8, 9562.0], [31.9, 9562.0], [32.0, 9577.0], [32.1, 9577.0], [32.2, 9586.0], [32.3, 9610.0], [32.4, 9610.0], [32.5, 9671.0], [32.6, 9671.0], [32.7, 9696.0], [32.8, 9696.0], [32.9, 9827.0], [33.0, 9887.0], [33.1, 9887.0], [33.2, 9952.0], [33.3, 9952.0], [33.4, 9978.0], [33.5, 9978.0], [33.6, 10000.0], [33.7, 10099.0], [33.8, 10099.0], [33.9, 10123.0], [34.0, 10123.0], [34.1, 10267.0], [34.2, 10267.0], [34.3, 10294.0], [34.4, 10335.0], [34.5, 10335.0], [34.6, 10366.0], [34.7, 10366.0], [34.8, 10377.0], [34.9, 10377.0], [35.0, 10396.0], [35.1, 10411.0], [35.2, 10411.0], [35.3, 10439.0], [35.4, 10439.0], [35.5, 10445.0], [35.6, 10445.0], [35.7, 10495.0], [35.8, 10541.0], [35.9, 10541.0], [36.0, 10589.0], [36.1, 10589.0], [36.2, 10613.0], [36.3, 10613.0], [36.4, 10663.0], [36.5, 10767.0], [36.6, 10767.0], [36.7, 10783.0], [36.8, 10783.0], [36.9, 10847.0], [37.0, 10880.0], [37.1, 10880.0], [37.2, 10954.0], [37.3, 10954.0], [37.4, 10960.0], [37.5, 10960.0], [37.6, 11144.0], [37.7, 11296.0], [37.8, 11296.0], [37.9, 11354.0], [38.0, 11354.0], [38.1, 11422.0], [38.2, 11422.0], [38.3, 11484.0], [38.4, 11493.0], [38.5, 11493.0], [38.6, 11563.0], [38.7, 11563.0], [38.8, 11614.0], [38.9, 11614.0], [39.0, 11673.0], [39.1, 11843.0], [39.2, 11843.0], [39.3, 11859.0], [39.4, 11859.0], [39.5, 11939.0], [39.6, 11939.0], [39.7, 11949.0], [39.8, 11960.0], [39.9, 11960.0], [40.0, 11979.0], [40.1, 11979.0], [40.2, 12099.0], [40.3, 12099.0], [40.4, 12116.0], [40.5, 12159.0], [40.6, 12159.0], [40.7, 12206.0], [40.8, 12206.0], [40.9, 12220.0], [41.0, 12220.0], [41.1, 12299.0], [41.2, 12320.0], [41.3, 12320.0], [41.4, 12394.0], [41.5, 12394.0], [41.6, 12441.0], [41.7, 12441.0], [41.8, 12464.0], [41.9, 12505.0], [42.0, 12505.0], [42.1, 12590.0], [42.2, 12590.0], [42.3, 12755.0], [42.4, 12755.0], [42.5, 12788.0], [42.6, 12969.0], [42.7, 12969.0], [42.8, 13015.0], [42.9, 13015.0], [43.0, 13071.0], [43.1, 13071.0], [43.2, 13236.0], [43.3, 13296.0], [43.4, 13296.0], [43.5, 13512.0], [43.6, 13512.0], [43.7, 13576.0], [43.8, 13576.0], [43.9, 13578.0], [44.0, 13606.0], [44.1, 13606.0], [44.2, 13623.0], [44.3, 13623.0], [44.4, 13997.0], [44.5, 13997.0], [44.6, 14134.0], [44.7, 14151.0], [44.8, 14151.0], [44.9, 14242.0], [45.0, 14242.0], [45.1, 14286.0], [45.2, 14286.0], [45.3, 14371.0], [45.4, 14380.0], [45.5, 14380.0], [45.6, 14528.0], [45.7, 14528.0], [45.8, 14531.0], [45.9, 14537.0], [46.0, 14537.0], [46.1, 14589.0], [46.2, 14589.0], [46.3, 14596.0], [46.4, 14596.0], [46.5, 14615.0], [46.6, 14641.0], [46.7, 14641.0], [46.8, 14720.0], [46.9, 14720.0], [47.0, 14800.0], [47.1, 14800.0], [47.2, 14963.0], [47.3, 15000.0], [47.4, 15000.0], [47.5, 15019.0], [47.6, 15019.0], [47.7, 15113.0], [47.8, 15113.0], [47.9, 15161.0], [48.0, 15299.0], [48.1, 15299.0], [48.2, 15305.0], [48.3, 15305.0], [48.4, 15323.0], [48.5, 15323.0], [48.6, 15377.0], [48.7, 15386.0], [48.8, 15386.0], [48.9, 15459.0], [49.0, 15459.0], [49.1, 15555.0], [49.2, 15555.0], [49.3, 15571.0], [49.4, 15723.0], [49.5, 15723.0], [49.6, 15814.0], [49.7, 15814.0], [49.8, 15871.0], [49.9, 15871.0], [50.0, 15890.0], [50.1, 15956.0], [50.2, 15956.0], [50.3, 15979.0], [50.4, 15979.0], [50.5, 15994.0], [50.6, 15994.0], [50.7, 16066.0], [50.8, 16138.0], [50.9, 16138.0], [51.0, 16235.0], [51.1, 16235.0], [51.2, 16255.0], [51.3, 16255.0], [51.4, 16301.0], [51.5, 16393.0], [51.6, 16393.0], [51.7, 16467.0], [51.8, 16467.0], [51.9, 16478.0], [52.0, 16478.0], [52.1, 16492.0], [52.2, 16544.0], [52.3, 16544.0], [52.4, 16590.0], [52.5, 16590.0], [52.6, 16815.0], [52.7, 16815.0], [52.8, 16900.0], [52.9, 17009.0], [53.0, 17009.0], [53.1, 17138.0], [53.2, 17138.0], [53.3, 17168.0], [53.4, 17168.0], [53.5, 17189.0], [53.6, 17229.0], [53.7, 17229.0], [53.8, 17230.0], [53.9, 17230.0], [54.0, 17243.0], [54.1, 17243.0], [54.2, 17480.0], [54.3, 17480.0], [54.4, 17480.0], [54.5, 17501.0], [54.6, 17501.0], [54.7, 17561.0], [54.8, 17619.0], [54.9, 17619.0], [55.0, 17644.0], [55.1, 17644.0], [55.2, 17701.0], [55.3, 17701.0], [55.4, 17745.0], [55.5, 17856.0], [55.6, 17856.0], [55.7, 17914.0], [55.8, 17914.0], [55.9, 18002.0], [56.0, 18002.0], [56.1, 18039.0], [56.2, 18159.0], [56.3, 18159.0], [56.4, 18255.0], [56.5, 18255.0], [56.6, 18295.0], [56.7, 18295.0], [56.8, 18356.0], [56.9, 18457.0], [57.0, 18457.0], [57.1, 18461.0], [57.2, 18461.0], [57.3, 18477.0], [57.4, 18477.0], [57.5, 18552.0], [57.6, 18559.0], [57.7, 18559.0], [57.8, 18571.0], [57.9, 18571.0], [58.0, 18624.0], [58.1, 18624.0], [58.2, 18626.0], [58.3, 18649.0], [58.4, 18649.0], [58.5, 18676.0], [58.6, 18676.0], [58.7, 18728.0], [58.8, 18728.0], [58.9, 18790.0], [59.0, 18830.0], [59.1, 18830.0], [59.2, 18836.0], [59.3, 18836.0], [59.4, 18848.0], [59.5, 18848.0], [59.6, 18855.0], [59.7, 19053.0], [59.8, 19053.0], [59.9, 19143.0], [60.0, 19143.0], [60.1, 19218.0], [60.2, 19218.0], [60.3, 19245.0], [60.4, 19270.0], [60.5, 19270.0], [60.6, 19271.0], [60.7, 19271.0], [60.8, 19345.0], [60.9, 19345.0], [61.0, 19369.0], [61.1, 19437.0], [61.2, 19437.0], [61.3, 19550.0], [61.4, 19550.0], [61.5, 19629.0], [61.6, 19629.0], [61.7, 19707.0], [61.8, 19734.0], [61.9, 19734.0], [62.0, 19817.0], [62.1, 19817.0], [62.2, 19889.0], [62.3, 19889.0], [62.4, 19994.0], [62.5, 20016.0], [62.6, 20016.0], [62.7, 20061.0], [62.8, 20061.0], [62.9, 20123.0], [63.0, 20123.0], [63.1, 20129.0], [63.2, 20267.0], [63.3, 20267.0], [63.4, 20292.0], [63.5, 20292.0], [63.6, 20308.0], [63.7, 20351.0], [63.8, 20351.0], [63.9, 20359.0], [64.0, 20359.0], [64.1, 20365.0], [64.2, 20365.0], [64.3, 20374.0], [64.4, 20409.0], [64.5, 20409.0], [64.6, 20441.0], [64.7, 20441.0], [64.8, 20462.0], [64.9, 20462.0], [65.0, 20512.0], [65.1, 20535.0], [65.2, 20535.0], [65.3, 20536.0], [65.4, 20536.0], [65.5, 20643.0], [65.6, 20643.0], [65.7, 20648.0], [65.8, 20888.0], [65.9, 20888.0], [66.0, 20910.0], [66.1, 20910.0], [66.2, 21095.0], [66.3, 21095.0], [66.4, 21148.0], [66.5, 21240.0], [66.6, 21240.0], [66.7, 21322.0], [66.8, 21322.0], [66.9, 21331.0], [67.0, 21331.0], [67.1, 21339.0], [67.2, 21355.0], [67.3, 21355.0], [67.4, 21421.0], [67.5, 21421.0], [67.6, 21463.0], [67.7, 21463.0], [67.8, 21571.0], [67.9, 21664.0], [68.0, 21664.0], [68.1, 21704.0], [68.2, 21704.0], [68.3, 21795.0], [68.4, 21795.0], [68.5, 21944.0], [68.6, 21944.0], [68.7, 21944.0], [68.8, 21959.0], [68.9, 21959.0], [69.0, 21985.0], [69.1, 21985.0], [69.2, 22027.0], [69.3, 22080.0], [69.4, 22080.0], [69.5, 22103.0], [69.6, 22103.0], [69.7, 22262.0], [69.8, 22262.0], [69.9, 22288.0], [70.0, 22395.0], [70.1, 22395.0], [70.2, 22481.0], [70.3, 22481.0], [70.4, 22523.0], [70.5, 22523.0], [70.6, 22555.0], [70.7, 22702.0], [70.8, 22702.0], [70.9, 22804.0], [71.0, 22804.0], [71.1, 22887.0], [71.2, 22887.0], [71.3, 22943.0], [71.4, 23001.0], [71.5, 23001.0], [71.6, 23055.0], [71.7, 23055.0], [71.8, 23059.0], [71.9, 23059.0], [72.0, 23150.0], [72.1, 23163.0], [72.2, 23163.0], [72.3, 23203.0], [72.4, 23203.0], [72.5, 23229.0], [72.6, 23229.0], [72.7, 23285.0], [72.8, 23351.0], [72.9, 23351.0], [73.0, 23372.0], [73.1, 23372.0], [73.2, 23468.0], [73.3, 23488.0], [73.4, 23488.0], [73.5, 23569.0], [73.6, 23569.0], [73.7, 23662.0], [73.8, 23662.0], [73.9, 23810.0], [74.0, 23816.0], [74.1, 23816.0], [74.2, 23970.0], [74.3, 23970.0], [74.4, 24031.0], [74.5, 24031.0], [74.6, 24108.0], [74.7, 24212.0], [74.8, 24212.0], [74.9, 24213.0], [75.0, 24213.0], [75.1, 24230.0], [75.2, 24230.0], [75.3, 24284.0], [75.4, 24324.0], [75.5, 24324.0], [75.6, 24337.0], [75.7, 24337.0], [75.8, 24342.0], [75.9, 24342.0], [76.0, 24568.0], [76.1, 24579.0], [76.2, 24579.0], [76.3, 24582.0], [76.4, 24582.0], [76.5, 24583.0], [76.6, 24583.0], [76.7, 24592.0], [76.8, 24668.0], [76.9, 24668.0], [77.0, 24718.0], [77.1, 24718.0], [77.2, 24773.0], [77.3, 24773.0], [77.4, 24792.0], [77.5, 24855.0], [77.6, 24855.0], [77.7, 24874.0], [77.8, 24874.0], [77.9, 24939.0], [78.0, 24939.0], [78.1, 25074.0], [78.2, 25141.0], [78.3, 25141.0], [78.4, 25300.0], [78.5, 25300.0], [78.6, 25450.0], [78.7, 25450.0], [78.8, 25520.0], [78.9, 25661.0], [79.0, 25661.0], [79.1, 25726.0], [79.2, 25726.0], [79.3, 25771.0], [79.4, 25771.0], [79.5, 25775.0], [79.6, 25928.0], [79.7, 25928.0], [79.8, 25938.0], [79.9, 25938.0], [80.0, 26025.0], [80.1, 26025.0], [80.2, 26067.0], [80.3, 26103.0], [80.4, 26103.0], [80.5, 26169.0], [80.6, 26169.0], [80.7, 26187.0], [80.8, 26187.0], [80.9, 26188.0], [81.0, 26207.0], [81.1, 26207.0], [81.2, 26273.0], [81.3, 26273.0], [81.4, 26366.0], [81.5, 26366.0], [81.6, 26471.0], [81.7, 26542.0], [81.8, 26542.0], [81.9, 26673.0], [82.0, 26673.0], [82.1, 26774.0], [82.2, 26880.0], [82.3, 26880.0], [82.4, 27078.0], [82.5, 27078.0], [82.6, 27165.0], [82.7, 27165.0], [82.8, 27171.0], [82.9, 27290.0], [83.0, 27290.0], [83.1, 27311.0], [83.2, 27311.0], [83.3, 27324.0], [83.4, 27324.0], [83.5, 27368.0], [83.6, 27411.0], [83.7, 27411.0], [83.8, 27453.0], [83.9, 27453.0], [84.0, 27680.0], [84.1, 27680.0], [84.2, 27682.0], [84.3, 27798.0], [84.4, 27798.0], [84.5, 27819.0], [84.6, 27819.0], [84.7, 28053.0], [84.8, 28053.0], [84.9, 28359.0], [85.0, 28385.0], [85.1, 28385.0], [85.2, 28662.0], [85.3, 28662.0], [85.4, 28697.0], [85.5, 28697.0], [85.6, 29021.0], [85.7, 29037.0], [85.8, 29037.0], [85.9, 29045.0], [86.0, 29045.0], [86.1, 29052.0], [86.2, 29052.0], [86.3, 29096.0], [86.4, 29132.0], [86.5, 29132.0], [86.6, 29252.0], [86.7, 29252.0], [86.8, 29338.0], [86.9, 29338.0], [87.0, 29525.0], [87.1, 29633.0], [87.2, 29633.0], [87.3, 29646.0], [87.4, 29646.0], [87.5, 29814.0], [87.6, 29814.0], [87.7, 29837.0], [87.8, 30053.0], [87.9, 30053.0], [88.0, 30167.0], [88.1, 30167.0], [88.2, 30433.0], [88.3, 30433.0], [88.4, 30634.0], [88.5, 31349.0], [88.6, 31349.0], [88.7, 31586.0], [88.8, 31586.0], [88.9, 31812.0], [89.0, 31812.0], [89.1, 31842.0], [89.2, 32097.0], [89.3, 32097.0], [89.4, 32293.0], [89.5, 32293.0], [89.6, 32416.0], [89.7, 32416.0], [89.8, 32707.0], [89.9, 32710.0], [90.0, 32710.0], [90.1, 32717.0], [90.2, 32717.0], [90.3, 32717.0], [90.4, 32717.0], [90.5, 32813.0], [90.6, 32984.0], [90.7, 32984.0], [90.8, 33550.0], [90.9, 33550.0], [91.0, 33663.0], [91.1, 33843.0], [91.2, 33843.0], [91.3, 34294.0], [91.4, 34294.0], [91.5, 34413.0], [91.6, 34413.0], [91.7, 34465.0], [91.8, 34933.0], [91.9, 34933.0], [92.0, 35408.0], [92.1, 35408.0], [92.2, 37262.0], [92.3, 37262.0], [92.4, 37315.0], [92.5, 37379.0], [92.6, 37379.0], [92.7, 37527.0], [92.8, 37527.0], [92.9, 37833.0], [93.0, 37833.0], [93.1, 38640.0], [93.2, 38746.0], [93.3, 38746.0], [93.4, 38849.0], [93.5, 38849.0], [93.6, 39132.0], [93.7, 39132.0], [93.8, 39347.0], [93.9, 39497.0], [94.0, 39497.0], [94.1, 39622.0], [94.2, 39622.0], [94.3, 39643.0], [94.4, 39643.0], [94.5, 39756.0], [94.6, 39863.0], [94.7, 39863.0], [94.8, 40251.0], [94.9, 40251.0], [95.0, 41211.0], [95.1, 41211.0], [95.2, 41224.0], [95.3, 41376.0], [95.4, 41376.0], [95.5, 41813.0], [95.6, 41813.0], [95.7, 43026.0], [95.8, 43026.0], [95.9, 43027.0], [96.0, 43365.0], [96.1, 43365.0], [96.2, 43556.0], [96.3, 43556.0], [96.4, 43600.0], [96.5, 43600.0], [96.6, 44333.0], [96.7, 45079.0], [96.8, 45079.0], [96.9, 46351.0], [97.0, 46351.0], [97.1, 46635.0], [97.2, 46635.0], [97.3, 47237.0], [97.4, 48756.0], [97.5, 48756.0], [97.6, 51203.0], [97.7, 51203.0], [97.8, 52148.0], [97.9, 52148.0], [98.0, 53487.0], [98.1, 54704.0], [98.2, 54704.0], [98.3, 59499.0], [98.4, 59499.0], [98.5, 59954.0], [98.6, 59954.0], [98.7, 60357.0], [98.8, 60457.0], [98.9, 60457.0], [99.0, 60517.0], [99.1, 60517.0], [99.2, 60551.0], [99.3, 60551.0], [99.4, 60564.0], [99.5, 60570.0], [99.6, 60570.0], [99.7, 60675.0], [99.8, 60675.0], [99.9, 60708.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 107.0], [0.1, 107.0], [0.2, 107.0], [0.3, 107.0], [0.4, 107.0], [0.5, 107.0], [0.6, 107.0], [0.7, 107.0], [0.8, 107.0], [0.9, 107.0], [1.0, 107.0], [1.1, 107.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 108.0], [1.6, 108.0], [1.7, 108.0], [1.8, 108.0], [1.9, 108.0], [2.0, 108.0], [2.1, 108.0], [2.2, 108.0], [2.3, 108.0], [2.4, 108.0], [2.5, 108.0], [2.6, 108.0], [2.7, 109.0], [2.8, 109.0], [2.9, 109.0], [3.0, 109.0], [3.1, 109.0], [3.2, 109.0], [3.3, 109.0], [3.4, 109.0], [3.5, 109.0], [3.6, 109.0], [3.7, 109.0], [3.8, 110.0], [3.9, 110.0], [4.0, 110.0], [4.1, 110.0], [4.2, 110.0], [4.3, 111.0], [4.4, 111.0], [4.5, 112.0], [4.6, 113.0], [4.7, 113.0], [4.8, 113.0], [4.9, 113.0], [5.0, 114.0], [5.1, 114.0], [5.2, 114.0], [5.3, 118.0], [5.4, 118.0], [5.5, 119.0], [5.6, 119.0], [5.7, 119.0], [5.8, 119.0], [5.9, 120.0], [6.0, 123.0], [6.1, 123.0], [6.2, 123.0], [6.3, 123.0], [6.4, 123.0], [6.5, 123.0], [6.6, 123.0], [6.7, 123.0], [6.8, 124.0], [6.9, 125.0], [7.0, 125.0], [7.1, 126.0], [7.2, 126.0], [7.3, 128.0], [7.4, 128.0], [7.5, 129.0], [7.6, 129.0], [7.7, 129.0], [7.8, 130.0], [7.9, 130.0], [8.0, 131.0], [8.1, 131.0], [8.2, 132.0], [8.3, 134.0], [8.4, 134.0], [8.5, 134.0], [8.6, 134.0], [8.7, 136.0], [8.8, 136.0], [8.9, 136.0], [9.0, 136.0], [9.1, 136.0], [9.2, 137.0], [9.3, 137.0], [9.4, 140.0], [9.5, 140.0], [9.6, 141.0], [9.7, 141.0], [9.8, 141.0], [9.9, 142.0], [10.0, 142.0], [10.1, 143.0], [10.2, 143.0], [10.3, 143.0], [10.4, 143.0], [10.5, 143.0], [10.6, 146.0], [10.7, 146.0], [10.8, 147.0], [10.9, 147.0], [11.0, 148.0], [11.1, 148.0], [11.2, 149.0], [11.3, 149.0], [11.4, 149.0], [11.5, 150.0], [11.6, 150.0], [11.7, 152.0], [11.8, 152.0], [11.9, 153.0], [12.0, 153.0], [12.1, 153.0], [12.2, 153.0], [12.3, 153.0], [12.4, 155.0], [12.5, 155.0], [12.6, 155.0], [12.7, 157.0], [12.8, 157.0], [12.9, 160.0], [13.0, 160.0], [13.1, 161.0], [13.2, 161.0], [13.3, 161.0], [13.4, 161.0], [13.5, 162.0], [13.6, 162.0], [13.7, 162.0], [13.8, 163.0], [13.9, 163.0], [14.0, 165.0], [14.1, 165.0], [14.2, 166.0], [14.3, 167.0], [14.4, 167.0], [14.5, 169.0], [14.6, 169.0], [14.7, 171.0], [14.8, 171.0], [14.9, 173.0], [15.0, 175.0], [15.1, 175.0], [15.2, 176.0], [15.3, 176.0], [15.4, 176.0], [15.5, 176.0], [15.6, 179.0], [15.7, 182.0], [15.8, 182.0], [15.9, 183.0], [16.0, 183.0], [16.1, 184.0], [16.2, 184.0], [16.3, 188.0], [16.4, 188.0], [16.5, 189.0], [16.6, 189.0], [16.7, 189.0], [16.8, 190.0], [16.9, 190.0], [17.0, 193.0], [17.1, 193.0], [17.2, 193.0], [17.3, 195.0], [17.4, 195.0], [17.5, 196.0], [17.6, 196.0], [17.7, 196.0], [17.8, 196.0], [17.9, 197.0], [18.0, 201.0], [18.1, 201.0], [18.2, 202.0], [18.3, 202.0], [18.4, 202.0], [18.5, 202.0], [18.6, 203.0], [18.7, 204.0], [18.8, 204.0], [18.9, 205.0], [19.0, 205.0], [19.1, 207.0], [19.2, 207.0], [19.3, 210.0], [19.4, 210.0], [19.5, 211.0], [19.6, 212.0], [19.7, 212.0], [19.8, 212.0], [19.9, 212.0], [20.0, 212.0], [20.1, 212.0], [20.2, 214.0], [20.3, 216.0], [20.4, 216.0], [20.5, 217.0], [20.6, 217.0], [20.7, 225.0], [20.8, 225.0], [20.9, 233.0], [21.0, 253.0], [21.1, 253.0], [21.2, 270.0], [21.3, 270.0], [21.4, 1399.0], [21.5, 1399.0], [21.6, 4949.0], [21.7, 4984.0], [21.8, 4984.0], [21.9, 5057.0], [22.0, 5057.0], [22.1, 5283.0], [22.2, 5283.0], [22.3, 5441.0], [22.4, 5460.0], [22.5, 5460.0], [22.6, 5562.0], [22.7, 5562.0], [22.8, 5590.0], [22.9, 5590.0], [23.0, 5605.0], [23.1, 5605.0], [23.2, 5612.0], [23.3, 5686.0], [23.4, 5686.0], [23.5, 5726.0], [23.6, 5726.0], [23.7, 5895.0], [23.8, 5895.0], [23.9, 5913.0], [24.0, 6076.0], [24.1, 6076.0], [24.2, 6356.0], [24.3, 6356.0], [24.4, 6449.0], [24.5, 6449.0], [24.6, 6459.0], [24.7, 6472.0], [24.8, 6472.0], [24.9, 6643.0], [25.0, 6643.0], [25.1, 6717.0], [25.2, 6717.0], [25.3, 6720.0], [25.4, 6800.0], [25.5, 6800.0], [25.6, 6825.0], [25.7, 6825.0], [25.8, 6891.0], [25.9, 6891.0], [26.0, 6902.0], [26.1, 6902.0], [26.2, 6914.0], [26.3, 6935.0], [26.4, 6935.0], [26.5, 6952.0], [26.6, 6952.0], [26.7, 7049.0], [26.8, 7049.0], [26.9, 7058.0], [27.0, 7137.0], [27.1, 7137.0], [27.2, 7166.0], [27.3, 7166.0], [27.4, 7184.0], [27.5, 7184.0], [27.6, 7401.0], [27.7, 7407.0], [27.8, 7407.0], [27.9, 7505.0], [28.0, 7505.0], [28.1, 7561.0], [28.2, 7561.0], [28.3, 7853.0], [28.4, 8238.0], [28.5, 8238.0], [28.6, 8362.0], [28.7, 8362.0], [28.8, 8376.0], [28.9, 8376.0], [29.0, 8444.0], [29.1, 8444.0], [29.2, 8568.0], [29.3, 8630.0], [29.4, 8630.0], [29.5, 8631.0], [29.6, 8631.0], [29.7, 8693.0], [29.8, 8693.0], [29.9, 8788.0], [30.0, 8883.0], [30.1, 8883.0], [30.2, 8918.0], [30.3, 8918.0], [30.4, 8945.0], [30.5, 8945.0], [30.6, 8984.0], [30.7, 9022.0], [30.8, 9022.0], [30.9, 9161.0], [31.0, 9161.0], [31.1, 9178.0], [31.2, 9178.0], [31.3, 9184.0], [31.4, 9257.0], [31.5, 9257.0], [31.6, 9327.0], [31.7, 9327.0], [31.8, 9328.0], [31.9, 9328.0], [32.0, 9329.0], [32.1, 9523.0], [32.2, 9523.0], [32.3, 9544.0], [32.4, 9544.0], [32.5, 9574.0], [32.6, 9574.0], [32.7, 9679.0], [32.8, 9679.0], [32.9, 9755.0], [33.0, 9778.0], [33.1, 9778.0], [33.2, 9859.0], [33.3, 9859.0], [33.4, 9875.0], [33.5, 9875.0], [33.6, 9974.0], [33.7, 9982.0], [33.8, 9982.0], [33.9, 9987.0], [34.0, 9987.0], [34.1, 9998.0], [34.2, 9998.0], [34.3, 10031.0], [34.4, 10041.0], [34.5, 10041.0], [34.6, 10051.0], [34.7, 10051.0], [34.8, 10095.0], [34.9, 10095.0], [35.0, 10105.0], [35.1, 10133.0], [35.2, 10133.0], [35.3, 10193.0], [35.4, 10193.0], [35.5, 10205.0], [35.6, 10205.0], [35.7, 10287.0], [35.8, 10287.0], [35.9, 10380.0], [36.0, 10440.0], [36.1, 10440.0], [36.2, 10518.0], [36.3, 10518.0], [36.4, 10526.0], [36.5, 10526.0], [36.6, 10556.0], [36.7, 10606.0], [36.8, 10606.0], [36.9, 10740.0], [37.0, 10740.0], [37.1, 10777.0], [37.2, 10777.0], [37.3, 10961.0], [37.4, 11069.0], [37.5, 11069.0], [37.6, 11085.0], [37.7, 11085.0], [37.8, 11155.0], [37.9, 11155.0], [38.0, 11184.0], [38.1, 11197.0], [38.2, 11197.0], [38.3, 11307.0], [38.4, 11307.0], [38.5, 11368.0], [38.6, 11368.0], [38.7, 11441.0], [38.8, 11441.0], [38.9, 11538.0], [39.0, 11571.0], [39.1, 11571.0], [39.2, 11648.0], [39.3, 11648.0], [39.4, 11707.0], [39.5, 11707.0], [39.6, 11710.0], [39.7, 11726.0], [39.8, 11726.0], [39.9, 11776.0], [40.0, 11776.0], [40.1, 11813.0], [40.2, 11813.0], [40.3, 11855.0], [40.4, 11914.0], [40.5, 11914.0], [40.6, 12004.0], [40.7, 12004.0], [40.8, 12055.0], [40.9, 12055.0], [41.0, 12069.0], [41.1, 12084.0], [41.2, 12084.0], [41.3, 12148.0], [41.4, 12148.0], [41.5, 12182.0], [41.6, 12182.0], [41.7, 12270.0], [41.8, 12319.0], [41.9, 12319.0], [42.0, 12347.0], [42.1, 12347.0], [42.2, 12485.0], [42.3, 12485.0], [42.4, 12607.0], [42.5, 12607.0], [42.6, 12663.0], [42.7, 12663.0], [42.8, 12663.0], [42.9, 12888.0], [43.0, 12888.0], [43.1, 13019.0], [43.2, 13019.0], [43.3, 13237.0], [43.4, 13296.0], [43.5, 13296.0], [43.6, 13299.0], [43.7, 13299.0], [43.8, 13633.0], [43.9, 13633.0], [44.0, 13727.0], [44.1, 13743.0], [44.2, 13743.0], [44.3, 13940.0], [44.4, 13940.0], [44.5, 13970.0], [44.6, 13970.0], [44.7, 14086.0], [44.8, 14086.0], [44.9, 14086.0], [45.0, 14128.0], [45.1, 14128.0], [45.2, 14152.0], [45.3, 14152.0], [45.4, 14163.0], [45.5, 14163.0], [45.6, 14190.0], [45.7, 14224.0], [45.8, 14224.0], [45.9, 14236.0], [46.0, 14236.0], [46.1, 14288.0], [46.2, 14288.0], [46.3, 14429.0], [46.4, 14485.0], [46.5, 14485.0], [46.6, 14610.0], [46.7, 14610.0], [46.8, 14657.0], [46.9, 14657.0], [47.0, 14727.0], [47.1, 14754.0], [47.2, 14754.0], [47.3, 14776.0], [47.4, 14776.0], [47.5, 14896.0], [47.6, 14896.0], [47.7, 14956.0], [47.8, 14979.0], [47.9, 14979.0], [48.0, 14989.0], [48.1, 14989.0], [48.2, 15082.0], [48.3, 15082.0], [48.4, 15162.0], [48.5, 15162.0], [48.6, 15235.0], [48.7, 15319.0], [48.8, 15319.0], [48.9, 15327.0], [49.0, 15327.0], [49.1, 15409.0], [49.2, 15409.0], [49.3, 15482.0], [49.4, 15570.0], [49.5, 15570.0], [49.6, 15638.0], [49.7, 15638.0], [49.8, 15661.0], [49.9, 15661.0], [50.0, 15723.0], [50.1, 15731.0], [50.2, 15731.0], [50.3, 15745.0], [50.4, 15745.0], [50.5, 16018.0], [50.6, 16018.0], [50.7, 16026.0], [50.8, 16029.0], [50.9, 16029.0], [51.0, 16089.0], [51.1, 16089.0], [51.2, 16151.0], [51.3, 16151.0], [51.4, 16172.0], [51.5, 16175.0], [51.6, 16175.0], [51.7, 16204.0], [51.8, 16204.0], [51.9, 16350.0], [52.0, 16350.0], [52.1, 16372.0], [52.2, 16372.0], [52.3, 16522.0], [52.4, 16594.0], [52.5, 16594.0], [52.6, 16736.0], [52.7, 16736.0], [52.8, 16762.0], [52.9, 16762.0], [53.0, 16780.0], [53.1, 16822.0], [53.2, 16822.0], [53.3, 16823.0], [53.4, 16823.0], [53.5, 17023.0], [53.6, 17023.0], [53.7, 17027.0], [53.8, 17176.0], [53.9, 17176.0], [54.0, 17211.0], [54.1, 17211.0], [54.2, 17241.0], [54.3, 17241.0], [54.4, 17262.0], [54.5, 17285.0], [54.6, 17285.0], [54.7, 17338.0], [54.8, 17338.0], [54.9, 17439.0], [55.0, 17439.0], [55.1, 17551.0], [55.2, 17551.0], [55.3, 17563.0], [55.4, 17650.0], [55.5, 17650.0], [55.6, 17743.0], [55.7, 17743.0], [55.8, 17846.0], [55.9, 17846.0], [56.0, 17881.0], [56.1, 17991.0], [56.2, 17991.0], [56.3, 18065.0], [56.4, 18065.0], [56.5, 18070.0], [56.6, 18070.0], [56.7, 18128.0], [56.8, 18151.0], [56.9, 18151.0], [57.0, 18164.0], [57.1, 18164.0], [57.2, 18216.0], [57.3, 18216.0], [57.4, 18219.0], [57.5, 18237.0], [57.6, 18237.0], [57.7, 18269.0], [57.8, 18269.0], [57.9, 18318.0], [58.0, 18318.0], [58.1, 18320.0], [58.2, 18320.0], [58.3, 18344.0], [58.4, 18444.0], [58.5, 18444.0], [58.6, 18485.0], [58.7, 18485.0], [58.8, 18515.0], [58.9, 18515.0], [59.0, 18606.0], [59.1, 18641.0], [59.2, 18641.0], [59.3, 18645.0], [59.4, 18645.0], [59.5, 18650.0], [59.6, 18650.0], [59.7, 18839.0], [59.8, 18864.0], [59.9, 18864.0], [60.0, 18864.0], [60.1, 18864.0], [60.2, 18897.0], [60.3, 18897.0], [60.4, 18905.0], [60.5, 18991.0], [60.6, 18991.0], [60.7, 19005.0], [60.8, 19005.0], [60.9, 19255.0], [61.0, 19255.0], [61.1, 19324.0], [61.2, 19434.0], [61.3, 19434.0], [61.4, 19487.0], [61.5, 19487.0], [61.6, 19583.0], [61.7, 19583.0], [61.8, 19610.0], [61.9, 19610.0], [62.0, 19671.0], [62.1, 19687.0], [62.2, 19687.0], [62.3, 19721.0], [62.4, 19721.0], [62.5, 19824.0], [62.6, 19824.0], [62.7, 19859.0], [62.8, 19901.0], [62.9, 19901.0], [63.0, 19942.0], [63.1, 19942.0], [63.2, 19981.0], [63.3, 19981.0], [63.4, 20051.0], [63.5, 20054.0], [63.6, 20054.0], [63.7, 20069.0], [63.8, 20069.0], [63.9, 20123.0], [64.0, 20123.0], [64.1, 20131.0], [64.2, 20144.0], [64.3, 20144.0], [64.4, 20145.0], [64.5, 20145.0], [64.6, 20171.0], [64.7, 20171.0], [64.8, 20213.0], [64.9, 20213.0], [65.0, 20237.0], [65.1, 20240.0], [65.2, 20240.0], [65.3, 20304.0], [65.4, 20304.0], [65.5, 20501.0], [65.6, 20501.0], [65.7, 20533.0], [65.8, 20583.0], [65.9, 20583.0], [66.0, 20834.0], [66.1, 20834.0], [66.2, 20864.0], [66.3, 20864.0], [66.4, 20926.0], [66.5, 20948.0], [66.6, 20948.0], [66.7, 20982.0], [66.8, 20982.0], [66.9, 21013.0], [67.0, 21013.0], [67.1, 21099.0], [67.2, 21163.0], [67.3, 21163.0], [67.4, 21249.0], [67.5, 21249.0], [67.6, 21279.0], [67.7, 21279.0], [67.8, 21335.0], [67.9, 21335.0], [68.0, 21485.0], [68.1, 21619.0], [68.2, 21619.0], [68.3, 21652.0], [68.4, 21652.0], [68.5, 21672.0], [68.6, 21672.0], [68.7, 21679.0], [68.8, 21725.0], [68.9, 21725.0], [69.0, 21726.0], [69.1, 21726.0], [69.2, 21797.0], [69.3, 21797.0], [69.4, 21862.0], [69.5, 21997.0], [69.6, 21997.0], [69.7, 22049.0], [69.8, 22049.0], [69.9, 22074.0], [70.0, 22074.0], [70.1, 22109.0], [70.2, 22242.0], [70.3, 22242.0], [70.4, 22294.0], [70.5, 22294.0], [70.6, 22409.0], [70.7, 22409.0], [70.8, 22537.0], [70.9, 22654.0], [71.0, 22654.0], [71.1, 22677.0], [71.2, 22677.0], [71.3, 22749.0], [71.4, 22749.0], [71.5, 22758.0], [71.6, 22758.0], [71.7, 22786.0], [71.8, 22873.0], [71.9, 22873.0], [72.0, 22929.0], [72.1, 22929.0], [72.2, 22946.0], [72.3, 22946.0], [72.4, 22951.0], [72.5, 23015.0], [72.6, 23015.0], [72.7, 23060.0], [72.8, 23060.0], [72.9, 23092.0], [73.0, 23092.0], [73.1, 23138.0], [73.2, 23251.0], [73.3, 23251.0], [73.4, 23282.0], [73.5, 23282.0], [73.6, 23354.0], [73.7, 23354.0], [73.8, 23405.0], [73.9, 23460.0], [74.0, 23460.0], [74.1, 23648.0], [74.2, 23648.0], [74.3, 23804.0], [74.4, 23804.0], [74.5, 23879.0], [74.6, 23879.0], [74.7, 23892.0], [74.8, 23948.0], [74.9, 23948.0], [75.0, 24012.0], [75.1, 24012.0], [75.2, 24036.0], [75.3, 24036.0], [75.4, 24095.0], [75.5, 24098.0], [75.6, 24098.0], [75.7, 24219.0], [75.8, 24219.0], [75.9, 24261.0], [76.0, 24261.0], [76.1, 24264.0], [76.2, 24338.0], [76.3, 24338.0], [76.4, 24349.0], [76.5, 24349.0], [76.6, 24356.0], [76.7, 24356.0], [76.8, 24373.0], [76.9, 24430.0], [77.0, 24430.0], [77.1, 24447.0], [77.2, 24447.0], [77.3, 24466.0], [77.4, 24466.0], [77.5, 24487.0], [77.6, 24487.0], [77.7, 24574.0], [77.8, 24846.0], [77.9, 24846.0], [78.0, 24908.0], [78.1, 24908.0], [78.2, 24970.0], [78.3, 24970.0], [78.4, 25076.0], [78.5, 25288.0], [78.6, 25288.0], [78.7, 25290.0], [78.8, 25290.0], [78.9, 25319.0], [79.0, 25319.0], [79.1, 25336.0], [79.2, 25455.0], [79.3, 25455.0], [79.4, 25559.0], [79.5, 25559.0], [79.6, 25629.0], [79.7, 25629.0], [79.8, 25675.0], [79.9, 25710.0], [80.0, 25710.0], [80.1, 25757.0], [80.2, 25757.0], [80.3, 25779.0], [80.4, 25779.0], [80.5, 25800.0], [80.6, 25866.0], [80.7, 25866.0], [80.8, 25891.0], [80.9, 25891.0], [81.0, 25910.0], [81.1, 25910.0], [81.2, 25958.0], [81.3, 25958.0], [81.4, 26135.0], [81.5, 26144.0], [81.6, 26144.0], [81.7, 26358.0], [81.8, 26358.0], [81.9, 26453.0], [82.0, 26453.0], [82.1, 26663.0], [82.2, 26758.0], [82.3, 26758.0], [82.4, 26764.0], [82.5, 26764.0], [82.6, 26867.0], [82.7, 26867.0], [82.8, 26905.0], [82.9, 26962.0], [83.0, 26962.0], [83.1, 26987.0], [83.2, 26987.0], [83.3, 27010.0], [83.4, 27010.0], [83.5, 27045.0], [83.6, 27184.0], [83.7, 27184.0], [83.8, 27275.0], [83.9, 27275.0], [84.0, 27283.0], [84.1, 27283.0], [84.2, 27484.0], [84.3, 27484.0], [84.4, 27601.0], [84.5, 27789.0], [84.6, 27789.0], [84.7, 27951.0], [84.8, 27951.0], [84.9, 28173.0], [85.0, 28173.0], [85.1, 28290.0], [85.2, 28342.0], [85.3, 28342.0], [85.4, 28612.0], [85.5, 28612.0], [85.6, 28685.0], [85.7, 28685.0], [85.8, 28689.0], [85.9, 28723.0], [86.0, 28723.0], [86.1, 28747.0], [86.2, 28747.0], [86.3, 28834.0], [86.4, 28834.0], [86.5, 28845.0], [86.6, 29009.0], [86.7, 29009.0], [86.8, 29051.0], [86.9, 29051.0], [87.0, 29226.0], [87.1, 29226.0], [87.2, 29340.0], [87.3, 29340.0], [87.4, 29408.0], [87.5, 29532.0], [87.6, 29532.0], [87.7, 29719.0], [87.8, 29719.0], [87.9, 29759.0], [88.0, 29759.0], [88.1, 30129.0], [88.2, 30325.0], [88.3, 30325.0], [88.4, 30997.0], [88.5, 30997.0], [88.6, 31200.0], [88.7, 31200.0], [88.8, 31541.0], [88.9, 31596.0], [89.0, 31596.0], [89.1, 31795.0], [89.2, 31795.0], [89.3, 31919.0], [89.4, 31919.0], [89.5, 32086.0], [89.6, 32206.0], [89.7, 32206.0], [89.8, 32308.0], [89.9, 32308.0], [90.0, 32374.0], [90.1, 32374.0], [90.2, 32385.0], [90.3, 32492.0], [90.4, 32492.0], [90.5, 32576.0], [90.6, 32576.0], [90.7, 33318.0], [90.8, 33318.0], [90.9, 33437.0], [91.0, 33437.0], [91.1, 33443.0], [91.2, 33888.0], [91.3, 33888.0], [91.4, 34106.0], [91.5, 34106.0], [91.6, 34230.0], [91.7, 34230.0], [91.8, 34526.0], [91.9, 35197.0], [92.0, 35197.0], [92.1, 36753.0], [92.2, 36753.0], [92.3, 36987.0], [92.4, 36987.0], [92.5, 37120.0], [92.6, 37167.0], [92.7, 37167.0], [92.8, 37516.0], [92.9, 37516.0], [93.0, 38293.0], [93.1, 38293.0], [93.2, 38337.0], [93.3, 38502.0], [93.4, 38502.0], [93.5, 38764.0], [93.6, 38764.0], [93.7, 39020.0], [93.8, 39020.0], [93.9, 39174.0], [94.0, 39174.0], [94.1, 39216.0], [94.2, 39320.0], [94.3, 39320.0], [94.4, 39368.0], [94.5, 39368.0], [94.6, 39455.0], [94.7, 39455.0], [94.8, 39897.0], [94.9, 40906.0], [95.0, 40906.0], [95.1, 40987.0], [95.2, 40987.0], [95.3, 41166.0], [95.4, 41166.0], [95.5, 41405.0], [95.6, 42625.0], [95.7, 42625.0], [95.8, 42763.0], [95.9, 42763.0], [96.0, 43057.0], [96.1, 43057.0], [96.2, 43149.0], [96.3, 43292.0], [96.4, 43292.0], [96.5, 43950.0], [96.6, 43950.0], [96.7, 44569.0], [96.8, 44569.0], [96.9, 46010.0], [97.0, 46010.0], [97.1, 46410.0], [97.2, 47022.0], [97.3, 47022.0], [97.4, 48421.0], [97.5, 48421.0], [97.6, 50749.0], [97.7, 50749.0], [97.8, 51933.0], [97.9, 53272.0], [98.0, 53272.0], [98.1, 54372.0], [98.2, 54372.0], [98.3, 59090.0], [98.4, 59090.0], [98.5, 59442.0], [98.6, 60120.0], [98.7, 60120.0], [98.8, 60151.0], [98.9, 60151.0], [99.0, 60156.0], [99.1, 60156.0], [99.2, 60157.0], [99.3, 60162.0], [99.4, 60162.0], [99.5, 60178.0], [99.6, 60178.0], [99.7, 60268.0], [99.8, 60268.0], [99.9, 60395.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 210.0], [0.1, 210.0], [0.2, 210.0], [0.3, 210.0], [0.4, 210.0], [0.5, 210.0], [0.6, 211.0], [0.7, 211.0], [0.8, 211.0], [0.9, 212.0], [1.0, 212.0], [1.1, 212.0], [1.2, 212.0], [1.3, 212.0], [1.4, 213.0], [1.5, 213.0], [1.6, 213.0], [1.7, 213.0], [1.8, 213.0], [1.9, 213.0], [2.0, 213.0], [2.1, 214.0], [2.2, 214.0], [2.3, 214.0], [2.4, 214.0], [2.5, 214.0], [2.6, 214.0], [2.7, 214.0], [2.8, 214.0], [2.9, 214.0], [3.0, 214.0], [3.1, 214.0], [3.2, 214.0], [3.3, 214.0], [3.4, 214.0], [3.5, 214.0], [3.6, 214.0], [3.7, 214.0], [3.8, 214.0], [3.9, 215.0], [4.0, 215.0], [4.1, 215.0], [4.2, 215.0], [4.3, 215.0], [4.4, 215.0], [4.5, 215.0], [4.6, 215.0], [4.7, 215.0], [4.8, 215.0], [4.9, 215.0], [5.0, 215.0], [5.1, 215.0], [5.2, 215.0], [5.3, 215.0], [5.4, 215.0], [5.5, 215.0], [5.6, 216.0], [5.7, 216.0], [5.8, 216.0], [5.9, 216.0], [6.0, 216.0], [6.1, 216.0], [6.2, 216.0], [6.3, 216.0], [6.4, 216.0], [6.5, 216.0], [6.6, 216.0], [6.7, 216.0], [6.8, 217.0], [6.9, 217.0], [7.0, 217.0], [7.1, 217.0], [7.2, 217.0], [7.3, 217.0], [7.4, 217.0], [7.5, 217.0], [7.6, 217.0], [7.7, 218.0], [7.8, 218.0], [7.9, 218.0], [8.0, 218.0], [8.1, 218.0], [8.2, 218.0], [8.3, 218.0], [8.4, 218.0], [8.5, 218.0], [8.6, 218.0], [8.7, 218.0], [8.8, 218.0], [8.9, 219.0], [9.0, 219.0], [9.1, 219.0], [9.2, 219.0], [9.3, 219.0], [9.4, 219.0], [9.5, 220.0], [9.6, 220.0], [9.7, 220.0], [9.8, 220.0], [9.9, 220.0], [10.0, 220.0], [10.1, 220.0], [10.2, 221.0], [10.3, 222.0], [10.4, 222.0], [10.5, 222.0], [10.6, 222.0], [10.7, 223.0], [10.8, 223.0], [10.9, 223.0], [11.0, 223.0], [11.1, 223.0], [11.2, 223.0], [11.3, 223.0], [11.4, 223.0], [11.5, 224.0], [11.6, 224.0], [11.7, 224.0], [11.8, 224.0], [11.9, 225.0], [12.0, 225.0], [12.1, 225.0], [12.2, 226.0], [12.3, 226.0], [12.4, 226.0], [12.5, 226.0], [12.6, 226.0], [12.7, 226.0], [12.8, 227.0], [12.9, 227.0], [13.0, 227.0], [13.1, 228.0], [13.2, 228.0], [13.3, 228.0], [13.4, 228.0], [13.5, 228.0], [13.6, 228.0], [13.7, 228.0], [13.8, 229.0], [13.9, 229.0], [14.0, 231.0], [14.1, 231.0], [14.2, 231.0], [14.3, 231.0], [14.4, 231.0], [14.5, 232.0], [14.6, 232.0], [14.7, 232.0], [14.8, 232.0], [14.9, 232.0], [15.0, 233.0], [15.1, 233.0], [15.2, 233.0], [15.3, 233.0], [15.4, 233.0], [15.5, 233.0], [15.6, 234.0], [15.7, 234.0], [15.8, 234.0], [15.9, 234.0], [16.0, 234.0], [16.1, 235.0], [16.2, 235.0], [16.3, 235.0], [16.4, 236.0], [16.5, 236.0], [16.6, 237.0], [16.7, 237.0], [16.8, 237.0], [16.9, 237.0], [17.0, 237.0], [17.1, 238.0], [17.2, 238.0], [17.3, 239.0], [17.4, 239.0], [17.5, 240.0], [17.6, 241.0], [17.7, 241.0], [17.8, 241.0], [17.9, 241.0], [18.0, 241.0], [18.1, 241.0], [18.2, 241.0], [18.3, 242.0], [18.4, 242.0], [18.5, 242.0], [18.6, 242.0], [18.7, 248.0], [18.8, 248.0], [18.9, 248.0], [19.0, 248.0], [19.1, 248.0], [19.2, 249.0], [19.3, 249.0], [19.4, 249.0], [19.5, 249.0], [19.6, 250.0], [19.7, 253.0], [19.8, 253.0], [19.9, 254.0], [20.0, 254.0], [20.1, 257.0], [20.2, 257.0], [20.3, 257.0], [20.4, 259.0], [20.5, 259.0], [20.6, 259.0], [20.7, 259.0], [20.8, 263.0], [20.9, 263.0], [21.0, 264.0], [21.1, 265.0], [21.2, 265.0], [21.3, 271.0], [21.4, 271.0], [21.5, 273.0], [21.6, 273.0], [21.7, 273.0], [21.8, 274.0], [21.9, 274.0], [22.0, 274.0], [22.1, 274.0], [22.2, 275.0], [22.3, 275.0], [22.4, 275.0], [22.5, 278.0], [22.6, 278.0], [22.7, 279.0], [22.8, 279.0], [22.9, 285.0], [23.0, 285.0], [23.1, 285.0], [23.2, 288.0], [23.3, 288.0], [23.4, 291.0], [23.5, 291.0], [23.6, 291.0], [23.7, 292.0], [23.8, 292.0], [23.9, 292.0], [24.0, 292.0], [24.1, 293.0], [24.2, 293.0], [24.3, 293.0], [24.4, 295.0], [24.5, 295.0], [24.6, 296.0], [24.7, 296.0], [24.8, 296.0], [24.9, 296.0], [25.0, 298.0], [25.1, 299.0], [25.2, 299.0], [25.3, 299.0], [25.4, 299.0], [25.5, 299.0], [25.6, 299.0], [25.7, 300.0], [25.8, 300.0], [25.9, 300.0], [26.0, 301.0], [26.1, 301.0], [26.2, 301.0], [26.3, 301.0], [26.4, 302.0], [26.5, 302.0], [26.6, 302.0], [26.7, 302.0], [26.8, 302.0], [26.9, 302.0], [27.0, 302.0], [27.1, 302.0], [27.2, 303.0], [27.3, 303.0], [27.4, 303.0], [27.5, 303.0], [27.6, 303.0], [27.7, 303.0], [27.8, 304.0], [27.9, 304.0], [28.0, 304.0], [28.1, 304.0], [28.2, 304.0], [28.3, 304.0], [28.4, 304.0], [28.5, 304.0], [28.6, 304.0], [28.7, 304.0], [28.8, 304.0], [28.9, 304.0], [29.0, 304.0], [29.1, 304.0], [29.2, 304.0], [29.3, 304.0], [29.4, 304.0], [29.5, 305.0], [29.6, 305.0], [29.7, 305.0], [29.8, 305.0], [29.9, 305.0], [30.0, 305.0], [30.1, 305.0], [30.2, 305.0], [30.3, 305.0], [30.4, 305.0], [30.5, 305.0], [30.6, 305.0], [30.7, 305.0], [30.8, 305.0], [30.9, 305.0], [31.0, 305.0], [31.1, 305.0], [31.2, 305.0], [31.3, 305.0], [31.4, 305.0], [31.5, 305.0], [31.6, 305.0], [31.7, 305.0], [31.8, 305.0], [31.9, 305.0], [32.0, 305.0], [32.1, 305.0], [32.2, 305.0], [32.3, 305.0], [32.4, 305.0], [32.5, 305.0], [32.6, 305.0], [32.7, 305.0], [32.8, 305.0], [32.9, 305.0], [33.0, 305.0], [33.1, 305.0], [33.2, 306.0], [33.3, 306.0], [33.4, 306.0], [33.5, 306.0], [33.6, 306.0], [33.7, 306.0], [33.8, 306.0], [33.9, 306.0], [34.0, 306.0], [34.1, 306.0], [34.2, 306.0], [34.3, 306.0], [34.4, 306.0], [34.5, 306.0], [34.6, 306.0], [34.7, 306.0], [34.8, 306.0], [34.9, 306.0], [35.0, 306.0], [35.1, 306.0], [35.2, 306.0], [35.3, 306.0], [35.4, 306.0], [35.5, 306.0], [35.6, 306.0], [35.7, 306.0], [35.8, 306.0], [35.9, 306.0], [36.0, 306.0], [36.1, 306.0], [36.2, 306.0], [36.3, 306.0], [36.4, 306.0], [36.5, 306.0], [36.6, 307.0], [36.7, 307.0], [36.8, 307.0], [36.9, 307.0], [37.0, 307.0], [37.1, 307.0], [37.2, 307.0], [37.3, 307.0], [37.4, 307.0], [37.5, 307.0], [37.6, 307.0], [37.7, 307.0], [37.8, 307.0], [37.9, 307.0], [38.0, 307.0], [38.1, 307.0], [38.2, 308.0], [38.3, 308.0], [38.4, 308.0], [38.5, 308.0], [38.6, 308.0], [38.7, 309.0], [38.8, 309.0], [38.9, 309.0], [39.0, 309.0], [39.1, 309.0], [39.2, 309.0], [39.3, 309.0], [39.4, 309.0], [39.5, 309.0], [39.6, 309.0], [39.7, 309.0], [39.8, 309.0], [39.9, 310.0], [40.0, 310.0], [40.1, 310.0], [40.2, 310.0], [40.3, 310.0], [40.4, 310.0], [40.5, 310.0], [40.6, 311.0], [40.7, 311.0], [40.8, 312.0], [40.9, 312.0], [41.0, 312.0], [41.1, 312.0], [41.2, 312.0], [41.3, 312.0], [41.4, 312.0], [41.5, 312.0], [41.6, 312.0], [41.7, 313.0], [41.8, 313.0], [41.9, 313.0], [42.0, 313.0], [42.1, 313.0], [42.2, 313.0], [42.3, 313.0], [42.4, 314.0], [42.5, 314.0], [42.6, 314.0], [42.7, 314.0], [42.8, 314.0], [42.9, 314.0], [43.0, 314.0], [43.1, 315.0], [43.2, 315.0], [43.3, 315.0], [43.4, 315.0], [43.5, 315.0], [43.6, 315.0], [43.7, 315.0], [43.8, 316.0], [43.9, 316.0], [44.0, 316.0], [44.1, 316.0], [44.2, 316.0], [44.3, 316.0], [44.4, 316.0], [44.5, 316.0], [44.6, 317.0], [44.7, 317.0], [44.8, 319.0], [44.9, 319.0], [45.0, 319.0], [45.1, 319.0], [45.2, 320.0], [45.3, 320.0], [45.4, 320.0], [45.5, 320.0], [45.6, 320.0], [45.7, 321.0], [45.8, 321.0], [45.9, 321.0], [46.0, 322.0], [46.1, 322.0], [46.2, 323.0], [46.3, 323.0], [46.4, 323.0], [46.5, 323.0], [46.6, 323.0], [46.7, 324.0], [46.8, 324.0], [46.9, 325.0], [47.0, 325.0], [47.1, 325.0], [47.2, 325.0], [47.3, 327.0], [47.4, 327.0], [47.5, 327.0], [47.6, 327.0], [47.7, 327.0], [47.8, 327.0], [47.9, 327.0], [48.0, 328.0], [48.1, 329.0], [48.2, 329.0], [48.3, 329.0], [48.4, 329.0], [48.5, 329.0], [48.6, 329.0], [48.7, 330.0], [48.8, 330.0], [48.9, 330.0], [49.0, 330.0], [49.1, 330.0], [49.2, 330.0], [49.3, 330.0], [49.4, 332.0], [49.5, 332.0], [49.6, 332.0], [49.7, 333.0], [49.8, 333.0], [49.9, 333.0], [50.0, 334.0], [50.1, 334.0], [50.2, 334.0], [50.3, 334.0], [50.4, 335.0], [50.5, 335.0], [50.6, 335.0], [50.7, 336.0], [50.8, 336.0], [50.9, 337.0], [51.0, 337.0], [51.1, 338.0], [51.2, 338.0], [51.3, 339.0], [51.4, 340.0], [51.5, 340.0], [51.6, 341.0], [51.7, 341.0], [51.8, 341.0], [51.9, 341.0], [52.0, 344.0], [52.1, 344.0], [52.2, 344.0], [52.3, 345.0], [52.4, 345.0], [52.5, 345.0], [52.6, 345.0], [52.7, 346.0], [52.8, 347.0], [52.9, 347.0], [53.0, 347.0], [53.1, 347.0], [53.2, 352.0], [53.3, 352.0], [53.4, 352.0], [53.5, 352.0], [53.6, 352.0], [53.7, 354.0], [53.8, 354.0], [53.9, 354.0], [54.0, 354.0], [54.1, 354.0], [54.2, 355.0], [54.3, 355.0], [54.4, 357.0], [54.5, 357.0], [54.6, 357.0], [54.7, 357.0], [54.8, 360.0], [54.9, 361.0], [55.0, 361.0], [55.1, 363.0], [55.2, 363.0], [55.3, 364.0], [55.4, 364.0], [55.5, 365.0], [55.6, 367.0], [55.7, 367.0], [55.8, 367.0], [55.9, 367.0], [56.0, 367.0], [56.1, 368.0], [56.2, 368.0], [56.3, 369.0], [56.4, 369.0], [56.5, 369.0], [56.6, 369.0], [56.7, 372.0], [56.8, 373.0], [56.9, 373.0], [57.0, 374.0], [57.1, 374.0], [57.2, 374.0], [57.3, 374.0], [57.4, 377.0], [57.5, 379.0], [57.6, 379.0], [57.7, 379.0], [57.8, 379.0], [57.9, 383.0], [58.0, 383.0], [58.1, 383.0], [58.2, 385.0], [58.3, 385.0], [58.4, 386.0], [58.5, 386.0], [58.6, 388.0], [58.7, 388.0], [58.8, 391.0], [58.9, 392.0], [59.0, 392.0], [59.1, 394.0], [59.2, 394.0], [59.3, 395.0], [59.4, 395.0], [59.5, 395.0], [59.6, 396.0], [59.7, 396.0], [59.8, 397.0], [59.9, 397.0], [60.0, 397.0], [60.1, 397.0], [60.2, 398.0], [60.3, 399.0], [60.4, 399.0], [60.5, 400.0], [60.6, 400.0], [60.7, 400.0], [60.8, 400.0], [60.9, 401.0], [61.0, 402.0], [61.1, 402.0], [61.2, 402.0], [61.3, 402.0], [61.4, 403.0], [61.5, 404.0], [61.6, 404.0], [61.7, 404.0], [61.8, 404.0], [61.9, 404.0], [62.0, 404.0], [62.1, 404.0], [62.2, 404.0], [62.3, 404.0], [62.4, 405.0], [62.5, 405.0], [62.6, 405.0], [62.7, 405.0], [62.8, 405.0], [62.9, 405.0], [63.0, 405.0], [63.1, 405.0], [63.2, 405.0], [63.3, 405.0], [63.4, 405.0], [63.5, 405.0], [63.6, 405.0], [63.7, 405.0], [63.8, 405.0], [63.9, 405.0], [64.0, 405.0], [64.1, 405.0], [64.2, 406.0], [64.3, 406.0], [64.4, 406.0], [64.5, 406.0], [64.6, 406.0], [64.7, 406.0], [64.8, 406.0], [64.9, 406.0], [65.0, 406.0], [65.1, 406.0], [65.2, 406.0], [65.3, 406.0], [65.4, 406.0], [65.5, 406.0], [65.6, 406.0], [65.7, 406.0], [65.8, 406.0], [65.9, 406.0], [66.0, 406.0], [66.1, 406.0], [66.2, 406.0], [66.3, 406.0], [66.4, 406.0], [66.5, 406.0], [66.6, 407.0], [66.7, 407.0], [66.8, 407.0], [66.9, 407.0], [67.0, 407.0], [67.1, 407.0], [67.2, 407.0], [67.3, 407.0], [67.4, 407.0], [67.5, 407.0], [67.6, 407.0], [67.7, 407.0], [67.8, 407.0], [67.9, 407.0], [68.0, 407.0], [68.1, 407.0], [68.2, 407.0], [68.3, 407.0], [68.4, 407.0], [68.5, 407.0], [68.6, 407.0], [68.7, 407.0], [68.8, 407.0], [68.9, 407.0], [69.0, 407.0], [69.1, 407.0], [69.2, 407.0], [69.3, 407.0], [69.4, 407.0], [69.5, 407.0], [69.6, 407.0], [69.7, 407.0], [69.8, 407.0], [69.9, 407.0], [70.0, 407.0], [70.1, 407.0], [70.2, 407.0], [70.3, 407.0], [70.4, 407.0], [70.5, 407.0], [70.6, 407.0], [70.7, 407.0], [70.8, 407.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 407.0], [71.8, 407.0], [71.9, 407.0], [72.0, 407.0], [72.1, 407.0], [72.2, 407.0], [72.3, 407.0], [72.4, 407.0], [72.5, 407.0], [72.6, 407.0], [72.7, 407.0], [72.8, 407.0], [72.9, 407.0], [73.0, 407.0], [73.1, 407.0], [73.2, 407.0], [73.3, 407.0], [73.4, 407.0], [73.5, 407.0], [73.6, 407.0], [73.7, 407.0], [73.8, 407.0], [73.9, 407.0], [74.0, 407.0], [74.1, 407.0], [74.2, 407.0], [74.3, 407.0], [74.4, 407.0], [74.5, 407.0], [74.6, 407.0], [74.7, 407.0], [74.8, 407.0], [74.9, 407.0], [75.0, 407.0], [75.1, 407.0], [75.2, 407.0], [75.3, 407.0], [75.4, 407.0], [75.5, 407.0], [75.6, 407.0], [75.7, 407.0], [75.8, 407.0], [75.9, 407.0], [76.0, 408.0], [76.1, 408.0], [76.2, 408.0], [76.3, 408.0], [76.4, 408.0], [76.5, 408.0], [76.6, 408.0], [76.7, 408.0], [76.8, 408.0], [76.9, 408.0], [77.0, 408.0], [77.1, 408.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 408.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 408.0], [79.2, 408.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 408.0], [80.4, 408.0], [80.5, 408.0], [80.6, 408.0], [80.7, 408.0], [80.8, 408.0], [80.9, 408.0], [81.0, 408.0], [81.1, 408.0], [81.2, 408.0], [81.3, 408.0], [81.4, 408.0], [81.5, 408.0], [81.6, 408.0], [81.7, 408.0], [81.8, 408.0], [81.9, 408.0], [82.0, 408.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 408.0], [82.9, 408.0], [83.0, 408.0], [83.1, 408.0], [83.2, 408.0], [83.3, 408.0], [83.4, 408.0], [83.5, 408.0], [83.6, 408.0], [83.7, 408.0], [83.8, 408.0], [83.9, 408.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 408.0], [84.4, 408.0], [84.5, 408.0], [84.6, 408.0], [84.7, 408.0], [84.8, 408.0], [84.9, 408.0], [85.0, 408.0], [85.1, 408.0], [85.2, 408.0], [85.3, 408.0], [85.4, 408.0], [85.5, 408.0], [85.6, 408.0], [85.7, 408.0], [85.8, 408.0], [85.9, 408.0], [86.0, 408.0], [86.1, 408.0], [86.2, 408.0], [86.3, 409.0], [86.4, 409.0], [86.5, 409.0], [86.6, 409.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 409.0], [87.2, 409.0], [87.3, 409.0], [87.4, 409.0], [87.5, 409.0], [87.6, 409.0], [87.7, 409.0], [87.8, 409.0], [87.9, 409.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 409.0], [89.1, 409.0], [89.2, 409.0], [89.3, 409.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 409.0], [90.3, 409.0], [90.4, 409.0], [90.5, 409.0], [90.6, 409.0], [90.7, 409.0], [90.8, 409.0], [90.9, 409.0], [91.0, 410.0], [91.1, 410.0], [91.2, 411.0], [91.3, 414.0], [91.4, 414.0], [91.5, 416.0], [91.6, 416.0], [91.7, 418.0], [91.8, 418.0], [91.9, 421.0], [92.0, 422.0], [92.1, 422.0], [92.2, 425.0], [92.3, 425.0], [92.4, 426.0], [92.5, 426.0], [92.6, 428.0], [92.7, 432.0], [92.8, 432.0], [92.9, 443.0], [93.0, 443.0], [93.1, 445.0], [93.2, 445.0], [93.3, 454.0], [93.4, 457.0], [93.5, 457.0], [93.6, 460.0], [93.7, 460.0], [93.8, 472.0], [93.9, 472.0], [94.0, 474.0], [94.1, 474.0], [94.2, 474.0], [94.3, 481.0], [94.4, 481.0], [94.5, 487.0], [94.6, 487.0], [94.7, 487.0], [94.8, 493.0], [94.9, 493.0], [95.0, 507.0], [95.1, 507.0], [95.2, 507.0], [95.3, 508.0], [95.4, 508.0], [95.5, 508.0], [95.6, 508.0], [95.7, 509.0], [95.8, 509.0], [95.9, 509.0], [96.0, 509.0], [96.1, 509.0], [96.2, 509.0], [96.3, 509.0], [96.4, 510.0], [96.5, 510.0], [96.6, 510.0], [96.7, 510.0], [96.8, 510.0], [96.9, 510.0], [97.0, 510.0], [97.1, 510.0], [97.2, 510.0], [97.3, 510.0], [97.4, 510.0], [97.5, 510.0], [97.6, 510.0], [97.7, 510.0], [97.8, 510.0], [97.9, 510.0], [98.0, 511.0], [98.1, 511.0], [98.2, 511.0], [98.3, 512.0], [98.4, 512.0], [98.5, 512.0], [98.6, 512.0], [98.7, 534.0], [98.8, 555.0], [98.9, 555.0], [99.0, 612.0], [99.1, 612.0], [99.2, 615.0], [99.3, 615.0], [99.4, 661.0], [99.5, 716.0], [99.6, 716.0], [99.7, 1308.0], [99.8, 1308.0], [99.9, 3481.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 200.0, "series": [{"data": [[32900.0, 1.0], [34900.0, 1.0], [37300.0, 2.0], [39300.0, 1.0], [39700.0, 1.0], [41300.0, 1.0], [43300.0, 1.0], [52100.0, 1.0], [60500.0, 4.0], [300.0, 16.0], [400.0, 46.0], [500.0, 46.0], [600.0, 14.0], [700.0, 5.0], [1700.0, 1.0], [5200.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [5900.0, 3.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 2.0], [6400.0, 1.0], [6700.0, 2.0], [6800.0, 2.0], [6900.0, 1.0], [7100.0, 2.0], [7000.0, 1.0], [7200.0, 5.0], [7300.0, 3.0], [7400.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [8100.0, 1.0], [8600.0, 3.0], [8400.0, 1.0], [8200.0, 1.0], [9200.0, 3.0], [9100.0, 3.0], [8800.0, 1.0], [8900.0, 1.0], [9000.0, 1.0], [9500.0, 4.0], [9600.0, 3.0], [9300.0, 1.0], [9800.0, 2.0], [10100.0, 1.0], [10200.0, 2.0], [9900.0, 2.0], [10000.0, 2.0], [10500.0, 2.0], [10400.0, 4.0], [10300.0, 4.0], [10600.0, 2.0], [10700.0, 2.0], [10900.0, 2.0], [11100.0, 1.0], [10800.0, 2.0], [11200.0, 1.0], [11300.0, 1.0], [11400.0, 3.0], [11600.0, 2.0], [11500.0, 1.0], [12200.0, 3.0], [12100.0, 2.0], [11800.0, 2.0], [11900.0, 4.0], [12000.0, 1.0], [12700.0, 2.0], [12500.0, 2.0], [12300.0, 2.0], [12400.0, 2.0], [13000.0, 2.0], [13200.0, 2.0], [12900.0, 1.0], [13500.0, 3.0], [13600.0, 2.0], [14200.0, 2.0], [14100.0, 2.0], [14300.0, 2.0], [13900.0, 1.0], [14500.0, 5.0], [14600.0, 2.0], [14800.0, 1.0], [14700.0, 1.0], [15200.0, 1.0], [15300.0, 4.0], [15100.0, 2.0], [15000.0, 2.0], [14900.0, 1.0], [15700.0, 1.0], [15800.0, 3.0], [15500.0, 2.0], [15400.0, 1.0], [16000.0, 1.0], [16100.0, 1.0], [16200.0, 2.0], [15900.0, 3.0], [16300.0, 2.0], [16400.0, 3.0], [16800.0, 1.0], [17200.0, 3.0], [17000.0, 1.0], [17400.0, 2.0], [18400.0, 3.0], [17800.0, 1.0], [18000.0, 2.0], [18200.0, 2.0], [17600.0, 2.0], [19200.0, 4.0], [18800.0, 4.0], [19400.0, 1.0], [18600.0, 4.0], [19000.0, 1.0], [20000.0, 2.0], [20200.0, 2.0], [20400.0, 3.0], [19600.0, 1.0], [19800.0, 2.0], [20600.0, 2.0], [21200.0, 1.0], [21400.0, 2.0], [20800.0, 1.0], [21000.0, 1.0], [22400.0, 1.0], [22200.0, 2.0], [22000.0, 2.0], [21600.0, 1.0], [23400.0, 2.0], [23200.0, 3.0], [23000.0, 3.0], [22800.0, 2.0], [23800.0, 2.0], [24200.0, 4.0], [24000.0, 1.0], [23600.0, 1.0], [24800.0, 2.0], [24600.0, 1.0], [25000.0, 1.0], [25400.0, 1.0], [26200.0, 2.0], [26000.0, 2.0], [26600.0, 1.0], [25600.0, 1.0], [26400.0, 1.0], [27400.0, 2.0], [27600.0, 2.0], [27200.0, 1.0], [27000.0, 1.0], [26800.0, 1.0], [28600.0, 2.0], [28000.0, 1.0], [27800.0, 1.0], [29000.0, 5.0], [29600.0, 2.0], [29200.0, 1.0], [29800.0, 2.0], [30600.0, 1.0], [30000.0, 1.0], [30400.0, 1.0], [31800.0, 2.0], [32000.0, 1.0], [32400.0, 1.0], [32200.0, 1.0], [32800.0, 1.0], [34400.0, 2.0], [33600.0, 1.0], [37200.0, 1.0], [38800.0, 1.0], [39600.0, 2.0], [41200.0, 2.0], [43600.0, 1.0], [47200.0, 1.0], [51200.0, 1.0], [60400.0, 1.0], [33500.0, 1.0], [37500.0, 1.0], [38700.0, 1.0], [39100.0, 1.0], [43500.0, 1.0], [44300.0, 1.0], [46300.0, 1.0], [48700.0, 1.0], [54700.0, 1.0], [59900.0, 1.0], [60300.0, 1.0], [60700.0, 1.0], [16500.0, 2.0], [17100.0, 3.0], [16900.0, 1.0], [17500.0, 2.0], [17900.0, 1.0], [17700.0, 2.0], [18300.0, 1.0], [18100.0, 1.0], [18500.0, 3.0], [18700.0, 2.0], [19100.0, 1.0], [19300.0, 2.0], [19700.0, 2.0], [20300.0, 5.0], [20100.0, 2.0], [19900.0, 1.0], [19500.0, 1.0], [21300.0, 4.0], [21100.0, 1.0], [20500.0, 3.0], [20900.0, 1.0], [21500.0, 1.0], [21700.0, 2.0], [22300.0, 1.0], [22500.0, 2.0], [21900.0, 4.0], [22100.0, 1.0], [23100.0, 2.0], [23300.0, 2.0], [22900.0, 1.0], [23500.0, 1.0], [22700.0, 1.0], [24500.0, 5.0], [24300.0, 3.0], [24100.0, 1.0], [23900.0, 1.0], [25300.0, 1.0], [24900.0, 1.0], [24700.0, 3.0], [25500.0, 1.0], [25100.0, 1.0], [26100.0, 4.0], [25900.0, 2.0], [26300.0, 1.0], [26500.0, 1.0], [25700.0, 3.0], [27100.0, 2.0], [27300.0, 3.0], [26700.0, 1.0], [28300.0, 2.0], [27700.0, 1.0], [29500.0, 1.0], [29300.0, 1.0], [29100.0, 1.0], [30100.0, 1.0], [31300.0, 1.0], [31500.0, 1.0], [32700.0, 4.0], [33800.0, 1.0], [34200.0, 1.0], [35400.0, 1.0], [37800.0, 1.0], [38600.0, 1.0], [40200.0, 1.0], [39400.0, 1.0], [39800.0, 1.0], [43000.0, 2.0], [41800.0, 1.0], [45000.0, 1.0], [46600.0, 1.0], [53400.0, 1.0], [60600.0, 1.0], [59400.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 102.0], [34500.0, 1.0], [34100.0, 1.0], [33300.0, 1.0], [36900.0, 1.0], [38500.0, 1.0], [39300.0, 2.0], [40900.0, 2.0], [44500.0, 1.0], [200.0, 19.0], [60100.0, 6.0], [1300.0, 1.0], [5000.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5400.0, 2.0], [5600.0, 3.0], [5500.0, 2.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6300.0, 1.0], [6400.0, 3.0], [6600.0, 1.0], [6700.0, 2.0], [6800.0, 3.0], [6900.0, 4.0], [7100.0, 3.0], [7000.0, 2.0], [7400.0, 2.0], [7500.0, 2.0], [7800.0, 1.0], [8300.0, 2.0], [8200.0, 1.0], [8400.0, 1.0], [8600.0, 3.0], [8700.0, 1.0], [8500.0, 1.0], [8900.0, 3.0], [8800.0, 1.0], [9200.0, 1.0], [9000.0, 1.0], [9100.0, 3.0], [9300.0, 3.0], [9500.0, 3.0], [9700.0, 2.0], [9600.0, 1.0], [10200.0, 2.0], [10100.0, 3.0], [10000.0, 4.0], [9800.0, 2.0], [9900.0, 4.0], [10500.0, 3.0], [10700.0, 2.0], [10400.0, 1.0], [10600.0, 1.0], [10300.0, 1.0], [11000.0, 2.0], [11100.0, 3.0], [10900.0, 1.0], [11500.0, 2.0], [11700.0, 4.0], [11400.0, 1.0], [11600.0, 1.0], [11300.0, 2.0], [11800.0, 2.0], [12100.0, 2.0], [12000.0, 4.0], [12200.0, 1.0], [11900.0, 1.0], [12400.0, 1.0], [12600.0, 3.0], [12300.0, 2.0], [12800.0, 1.0], [13200.0, 3.0], [13000.0, 1.0], [13700.0, 2.0], [13600.0, 1.0], [14100.0, 4.0], [13900.0, 2.0], [14200.0, 3.0], [14000.0, 2.0], [14400.0, 2.0], [14800.0, 1.0], [14700.0, 3.0], [14600.0, 2.0], [15300.0, 2.0], [14900.0, 3.0], [15000.0, 1.0], [15200.0, 1.0], [15100.0, 1.0], [15400.0, 2.0], [15600.0, 2.0], [15700.0, 3.0], [15500.0, 1.0], [16300.0, 2.0], [16100.0, 3.0], [16000.0, 4.0], [16200.0, 1.0], [17200.0, 4.0], [17400.0, 1.0], [17000.0, 2.0], [16800.0, 2.0], [18400.0, 2.0], [18000.0, 2.0], [18200.0, 4.0], [17600.0, 1.0], [17800.0, 2.0], [19400.0, 2.0], [18800.0, 4.0], [19000.0, 1.0], [18600.0, 4.0], [19200.0, 1.0], [20200.0, 3.0], [19600.0, 3.0], [19800.0, 2.0], [20000.0, 3.0], [21400.0, 1.0], [20800.0, 2.0], [21000.0, 2.0], [21200.0, 2.0], [22000.0, 2.0], [22200.0, 2.0], [21600.0, 4.0], [21800.0, 1.0], [22400.0, 1.0], [23000.0, 3.0], [23200.0, 2.0], [22600.0, 2.0], [22800.0, 1.0], [23400.0, 2.0], [23800.0, 3.0], [23600.0, 1.0], [24400.0, 4.0], [24200.0, 3.0], [24000.0, 4.0], [25400.0, 1.0], [25200.0, 2.0], [24800.0, 1.0], [25000.0, 1.0], [25800.0, 3.0], [25600.0, 2.0], [26400.0, 1.0], [26600.0, 1.0], [27200.0, 2.0], [27000.0, 2.0], [26800.0, 1.0], [27400.0, 1.0], [27600.0, 1.0], [28600.0, 3.0], [28200.0, 1.0], [29400.0, 1.0], [29200.0, 1.0], [28800.0, 2.0], [29000.0, 2.0], [31200.0, 1.0], [32400.0, 1.0], [32200.0, 1.0], [32000.0, 1.0], [39200.0, 1.0], [43200.0, 1.0], [46400.0, 1.0], [46000.0, 1.0], [48400.0, 1.0], [53200.0, 1.0], [36700.0, 1.0], [35100.0, 1.0], [37500.0, 1.0], [37100.0, 2.0], [38300.0, 1.0], [38700.0, 1.0], [39100.0, 1.0], [42700.0, 1.0], [41100.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [50700.0, 1.0], [51900.0, 1.0], [54300.0, 1.0], [60300.0, 1.0], [16700.0, 3.0], [17300.0, 1.0], [16500.0, 2.0], [17100.0, 1.0], [18100.0, 3.0], [17500.0, 2.0], [18300.0, 3.0], [17700.0, 1.0], [17900.0, 1.0], [18500.0, 1.0], [18900.0, 2.0], [19300.0, 1.0], [20300.0, 1.0], [20100.0, 5.0], [19900.0, 3.0], [19700.0, 1.0], [19500.0, 1.0], [20900.0, 3.0], [20500.0, 3.0], [21100.0, 1.0], [21300.0, 1.0], [22500.0, 1.0], [21900.0, 1.0], [21700.0, 3.0], [22100.0, 1.0], [22700.0, 3.0], [22900.0, 3.0], [23300.0, 1.0], [23100.0, 1.0], [24300.0, 4.0], [23900.0, 1.0], [24500.0, 1.0], [24900.0, 2.0], [25300.0, 2.0], [25500.0, 1.0], [25700.0, 3.0], [25900.0, 2.0], [26100.0, 2.0], [26300.0, 1.0], [27100.0, 1.0], [26700.0, 2.0], [26900.0, 3.0], [28300.0, 1.0], [28100.0, 1.0], [27700.0, 1.0], [27900.0, 1.0], [29500.0, 1.0], [28700.0, 2.0], [29300.0, 1.0], [30300.0, 1.0], [29700.0, 2.0], [30100.0, 1.0], [31500.0, 2.0], [31700.0, 1.0], [30900.0, 1.0], [32300.0, 3.0], [32500.0, 1.0], [31900.0, 1.0], [33400.0, 2.0], [33800.0, 1.0], [34200.0, 1.0], [38200.0, 1.0], [39000.0, 1.0], [39800.0, 1.0], [39400.0, 1.0], [43000.0, 1.0], [42600.0, 1.0], [41400.0, 1.0], [47000.0, 1.0], [59000.0, 1.0], [59400.0, 1.0], [60200.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[300.0, 200.0], [600.0, 3.0], [1300.0, 1.0], [700.0, 1.0], [400.0, 198.0], [200.0, 147.0], [3400.0, 1.0], [500.0, 23.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 429.0, "series": [{"data": [[0.0, 429.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 23.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 426.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 263.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.75, "minX": 1.6851957E12, "maxY": 24.450381679389313, "series": [{"data": [[1.68519648E12, 24.450381679389313], [1.68519618E12, 15.0], [1.68519588E12, 5.636363636363637], [1.68519654E12, 19.18072289156626], [1.68519624E12, 15.864077669902914], [1.68519594E12, 9.58333333333333], [1.6851963E12, 19.2754491017964], [1.685196E12, 10.0], [1.68519582E12, 5.0], [1.68519636E12, 20.0], [1.68519606E12, 11.05194805194805], [1.68519576E12, 4.609756097560976], [1.68519642E12, 20.740000000000006], [1.68519612E12, 14.600000000000005], [1.6851957E12, 1.75]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68519654E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 236.46153846153845, "minX": 1.0, "maxY": 44760.333333333336, "series": [{"data": [[2.0, 7102.333333333333], [3.0, 9075.0], [4.0, 9858.0], [5.0, 17950.344827586203], [6.0, 20307.0], [7.0, 6170.666666666666], [8.0, 18583.6], [9.0, 11016.0], [10.0, 9319.333333333336], [11.0, 23867.0], [12.0, 33916.125], [13.0, 17915.571428571428], [14.0, 16170.8], [15.0, 15217.52336448598], [1.0, 6584.0], [16.0, 9179.153846153846], [17.0, 7773.764705882353], [18.0, 18165.82142857143], [19.0, 8564.538461538461], [20.0, 18458.46280991736], [21.0, 19497.571428571428], [22.0, 21788.5], [23.0, 18461.714285714283], [24.0, 23245.29411764706], [25.0, 27319.625]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[16.01396160558464, 16575.41710296682]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 6716.0], [3.0, 8767.666666666666], [4.0, 9580.0], [5.0, 17485.034482758616], [6.0, 19919.0], [7.0, 8714.5], [8.0, 22813.0], [9.0, 10633.333333333332], [10.0, 9055.301204819278], [11.0, 23550.833333333332], [12.0, 44760.333333333336], [13.0, 17554.999999999996], [14.0, 15787.6], [15.0, 14868.22429906541], [1.0, 6166.0], [16.0, 8851.384615384615], [17.0, 7411.588235294117], [18.0, 17806.71428571429], [19.0, 8222.615384615385], [20.0, 18141.09090909091], [21.0, 19199.57142857143], [22.0, 21519.214285714283], [23.0, 18114.0], [24.0, 22894.176470588234], [25.0, 27543.276595744683]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[16.052910052910065, 16397.319223985884]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 353.6666666666667], [3.0, 386.25], [4.0, 289.0], [5.0, 364.3448275862069], [6.0, 330.5], [7.0, 396.0], [8.0, 359.5], [9.0, 365.30769230769226], [10.0, 362.4404761904763], [11.0, 377.2857142857143], [12.0, 383.0], [13.0, 332.5], [14.0, 356.0], [15.0, 350.4811320754717], [1.0, 413.5], [16.0, 298.0714285714286], [17.0, 374.24999999999994], [18.0, 357.42105263157896], [19.0, 236.46153846153845], [20.0, 314.61475409836083], [21.0, 580.3571428571429], [22.0, 348.1666666666667], [23.0, 397.625], [24.0, 323.875], [25.0, 357.9375]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[15.905923344947736, 350.0365853658541]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 298.4, "minX": 1.6851957E12, "maxY": 9939.933333333332, "series": [{"data": [[1.68519648E12, 3227.233333333333], [1.68519618E12, 2728.016666666667], [1.68519588E12, 842.6833333333333], [1.68519654E12, 2933.366666666667], [1.68519624E12, 3530.3333333333335], [1.68519594E12, 1649.3166666666666], [1.6851963E12, 3622.15], [1.685196E12, 1898.4], [1.68519582E12, 953.9833333333333], [1.68519636E12, 4695.716666666666], [1.68519606E12, 1388.45], [1.68519576E12, 1026.55], [1.68519642E12, 3705.45], [1.68519612E12, 2648.7], [1.6851957E12, 329.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68519648E12, 6122.816666666667], [1.68519618E12, 6294.2], [1.68519588E12, 1374.6666666666667], [1.68519654E12, 8704.816666666668], [1.68519624E12, 9939.933333333332], [1.68519594E12, 4783.7], [1.6851963E12, 7775.9], [1.685196E12, 6835.183333333333], [1.68519582E12, 2325.9333333333334], [1.68519636E12, 8872.116666666667], [1.68519606E12, 3442.733333333333], [1.68519576E12, 1512.2], [1.68519642E12, 7445.8], [1.68519612E12, 4866.35], [1.6851957E12, 298.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68519654E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 303.49019607843144, "minX": 1.6851957E12, "maxY": 24050.28333333334, "series": [{"data": [[1.68519648E12, 23733.58139534884], [1.68519618E12, 14966.62222222222], [1.68519588E12, 19600.6], [1.68519654E12, 21845.234375], [1.68519624E12, 9854.352112676059], [1.68519594E12, 10333.027777777781], [1.6851963E12, 16468.811320754714], [1.685196E12, 11218.551020408164], [1.68519582E12, 18501.69230769231], [1.68519636E12, 15591.77777777778], [1.68519606E12, 21497.666666666668], [1.68519576E12, 15510.923076923076], [1.68519642E12, 20504.69387755102], [1.68519612E12, 20331.486486486483], [1.6851957E12, 5994.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68519648E12, 22845.5], [1.68519618E12, 14739.608695652176], [1.68519588E12, 19211.1], [1.68519654E12, 24050.28333333334], [1.68519624E12, 9551.552238805969], [1.68519594E12, 10247.857142857141], [1.6851963E12, 15467.30357142857], [1.685196E12, 10164.79166666667], [1.68519582E12, 18152.615384615387], [1.68519636E12, 15399.126984126984], [1.68519606E12, 22004.84], [1.68519576E12, 15166.692307692307], [1.68519642E12, 20021.66], [1.68519612E12, 19461.416666666664], [1.6851957E12, 5600.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68519648E12, 355.7391304347827], [1.68519618E12, 332.3404255319149], [1.68519588E12, 359.1538461538462], [1.68519654E12, 440.26190476190465], [1.68519624E12, 350.4558823529412], [1.68519594E12, 377.1351351351351], [1.6851963E12, 304.1379310344828], [1.685196E12, 352.33333333333337], [1.68519582E12, 364.7692307692308], [1.68519636E12, 339.07692307692315], [1.68519606E12, 371.6428571428571], [1.68519576E12, 351.4], [1.68519642E12, 303.49019607843144], [1.68519612E12, 361.2432432432432], [1.6851957E12, 356.1666666666667]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68519654E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 303.0392156862745, "minX": 1.6851957E12, "maxY": 24050.199999999997, "series": [{"data": [[1.68519648E12, 23731.674418604653], [1.68519618E12, 14965.844444444449], [1.68519588E12, 19600.6], [1.68519654E12, 21843.999999999996], [1.68519624E12, 9854.239436619717], [1.68519594E12, 10332.66666666667], [1.6851963E12, 16468.641509433965], [1.685196E12, 11218.224489795917], [1.68519582E12, 18501.53846153846], [1.68519636E12, 15591.190476190475], [1.68519606E12, 21497.500000000004], [1.68519576E12, 15510.461538461537], [1.68519642E12, 20503.714285714283], [1.68519612E12, 20329.108108108114], [1.6851957E12, 5989.666666666667]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68519648E12, 22843.809523809523], [1.68519618E12, 14739.500000000002], [1.68519588E12, 19211.1], [1.68519654E12, 24050.199999999997], [1.68519624E12, 9551.447761194031], [1.68519594E12, 10247.657142857148], [1.6851963E12, 15467.232142857143], [1.685196E12, 10164.66666666667], [1.68519582E12, 18152.53846153846], [1.68519636E12, 15398.841269841272], [1.68519606E12, 22004.72], [1.68519576E12, 15166.692307692307], [1.68519642E12, 20021.38], [1.68519612E12, 19461.388888888887], [1.6851957E12, 5599.666666666667]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68519648E12, 355.54347826086956], [1.68519618E12, 331.70212765957444], [1.68519588E12, 359.0769230769231], [1.68519654E12, 438.4761904761904], [1.68519624E12, 350.44117647058823], [1.68519594E12, 376.8648648648649], [1.6851963E12, 304.0172413793104], [1.685196E12, 352.22916666666663], [1.68519582E12, 364.6923076923078], [1.68519636E12, 338.63076923076915], [1.68519606E12, 368.5357142857143], [1.68519576E12, 351.06666666666666], [1.68519642E12, 303.0392156862745], [1.68519612E12, 361.21621621621625], [1.6851957E12, 354.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68519654E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6851957E12, "maxY": 191.89999999999998, "series": [{"data": [[1.68519648E12, 165.02325581395345], [1.68519618E12, 169.04444444444448], [1.68519588E12, 191.89999999999998], [1.68519654E12, 169.04687499999997], [1.68519624E12, 171.52112676056333], [1.68519594E12, 169.80555555555551], [1.6851963E12, 133.64150943396223], [1.685196E12, 173.20408163265304], [1.68519582E12, 173.0769230769231], [1.68519636E12, 155.2380952380953], [1.68519606E12, 180.9583333333333], [1.68519576E12, 174.76923076923077], [1.68519642E12, 144.59183673469389], [1.68519612E12, 168.56756756756752], [1.6851957E12, 178.33333333333334]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68519648E12, 0.0], [1.68519618E12, 0.0], [1.68519588E12, 0.0], [1.68519654E12, 0.0], [1.68519624E12, 0.0], [1.68519594E12, 0.0], [1.6851963E12, 0.0], [1.685196E12, 0.0], [1.68519582E12, 0.0], [1.68519636E12, 0.0], [1.68519606E12, 0.0], [1.68519576E12, 0.0], [1.68519642E12, 0.0], [1.68519612E12, 0.0], [1.6851957E12, 0.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68519648E12, 165.2173913043478], [1.68519618E12, 159.29787234042556], [1.68519588E12, 175.0], [1.68519654E12, 166.90476190476195], [1.68519624E12, 167.42647058823528], [1.68519594E12, 170.3783783783784], [1.6851963E12, 146.58620689655172], [1.685196E12, 171.22916666666666], [1.68519582E12, 180.84615384615384], [1.68519636E12, 151.67692307692312], [1.68519606E12, 190.8571428571428], [1.68519576E12, 181.59999999999997], [1.68519642E12, 151.54901960784315], [1.68519612E12, 168.64864864864867], [1.6851957E12, 163.33333333333334]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68519654E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 213.0, "minX": 1.6851957E12, "maxY": 59442.0, "series": [{"data": [[1.68519648E12, 50749.0], [1.68519618E12, 42763.0], [1.68519588E12, 22074.0], [1.68519654E12, 59442.0], [1.68519624E12, 28173.0], [1.68519594E12, 33437.0], [1.6851963E12, 43950.0], [1.685196E12, 39368.0], [1.68519582E12, 23879.0], [1.68519636E12, 37167.0], [1.68519606E12, 53272.0], [1.68519576E12, 23282.0], [1.68519642E12, 39320.0], [1.68519612E12, 33888.0], [1.6851957E12, 6076.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68519648E12, 29013.2], [1.68519618E12, 32317.0], [1.68519588E12, 20889.2], [1.68519654E12, 25647.899999999998], [1.68519624E12, 23354.0], [1.68519594E12, 32149.0], [1.6851963E12, 29427.000000000007], [1.685196E12, 38568.799999999996], [1.68519582E12, 23163.5], [1.68519636E12, 21021.100000000006], [1.68519606E12, 46247.4], [1.68519576E12, 19799.800000000007], [1.68519642E12, 25212.0], [1.68519612E12, 27987.9], [1.6851957E12, 6076.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68519648E12, 50749.0], [1.68519618E12, 42763.0], [1.68519588E12, 22074.0], [1.68519654E12, 59442.0], [1.68519624E12, 28173.0], [1.68519594E12, 33437.0], [1.6851963E12, 43950.0], [1.685196E12, 39368.0], [1.68519582E12, 23879.0], [1.68519636E12, 35551.40999999997], [1.68519606E12, 53272.0], [1.68519576E12, 23282.0], [1.68519642E12, 39308.880000000005], [1.68519612E12, 33888.0], [1.6851957E12, 6076.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68519648E12, 37103.749999999985], [1.68519618E12, 39408.75], [1.68519588E12, 21844.399999999998], [1.68519654E12, 29000.65], [1.68519624E12, 25866.0], [1.68519594E12, 32775.5], [1.6851963E12, 38629.95], [1.685196E12, 39269.2], [1.68519582E12, 23713.1], [1.68519636E12, 24816.449999999997], [1.68519606E12, 52468.6], [1.68519576E12, 23196.5], [1.68519642E12, 28733.5], [1.68519612E12, 30044.749999999993], [1.6851957E12, 6076.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68519648E12, 215.0], [1.68519618E12, 214.0], [1.68519588E12, 227.0], [1.68519654E12, 216.0], [1.68519624E12, 213.0], [1.68519594E12, 220.0], [1.6851963E12, 214.0], [1.685196E12, 305.0], [1.68519582E12, 248.0], [1.68519636E12, 213.0], [1.68519606E12, 304.0], [1.68519576E12, 240.0], [1.68519642E12, 214.0], [1.68519612E12, 238.0], [1.6851957E12, 249.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68519648E12, 495.5], [1.68519618E12, 5904.0], [1.68519588E12, 406.0], [1.68519654E12, 5204.5], [1.68519624E12, 510.0], [1.68519594E12, 508.0], [1.6851963E12, 409.0], [1.685196E12, 10271.0], [1.68519582E12, 4391.5], [1.68519636E12, 960.0], [1.68519606E12, 11813.0], [1.68519576E12, 469.5], [1.68519642E12, 512.0], [1.68519612E12, 510.0], [1.6851957E12, 404.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68519654E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 192.0, "minX": 1.0, "maxY": 18182.5, "series": [{"data": [[1.0, 430.0], [2.0, 474.0], [4.0, 3255.0], [8.0, 9328.0], [9.0, 10777.0], [5.0, 7137.0], [10.0, 8630.0], [11.0, 11361.0], [3.0, 438.0], [6.0, 510.0], [7.0, 6772.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 214.0], [1.0, 211.0], [4.0, 213.5], [8.0, 716.0], [5.0, 407.0], [11.0, 18182.5], [6.0, 233.5], [3.0, 192.0], [7.0, 213.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 192.0, "minX": 1.0, "maxY": 18182.5, "series": [{"data": [[1.0, 424.5], [2.0, 474.0], [4.0, 3255.0], [8.0, 9328.0], [9.0, 10777.0], [5.0, 7137.0], [10.0, 8630.0], [11.0, 11361.0], [3.0, 438.0], [6.0, 510.0], [7.0, 6772.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 214.0], [1.0, 211.0], [4.0, 213.5], [8.0, 716.0], [5.0, 407.0], [11.0, 18182.5], [6.0, 233.5], [3.0, 192.0], [7.0, 213.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.6851957E12, "maxY": 2.25, "series": [{"data": [[1.68519648E12, 1.55], [1.68519618E12, 1.5833333333333333], [1.68519588E12, 0.4166666666666667], [1.68519654E12, 1.3], [1.68519624E12, 2.25], [1.68519594E12, 1.2333333333333334], [1.6851963E12, 2.0], [1.685196E12, 1.6], [1.68519582E12, 0.43333333333333335], [1.68519636E12, 2.033333333333333], [1.68519606E12, 0.8666666666666667], [1.68519576E12, 0.5166666666666667], [1.68519642E12, 1.7833333333333334], [1.68519612E12, 1.2666666666666666], [1.6851957E12, 0.18333333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68519654E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851957E12, "maxY": 2.1333333333333333, "series": [{"data": [[1.68519648E12, 1.4666666666666666], [1.68519618E12, 1.1], [1.68519588E12, 0.38333333333333336], [1.68519654E12, 1.1666666666666667], [1.68519624E12, 1.3166666666666667], [1.68519594E12, 0.55], [1.6851963E12, 1.5333333333333334], [1.685196E12, 0.5333333333333333], [1.68519582E12, 0.43333333333333335], [1.68519636E12, 2.1333333333333333], [1.68519606E12, 0.5166666666666667], [1.68519576E12, 0.4666666666666667], [1.68519642E12, 1.6833333333333333], [1.68519612E12, 1.2], [1.6851957E12, 0.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68519612E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.685196E12, 1.0666666666666667], [1.68519618E12, 0.45], [1.68519606E12, 0.36666666666666664], [1.68519654E12, 0.4], [1.68519624E12, 0.9333333333333333], [1.68519594E12, 0.65], [1.6851963E12, 0.36666666666666664]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68519654E12, 0.13333333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68519654E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6851957E12, "maxY": 1.0833333333333333, "series": [{"data": [[1.68519648E12, 0.7666666666666667], [1.68519618E12, 0.5333333333333333], [1.68519588E12, 0.21666666666666667], [1.68519654E12, 0.5666666666666667], [1.68519624E12, 0.7], [1.68519594E12, 0.3333333333333333], [1.6851963E12, 0.8166666666666667], [1.685196E12, 0.26666666666666666], [1.68519582E12, 0.21666666666666667], [1.68519636E12, 1.0833333333333333], [1.68519606E12, 0.21666666666666667], [1.68519576E12, 0.25], [1.68519642E12, 0.85], [1.68519612E12, 0.6166666666666667], [1.6851957E12, 0.1]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.685196E12, 0.5333333333333333], [1.68519618E12, 0.25], [1.68519606E12, 0.25], [1.68519654E12, 0.13333333333333333], [1.68519624E12, 0.43333333333333335], [1.68519594E12, 0.2833333333333333], [1.6851963E12, 0.15]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.685196E12, 0.5333333333333333], [1.68519618E12, 0.2], [1.68519606E12, 0.11666666666666667], [1.68519654E12, 0.4], [1.68519624E12, 0.5], [1.68519594E12, 0.36666666666666664], [1.68519612E12, 0.016666666666666666], [1.6851963E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68519648E12, 0.7166666666666667], [1.68519618E12, 0.48333333333333334], [1.68519588E12, 0.16666666666666666], [1.68519654E12, 0.5666666666666667], [1.68519624E12, 0.2833333333333333], [1.68519594E12, 0.2], [1.6851963E12, 0.5166666666666667], [1.685196E12, 0.13333333333333333], [1.68519582E12, 0.21666666666666667], [1.68519636E12, 1.05], [1.68519606E12, 0.06666666666666667], [1.68519576E12, 0.21666666666666667], [1.68519642E12, 0.8166666666666667], [1.68519612E12, 0.55], [1.6851957E12, 0.05]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.685196E12, 0.6833333333333333], [1.68519618E12, 0.26666666666666666], [1.68519606E12, 0.3333333333333333], [1.68519654E12, 0.5], [1.68519624E12, 0.9], [1.68519594E12, 0.4], [1.68519612E12, 0.06666666666666667], [1.6851963E12, 0.36666666666666664]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68519648E12, 0.7], [1.68519618E12, 0.5666666666666667], [1.68519588E12, 0.16666666666666666], [1.68519654E12, 0.6], [1.68519624E12, 0.6166666666666667], [1.68519594E12, 0.21666666666666667], [1.6851963E12, 0.7166666666666667], [1.685196E12, 0.26666666666666666], [1.68519582E12, 0.21666666666666667], [1.68519636E12, 1.05], [1.68519606E12, 0.3], [1.68519576E12, 0.21666666666666667], [1.68519642E12, 0.8333333333333334], [1.68519612E12, 0.5833333333333334], [1.6851957E12, 0.05]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68519654E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.6851957E12, "maxY": 3.183333333333333, "series": [{"data": [[1.68519648E12, 2.183333333333333], [1.68519618E12, 1.5833333333333333], [1.68519588E12, 0.55], [1.68519654E12, 1.7333333333333334], [1.68519624E12, 1.6], [1.68519594E12, 0.75], [1.6851963E12, 2.05], [1.685196E12, 0.6666666666666666], [1.68519582E12, 0.65], [1.68519636E12, 3.183333333333333], [1.68519606E12, 0.5833333333333334], [1.68519576E12, 0.6833333333333333], [1.68519642E12, 2.5], [1.68519612E12, 1.75], [1.6851957E12, 0.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.685196E12, 1.75], [1.68519618E12, 0.7166666666666667], [1.68519606E12, 0.7], [1.68519654E12, 1.0333333333333334], [1.68519624E12, 1.8333333333333333], [1.68519594E12, 1.05], [1.68519612E12, 0.08333333333333333], [1.6851963E12, 0.7333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68519654E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

