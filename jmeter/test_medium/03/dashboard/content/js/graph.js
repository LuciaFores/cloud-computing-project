/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 102.0, "minX": 0.0, "maxY": 120918.0, "series": [{"data": [[0.0, 206.0], [0.1, 206.0], [0.2, 206.0], [0.3, 207.0], [0.4, 207.0], [0.5, 208.0], [0.6, 209.0], [0.7, 209.0], [0.8, 218.0], [0.9, 220.0], [1.0, 223.0], [1.1, 259.0], [1.2, 304.0], [1.3, 308.0], [1.4, 308.0], [1.5, 308.0], [1.6, 309.0], [1.7, 309.0], [1.8, 309.0], [1.9, 309.0], [2.0, 309.0], [2.1, 309.0], [2.2, 309.0], [2.3, 309.0], [2.4, 309.0], [2.5, 309.0], [2.6, 309.0], [2.7, 309.0], [2.8, 310.0], [2.9, 310.0], [3.0, 310.0], [3.1, 310.0], [3.2, 310.0], [3.3, 310.0], [3.4, 310.0], [3.5, 310.0], [3.6, 310.0], [3.7, 310.0], [3.8, 310.0], [3.9, 310.0], [4.0, 310.0], [4.1, 310.0], [4.2, 310.0], [4.3, 310.0], [4.4, 310.0], [4.5, 310.0], [4.6, 310.0], [4.7, 310.0], [4.8, 310.0], [4.9, 310.0], [5.0, 310.0], [5.1, 310.0], [5.2, 310.0], [5.3, 310.0], [5.4, 311.0], [5.5, 311.0], [5.6, 311.0], [5.7, 311.0], [5.8, 311.0], [5.9, 311.0], [6.0, 311.0], [6.1, 311.0], [6.2, 311.0], [6.3, 311.0], [6.4, 311.0], [6.5, 311.0], [6.6, 311.0], [6.7, 311.0], [6.8, 311.0], [6.9, 311.0], [7.0, 311.0], [7.1, 311.0], [7.2, 311.0], [7.3, 311.0], [7.4, 311.0], [7.5, 311.0], [7.6, 311.0], [7.7, 311.0], [7.8, 311.0], [7.9, 311.0], [8.0, 311.0], [8.1, 311.0], [8.2, 311.0], [8.3, 311.0], [8.4, 311.0], [8.5, 311.0], [8.6, 311.0], [8.7, 311.0], [8.8, 311.0], [8.9, 311.0], [9.0, 311.0], [9.1, 311.0], [9.2, 311.0], [9.3, 311.0], [9.4, 311.0], [9.5, 311.0], [9.6, 311.0], [9.7, 311.0], [9.8, 312.0], [9.9, 312.0], [10.0, 312.0], [10.1, 312.0], [10.2, 312.0], [10.3, 312.0], [10.4, 312.0], [10.5, 312.0], [10.6, 312.0], [10.7, 312.0], [10.8, 312.0], [10.9, 312.0], [11.0, 312.0], [11.1, 312.0], [11.2, 312.0], [11.3, 312.0], [11.4, 312.0], [11.5, 312.0], [11.6, 312.0], [11.7, 312.0], [11.8, 312.0], [11.9, 312.0], [12.0, 312.0], [12.1, 312.0], [12.2, 312.0], [12.3, 312.0], [12.4, 312.0], [12.5, 312.0], [12.6, 312.0], [12.7, 312.0], [12.8, 312.0], [12.9, 312.0], [13.0, 312.0], [13.1, 312.0], [13.2, 312.0], [13.3, 312.0], [13.4, 312.0], [13.5, 312.0], [13.6, 312.0], [13.7, 312.0], [13.8, 312.0], [13.9, 312.0], [14.0, 312.0], [14.1, 312.0], [14.2, 312.0], [14.3, 312.0], [14.4, 312.0], [14.5, 312.0], [14.6, 312.0], [14.7, 312.0], [14.8, 312.0], [14.9, 312.0], [15.0, 312.0], [15.1, 312.0], [15.2, 312.0], [15.3, 313.0], [15.4, 313.0], [15.5, 313.0], [15.6, 313.0], [15.7, 313.0], [15.8, 313.0], [15.9, 313.0], [16.0, 313.0], [16.1, 313.0], [16.2, 313.0], [16.3, 313.0], [16.4, 313.0], [16.5, 313.0], [16.6, 313.0], [16.7, 313.0], [16.8, 313.0], [16.9, 313.0], [17.0, 313.0], [17.1, 313.0], [17.2, 313.0], [17.3, 313.0], [17.4, 313.0], [17.5, 313.0], [17.6, 313.0], [17.7, 313.0], [17.8, 313.0], [17.9, 313.0], [18.0, 313.0], [18.1, 313.0], [18.2, 313.0], [18.3, 313.0], [18.4, 313.0], [18.5, 313.0], [18.6, 313.0], [18.7, 313.0], [18.8, 313.0], [18.9, 313.0], [19.0, 313.0], [19.1, 313.0], [19.2, 313.0], [19.3, 313.0], [19.4, 313.0], [19.5, 313.0], [19.6, 313.0], [19.7, 313.0], [19.8, 313.0], [19.9, 313.0], [20.0, 313.0], [20.1, 313.0], [20.2, 313.0], [20.3, 313.0], [20.4, 313.0], [20.5, 313.0], [20.6, 313.0], [20.7, 313.0], [20.8, 313.0], [20.9, 313.0], [21.0, 313.0], [21.1, 313.0], [21.2, 313.0], [21.3, 313.0], [21.4, 314.0], [21.5, 314.0], [21.6, 314.0], [21.7, 314.0], [21.8, 314.0], [21.9, 314.0], [22.0, 314.0], [22.1, 314.0], [22.2, 314.0], [22.3, 314.0], [22.4, 314.0], [22.5, 314.0], [22.6, 314.0], [22.7, 314.0], [22.8, 314.0], [22.9, 314.0], [23.0, 314.0], [23.1, 314.0], [23.2, 314.0], [23.3, 314.0], [23.4, 314.0], [23.5, 314.0], [23.6, 314.0], [23.7, 314.0], [23.8, 314.0], [23.9, 314.0], [24.0, 314.0], [24.1, 314.0], [24.2, 314.0], [24.3, 314.0], [24.4, 314.0], [24.5, 314.0], [24.6, 314.0], [24.7, 314.0], [24.8, 314.0], [24.9, 314.0], [25.0, 314.0], [25.1, 314.0], [25.2, 314.0], [25.3, 314.0], [25.4, 314.0], [25.5, 314.0], [25.6, 314.0], [25.7, 314.0], [25.8, 314.0], [25.9, 314.0], [26.0, 314.0], [26.1, 314.0], [26.2, 314.0], [26.3, 314.0], [26.4, 314.0], [26.5, 314.0], [26.6, 314.0], [26.7, 314.0], [26.8, 314.0], [26.9, 314.0], [27.0, 314.0], [27.1, 314.0], [27.2, 315.0], [27.3, 315.0], [27.4, 315.0], [27.5, 315.0], [27.6, 315.0], [27.7, 315.0], [27.8, 315.0], [27.9, 315.0], [28.0, 315.0], [28.1, 315.0], [28.2, 315.0], [28.3, 315.0], [28.4, 315.0], [28.5, 315.0], [28.6, 315.0], [28.7, 315.0], [28.8, 315.0], [28.9, 315.0], [29.0, 315.0], [29.1, 315.0], [29.2, 315.0], [29.3, 315.0], [29.4, 315.0], [29.5, 315.0], [29.6, 315.0], [29.7, 315.0], [29.8, 315.0], [29.9, 315.0], [30.0, 315.0], [30.1, 315.0], [30.2, 315.0], [30.3, 315.0], [30.4, 315.0], [30.5, 315.0], [30.6, 315.0], [30.7, 315.0], [30.8, 315.0], [30.9, 315.0], [31.0, 315.0], [31.1, 315.0], [31.2, 315.0], [31.3, 315.0], [31.4, 315.0], [31.5, 315.0], [31.6, 315.0], [31.7, 315.0], [31.8, 315.0], [31.9, 315.0], [32.0, 315.0], [32.1, 315.0], [32.2, 315.0], [32.3, 315.0], [32.4, 315.0], [32.5, 315.0], [32.6, 315.0], [32.7, 315.0], [32.8, 315.0], [32.9, 315.0], [33.0, 315.0], [33.1, 315.0], [33.2, 315.0], [33.3, 315.0], [33.4, 315.0], [33.5, 315.0], [33.6, 316.0], [33.7, 316.0], [33.8, 316.0], [33.9, 316.0], [34.0, 316.0], [34.1, 316.0], [34.2, 316.0], [34.3, 316.0], [34.4, 316.0], [34.5, 316.0], [34.6, 316.0], [34.7, 316.0], [34.8, 316.0], [34.9, 316.0], [35.0, 316.0], [35.1, 316.0], [35.2, 316.0], [35.3, 316.0], [35.4, 316.0], [35.5, 316.0], [35.6, 316.0], [35.7, 316.0], [35.8, 316.0], [35.9, 316.0], [36.0, 316.0], [36.1, 316.0], [36.2, 316.0], [36.3, 316.0], [36.4, 316.0], [36.5, 316.0], [36.6, 316.0], [36.7, 316.0], [36.8, 316.0], [36.9, 316.0], [37.0, 316.0], [37.1, 316.0], [37.2, 316.0], [37.3, 316.0], [37.4, 316.0], [37.5, 316.0], [37.6, 316.0], [37.7, 316.0], [37.8, 316.0], [37.9, 317.0], [38.0, 317.0], [38.1, 317.0], [38.2, 317.0], [38.3, 317.0], [38.4, 317.0], [38.5, 317.0], [38.6, 317.0], [38.7, 317.0], [38.8, 317.0], [38.9, 317.0], [39.0, 317.0], [39.1, 317.0], [39.2, 317.0], [39.3, 317.0], [39.4, 317.0], [39.5, 317.0], [39.6, 317.0], [39.7, 317.0], [39.8, 317.0], [39.9, 317.0], [40.0, 317.0], [40.1, 317.0], [40.2, 317.0], [40.3, 317.0], [40.4, 317.0], [40.5, 317.0], [40.6, 317.0], [40.7, 317.0], [40.8, 317.0], [40.9, 317.0], [41.0, 317.0], [41.1, 317.0], [41.2, 317.0], [41.3, 317.0], [41.4, 317.0], [41.5, 317.0], [41.6, 317.0], [41.7, 317.0], [41.8, 317.0], [41.9, 317.0], [42.0, 318.0], [42.1, 318.0], [42.2, 318.0], [42.3, 318.0], [42.4, 318.0], [42.5, 318.0], [42.6, 318.0], [42.7, 318.0], [42.8, 318.0], [42.9, 318.0], [43.0, 318.0], [43.1, 318.0], [43.2, 318.0], [43.3, 318.0], [43.4, 318.0], [43.5, 318.0], [43.6, 318.0], [43.7, 318.0], [43.8, 318.0], [43.9, 318.0], [44.0, 318.0], [44.1, 318.0], [44.2, 318.0], [44.3, 318.0], [44.4, 318.0], [44.5, 318.0], [44.6, 318.0], [44.7, 318.0], [44.8, 318.0], [44.9, 318.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 319.0], [45.4, 319.0], [45.5, 319.0], [45.6, 319.0], [45.7, 319.0], [45.8, 319.0], [45.9, 319.0], [46.0, 319.0], [46.1, 319.0], [46.2, 319.0], [46.3, 319.0], [46.4, 319.0], [46.5, 319.0], [46.6, 319.0], [46.7, 319.0], [46.8, 319.0], [46.9, 319.0], [47.0, 319.0], [47.1, 319.0], [47.2, 319.0], [47.3, 319.0], [47.4, 319.0], [47.5, 319.0], [47.6, 319.0], [47.7, 319.0], [47.8, 320.0], [47.9, 320.0], [48.0, 320.0], [48.1, 320.0], [48.2, 320.0], [48.3, 320.0], [48.4, 320.0], [48.5, 320.0], [48.6, 320.0], [48.7, 320.0], [48.8, 320.0], [48.9, 320.0], [49.0, 320.0], [49.1, 320.0], [49.2, 320.0], [49.3, 321.0], [49.4, 321.0], [49.5, 321.0], [49.6, 321.0], [49.7, 321.0], [49.8, 321.0], [49.9, 321.0], [50.0, 321.0], [50.1, 321.0], [50.2, 321.0], [50.3, 321.0], [50.4, 321.0], [50.5, 321.0], [50.6, 322.0], [50.7, 322.0], [50.8, 322.0], [50.9, 322.0], [51.0, 322.0], [51.1, 322.0], [51.2, 322.0], [51.3, 322.0], [51.4, 322.0], [51.5, 322.0], [51.6, 322.0], [51.7, 323.0], [51.8, 323.0], [51.9, 323.0], [52.0, 323.0], [52.1, 323.0], [52.2, 323.0], [52.3, 323.0], [52.4, 323.0], [52.5, 323.0], [52.6, 324.0], [52.7, 324.0], [52.8, 324.0], [52.9, 324.0], [53.0, 324.0], [53.1, 324.0], [53.2, 325.0], [53.3, 325.0], [53.4, 325.0], [53.5, 325.0], [53.6, 325.0], [53.7, 325.0], [53.8, 325.0], [53.9, 325.0], [54.0, 325.0], [54.1, 325.0], [54.2, 325.0], [54.3, 326.0], [54.4, 326.0], [54.5, 326.0], [54.6, 326.0], [54.7, 326.0], [54.8, 326.0], [54.9, 326.0], [55.0, 326.0], [55.1, 326.0], [55.2, 327.0], [55.3, 327.0], [55.4, 327.0], [55.5, 327.0], [55.6, 327.0], [55.7, 327.0], [55.8, 327.0], [55.9, 328.0], [56.0, 328.0], [56.1, 328.0], [56.2, 328.0], [56.3, 329.0], [56.4, 329.0], [56.5, 329.0], [56.6, 330.0], [56.7, 330.0], [56.8, 330.0], [56.9, 331.0], [57.0, 331.0], [57.1, 331.0], [57.2, 331.0], [57.3, 331.0], [57.4, 332.0], [57.5, 332.0], [57.6, 332.0], [57.7, 332.0], [57.8, 332.0], [57.9, 332.0], [58.0, 332.0], [58.1, 332.0], [58.2, 332.0], [58.3, 333.0], [58.4, 333.0], [58.5, 333.0], [58.6, 333.0], [58.7, 334.0], [58.8, 334.0], [58.9, 335.0], [59.0, 335.0], [59.1, 335.0], [59.2, 335.0], [59.3, 336.0], [59.4, 336.0], [59.5, 336.0], [59.6, 336.0], [59.7, 336.0], [59.8, 336.0], [59.9, 337.0], [60.0, 337.0], [60.1, 337.0], [60.2, 337.0], [60.3, 338.0], [60.4, 338.0], [60.5, 339.0], [60.6, 339.0], [60.7, 339.0], [60.8, 340.0], [60.9, 340.0], [61.0, 341.0], [61.1, 342.0], [61.2, 342.0], [61.3, 343.0], [61.4, 343.0], [61.5, 344.0], [61.6, 344.0], [61.7, 344.0], [61.8, 345.0], [61.9, 345.0], [62.0, 345.0], [62.1, 346.0], [62.2, 347.0], [62.3, 347.0], [62.4, 347.0], [62.5, 348.0], [62.6, 348.0], [62.7, 349.0], [62.8, 350.0], [62.9, 350.0], [63.0, 351.0], [63.1, 351.0], [63.2, 352.0], [63.3, 352.0], [63.4, 352.0], [63.5, 356.0], [63.6, 356.0], [63.7, 356.0], [63.8, 357.0], [63.9, 357.0], [64.0, 358.0], [64.1, 358.0], [64.2, 359.0], [64.3, 361.0], [64.4, 361.0], [64.5, 362.0], [64.6, 363.0], [64.7, 363.0], [64.8, 365.0], [64.9, 366.0], [65.0, 367.0], [65.1, 368.0], [65.2, 369.0], [65.3, 371.0], [65.4, 372.0], [65.5, 374.0], [65.6, 374.0], [65.7, 377.0], [65.8, 377.0], [65.9, 378.0], [66.0, 380.0], [66.1, 381.0], [66.2, 381.0], [66.3, 382.0], [66.4, 384.0], [66.5, 387.0], [66.6, 387.0], [66.7, 387.0], [66.8, 392.0], [66.9, 395.0], [67.0, 396.0], [67.1, 402.0], [67.2, 406.0], [67.3, 408.0], [67.4, 408.0], [67.5, 408.0], [67.6, 409.0], [67.7, 409.0], [67.8, 410.0], [67.9, 412.0], [68.0, 412.0], [68.1, 412.0], [68.2, 412.0], [68.3, 413.0], [68.4, 414.0], [68.5, 414.0], [68.6, 415.0], [68.7, 415.0], [68.8, 416.0], [68.9, 417.0], [69.0, 417.0], [69.1, 418.0], [69.2, 418.0], [69.3, 419.0], [69.4, 419.0], [69.5, 419.0], [69.6, 421.0], [69.7, 421.0], [69.8, 422.0], [69.9, 422.0], [70.0, 423.0], [70.1, 427.0], [70.2, 429.0], [70.3, 433.0], [70.4, 436.0], [70.5, 437.0], [70.6, 439.0], [70.7, 441.0], [70.8, 443.0], [70.9, 447.0], [71.0, 447.0], [71.1, 450.0], [71.2, 452.0], [71.3, 454.0], [71.4, 456.0], [71.5, 456.0], [71.6, 460.0], [71.7, 462.0], [71.8, 463.0], [71.9, 464.0], [72.0, 465.0], [72.1, 466.0], [72.2, 468.0], [72.3, 468.0], [72.4, 471.0], [72.5, 472.0], [72.6, 475.0], [72.7, 478.0], [72.8, 479.0], [72.9, 481.0], [73.0, 482.0], [73.1, 489.0], [73.2, 490.0], [73.3, 493.0], [73.4, 506.0], [73.5, 509.0], [73.6, 510.0], [73.7, 512.0], [73.8, 512.0], [73.9, 516.0], [74.0, 516.0], [74.1, 518.0], [74.2, 519.0], [74.3, 519.0], [74.4, 520.0], [74.5, 520.0], [74.6, 520.0], [74.7, 521.0], [74.8, 522.0], [74.9, 523.0], [75.0, 526.0], [75.1, 527.0], [75.2, 532.0], [75.3, 533.0], [75.4, 535.0], [75.5, 537.0], [75.6, 539.0], [75.7, 543.0], [75.8, 545.0], [75.9, 548.0], [76.0, 549.0], [76.1, 551.0], [76.2, 551.0], [76.3, 552.0], [76.4, 552.0], [76.5, 556.0], [76.6, 557.0], [76.7, 559.0], [76.8, 561.0], [76.9, 562.0], [77.0, 569.0], [77.1, 570.0], [77.2, 573.0], [77.3, 575.0], [77.4, 581.0], [77.5, 593.0], [77.6, 593.0], [77.7, 606.0], [77.8, 608.0], [77.9, 617.0], [78.0, 629.0], [78.1, 639.0], [78.2, 667.0], [78.3, 677.0], [78.4, 677.0], [78.5, 693.0], [78.6, 698.0], [78.7, 906.0], [78.8, 1343.0], [78.9, 1649.0], [79.0, 2770.0], [79.1, 5524.0], [79.2, 5860.0], [79.3, 5885.0], [79.4, 6117.0], [79.5, 6660.0], [79.6, 6699.0], [79.7, 6909.0], [79.8, 6998.0], [79.9, 7360.0], [80.0, 7497.0], [80.1, 8484.0], [80.2, 8517.0], [80.3, 8593.0], [80.4, 8711.0], [80.5, 9531.0], [80.6, 9710.0], [80.7, 9941.0], [80.8, 10864.0], [80.9, 11089.0], [81.0, 11516.0], [81.1, 11855.0], [81.2, 11884.0], [81.3, 12696.0], [81.4, 12767.0], [81.5, 13647.0], [81.6, 13674.0], [81.7, 13788.0], [81.8, 14131.0], [81.9, 14215.0], [82.0, 14654.0], [82.1, 14662.0], [82.2, 14795.0], [82.3, 14932.0], [82.4, 15259.0], [82.5, 15881.0], [82.6, 16088.0], [82.7, 16296.0], [82.8, 16777.0], [82.9, 16819.0], [83.0, 17218.0], [83.1, 17317.0], [83.2, 17379.0], [83.3, 17895.0], [83.4, 18012.0], [83.5, 18025.0], [83.6, 18444.0], [83.7, 18447.0], [83.8, 19160.0], [83.9, 19310.0], [84.0, 19361.0], [84.1, 19558.0], [84.2, 19692.0], [84.3, 19971.0], [84.4, 20136.0], [84.5, 20146.0], [84.6, 20674.0], [84.7, 20907.0], [84.8, 21230.0], [84.9, 21301.0], [85.0, 21399.0], [85.1, 21722.0], [85.2, 21769.0], [85.3, 22130.0], [85.4, 22316.0], [85.5, 22368.0], [85.6, 22442.0], [85.7, 22610.0], [85.8, 22851.0], [85.9, 22883.0], [86.0, 22917.0], [86.1, 22984.0], [86.2, 23131.0], [86.3, 23646.0], [86.4, 23658.0], [86.5, 23679.0], [86.6, 23810.0], [86.7, 24065.0], [86.8, 24238.0], [86.9, 24794.0], [87.0, 25768.0], [87.1, 26027.0], [87.2, 26139.0], [87.3, 26230.0], [87.4, 27078.0], [87.5, 27600.0], [87.6, 28428.0], [87.7, 28678.0], [87.8, 28869.0], [87.9, 29610.0], [88.0, 30464.0], [88.1, 30860.0], [88.2, 31207.0], [88.3, 31244.0], [88.4, 31394.0], [88.5, 33027.0], [88.6, 33246.0], [88.7, 33313.0], [88.8, 33908.0], [88.9, 35091.0], [89.0, 35483.0], [89.1, 37519.0], [89.2, 38209.0], [89.3, 38568.0], [89.4, 39698.0], [89.5, 39854.0], [89.6, 40225.0], [89.7, 40453.0], [89.8, 40599.0], [89.9, 41134.0], [90.0, 41502.0], [90.1, 41665.0], [90.2, 42504.0], [90.3, 43017.0], [90.4, 43769.0], [90.5, 44013.0], [90.6, 44277.0], [90.7, 46078.0], [90.8, 46185.0], [90.9, 46309.0], [91.0, 46447.0], [91.1, 46618.0], [91.2, 48066.0], [91.3, 48196.0], [91.4, 49039.0], [91.5, 50097.0], [91.6, 50504.0], [91.7, 51131.0], [91.8, 51539.0], [91.9, 53283.0], [92.0, 57081.0], [92.1, 57528.0], [92.2, 58360.0], [92.3, 58381.0], [92.4, 60323.0], [92.5, 60323.0], [92.6, 60345.0], [92.7, 60365.0], [92.8, 60366.0], [92.9, 60370.0], [93.0, 60374.0], [93.1, 60380.0], [93.2, 60388.0], [93.3, 60392.0], [93.4, 60407.0], [93.5, 60408.0], [93.6, 60410.0], [93.7, 60416.0], [93.8, 60421.0], [93.9, 60422.0], [94.0, 60453.0], [94.1, 60454.0], [94.2, 60463.0], [94.3, 60470.0], [94.4, 60480.0], [94.5, 60484.0], [94.6, 60486.0], [94.7, 60497.0], [94.8, 60509.0], [94.9, 60518.0], [95.0, 60525.0], [95.1, 60529.0], [95.2, 60543.0], [95.3, 60548.0], [95.4, 60563.0], [95.5, 60570.0], [95.6, 60572.0], [95.7, 60585.0], [95.8, 60588.0], [95.9, 60593.0], [96.0, 60617.0], [96.1, 60618.0], [96.2, 60635.0], [96.3, 60643.0], [96.4, 60673.0], [96.5, 60696.0], [96.6, 60699.0], [96.7, 60703.0], [96.8, 60805.0], [96.9, 60812.0], [97.0, 61079.0], [97.1, 61290.0], [97.2, 61845.0], [97.3, 61952.0], [97.4, 61995.0], [97.5, 62138.0], [97.6, 62401.0], [97.7, 62772.0], [97.8, 66855.0], [97.9, 69378.0], [98.0, 77557.0], [98.1, 78236.0], [98.2, 81289.0], [98.3, 103731.0], [98.4, 115232.0], [98.5, 119935.0], [98.6, 120521.0], [98.7, 120551.0], [98.8, 120565.0], [98.9, 120583.0], [99.0, 120653.0], [99.1, 120683.0], [99.2, 120691.0], [99.3, 120767.0], [99.4, 120772.0], [99.5, 120803.0], [99.6, 120804.0], [99.7, 120806.0], [99.8, 120874.0], [99.9, 120906.0], [100.0, 120918.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 102.0], [0.1, 102.0], [0.2, 102.0], [0.3, 103.0], [0.4, 103.0], [0.5, 103.0], [0.6, 103.0], [0.7, 103.0], [0.8, 103.0], [0.9, 103.0], [1.0, 103.0], [1.1, 103.0], [1.2, 103.0], [1.3, 103.0], [1.4, 103.0], [1.5, 103.0], [1.6, 103.0], [1.7, 103.0], [1.8, 103.0], [1.9, 103.0], [2.0, 103.0], [2.1, 103.0], [2.2, 103.0], [2.3, 103.0], [2.4, 104.0], [2.5, 104.0], [2.6, 104.0], [2.7, 104.0], [2.8, 104.0], [2.9, 104.0], [3.0, 104.0], [3.1, 104.0], [3.2, 104.0], [3.3, 104.0], [3.4, 104.0], [3.5, 104.0], [3.6, 104.0], [3.7, 104.0], [3.8, 104.0], [3.9, 104.0], [4.0, 104.0], [4.1, 104.0], [4.2, 104.0], [4.3, 104.0], [4.4, 104.0], [4.5, 104.0], [4.6, 104.0], [4.7, 104.0], [4.8, 104.0], [4.9, 104.0], [5.0, 104.0], [5.1, 104.0], [5.2, 104.0], [5.3, 104.0], [5.4, 104.0], [5.5, 104.0], [5.6, 104.0], [5.7, 104.0], [5.8, 104.0], [5.9, 104.0], [6.0, 104.0], [6.1, 104.0], [6.2, 104.0], [6.3, 104.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 104.0], [7.2, 104.0], [7.3, 104.0], [7.4, 104.0], [7.5, 104.0], [7.6, 104.0], [7.7, 104.0], [7.8, 104.0], [7.9, 104.0], [8.0, 104.0], [8.1, 104.0], [8.2, 104.0], [8.3, 104.0], [8.4, 104.0], [8.5, 104.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 104.0], [9.0, 104.0], [9.1, 104.0], [9.2, 104.0], [9.3, 104.0], [9.4, 104.0], [9.5, 104.0], [9.6, 104.0], [9.7, 104.0], [9.8, 104.0], [9.9, 104.0], [10.0, 104.0], [10.1, 104.0], [10.2, 104.0], [10.3, 104.0], [10.4, 104.0], [10.5, 104.0], [10.6, 104.0], [10.7, 104.0], [10.8, 104.0], [10.9, 104.0], [11.0, 104.0], [11.1, 104.0], [11.2, 104.0], [11.3, 104.0], [11.4, 104.0], [11.5, 104.0], [11.6, 104.0], [11.7, 104.0], [11.8, 104.0], [11.9, 105.0], [12.0, 105.0], [12.1, 105.0], [12.2, 105.0], [12.3, 105.0], [12.4, 105.0], [12.5, 105.0], [12.6, 105.0], [12.7, 105.0], [12.8, 105.0], [12.9, 105.0], [13.0, 105.0], [13.1, 105.0], [13.2, 105.0], [13.3, 105.0], [13.4, 105.0], [13.5, 105.0], [13.6, 105.0], [13.7, 105.0], [13.8, 105.0], [13.9, 105.0], [14.0, 105.0], [14.1, 105.0], [14.2, 105.0], [14.3, 105.0], [14.4, 105.0], [14.5, 105.0], [14.6, 105.0], [14.7, 105.0], [14.8, 105.0], [14.9, 105.0], [15.0, 105.0], [15.1, 105.0], [15.2, 105.0], [15.3, 105.0], [15.4, 105.0], [15.5, 105.0], [15.6, 105.0], [15.7, 105.0], [15.8, 105.0], [15.9, 105.0], [16.0, 105.0], [16.1, 105.0], [16.2, 105.0], [16.3, 105.0], [16.4, 105.0], [16.5, 105.0], [16.6, 105.0], [16.7, 105.0], [16.8, 105.0], [16.9, 105.0], [17.0, 105.0], [17.1, 105.0], [17.2, 105.0], [17.3, 105.0], [17.4, 105.0], [17.5, 105.0], [17.6, 105.0], [17.7, 105.0], [17.8, 105.0], [17.9, 105.0], [18.0, 105.0], [18.1, 105.0], [18.2, 105.0], [18.3, 105.0], [18.4, 105.0], [18.5, 105.0], [18.6, 105.0], [18.7, 105.0], [18.8, 105.0], [18.9, 105.0], [19.0, 105.0], [19.1, 105.0], [19.2, 105.0], [19.3, 105.0], [19.4, 105.0], [19.5, 105.0], [19.6, 105.0], [19.7, 105.0], [19.8, 105.0], [19.9, 105.0], [20.0, 105.0], [20.1, 105.0], [20.2, 105.0], [20.3, 105.0], [20.4, 105.0], [20.5, 105.0], [20.6, 105.0], [20.7, 105.0], [20.8, 105.0], [20.9, 105.0], [21.0, 105.0], [21.1, 105.0], [21.2, 105.0], [21.3, 105.0], [21.4, 105.0], [21.5, 105.0], [21.6, 105.0], [21.7, 105.0], [21.8, 105.0], [21.9, 105.0], [22.0, 105.0], [22.1, 105.0], [22.2, 105.0], [22.3, 105.0], [22.4, 105.0], [22.5, 105.0], [22.6, 105.0], [22.7, 105.0], [22.8, 105.0], [22.9, 105.0], [23.0, 105.0], [23.1, 105.0], [23.2, 105.0], [23.3, 105.0], [23.4, 105.0], [23.5, 105.0], [23.6, 105.0], [23.7, 105.0], [23.8, 105.0], [23.9, 105.0], [24.0, 105.0], [24.1, 105.0], [24.2, 105.0], [24.3, 105.0], [24.4, 105.0], [24.5, 105.0], [24.6, 105.0], [24.7, 105.0], [24.8, 105.0], [24.9, 105.0], [25.0, 105.0], [25.1, 105.0], [25.2, 105.0], [25.3, 106.0], [25.4, 106.0], [25.5, 106.0], [25.6, 106.0], [25.7, 106.0], [25.8, 106.0], [25.9, 106.0], [26.0, 106.0], [26.1, 106.0], [26.2, 106.0], [26.3, 106.0], [26.4, 106.0], [26.5, 106.0], [26.6, 106.0], [26.7, 106.0], [26.8, 106.0], [26.9, 106.0], [27.0, 106.0], [27.1, 106.0], [27.2, 106.0], [27.3, 106.0], [27.4, 106.0], [27.5, 106.0], [27.6, 106.0], [27.7, 106.0], [27.8, 106.0], [27.9, 106.0], [28.0, 106.0], [28.1, 106.0], [28.2, 106.0], [28.3, 106.0], [28.4, 106.0], [28.5, 106.0], [28.6, 106.0], [28.7, 106.0], [28.8, 106.0], [28.9, 106.0], [29.0, 106.0], [29.1, 106.0], [29.2, 106.0], [29.3, 106.0], [29.4, 106.0], [29.5, 106.0], [29.6, 106.0], [29.7, 106.0], [29.8, 106.0], [29.9, 106.0], [30.0, 106.0], [30.1, 106.0], [30.2, 106.0], [30.3, 106.0], [30.4, 106.0], [30.5, 106.0], [30.6, 106.0], [30.7, 106.0], [30.8, 106.0], [30.9, 106.0], [31.0, 106.0], [31.1, 106.0], [31.2, 106.0], [31.3, 106.0], [31.4, 106.0], [31.5, 106.0], [31.6, 106.0], [31.7, 106.0], [31.8, 106.0], [31.9, 106.0], [32.0, 106.0], [32.1, 106.0], [32.2, 106.0], [32.3, 106.0], [32.4, 106.0], [32.5, 106.0], [32.6, 106.0], [32.7, 106.0], [32.8, 106.0], [32.9, 106.0], [33.0, 106.0], [33.1, 106.0], [33.2, 106.0], [33.3, 106.0], [33.4, 106.0], [33.5, 106.0], [33.6, 106.0], [33.7, 106.0], [33.8, 106.0], [33.9, 106.0], [34.0, 106.0], [34.1, 106.0], [34.2, 106.0], [34.3, 106.0], [34.4, 106.0], [34.5, 106.0], [34.6, 106.0], [34.7, 106.0], [34.8, 106.0], [34.9, 106.0], [35.0, 106.0], [35.1, 106.0], [35.2, 106.0], [35.3, 106.0], [35.4, 106.0], [35.5, 106.0], [35.6, 106.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 106.0], [36.2, 106.0], [36.3, 106.0], [36.4, 106.0], [36.5, 106.0], [36.6, 106.0], [36.7, 106.0], [36.8, 106.0], [36.9, 106.0], [37.0, 106.0], [37.1, 106.0], [37.2, 106.0], [37.3, 106.0], [37.4, 106.0], [37.5, 106.0], [37.6, 106.0], [37.7, 106.0], [37.8, 106.0], [37.9, 106.0], [38.0, 106.0], [38.1, 107.0], [38.2, 107.0], [38.3, 107.0], [38.4, 107.0], [38.5, 107.0], [38.6, 107.0], [38.7, 107.0], [38.8, 107.0], [38.9, 107.0], [39.0, 107.0], [39.1, 107.0], [39.2, 107.0], [39.3, 107.0], [39.4, 107.0], [39.5, 107.0], [39.6, 107.0], [39.7, 107.0], [39.8, 107.0], [39.9, 107.0], [40.0, 107.0], [40.1, 107.0], [40.2, 107.0], [40.3, 107.0], [40.4, 107.0], [40.5, 107.0], [40.6, 107.0], [40.7, 107.0], [40.8, 107.0], [40.9, 107.0], [41.0, 107.0], [41.1, 107.0], [41.2, 107.0], [41.3, 107.0], [41.4, 107.0], [41.5, 107.0], [41.6, 107.0], [41.7, 107.0], [41.8, 107.0], [41.9, 107.0], [42.0, 107.0], [42.1, 107.0], [42.2, 107.0], [42.3, 107.0], [42.4, 107.0], [42.5, 107.0], [42.6, 107.0], [42.7, 107.0], [42.8, 107.0], [42.9, 107.0], [43.0, 107.0], [43.1, 107.0], [43.2, 107.0], [43.3, 107.0], [43.4, 107.0], [43.5, 107.0], [43.6, 107.0], [43.7, 107.0], [43.8, 107.0], [43.9, 107.0], [44.0, 107.0], [44.1, 107.0], [44.2, 107.0], [44.3, 107.0], [44.4, 107.0], [44.5, 107.0], [44.6, 107.0], [44.7, 107.0], [44.8, 107.0], [44.9, 107.0], [45.0, 107.0], [45.1, 107.0], [45.2, 107.0], [45.3, 107.0], [45.4, 107.0], [45.5, 107.0], [45.6, 107.0], [45.7, 107.0], [45.8, 107.0], [45.9, 107.0], [46.0, 107.0], [46.1, 107.0], [46.2, 107.0], [46.3, 107.0], [46.4, 107.0], [46.5, 107.0], [46.6, 107.0], [46.7, 107.0], [46.8, 107.0], [46.9, 107.0], [47.0, 107.0], [47.1, 107.0], [47.2, 107.0], [47.3, 107.0], [47.4, 107.0], [47.5, 107.0], [47.6, 107.0], [47.7, 107.0], [47.8, 107.0], [47.9, 107.0], [48.0, 107.0], [48.1, 107.0], [48.2, 107.0], [48.3, 107.0], [48.4, 107.0], [48.5, 107.0], [48.6, 107.0], [48.7, 107.0], [48.8, 107.0], [48.9, 107.0], [49.0, 107.0], [49.1, 107.0], [49.2, 107.0], [49.3, 107.0], [49.4, 107.0], [49.5, 107.0], [49.6, 108.0], [49.7, 108.0], [49.8, 108.0], [49.9, 108.0], [50.0, 108.0], [50.1, 108.0], [50.2, 108.0], [50.3, 108.0], [50.4, 108.0], [50.5, 108.0], [50.6, 108.0], [50.7, 108.0], [50.8, 108.0], [50.9, 108.0], [51.0, 108.0], [51.1, 108.0], [51.2, 108.0], [51.3, 108.0], [51.4, 108.0], [51.5, 108.0], [51.6, 108.0], [51.7, 108.0], [51.8, 108.0], [51.9, 108.0], [52.0, 108.0], [52.1, 108.0], [52.2, 108.0], [52.3, 108.0], [52.4, 108.0], [52.5, 108.0], [52.6, 108.0], [52.7, 108.0], [52.8, 108.0], [52.9, 108.0], [53.0, 108.0], [53.1, 108.0], [53.2, 108.0], [53.3, 108.0], [53.4, 108.0], [53.5, 108.0], [53.6, 108.0], [53.7, 108.0], [53.8, 108.0], [53.9, 108.0], [54.0, 108.0], [54.1, 108.0], [54.2, 108.0], [54.3, 108.0], [54.4, 108.0], [54.5, 108.0], [54.6, 108.0], [54.7, 108.0], [54.8, 108.0], [54.9, 108.0], [55.0, 108.0], [55.1, 108.0], [55.2, 108.0], [55.3, 108.0], [55.4, 108.0], [55.5, 108.0], [55.6, 109.0], [55.7, 109.0], [55.8, 109.0], [55.9, 109.0], [56.0, 109.0], [56.1, 109.0], [56.2, 109.0], [56.3, 109.0], [56.4, 109.0], [56.5, 109.0], [56.6, 109.0], [56.7, 109.0], [56.8, 109.0], [56.9, 109.0], [57.0, 109.0], [57.1, 109.0], [57.2, 109.0], [57.3, 109.0], [57.4, 109.0], [57.5, 109.0], [57.6, 109.0], [57.7, 109.0], [57.8, 109.0], [57.9, 109.0], [58.0, 109.0], [58.1, 109.0], [58.2, 109.0], [58.3, 109.0], [58.4, 109.0], [58.5, 109.0], [58.6, 109.0], [58.7, 109.0], [58.8, 109.0], [58.9, 109.0], [59.0, 109.0], [59.1, 109.0], [59.2, 109.0], [59.3, 109.0], [59.4, 109.0], [59.5, 109.0], [59.6, 109.0], [59.7, 109.0], [59.8, 110.0], [59.9, 110.0], [60.0, 110.0], [60.1, 110.0], [60.2, 110.0], [60.3, 110.0], [60.4, 110.0], [60.5, 110.0], [60.6, 110.0], [60.7, 110.0], [60.8, 110.0], [60.9, 110.0], [61.0, 110.0], [61.1, 110.0], [61.2, 110.0], [61.3, 110.0], [61.4, 110.0], [61.5, 110.0], [61.6, 110.0], [61.7, 110.0], [61.8, 110.0], [61.9, 110.0], [62.0, 111.0], [62.1, 111.0], [62.2, 111.0], [62.3, 111.0], [62.4, 111.0], [62.5, 111.0], [62.6, 111.0], [62.7, 111.0], [62.8, 111.0], [62.9, 111.0], [63.0, 111.0], [63.1, 111.0], [63.2, 111.0], [63.3, 111.0], [63.4, 112.0], [63.5, 112.0], [63.6, 112.0], [63.7, 112.0], [63.8, 112.0], [63.9, 112.0], [64.0, 112.0], [64.1, 113.0], [64.2, 113.0], [64.3, 113.0], [64.4, 113.0], [64.5, 113.0], [64.6, 113.0], [64.7, 113.0], [64.8, 113.0], [64.9, 113.0], [65.0, 114.0], [65.1, 114.0], [65.2, 114.0], [65.3, 114.0], [65.4, 114.0], [65.5, 115.0], [65.6, 115.0], [65.7, 116.0], [65.8, 116.0], [65.9, 116.0], [66.0, 116.0], [66.1, 116.0], [66.2, 116.0], [66.3, 116.0], [66.4, 117.0], [66.5, 118.0], [66.6, 118.0], [66.7, 119.0], [66.8, 119.0], [66.9, 119.0], [67.0, 119.0], [67.1, 120.0], [67.2, 120.0], [67.3, 121.0], [67.4, 121.0], [67.5, 122.0], [67.6, 122.0], [67.7, 123.0], [67.8, 123.0], [67.9, 123.0], [68.0, 123.0], [68.1, 124.0], [68.2, 124.0], [68.3, 124.0], [68.4, 124.0], [68.5, 124.0], [68.6, 125.0], [68.7, 126.0], [68.8, 126.0], [68.9, 126.0], [69.0, 126.0], [69.1, 126.0], [69.2, 127.0], [69.3, 127.0], [69.4, 127.0], [69.5, 128.0], [69.6, 128.0], [69.7, 128.0], [69.8, 128.0], [69.9, 129.0], [70.0, 129.0], [70.1, 129.0], [70.2, 129.0], [70.3, 129.0], [70.4, 130.0], [70.5, 130.0], [70.6, 131.0], [70.7, 131.0], [70.8, 132.0], [70.9, 132.0], [71.0, 132.0], [71.1, 135.0], [71.2, 135.0], [71.3, 136.0], [71.4, 136.0], [71.5, 137.0], [71.6, 137.0], [71.7, 137.0], [71.8, 138.0], [71.9, 138.0], [72.0, 139.0], [72.1, 139.0], [72.2, 139.0], [72.3, 140.0], [72.4, 140.0], [72.5, 141.0], [72.6, 142.0], [72.7, 143.0], [72.8, 144.0], [72.9, 145.0], [73.0, 145.0], [73.1, 145.0], [73.2, 146.0], [73.3, 146.0], [73.4, 146.0], [73.5, 148.0], [73.6, 149.0], [73.7, 151.0], [73.8, 151.0], [73.9, 151.0], [74.0, 152.0], [74.1, 153.0], [74.2, 153.0], [74.3, 154.0], [74.4, 155.0], [74.5, 157.0], [74.6, 157.0], [74.7, 158.0], [74.8, 161.0], [74.9, 162.0], [75.0, 163.0], [75.1, 164.0], [75.2, 165.0], [75.3, 166.0], [75.4, 166.0], [75.5, 169.0], [75.6, 172.0], [75.7, 172.0], [75.8, 172.0], [75.9, 173.0], [76.0, 174.0], [76.1, 174.0], [76.2, 176.0], [76.3, 176.0], [76.4, 178.0], [76.5, 179.0], [76.6, 179.0], [76.7, 180.0], [76.8, 182.0], [76.9, 183.0], [77.0, 184.0], [77.1, 185.0], [77.2, 186.0], [77.3, 186.0], [77.4, 189.0], [77.5, 189.0], [77.6, 192.0], [77.7, 197.0], [77.8, 198.0], [77.9, 199.0], [78.0, 200.0], [78.1, 201.0], [78.2, 201.0], [78.3, 201.0], [78.4, 203.0], [78.5, 206.0], [78.6, 207.0], [78.7, 207.0], [78.8, 209.0], [78.9, 209.0], [79.0, 210.0], [79.1, 211.0], [79.2, 211.0], [79.3, 213.0], [79.4, 216.0], [79.5, 245.0], [79.6, 258.0], [79.7, 321.0], [79.8, 579.0], [79.9, 2520.0], [80.0, 5130.0], [80.1, 5208.0], [80.2, 5470.0], [80.3, 5734.0], [80.4, 6152.0], [80.5, 6297.0], [80.6, 6647.0], [80.7, 6696.0], [80.8, 7012.0], [80.9, 7098.0], [81.0, 8213.0], [81.1, 8258.0], [81.2, 8336.0], [81.3, 8408.0], [81.4, 8856.0], [81.5, 9133.0], [81.6, 9310.0], [81.7, 10450.0], [81.8, 10682.0], [81.9, 10795.0], [82.0, 11446.0], [82.1, 11537.0], [82.2, 12366.0], [82.3, 12410.0], [82.4, 13085.0], [82.5, 13429.0], [82.6, 13484.0], [82.7, 13535.0], [82.8, 13805.0], [82.9, 14357.0], [83.0, 14444.0], [83.1, 14519.0], [83.2, 14851.0], [83.3, 16022.0], [83.4, 16450.0], [83.5, 16554.0], [83.6, 17365.0], [83.7, 17517.0], [83.8, 17665.0], [83.9, 18024.0], [84.0, 18679.0], [84.1, 19146.0], [84.2, 19349.0], [84.3, 19370.0], [84.4, 19731.0], [84.5, 19826.0], [84.6, 20267.0], [84.7, 20494.0], [84.8, 20845.0], [84.9, 21081.0], [85.0, 21154.0], [85.1, 21162.0], [85.2, 21511.0], [85.3, 21537.0], [85.4, 21831.0], [85.5, 21915.0], [85.6, 21959.0], [85.7, 22112.0], [85.8, 22205.0], [85.9, 22408.0], [86.0, 22477.0], [86.1, 22563.0], [86.2, 22878.0], [86.3, 22921.0], [86.4, 23353.0], [86.5, 23421.0], [86.6, 23536.0], [86.7, 23760.0], [86.8, 23939.0], [86.9, 24386.0], [87.0, 25679.0], [87.1, 25820.0], [87.2, 25821.0], [87.3, 26615.0], [87.4, 26689.0], [87.5, 27886.0], [87.6, 28124.0], [87.7, 28277.0], [87.8, 29071.0], [87.9, 29397.0], [88.0, 30053.0], [88.1, 30621.0], [88.2, 30794.0], [88.3, 30994.0], [88.4, 31069.0], [88.5, 31281.0], [88.6, 32739.0], [88.7, 32787.0], [88.8, 32910.0], [88.9, 34348.0], [89.0, 34879.0], [89.1, 35553.0], [89.2, 37188.0], [89.3, 37807.0], [89.4, 38598.0], [89.5, 39284.0], [89.6, 39448.0], [89.7, 39918.0], [89.8, 40148.0], [89.9, 40596.0], [90.0, 40736.0], [90.1, 41196.0], [90.2, 41800.0], [90.3, 42096.0], [90.4, 42713.0], [90.5, 43307.0], [90.6, 43439.0], [90.7, 44066.0], [90.8, 45080.0], [90.9, 45626.0], [91.0, 45892.0], [91.1, 45963.0], [91.2, 46148.0], [91.3, 46290.0], [91.4, 47651.0], [91.5, 48178.0], [91.6, 48258.0], [91.7, 49788.0], [91.8, 50606.0], [91.9, 50622.0], [92.0, 51308.0], [92.1, 52874.0], [92.2, 54884.0], [92.3, 56674.0], [92.4, 57126.0], [92.5, 57896.0], [92.6, 59626.0], [92.7, 59934.0], [92.8, 60105.0], [92.9, 60106.0], [93.0, 60107.0], [93.1, 60107.0], [93.2, 60107.0], [93.3, 60107.0], [93.4, 60108.0], [93.5, 60108.0], [93.6, 60108.0], [93.7, 60109.0], [93.8, 60109.0], [93.9, 60110.0], [94.0, 60110.0], [94.1, 60110.0], [94.2, 60117.0], [94.3, 60117.0], [94.4, 60124.0], [94.5, 60128.0], [94.6, 60129.0], [94.7, 60129.0], [94.8, 60133.0], [94.9, 60134.0], [95.0, 60136.0], [95.1, 60136.0], [95.2, 60148.0], [95.3, 60150.0], [95.4, 60150.0], [95.5, 60152.0], [95.6, 60155.0], [95.7, 60155.0], [95.8, 60163.0], [95.9, 60164.0], [96.0, 60166.0], [96.1, 60171.0], [96.2, 60171.0], [96.3, 60177.0], [96.4, 60177.0], [96.5, 60181.0], [96.6, 60182.0], [96.7, 60185.0], [96.8, 60185.0], [96.9, 60189.0], [97.0, 60192.0], [97.1, 60194.0], [97.2, 60204.0], [97.3, 60204.0], [97.4, 60208.0], [97.5, 60214.0], [97.6, 60219.0], [97.7, 60237.0], [97.8, 60241.0], [97.9, 60257.0], [98.0, 60263.0], [98.1, 60266.0], [98.2, 60282.0], [98.3, 60288.0], [98.4, 60288.0], [98.5, 60299.0], [98.6, 60321.0], [98.7, 60339.0], [98.8, 60341.0], [98.9, 60341.0], [99.0, 60358.0], [99.1, 60361.0], [99.2, 60362.0], [99.3, 60388.0], [99.4, 60391.0], [99.5, 60396.0], [99.6, 60404.0], [99.7, 60411.0], [99.8, 60443.0], [99.9, 60491.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[0.0, 204.0], [0.1, 204.0], [0.2, 204.0], [0.3, 204.0], [0.4, 204.0], [0.5, 204.0], [0.6, 204.0], [0.7, 204.0], [0.8, 204.0], [0.9, 204.0], [1.0, 204.0], [1.1, 205.0], [1.2, 205.0], [1.3, 205.0], [1.4, 205.0], [1.5, 205.0], [1.6, 205.0], [1.7, 205.0], [1.8, 205.0], [1.9, 205.0], [2.0, 205.0], [2.1, 205.0], [2.2, 205.0], [2.3, 205.0], [2.4, 205.0], [2.5, 205.0], [2.6, 205.0], [2.7, 205.0], [2.8, 205.0], [2.9, 205.0], [3.0, 205.0], [3.1, 205.0], [3.2, 205.0], [3.3, 205.0], [3.4, 205.0], [3.5, 205.0], [3.6, 205.0], [3.7, 205.0], [3.8, 205.0], [3.9, 205.0], [4.0, 205.0], [4.1, 205.0], [4.2, 205.0], [4.3, 205.0], [4.4, 205.0], [4.5, 205.0], [4.6, 205.0], [4.7, 205.0], [4.8, 205.0], [4.9, 205.0], [5.0, 205.0], [5.1, 205.0], [5.2, 205.0], [5.3, 205.0], [5.4, 205.0], [5.5, 205.0], [5.6, 206.0], [5.7, 206.0], [5.8, 206.0], [5.9, 206.0], [6.0, 206.0], [6.1, 206.0], [6.2, 206.0], [6.3, 206.0], [6.4, 206.0], [6.5, 206.0], [6.6, 206.0], [6.7, 206.0], [6.8, 206.0], [6.9, 206.0], [7.0, 206.0], [7.1, 206.0], [7.2, 206.0], [7.3, 206.0], [7.4, 206.0], [7.5, 206.0], [7.6, 206.0], [7.7, 206.0], [7.8, 206.0], [7.9, 206.0], [8.0, 206.0], [8.1, 206.0], [8.2, 206.0], [8.3, 206.0], [8.4, 206.0], [8.5, 206.0], [8.6, 206.0], [8.7, 206.0], [8.8, 206.0], [8.9, 206.0], [9.0, 206.0], [9.1, 206.0], [9.2, 206.0], [9.3, 206.0], [9.4, 206.0], [9.5, 206.0], [9.6, 206.0], [9.7, 206.0], [9.8, 206.0], [9.9, 206.0], [10.0, 206.0], [10.1, 206.0], [10.2, 206.0], [10.3, 206.0], [10.4, 206.0], [10.5, 206.0], [10.6, 206.0], [10.7, 206.0], [10.8, 206.0], [10.9, 206.0], [11.0, 206.0], [11.1, 206.0], [11.2, 206.0], [11.3, 206.0], [11.4, 206.0], [11.5, 206.0], [11.6, 206.0], [11.7, 206.0], [11.8, 206.0], [11.9, 206.0], [12.0, 206.0], [12.1, 206.0], [12.2, 206.0], [12.3, 206.0], [12.4, 206.0], [12.5, 206.0], [12.6, 206.0], [12.7, 206.0], [12.8, 206.0], [12.9, 206.0], [13.0, 206.0], [13.1, 206.0], [13.2, 206.0], [13.3, 206.0], [13.4, 206.0], [13.5, 206.0], [13.6, 206.0], [13.7, 206.0], [13.8, 206.0], [13.9, 206.0], [14.0, 206.0], [14.1, 206.0], [14.2, 206.0], [14.3, 206.0], [14.4, 206.0], [14.5, 207.0], [14.6, 207.0], [14.7, 207.0], [14.8, 207.0], [14.9, 207.0], [15.0, 207.0], [15.1, 207.0], [15.2, 207.0], [15.3, 207.0], [15.4, 207.0], [15.5, 207.0], [15.6, 207.0], [15.7, 207.0], [15.8, 207.0], [15.9, 207.0], [16.0, 207.0], [16.1, 207.0], [16.2, 207.0], [16.3, 207.0], [16.4, 207.0], [16.5, 207.0], [16.6, 207.0], [16.7, 207.0], [16.8, 207.0], [16.9, 207.0], [17.0, 207.0], [17.1, 207.0], [17.2, 207.0], [17.3, 207.0], [17.4, 207.0], [17.5, 207.0], [17.6, 207.0], [17.7, 207.0], [17.8, 207.0], [17.9, 207.0], [18.0, 207.0], [18.1, 207.0], [18.2, 207.0], [18.3, 207.0], [18.4, 207.0], [18.5, 207.0], [18.6, 207.0], [18.7, 207.0], [18.8, 207.0], [18.9, 207.0], [19.0, 207.0], [19.1, 207.0], [19.2, 207.0], [19.3, 207.0], [19.4, 207.0], [19.5, 207.0], [19.6, 207.0], [19.7, 207.0], [19.8, 207.0], [19.9, 207.0], [20.0, 207.0], [20.1, 207.0], [20.2, 207.0], [20.3, 207.0], [20.4, 207.0], [20.5, 207.0], [20.6, 207.0], [20.7, 207.0], [20.8, 207.0], [20.9, 207.0], [21.0, 207.0], [21.1, 207.0], [21.2, 207.0], [21.3, 207.0], [21.4, 207.0], [21.5, 207.0], [21.6, 207.0], [21.7, 207.0], [21.8, 207.0], [21.9, 207.0], [22.0, 207.0], [22.1, 207.0], [22.2, 207.0], [22.3, 207.0], [22.4, 207.0], [22.5, 207.0], [22.6, 207.0], [22.7, 207.0], [22.8, 207.0], [22.9, 207.0], [23.0, 207.0], [23.1, 207.0], [23.2, 207.0], [23.3, 207.0], [23.4, 207.0], [23.5, 207.0], [23.6, 207.0], [23.7, 207.0], [23.8, 207.0], [23.9, 207.0], [24.0, 207.0], [24.1, 207.0], [24.2, 207.0], [24.3, 207.0], [24.4, 207.0], [24.5, 207.0], [24.6, 207.0], [24.7, 207.0], [24.8, 207.0], [24.9, 207.0], [25.0, 207.0], [25.1, 207.0], [25.2, 207.0], [25.3, 207.0], [25.4, 207.0], [25.5, 207.0], [25.6, 207.0], [25.7, 207.0], [25.8, 207.0], [25.9, 208.0], [26.0, 208.0], [26.1, 208.0], [26.2, 208.0], [26.3, 208.0], [26.4, 208.0], [26.5, 208.0], [26.6, 208.0], [26.7, 208.0], [26.8, 208.0], [26.9, 208.0], [27.0, 208.0], [27.1, 208.0], [27.2, 208.0], [27.3, 208.0], [27.4, 208.0], [27.5, 208.0], [27.6, 208.0], [27.7, 208.0], [27.8, 208.0], [27.9, 208.0], [28.0, 208.0], [28.1, 208.0], [28.2, 208.0], [28.3, 208.0], [28.4, 208.0], [28.5, 208.0], [28.6, 208.0], [28.7, 208.0], [28.8, 208.0], [28.9, 208.0], [29.0, 208.0], [29.1, 208.0], [29.2, 208.0], [29.3, 208.0], [29.4, 208.0], [29.5, 208.0], [29.6, 208.0], [29.7, 208.0], [29.8, 208.0], [29.9, 208.0], [30.0, 208.0], [30.1, 208.0], [30.2, 208.0], [30.3, 208.0], [30.4, 208.0], [30.5, 208.0], [30.6, 208.0], [30.7, 208.0], [30.8, 208.0], [30.9, 208.0], [31.0, 208.0], [31.1, 208.0], [31.2, 208.0], [31.3, 208.0], [31.4, 208.0], [31.5, 208.0], [31.6, 208.0], [31.7, 208.0], [31.8, 208.0], [31.9, 208.0], [32.0, 208.0], [32.1, 208.0], [32.2, 208.0], [32.3, 208.0], [32.4, 208.0], [32.5, 208.0], [32.6, 208.0], [32.7, 208.0], [32.8, 208.0], [32.9, 208.0], [33.0, 208.0], [33.1, 208.0], [33.2, 208.0], [33.3, 208.0], [33.4, 208.0], [33.5, 208.0], [33.6, 208.0], [33.7, 208.0], [33.8, 208.0], [33.9, 208.0], [34.0, 208.0], [34.1, 208.0], [34.2, 208.0], [34.3, 208.0], [34.4, 208.0], [34.5, 209.0], [34.6, 209.0], [34.7, 209.0], [34.8, 209.0], [34.9, 209.0], [35.0, 209.0], [35.1, 209.0], [35.2, 209.0], [35.3, 209.0], [35.4, 209.0], [35.5, 209.0], [35.6, 209.0], [35.7, 209.0], [35.8, 209.0], [35.9, 209.0], [36.0, 209.0], [36.1, 209.0], [36.2, 209.0], [36.3, 209.0], [36.4, 209.0], [36.5, 209.0], [36.6, 209.0], [36.7, 209.0], [36.8, 209.0], [36.9, 209.0], [37.0, 209.0], [37.1, 209.0], [37.2, 209.0], [37.3, 209.0], [37.4, 209.0], [37.5, 209.0], [37.6, 209.0], [37.7, 209.0], [37.8, 209.0], [37.9, 209.0], [38.0, 209.0], [38.1, 209.0], [38.2, 209.0], [38.3, 209.0], [38.4, 209.0], [38.5, 209.0], [38.6, 209.0], [38.7, 209.0], [38.8, 209.0], [38.9, 209.0], [39.0, 209.0], [39.1, 209.0], [39.2, 209.0], [39.3, 209.0], [39.4, 209.0], [39.5, 209.0], [39.6, 209.0], [39.7, 209.0], [39.8, 209.0], [39.9, 209.0], [40.0, 209.0], [40.1, 209.0], [40.2, 209.0], [40.3, 209.0], [40.4, 209.0], [40.5, 209.0], [40.6, 209.0], [40.7, 209.0], [40.8, 209.0], [40.9, 209.0], [41.0, 209.0], [41.1, 209.0], [41.2, 209.0], [41.3, 209.0], [41.4, 209.0], [41.5, 210.0], [41.6, 210.0], [41.7, 210.0], [41.8, 210.0], [41.9, 210.0], [42.0, 210.0], [42.1, 210.0], [42.2, 210.0], [42.3, 210.0], [42.4, 210.0], [42.5, 210.0], [42.6, 210.0], [42.7, 210.0], [42.8, 210.0], [42.9, 210.0], [43.0, 210.0], [43.1, 210.0], [43.2, 210.0], [43.3, 210.0], [43.4, 210.0], [43.5, 210.0], [43.6, 210.0], [43.7, 210.0], [43.8, 210.0], [43.9, 210.0], [44.0, 210.0], [44.1, 210.0], [44.2, 210.0], [44.3, 210.0], [44.4, 210.0], [44.5, 210.0], [44.6, 210.0], [44.7, 210.0], [44.8, 210.0], [44.9, 210.0], [45.0, 210.0], [45.1, 210.0], [45.2, 210.0], [45.3, 210.0], [45.4, 210.0], [45.5, 210.0], [45.6, 210.0], [45.7, 210.0], [45.8, 210.0], [45.9, 210.0], [46.0, 210.0], [46.1, 210.0], [46.2, 210.0], [46.3, 210.0], [46.4, 210.0], [46.5, 210.0], [46.6, 210.0], [46.7, 210.0], [46.8, 210.0], [46.9, 210.0], [47.0, 210.0], [47.1, 211.0], [47.2, 211.0], [47.3, 211.0], [47.4, 211.0], [47.5, 211.0], [47.6, 211.0], [47.7, 211.0], [47.8, 211.0], [47.9, 211.0], [48.0, 211.0], [48.1, 211.0], [48.2, 211.0], [48.3, 211.0], [48.4, 211.0], [48.5, 211.0], [48.6, 211.0], [48.7, 211.0], [48.8, 211.0], [48.9, 211.0], [49.0, 211.0], [49.1, 211.0], [49.2, 211.0], [49.3, 211.0], [49.4, 211.0], [49.5, 211.0], [49.6, 211.0], [49.7, 211.0], [49.8, 211.0], [49.9, 211.0], [50.0, 211.0], [50.1, 211.0], [50.2, 211.0], [50.3, 211.0], [50.4, 211.0], [50.5, 211.0], [50.6, 211.0], [50.7, 211.0], [50.8, 211.0], [50.9, 212.0], [51.0, 212.0], [51.1, 212.0], [51.2, 212.0], [51.3, 212.0], [51.4, 212.0], [51.5, 212.0], [51.6, 212.0], [51.7, 212.0], [51.8, 212.0], [51.9, 212.0], [52.0, 212.0], [52.1, 212.0], [52.2, 212.0], [52.3, 212.0], [52.4, 212.0], [52.5, 212.0], [52.6, 212.0], [52.7, 212.0], [52.8, 212.0], [52.9, 212.0], [53.0, 212.0], [53.1, 212.0], [53.2, 212.0], [53.3, 212.0], [53.4, 212.0], [53.5, 212.0], [53.6, 212.0], [53.7, 212.0], [53.8, 212.0], [53.9, 212.0], [54.0, 213.0], [54.1, 213.0], [54.2, 213.0], [54.3, 213.0], [54.4, 213.0], [54.5, 213.0], [54.6, 213.0], [54.7, 213.0], [54.8, 213.0], [54.9, 213.0], [55.0, 213.0], [55.1, 213.0], [55.2, 213.0], [55.3, 213.0], [55.4, 213.0], [55.5, 214.0], [55.6, 214.0], [55.7, 214.0], [55.8, 214.0], [55.9, 214.0], [56.0, 214.0], [56.1, 214.0], [56.2, 214.0], [56.3, 214.0], [56.4, 214.0], [56.5, 214.0], [56.6, 214.0], [56.7, 214.0], [56.8, 214.0], [56.9, 214.0], [57.0, 214.0], [57.1, 214.0], [57.2, 214.0], [57.3, 215.0], [57.4, 215.0], [57.5, 215.0], [57.6, 215.0], [57.7, 215.0], [57.8, 215.0], [57.9, 215.0], [58.0, 215.0], [58.1, 215.0], [58.2, 215.0], [58.3, 215.0], [58.4, 216.0], [58.5, 216.0], [58.6, 216.0], [58.7, 216.0], [58.8, 216.0], [58.9, 216.0], [59.0, 217.0], [59.1, 217.0], [59.2, 217.0], [59.3, 217.0], [59.4, 217.0], [59.5, 217.0], [59.6, 217.0], [59.7, 217.0], [59.8, 217.0], [59.9, 217.0], [60.0, 217.0], [60.1, 217.0], [60.2, 218.0], [60.3, 218.0], [60.4, 218.0], [60.5, 218.0], [60.6, 218.0], [60.7, 218.0], [60.8, 218.0], [60.9, 218.0], [61.0, 218.0], [61.1, 218.0], [61.2, 219.0], [61.3, 219.0], [61.4, 219.0], [61.5, 219.0], [61.6, 219.0], [61.7, 220.0], [61.8, 220.0], [61.9, 220.0], [62.0, 220.0], [62.1, 220.0], [62.2, 220.0], [62.3, 221.0], [62.4, 221.0], [62.5, 221.0], [62.6, 221.0], [62.7, 221.0], [62.8, 222.0], [62.9, 223.0], [63.0, 223.0], [63.1, 223.0], [63.2, 223.0], [63.3, 224.0], [63.4, 224.0], [63.5, 224.0], [63.6, 224.0], [63.7, 224.0], [63.8, 225.0], [63.9, 225.0], [64.0, 225.0], [64.1, 225.0], [64.2, 225.0], [64.3, 225.0], [64.4, 226.0], [64.5, 226.0], [64.6, 226.0], [64.7, 226.0], [64.8, 226.0], [64.9, 227.0], [65.0, 227.0], [65.1, 227.0], [65.2, 228.0], [65.3, 228.0], [65.4, 229.0], [65.5, 229.0], [65.6, 229.0], [65.7, 230.0], [65.8, 230.0], [65.9, 230.0], [66.0, 230.0], [66.1, 231.0], [66.2, 231.0], [66.3, 231.0], [66.4, 231.0], [66.5, 232.0], [66.6, 232.0], [66.7, 232.0], [66.8, 232.0], [66.9, 233.0], [67.0, 233.0], [67.1, 234.0], [67.2, 235.0], [67.3, 235.0], [67.4, 236.0], [67.5, 236.0], [67.6, 237.0], [67.7, 237.0], [67.8, 237.0], [67.9, 239.0], [68.0, 240.0], [68.1, 240.0], [68.2, 241.0], [68.3, 241.0], [68.4, 241.0], [68.5, 242.0], [68.6, 242.0], [68.7, 243.0], [68.8, 243.0], [68.9, 244.0], [69.0, 244.0], [69.1, 245.0], [69.2, 245.0], [69.3, 245.0], [69.4, 247.0], [69.5, 249.0], [69.6, 250.0], [69.7, 252.0], [69.8, 252.0], [69.9, 252.0], [70.0, 252.0], [70.1, 252.0], [70.2, 255.0], [70.3, 256.0], [70.4, 257.0], [70.5, 257.0], [70.6, 258.0], [70.7, 262.0], [70.8, 262.0], [70.9, 264.0], [71.0, 265.0], [71.1, 266.0], [71.2, 272.0], [71.3, 273.0], [71.4, 275.0], [71.5, 277.0], [71.6, 278.0], [71.7, 281.0], [71.8, 286.0], [71.9, 289.0], [72.0, 289.0], [72.1, 291.0], [72.2, 296.0], [72.3, 296.0], [72.4, 297.0], [72.5, 299.0], [72.6, 299.0], [72.7, 299.0], [72.8, 299.0], [72.9, 300.0], [73.0, 301.0], [73.1, 301.0], [73.2, 302.0], [73.3, 302.0], [73.4, 302.0], [73.5, 303.0], [73.6, 303.0], [73.7, 304.0], [73.8, 304.0], [73.9, 304.0], [74.0, 304.0], [74.1, 304.0], [74.2, 304.0], [74.3, 304.0], [74.4, 304.0], [74.5, 305.0], [74.6, 305.0], [74.7, 305.0], [74.8, 305.0], [74.9, 305.0], [75.0, 305.0], [75.1, 305.0], [75.2, 305.0], [75.3, 305.0], [75.4, 305.0], [75.5, 306.0], [75.6, 306.0], [75.7, 306.0], [75.8, 306.0], [75.9, 306.0], [76.0, 306.0], [76.1, 306.0], [76.2, 306.0], [76.3, 307.0], [76.4, 307.0], [76.5, 307.0], [76.6, 307.0], [76.7, 307.0], [76.8, 307.0], [76.9, 307.0], [77.0, 307.0], [77.1, 307.0], [77.2, 307.0], [77.3, 307.0], [77.4, 307.0], [77.5, 307.0], [77.6, 308.0], [77.7, 308.0], [77.8, 308.0], [77.9, 308.0], [78.0, 308.0], [78.1, 308.0], [78.2, 309.0], [78.3, 309.0], [78.4, 309.0], [78.5, 309.0], [78.6, 309.0], [78.7, 309.0], [78.8, 310.0], [78.9, 312.0], [79.0, 313.0], [79.1, 315.0], [79.2, 316.0], [79.3, 317.0], [79.4, 317.0], [79.5, 320.0], [79.6, 322.0], [79.7, 327.0], [79.8, 327.0], [79.9, 328.0], [80.0, 329.0], [80.1, 329.0], [80.2, 330.0], [80.3, 330.0], [80.4, 330.0], [80.5, 331.0], [80.6, 333.0], [80.7, 333.0], [80.8, 336.0], [80.9, 339.0], [81.0, 345.0], [81.1, 346.0], [81.2, 346.0], [81.3, 349.0], [81.4, 349.0], [81.5, 349.0], [81.6, 352.0], [81.7, 354.0], [81.8, 354.0], [81.9, 356.0], [82.0, 356.0], [82.1, 357.0], [82.2, 357.0], [82.3, 359.0], [82.4, 359.0], [82.5, 361.0], [82.6, 364.0], [82.7, 364.0], [82.8, 369.0], [82.9, 372.0], [83.0, 376.0], [83.1, 381.0], [83.2, 381.0], [83.3, 383.0], [83.4, 385.0], [83.5, 386.0], [83.6, 389.0], [83.7, 390.0], [83.8, 391.0], [83.9, 391.0], [84.0, 394.0], [84.1, 395.0], [84.2, 398.0], [84.3, 398.0], [84.4, 398.0], [84.5, 398.0], [84.6, 400.0], [84.7, 400.0], [84.8, 401.0], [84.9, 401.0], [85.0, 402.0], [85.1, 402.0], [85.2, 402.0], [85.3, 402.0], [85.4, 404.0], [85.5, 404.0], [85.6, 404.0], [85.7, 404.0], [85.8, 405.0], [85.9, 405.0], [86.0, 405.0], [86.1, 406.0], [86.2, 406.0], [86.3, 406.0], [86.4, 406.0], [86.5, 406.0], [86.6, 406.0], [86.7, 406.0], [86.8, 406.0], [86.9, 406.0], [87.0, 407.0], [87.1, 407.0], [87.2, 407.0], [87.3, 407.0], [87.4, 407.0], [87.5, 407.0], [87.6, 407.0], [87.7, 407.0], [87.8, 407.0], [87.9, 407.0], [88.0, 408.0], [88.1, 408.0], [88.2, 408.0], [88.3, 408.0], [88.4, 408.0], [88.5, 408.0], [88.6, 408.0], [88.7, 408.0], [88.8, 408.0], [88.9, 408.0], [89.0, 408.0], [89.1, 408.0], [89.2, 408.0], [89.3, 408.0], [89.4, 409.0], [89.5, 409.0], [89.6, 409.0], [89.7, 409.0], [89.8, 409.0], [89.9, 409.0], [90.0, 409.0], [90.1, 409.0], [90.2, 409.0], [90.3, 409.0], [90.4, 410.0], [90.5, 410.0], [90.6, 410.0], [90.7, 410.0], [90.8, 410.0], [90.9, 410.0], [91.0, 410.0], [91.1, 410.0], [91.2, 411.0], [91.3, 411.0], [91.4, 411.0], [91.5, 411.0], [91.6, 412.0], [91.7, 412.0], [91.8, 412.0], [91.9, 412.0], [92.0, 413.0], [92.1, 413.0], [92.2, 414.0], [92.3, 414.0], [92.4, 414.0], [92.5, 415.0], [92.6, 415.0], [92.7, 422.0], [92.8, 427.0], [92.9, 450.0], [93.0, 451.0], [93.1, 451.0], [93.2, 452.0], [93.3, 472.0], [93.4, 493.0], [93.5, 498.0], [93.6, 507.0], [93.7, 508.0], [93.8, 509.0], [93.9, 509.0], [94.0, 509.0], [94.1, 509.0], [94.2, 509.0], [94.3, 509.0], [94.4, 510.0], [94.5, 511.0], [94.6, 511.0], [94.7, 514.0], [94.8, 514.0], [94.9, 521.0], [95.0, 523.0], [95.1, 524.0], [95.2, 611.0], [95.3, 612.0], [95.4, 613.0], [95.5, 718.0], [95.6, 822.0], [95.7, 1022.0], [95.8, 1023.0], [95.9, 1545.0], [96.0, 1736.0], [96.1, 1842.0], [96.2, 1843.0], [96.3, 2029.0], [96.4, 2238.0], [96.5, 2665.0], [96.6, 2665.0], [96.7, 6748.0], [96.8, 14548.0], [96.9, 14548.0], [97.0, 15775.0], [97.1, 15983.0], [97.2, 16188.0], [97.3, 17207.0], [97.4, 17211.0], [97.5, 18043.0], [97.6, 18338.0], [97.7, 18339.0], [97.8, 19257.0], [97.9, 19259.0], [98.0, 23560.0], [98.1, 58171.0], [98.2, 60269.0], [98.3, 60277.0], [98.4, 60280.0], [98.5, 60308.0], [98.6, 60309.0], [98.7, 60310.0], [98.8, 60312.0], [98.9, 60315.0], [99.0, 60324.0], [99.1, 60348.0], [99.2, 60360.0], [99.3, 60411.0], [99.4, 60415.0], [99.5, 60415.0], [99.6, 60417.0], [99.7, 60424.0], [99.8, 60515.0], [99.9, 60516.0], [100.0, 60522.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 1072.0, "series": [{"data": [[77500.0, 1.0], [115500.0, 1.0], [120700.0, 4.0], [119900.0, 1.0], [33900.0, 1.0], [34700.0, 1.0], [33300.0, 1.0], [37500.0, 1.0], [38500.0, 1.0], [40900.0, 1.0], [40500.0, 1.0], [41500.0, 1.0], [42500.0, 1.0], [41100.0, 1.0], [43700.0, 1.0], [43300.0, 1.0], [46100.0, 1.0], [46300.0, 1.0], [48500.0, 1.0], [48100.0, 1.0], [50500.0, 1.0], [51100.0, 1.0], [51500.0, 1.0], [200.0, 16.0], [57500.0, 1.0], [58300.0, 2.0], [60500.0, 17.0], [60300.0, 14.0], [60700.0, 2.0], [62700.0, 1.0], [61900.0, 3.0], [62100.0, 1.0], [300.0, 919.0], [75000.0, 1.0], [78200.0, 1.0], [400.0, 87.0], [120600.0, 3.0], [500.0, 61.0], [600.0, 13.0], [700.0, 1.0], [900.0, 1.0], [1300.0, 1.0], [1600.0, 1.0], [2700.0, 2.0], [69300.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [5800.0, 2.0], [6100.0, 1.0], [6400.0, 1.0], [6600.0, 2.0], [103700.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [7400.0, 2.0], [7300.0, 1.0], [120500.0, 6.0], [120900.0, 2.0], [8500.0, 3.0], [8700.0, 1.0], [8400.0, 1.0], [8900.0, 1.0], [9500.0, 1.0], [9700.0, 1.0], [9900.0, 1.0], [10600.0, 1.0], [11000.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [11500.0, 1.0], [11800.0, 2.0], [12600.0, 2.0], [12700.0, 1.0], [13800.0, 1.0], [13600.0, 3.0], [13700.0, 1.0], [14100.0, 1.0], [14200.0, 1.0], [14800.0, 1.0], [14700.0, 1.0], [14600.0, 3.0], [14900.0, 1.0], [15200.0, 1.0], [15700.0, 1.0], [15800.0, 1.0], [16300.0, 1.0], [16200.0, 1.0], [16000.0, 1.0], [16800.0, 1.0], [17200.0, 2.0], [16700.0, 1.0], [17300.0, 2.0], [18000.0, 2.0], [17800.0, 1.0], [18400.0, 2.0], [18200.0, 1.0], [17600.0, 1.0], [19300.0, 3.0], [18900.0, 1.0], [19100.0, 1.0], [20100.0, 2.0], [20300.0, 1.0], [19600.0, 1.0], [19900.0, 1.0], [19700.0, 1.0], [19500.0, 1.0], [20600.0, 1.0], [21500.0, 1.0], [21300.0, 2.0], [20900.0, 1.0], [21100.0, 1.0], [21200.0, 1.0], [22100.0, 1.0], [22400.0, 2.0], [21700.0, 3.0], [22300.0, 2.0], [22900.0, 3.0], [22700.0, 1.0], [23200.0, 1.0], [22600.0, 1.0], [22800.0, 2.0], [23100.0, 1.0], [23600.0, 3.0], [23800.0, 1.0], [24000.0, 1.0], [23700.0, 1.0], [24200.0, 2.0], [24700.0, 1.0], [25700.0, 1.0], [26100.0, 1.0], [26000.0, 1.0], [25900.0, 1.0], [26200.0, 1.0], [27000.0, 2.0], [27600.0, 1.0], [28600.0, 1.0], [28100.0, 1.0], [28400.0, 1.0], [29200.0, 1.0], [29600.0, 1.0], [28800.0, 1.0], [30400.0, 1.0], [31200.0, 2.0], [31300.0, 2.0], [30800.0, 2.0], [33000.0, 2.0], [33200.0, 1.0], [35000.0, 1.0], [35800.0, 1.0], [35400.0, 1.0], [38200.0, 1.0], [38800.0, 1.0], [39800.0, 1.0], [40200.0, 2.0], [40400.0, 1.0], [39600.0, 1.0], [42200.0, 1.0], [43000.0, 1.0], [41600.0, 1.0], [44200.0, 1.0], [44000.0, 1.0], [45400.0, 1.0], [46600.0, 2.0], [46200.0, 1.0], [46000.0, 1.0], [46400.0, 1.0], [48000.0, 1.0], [49000.0, 1.0], [50000.0, 1.0], [51000.0, 1.0], [51600.0, 1.0], [53200.0, 1.0], [57000.0, 1.0], [58200.0, 1.0], [60600.0, 9.0], [60400.0, 20.0], [61000.0, 1.0], [61200.0, 1.0], [60800.0, 3.0], [62800.0, 1.0], [62400.0, 1.0], [62000.0, 1.0], [61800.0, 1.0], [66800.0, 1.0], [81200.0, 1.0], [91600.0, 1.0], [115200.0, 1.0], [120800.0, 5.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[100.0, 1072.0], [33500.0, 1.0], [34300.0, 1.0], [32900.0, 1.0], [35500.0, 1.0], [35100.0, 1.0], [37100.0, 1.0], [38500.0, 1.0], [40500.0, 1.0], [40300.0, 1.0], [40700.0, 1.0], [39900.0, 1.0], [39700.0, 1.0], [40100.0, 1.0], [41100.0, 1.0], [42700.0, 1.0], [41300.0, 1.0], [42900.0, 1.0], [43300.0, 1.0], [45900.0, 1.0], [46100.0, 1.0], [48100.0, 1.0], [49700.0, 2.0], [200.0, 24.0], [51300.0, 2.0], [57100.0, 1.0], [57900.0, 1.0], [60100.0, 61.0], [60300.0, 14.0], [60500.0, 1.0], [59900.0, 1.0], [300.0, 2.0], [500.0, 1.0], [2500.0, 1.0], [5100.0, 2.0], [5200.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6600.0, 3.0], [7000.0, 3.0], [8600.0, 1.0], [8300.0, 2.0], [8200.0, 2.0], [8400.0, 1.0], [9100.0, 1.0], [8800.0, 1.0], [9300.0, 1.0], [10300.0, 1.0], [10600.0, 1.0], [10700.0, 1.0], [10400.0, 1.0], [10900.0, 1.0], [11500.0, 1.0], [11400.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [13000.0, 1.0], [13300.0, 1.0], [13500.0, 1.0], [13700.0, 1.0], [13800.0, 1.0], [13400.0, 2.0], [14300.0, 2.0], [14500.0, 1.0], [14400.0, 1.0], [14800.0, 1.0], [15500.0, 1.0], [16000.0, 1.0], [16500.0, 1.0], [16900.0, 1.0], [16400.0, 1.0], [17300.0, 1.0], [17500.0, 1.0], [17600.0, 2.0], [18000.0, 1.0], [18800.0, 1.0], [19300.0, 2.0], [18600.0, 1.0], [19100.0, 1.0], [20200.0, 1.0], [19700.0, 1.0], [20000.0, 1.0], [19800.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [21300.0, 1.0], [21100.0, 2.0], [21000.0, 1.0], [20800.0, 1.0], [20900.0, 1.0], [21500.0, 2.0], [21700.0, 1.0], [22500.0, 2.0], [22100.0, 1.0], [21800.0, 1.0], [22200.0, 1.0], [22400.0, 3.0], [21900.0, 2.0], [22000.0, 1.0], [23400.0, 1.0], [23500.0, 1.0], [22800.0, 1.0], [22900.0, 1.0], [23300.0, 2.0], [23700.0, 1.0], [23900.0, 1.0], [23800.0, 1.0], [24300.0, 1.0], [25300.0, 1.0], [26600.0, 2.0], [25900.0, 1.0], [25800.0, 2.0], [25600.0, 1.0], [27300.0, 1.0], [28200.0, 1.0], [27800.0, 1.0], [28100.0, 1.0], [28300.0, 1.0], [29000.0, 1.0], [29300.0, 1.0], [30700.0, 1.0], [30000.0, 1.0], [30500.0, 1.0], [30600.0, 1.0], [30900.0, 2.0], [31200.0, 1.0], [31000.0, 1.0], [32600.0, 1.0], [32700.0, 2.0], [34800.0, 1.0], [37800.0, 1.0], [38200.0, 1.0], [39400.0, 1.0], [39200.0, 1.0], [41800.0, 1.0], [42000.0, 1.0], [45000.0, 1.0], [43400.0, 1.0], [44000.0, 1.0], [43600.0, 1.0], [45800.0, 2.0], [46200.0, 2.0], [45600.0, 1.0], [48200.0, 1.0], [47600.0, 1.0], [47800.0, 1.0], [50600.0, 2.0], [52800.0, 1.0], [54800.0, 1.0], [55200.0, 1.0], [56600.0, 1.0], [57800.0, 1.0], [60200.0, 19.0], [60400.0, 5.0], [59600.0, 1.0]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[600.0, 3.0], [9800.0, 1.0], [700.0, 2.0], [800.0, 2.0], [14800.0, 1.0], [14500.0, 2.0], [15700.0, 1.0], [1000.0, 2.0], [16100.0, 1.0], [15900.0, 1.0], [17200.0, 3.0], [17100.0, 1.0], [18000.0, 1.0], [18300.0, 2.0], [19200.0, 2.0], [19000.0, 1.0], [20900.0, 1.0], [23500.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 3.0], [2000.0, 1.0], [2200.0, 1.0], [2600.0, 3.0], [200.0, 1016.0], [58100.0, 1.0], [60300.0, 10.0], [60200.0, 5.0], [60400.0, 7.0], [60500.0, 4.0], [300.0, 163.0], [400.0, 126.0], [6700.0, 1.0], [500.0, 23.0]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 120900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2392.0, "series": [{"data": [[0.0, 199.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 24.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 156.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2392.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.8695652173913047, "minX": 1.685463E12, "maxY": 25.0, "series": [{"data": [[1.68546318E12, 7.999999999999998], [1.68546414E12, 10.98], [1.68546348E12, 15.0], [1.68546378E12, 25.0], [1.68546312E12, 5.0], [1.68546408E12, 14.9609375], [1.68546342E12, 15.0], [1.68546372E12, 20.71052631578948], [1.68546306E12, 5.0], [1.68546402E12, 16.75], [1.68546336E12, 12.910569105691057], [1.68546366E12, 20.0], [1.685463E12, 2.8695652173913047], [1.68546396E12, 19.99669603524229], [1.6854633E12, 10.0], [1.68546426E12, 4.853080568720378], [1.6854636E12, 20.0], [1.6854639E12, 22.675078864353328], [1.68546324E12, 10.0], [1.6854642E12, 6.473029045643154], [1.68546354E12, 18.333333333333336], [1.68546384E12, 25.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546426E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 104.0, "minX": 1.0, "maxY": 39160.625, "series": [{"data": [[2.0, 5548.333333333334], [3.0, 383.0], [4.0, 5426.0], [5.0, 4055.0068965517253], [6.0, 5357.0], [7.0, 277.6666666666667], [8.0, 16188.714285714288], [9.0, 12642.4], [10.0, 21725.24], [11.0, 28527.2], [12.0, 26837.75], [13.0, 19194.800000000003], [14.0, 12711.538461538461], [15.0, 16951.27329192546], [1.0, 3911.0], [16.0, 9138.2], [17.0, 5453.888888888889], [18.0, 30390.0], [19.0, 6869.85], [20.0, 5268.3124999999945], [21.0, 16984.2], [22.0, 39160.625], [23.0, 295.2], [24.0, 309.38888888888886], [25.0, 9801.411931818175]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[18.0200860832138, 9456.027977044476]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 7873.0], [3.0, 145.0], [4.0, 5957.166666666667], [5.0, 3763.8958333333326], [6.0, 6702.333333333334], [7.0, 104.0], [8.0, 18512.5], [9.0, 13702.666666666668], [10.0, 21683.8918918919], [11.0, 28088.3], [12.0, 26408.625], [13.0, 18822.6], [14.0, 12416.0], [15.0, 16654.925465838503], [1.0, 3559.5], [16.0, 8815.0], [17.0, 5881.000000000001], [18.0, 36131.8], [19.0, 6969.84210526316], [20.0, 5024.323232323228], [21.0, 17256.71428571428], [22.0, 34479.85714285714], [23.0, 109.25], [24.0, 105.76470588235294], [25.0, 4261.122507122507]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[18.079215116279077, 7889.095930232562]], "isOverall": false, "label": "HTTP Request POST-Aggregated", "isController": false}, {"data": [[2.0, 294.75], [3.0, 325.5], [4.0, 296.66666666666663], [5.0, 324.25517241379305], [6.0, 342.25], [7.0, 254.0], [8.0, 291.14285714285717], [9.0, 291.8888888888889], [10.0, 320.6800000000002], [11.0, 473.8999999999999], [12.0, 392.375], [13.0, 348.625], [14.0, 309.64285714285717], [15.0, 310.66871165644193], [1.0, 390.5], [16.0, 316.16666666666663], [17.0, 248.1111111111111], [18.0, 343.6666666666667], [19.0, 252.6190476190476], [20.0, 415.29045643153506], [21.0, 5216.083333333333], [22.0, 15239.75], [23.0, 216.0], [24.0, 213.5263157894737], [25.0, 4942.061827956992]], "isOverall": false, "label": "HTTP Request GET", "isController": false}, {"data": [[18.07598566308246, 1667.7569892473118]], "isOverall": false, "label": "HTTP Request GET-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 169.9, "minX": 1.685463E12, "maxY": 43499.8, "series": [{"data": [[1.68546318E12, 841.8666666666667], [1.68546414E12, 666.3], [1.68546348E12, 2056.65], [1.68546378E12, 289.1666666666667], [1.68546312E12, 1174.1333333333334], [1.68546408E12, 1822.4], [1.68546342E12, 1387.4833333333333], [1.68546372E12, 231.33333333333334], [1.68546306E12, 880.6], [1.68546402E12, 2357.016666666667], [1.68546336E12, 1499.3], [1.68546366E12, 861.3], [1.685463E12, 621.7166666666667], [1.68546396E12, 6857.9], [1.6854633E12, 1455.0666666666666], [1.68546426E12, 1595.65], [1.6854636E12, 169.9], [1.6854639E12, 7163.45], [1.68546324E12, 880.6], [1.6854642E12, 1743.0166666666667], [1.68546354E12, 2051.8], [1.68546384E12, 4361.666666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68546318E12, 1178.05], [1.68546414E12, 2950.4333333333334], [1.68546348E12, 4180.95], [1.68546378E12, 530.9], [1.68546312E12, 2070.1], [1.68546408E12, 5423.716666666666], [1.68546342E12, 4032.366666666667], [1.68546372E12, 3037.4], [1.68546306E12, 1424.45], [1.68546402E12, 13047.2], [1.68546336E12, 5368.666666666667], [1.68546366E12, 2648.6833333333334], [1.685463E12, 1035.5166666666667], [1.68546396E12, 42539.26666666667], [1.6854633E12, 4792.9], [1.68546426E12, 10585.016666666666], [1.6854636E12, 603.15], [1.6854639E12, 43499.8], [1.68546324E12, 1637.55], [1.6854642E12, 12343.766666666666], [1.68546354E12, 4404.833333333333], [1.68546384E12, 27519.566666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546426E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 107.04430379746839, "minX": 1.685463E12, "maxY": 120696.0, "series": [{"data": [[1.68546318E12, 28561.444444444445], [1.68546414E12, 37449.5], [1.68546348E12, 29118.500000000004], [1.68546378E12, 120696.0], [1.68546312E12, 19493.812500000004], [1.68546408E12, 22174.71111111111], [1.68546342E12, 23405.307692307695], [1.68546372E12, 65686.55555555555], [1.68546306E12, 18735.666666666668], [1.68546402E12, 1330.333333333333], [1.68546336E12, 11670.904761904761], [1.68546366E12, 60502.5], [1.685463E12, 10026.666666666668], [1.68546396E12, 321.67218543046346], [1.6854633E12, 14375.941176470591], [1.68546426E12, 434.1142857142857], [1.6854636E12, 56437.850000000006], [1.6854639E12, 315.4465408805033], [1.68546324E12, 40585.153846153844], [1.6854642E12, 4172.333333333332], [1.68546354E12, 37639.93103448277], [1.68546384E12, 14725.111627906987]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68546318E12, 28164.555555555555], [1.68546414E12, 36064.26315789474], [1.68546348E12, 31155.343750000004], [1.68546378E12, 60401.0], [1.68546312E12, 19123.875], [1.68546408E12, 21242.595238095233], [1.68546342E12, 17990.03333333333], [1.68546372E12, 60185.38888888889], [1.68546306E12, 18309.416666666668], [1.68546402E12, 956.8602150537636], [1.68546336E12, 13271.868421052633], [1.68546366E12, 60140.44444444444], [1.685463E12, 9693.333333333334], [1.68546396E12, 109.34983498349833], [1.6854633E12, 14230.647058823524], [1.68546426E12, 140.54929577464793], [1.6854636E12, 39692.25], [1.6854639E12, 107.04430379746839], [1.68546324E12, 40696.583333333336], [1.6854642E12, 4365.000000000002], [1.68546354E12, 35062.25000000001], [1.68546384E12, 7072.848958333331]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68546318E12, 362.6428571428571], [1.68546414E12, 412.7333333333333], [1.68546348E12, 353.5161290322581], [1.68546378E12, 60367.304347826095], [1.68546312E12, 373.1875], [1.68546408E12, 329.0975609756098], [1.68546342E12, 356.2666666666666], [1.68546372E12, 60295.0], [1.68546306E12, 446.66666666666663], [1.68546402E12, 222.7096774193548], [1.68546336E12, 347.3255813953489], [1.68546366E12, 5501.111111111111], [1.685463E12, 338.6363636363636], [1.68546396E12, 212.24752475247527], [1.6854633E12, 303.70588235294116], [1.68546426E12, 301.7571428571429], [1.6854636E12, 386.5], [1.6854639E12, 210.24605678233456], [1.68546324E12, 348.58333333333337], [1.6854642E12, 289.1428571428572], [1.68546354E12, 383.421052631579], [1.68546384E12, 2161.4196891191687]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546426E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 107.02215189873425, "minX": 1.685463E12, "maxY": 120696.0, "series": [{"data": [[1.68546318E12, 28561.11111111111], [1.68546414E12, 37448.0625], [1.68546348E12, 29117.794117647052], [1.68546378E12, 120696.0], [1.68546312E12, 19493.5], [1.68546408E12, 22174.044444444447], [1.68546342E12, 23404.923076923078], [1.68546372E12, 65686.27777777778], [1.68546306E12, 18735.083333333332], [1.68546402E12, 1330.2948717948718], [1.68546336E12, 11670.761904761901], [1.68546366E12, 60498.0], [1.685463E12, 10024.833333333334], [1.68546396E12, 321.59271523178785], [1.6854633E12, 14373.117647058825], [1.68546426E12, 434.0571428571428], [1.6854636E12, 56437.1], [1.6854639E12, 315.367924528302], [1.68546324E12, 40584.0], [1.6854642E12, 4172.264367816093], [1.68546354E12, 37639.89655172413], [1.68546384E12, 14725.041860465115]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68546318E12, 28164.44444444445], [1.68546414E12, 36064.26315789474], [1.68546348E12, 31155.124999999996], [1.68546378E12, 60401.0], [1.68546312E12, 19123.687499999996], [1.68546408E12, 21242.42857142857], [1.68546342E12, 17989.93333333333], [1.68546372E12, 60185.277777777774], [1.68546306E12, 18308.833333333332], [1.68546402E12, 956.8387096774193], [1.68546336E12, 13271.736842105263], [1.68546366E12, 60140.44444444444], [1.685463E12, 9693.333333333334], [1.68546396E12, 109.30033003300335], [1.6854633E12, 14230.5], [1.68546426E12, 140.52112676056336], [1.6854636E12, 39690.75], [1.6854639E12, 107.02215189873425], [1.68546324E12, 40696.333333333336], [1.6854642E12, 4364.974025974026], [1.68546354E12, 35062.21874999999], [1.68546384E12, 7072.812500000004]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68546318E12, 362.21428571428567], [1.68546414E12, 412.7333333333333], [1.68546348E12, 353.3225806451613], [1.68546378E12, 60367.26086956522], [1.68546312E12, 372.99999999999994], [1.68546408E12, 328.2195121951219], [1.68546342E12, 355.69999999999993], [1.68546372E12, 60295.0], [1.68546306E12, 446.5833333333333], [1.68546402E12, 222.5913978494623], [1.68546336E12, 347.2790697674418], [1.68546366E12, 5501.0], [1.685463E12, 337.6363636363636], [1.68546396E12, 212.21122112211216], [1.6854633E12, 303.3529411764706], [1.68546426E12, 301.72857142857146], [1.6854636E12, 382.0], [1.6854639E12, 210.1987381703471], [1.68546324E12, 341.5], [1.6854642E12, 289.09090909090907], [1.68546354E12, 383.18421052631584], [1.68546384E12, 2161.3834196891203]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546426E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.685463E12, "maxY": 302.5, "series": [{"data": [[1.68546318E12, 180.44444444444446], [1.68546414E12, 173.1875], [1.68546348E12, 169.70588235294113], [1.68546378E12, 302.5], [1.68546312E12, 184.81249999999997], [1.68546408E12, 134.33333333333334], [1.68546342E12, 159.76923076923075], [1.68546372E12, 139.1111111111111], [1.68546306E12, 194.66666666666666], [1.68546402E12, 106.85897435897434], [1.68546336E12, 178.61904761904768], [1.68546366E12, 204.0], [1.685463E12, 164.5], [1.68546396E12, 105.4139072847682], [1.6854633E12, 151.44117647058823], [1.68546426E12, 152.6428571428571], [1.6854636E12, 138.0], [1.6854639E12, 104.88364779874219], [1.68546324E12, 150.46153846153842], [1.6854642E12, 146.40229885057474], [1.68546354E12, 171.72413793103445], [1.68546384E12, 139.753488372093]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.68546318E12, 0.0], [1.68546414E12, 0.0], [1.68546348E12, 0.0], [1.68546378E12, 152.0], [1.68546312E12, 0.0], [1.68546408E12, 0.0], [1.68546342E12, 0.0], [1.68546372E12, 0.0], [1.68546306E12, 0.0], [1.68546402E12, 0.0], [1.68546336E12, 0.0], [1.68546366E12, 0.0], [1.685463E12, 0.0], [1.68546396E12, 0.0], [1.6854633E12, 0.0], [1.68546426E12, 0.0], [1.6854636E12, 0.0], [1.6854639E12, 0.0], [1.68546324E12, 0.0], [1.6854642E12, 0.0], [1.68546354E12, 0.0], [1.68546384E12, 18.411458333333332]], "isOverall": false, "label": "HTTP Request POST", "isController": false}, {"data": [[1.68546318E12, 155.14285714285717], [1.68546414E12, 195.79999999999998], [1.68546348E12, 167.93548387096774], [1.68546378E12, 170.69565217391303], [1.68546312E12, 185.875], [1.68546408E12, 144.95121951219514], [1.68546342E12, 172.70000000000002], [1.68546372E12, 150.5], [1.68546306E12, 208.66666666666669], [1.68546402E12, 110.2043010752688], [1.68546336E12, 171.30232558139537], [1.68546366E12, 139.1111111111111], [1.685463E12, 163.27272727272728], [1.68546396E12, 105.41584158415843], [1.6854633E12, 145.4705882352941], [1.68546426E12, 152.64285714285714], [1.6854636E12, 204.0], [1.6854639E12, 104.88958990536281], [1.68546324E12, 173.33333333333334], [1.6854642E12, 139.67532467532465], [1.68546354E12, 156.57894736842107], [1.68546384E12, 117.55958549222794]], "isOverall": false, "label": "HTTP Request GET", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546426E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 211.0, "minX": 1.685463E12, "maxY": 57896.0, "series": [{"data": [[1.68546318E12, 39448.0], [1.68546414E12, 50622.0], [1.68546348E12, 28277.0], [1.68546312E12, 23760.0], [1.68546408E12, 22408.0], [1.68546342E12, 51308.0], [1.68546306E12, 23536.0], [1.68546402E12, 27394.0], [1.68546336E12, 57896.0], [1.68546366E12, 20943.0], [1.685463E12, 13535.0], [1.6854633E12, 48258.0], [1.6854636E12, 22001.0], [1.68546324E12, 49793.0], [1.68546354E12, 46290.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68546318E12, 36423.40000000001], [1.68546414E12, 46711.400000000016], [1.68546348E12, 22989.4], [1.68546312E12, 22546.3], [1.68546408E12, 21175.6], [1.68546342E12, 46184.5], [1.68546306E12, 22992.0], [1.68546402E12, 27247.8], [1.68546336E12, 54535.600000000006], [1.68546366E12, 18333.000000000004], [1.685463E12, 11936.599999999999], [1.6854633E12, 47687.8], [1.6854636E12, 22001.0], [1.68546324E12, 45455.5], [1.68546354E12, 17537.399999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68546318E12, 39448.0], [1.68546414E12, 50622.0], [1.68546348E12, 28277.0], [1.68546312E12, 23760.0], [1.68546408E12, 22408.0], [1.68546342E12, 51308.0], [1.68546306E12, 23536.0], [1.68546402E12, 27394.0], [1.68546336E12, 57896.0], [1.68546366E12, 20943.0], [1.685463E12, 13535.0], [1.6854633E12, 48258.0], [1.6854636E12, 22001.0], [1.68546324E12, 49793.0], [1.68546354E12, 46290.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68546318E12, 39119.799999999996], [1.68546414E12, 50622.0], [1.68546348E12, 24363.499999999996], [1.68546312E12, 23186.699999999997], [1.68546408E12, 21711.199999999997], [1.68546342E12, 49899.49999999999], [1.68546306E12, 23507.25], [1.68546402E12, 27394.0], [1.68546336E12, 57651.6], [1.68546366E12, 20943.0], [1.685463E12, 13535.0], [1.6854633E12, 48088.799999999996], [1.6854636E12, 22001.0], [1.68546324E12, 48802.5], [1.68546354E12, 38693.85]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68546318E12, 244.0], [1.68546414E12, 409.0], [1.68546348E12, 212.0], [1.68546312E12, 220.0], [1.68546408E12, 211.0], [1.68546342E12, 302.0], [1.68546306E12, 354.0], [1.68546402E12, 230.0], [1.68546336E12, 212.0], [1.68546366E12, 307.0], [1.685463E12, 225.0], [1.6854633E12, 213.0], [1.6854636E12, 262.0], [1.68546324E12, 212.0], [1.68546354E12, 218.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68546318E12, 409.0], [1.68546414E12, 28360.0], [1.68546348E12, 413.0], [1.68546312E12, 5758.0], [1.68546408E12, 308.0], [1.68546342E12, 408.5], [1.68546306E12, 4873.0], [1.68546402E12, 273.5], [1.68546336E12, 861.0], [1.68546366E12, 1952.5], [1.685463E12, 407.0], [1.6854633E12, 8326.0], [1.6854636E12, 8480.5], [1.68546324E12, 14789.0], [1.68546354E12, 408.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546414E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 127.0, "minX": 1.0, "maxY": 44644.5, "series": [{"data": [[1.0, 450.5], [2.0, 410.0], [4.0, 5713.5], [8.0, 1952.5], [9.0, 7977.0], [5.0, 511.0], [3.0, 406.0], [6.0, 407.0], [13.0, 226.0], [7.0, 14519.0], [14.0, 36328.5], [28.0, 356.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 212.0], [8.0, 188.0], [33.0, 16188.0], [9.0, 127.0], [10.0, 204.0], [11.0, 206.0], [3.0, 212.0], [12.0, 206.0], [13.0, 205.0], [14.0, 205.0], [15.0, 205.0], [4.0, 207.0], [1.0, 412.0], [16.0, 170.0], [17.0, 204.5], [19.0, 146.0], [5.0, 209.0], [20.0, 205.5], [22.0, 204.5], [6.0, 205.0], [28.0, 44644.5], [7.0, 186.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 127.0, "minX": 1.0, "maxY": 44644.5, "series": [{"data": [[1.0, 445.5], [2.0, 409.5], [4.0, 5713.0], [8.0, 1952.5], [9.0, 7977.0], [5.0, 511.0], [3.0, 405.0], [6.0, 407.0], [13.0, 226.0], [7.0, 14518.0], [14.0, 36328.5], [28.0, 354.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 211.5], [8.0, 187.5], [33.0, 16188.0], [9.0, 127.0], [10.0, 204.0], [11.0, 206.0], [3.0, 212.0], [12.0, 206.0], [13.0, 205.0], [14.0, 205.0], [15.0, 205.0], [4.0, 207.0], [1.0, 412.0], [16.0, 170.0], [17.0, 204.5], [19.0, 146.0], [5.0, 208.5], [20.0, 205.5], [22.0, 204.0], [6.0, 205.0], [28.0, 44644.5], [7.0, 186.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.685463E12, "maxY": 10.5, "series": [{"data": [[1.68546318E12, 0.5333333333333333], [1.68546414E12, 0.5], [1.68546348E12, 1.0833333333333333], [1.68546378E12, 0.4166666666666667], [1.68546312E12, 0.45], [1.68546408E12, 1.3666666666666667], [1.68546342E12, 1.0333333333333334], [1.68546372E12, 0.4166666666666667], [1.68546306E12, 0.4], [1.68546402E12, 3.3333333333333335], [1.68546336E12, 1.3833333333333333], [1.68546366E12, 0.6], [1.685463E12, 0.36666666666666664], [1.68546396E12, 10.1], [1.6854633E12, 1.1], [1.68546426E12, 2.35], [1.6854636E12, 0.3333333333333333], [1.6854639E12, 10.5], [1.68546324E12, 0.4166666666666667], [1.6854642E12, 2.4], [1.68546354E12, 1.0333333333333334], [1.68546384E12, 6.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546426E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.685463E12, "maxY": 10.55, "series": [{"data": [[1.68546318E12, 0.38333333333333336], [1.68546414E12, 0.18333333333333332], [1.68546348E12, 0.8833333333333333], [1.68546312E12, 0.5333333333333333], [1.68546408E12, 0.5833333333333334], [1.68546342E12, 0.4666666666666667], [1.68546306E12, 0.4], [1.68546402E12, 0.16666666666666666], [1.68546336E12, 0.38333333333333336], [1.68546366E12, 0.3], [1.685463E12, 0.2833333333333333], [1.6854633E12, 0.45], [1.6854636E12, 0.06666666666666667], [1.68546324E12, 0.4], [1.68546354E12, 0.8333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68546414E12, 0.25], [1.68546396E12, 10.1], [1.6854633E12, 0.6833333333333333], [1.68546426E12, 2.35], [1.68546408E12, 0.6166666666666667], [1.68546342E12, 0.45], [1.6854639E12, 10.55], [1.6854642E12, 2.55], [1.68546354E12, 0.23333333333333334], [1.68546402E12, 2.933333333333333], [1.68546336E12, 0.95], [1.68546384E12, 6.1]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68546366E12, 0.3], [1.68546414E12, 0.13333333333333333], [1.68546348E12, 0.16666666666666666], [1.68546378E12, 0.4166666666666667], [1.6854636E12, 0.03333333333333333], [1.68546408E12, 0.18333333333333332], [1.68546342E12, 0.08333333333333333], [1.68546372E12, 0.3333333333333333], [1.6854642E12, 0.016666666666666666], [1.68546354E12, 0.1], [1.68546336E12, 0.016666666666666666], [1.68546384E12, 0.31666666666666665]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68546426E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.685463E12, "maxY": 5.3, "series": [{"data": [[1.68546318E12, 0.23333333333333334], [1.68546414E12, 0.08333333333333333], [1.68546348E12, 0.5166666666666667], [1.68546312E12, 0.26666666666666666], [1.68546408E12, 0.45], [1.68546342E12, 0.3], [1.68546306E12, 0.2], [1.68546402E12, 0.11666666666666667], [1.68546336E12, 0.21666666666666667], [1.68546366E12, 0.3], [1.685463E12, 0.18333333333333332], [1.6854633E12, 0.21666666666666667], [1.6854636E12, 0.03333333333333333], [1.68546324E12, 0.2], [1.68546354E12, 0.6333333333333333]], "isOverall": false, "label": "HTTP Request GET-success", "isController": false}, {"data": [[1.68546414E12, 0.16666666666666666], [1.68546378E12, 0.38333333333333336], [1.68546408E12, 0.23333333333333334], [1.68546342E12, 0.2], [1.68546372E12, 0.03333333333333333], [1.68546402E12, 1.4333333333333333], [1.68546336E12, 0.5], [1.68546396E12, 5.05], [1.6854633E12, 0.35], [1.68546426E12, 1.1666666666666667], [1.6854639E12, 5.283333333333333], [1.6854642E12, 1.2833333333333334], [1.68546384E12, 3.216666666666667]], "isOverall": false, "label": "HTTP Request GET-failure", "isController": false}, {"data": [[1.68546414E12, 0.21666666666666667], [1.68546348E12, 0.16666666666666666], [1.68546378E12, 0.03333333333333333], [1.68546408E12, 0.5666666666666667], [1.68546342E12, 0.3333333333333333], [1.68546372E12, 0.3], [1.68546402E12, 1.5], [1.68546336E12, 0.4666666666666667], [1.68546366E12, 0.3], [1.68546396E12, 5.05], [1.6854633E12, 0.3333333333333333], [1.68546426E12, 1.1833333333333333], [1.6854636E12, 0.03333333333333333], [1.6854639E12, 5.266666666666667], [1.6854642E12, 1.2833333333333334], [1.68546354E12, 0.3333333333333333], [1.68546384E12, 3.2]], "isOverall": false, "label": "HTTP Request POST-failure", "isController": false}, {"data": [[1.68546318E12, 0.15], [1.68546414E12, 0.016666666666666666], [1.68546348E12, 0.4166666666666667], [1.68546312E12, 0.26666666666666666], [1.68546408E12, 0.16666666666666666], [1.68546342E12, 0.1], [1.68546306E12, 0.2], [1.68546336E12, 0.05], [1.685463E12, 0.1], [1.6854633E12, 0.18333333333333332], [1.6854636E12, 0.03333333333333333], [1.68546324E12, 0.21666666666666667], [1.68546354E12, 0.15]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.68546414E12, 0.25], [1.68546348E12, 0.15], [1.68546378E12, 0.03333333333333333], [1.68546408E12, 0.5833333333333334], [1.68546342E12, 0.3333333333333333], [1.68546372E12, 0.3], [1.68546402E12, 1.3], [1.68546336E12, 0.65], [1.68546366E12, 0.03333333333333333], [1.68546396E12, 5.033333333333333], [1.6854633E12, 0.38333333333333336], [1.68546426E12, 1.1666666666666667], [1.6854636E12, 0.3], [1.6854639E12, 5.3], [1.6854642E12, 1.45], [1.68546354E12, 0.3333333333333333], [1.68546384E12, 3.5833333333333335]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.68546318E12, 0.15], [1.68546414E12, 0.1], [1.68546348E12, 0.36666666666666664], [1.68546312E12, 0.26666666666666666], [1.68546408E12, 0.13333333333333333], [1.68546342E12, 0.16666666666666666], [1.68546306E12, 0.2], [1.68546402E12, 0.05], [1.68546336E12, 0.16666666666666666], [1.685463E12, 0.1], [1.6854633E12, 0.23333333333333334], [1.6854636E12, 0.03333333333333333], [1.68546324E12, 0.2], [1.68546354E12, 0.2]], "isOverall": false, "label": "HTTP Request POST-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546426E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.685463E12, "maxY": 15.85, "series": [{"data": [[1.68546318E12, 0.5333333333333333], [1.68546414E12, 0.2], [1.68546348E12, 1.3], [1.68546312E12, 0.8], [1.68546408E12, 0.75], [1.68546342E12, 0.5666666666666667], [1.68546306E12, 0.6], [1.68546402E12, 0.16666666666666666], [1.68546336E12, 0.43333333333333335], [1.68546366E12, 0.3], [1.685463E12, 0.38333333333333336], [1.6854633E12, 0.6333333333333333], [1.6854636E12, 0.1], [1.68546324E12, 0.6166666666666667], [1.68546354E12, 0.9833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68546414E12, 0.6333333333333333], [1.68546348E12, 0.31666666666666665], [1.68546378E12, 0.45], [1.68546408E12, 1.3833333333333333], [1.68546342E12, 0.8666666666666667], [1.68546372E12, 0.6333333333333333], [1.68546402E12, 4.233333333333333], [1.68546336E12, 1.6166666666666667], [1.68546366E12, 0.3333333333333333], [1.68546396E12, 15.133333333333333], [1.6854633E12, 1.0666666666666667], [1.68546426E12, 3.5166666666666666], [1.6854636E12, 0.3333333333333333], [1.6854639E12, 15.85], [1.6854642E12, 4.016666666666667], [1.68546354E12, 0.6666666666666666], [1.68546384E12, 10.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68546426E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

